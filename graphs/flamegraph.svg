<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="758" onload="init(evt)" viewBox="0 0 1200 758" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="758" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="741.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="741.00"> </text><svg id="frames" x="10" width="1180"><g><title>broccoli::query::colfind::inner::ColFindRecurser&lt;T,K,S&gt;::recurse_seq (2 samples, 0.30%)</title><rect x="0.0000%" y="661" width="0.3021%" height="15" fill="rgb(227,0,7)"/><text x="0.2500%" y="671.50"></text></g><g><title>[[heap]] (3 samples, 0.45%)</title><rect x="0.0000%" y="677" width="0.4532%" height="15" fill="rgb(217,0,24)"/><text x="0.2500%" y="687.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (1 samples, 0.15%)</title><rect x="0.3021%" y="661" width="0.1511%" height="15" fill="rgb(221,193,54)"/><text x="0.5521%" y="671.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (1 samples, 0.15%)</title><rect x="0.4532%" y="661" width="0.1511%" height="15" fill="rgb(248,212,6)"/><text x="0.7032%" y="671.50"></text></g><g><title>[anon] (2 samples, 0.30%)</title><rect x="0.4532%" y="677" width="0.3021%" height="15" fill="rgb(208,68,35)"/><text x="0.7032%" y="687.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (1 samples, 0.15%)</title><rect x="0.6042%" y="661" width="0.1511%" height="15" fill="rgb(232,128,0)"/><text x="0.8542%" y="671.50"></text></g><g><title>[unknown] (2 samples, 0.30%)</title><rect x="0.7553%" y="661" width="0.3021%" height="15" fill="rgb(207,160,47)"/><text x="1.0053%" y="671.50"></text></g><g><title>[unknown] (2 samples, 0.30%)</title><rect x="0.7553%" y="645" width="0.3021%" height="15" fill="rgb(228,23,34)"/><text x="1.0053%" y="655.50"></text></g><g><title>[unknown] (2 samples, 0.30%)</title><rect x="0.7553%" y="629" width="0.3021%" height="15" fill="rgb(218,30,26)"/><text x="1.0053%" y="639.50"></text></g><g><title>[unknown] (2 samples, 0.30%)</title><rect x="0.7553%" y="613" width="0.3021%" height="15" fill="rgb(220,122,19)"/><text x="1.0053%" y="623.50"></text></g><g><title>[unknown] (2 samples, 0.30%)</title><rect x="0.7553%" y="597" width="0.3021%" height="15" fill="rgb(250,228,42)"/><text x="1.0053%" y="607.50"></text></g><g><title>[unknown] (2 samples, 0.30%)</title><rect x="0.7553%" y="581" width="0.3021%" height="15" fill="rgb(240,193,28)"/><text x="1.0053%" y="591.50"></text></g><g><title>[unknown] (2 samples, 0.30%)</title><rect x="0.7553%" y="565" width="0.3021%" height="15" fill="rgb(216,20,37)"/><text x="1.0053%" y="575.50"></text></g><g><title>[unknown] (2 samples, 0.30%)</title><rect x="0.7553%" y="549" width="0.3021%" height="15" fill="rgb(206,188,39)"/><text x="1.0053%" y="559.50"></text></g><g><title>[unknown] (2 samples, 0.30%)</title><rect x="0.7553%" y="533" width="0.3021%" height="15" fill="rgb(217,207,13)"/><text x="1.0053%" y="543.50"></text></g><g><title>[unknown] (2 samples, 0.30%)</title><rect x="0.7553%" y="517" width="0.3021%" height="15" fill="rgb(231,73,38)"/><text x="1.0053%" y="527.50"></text></g><g><title>[unknown] (2 samples, 0.30%)</title><rect x="0.7553%" y="501" width="0.3021%" height="15" fill="rgb(225,20,46)"/><text x="1.0053%" y="511.50"></text></g><g><title>[unknown] (2 samples, 0.30%)</title><rect x="0.7553%" y="485" width="0.3021%" height="15" fill="rgb(210,31,41)"/><text x="1.0053%" y="495.50"></text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::recurse_preorder_seq (1 samples, 0.15%)</title><rect x="1.0574%" y="661" width="0.1511%" height="15" fill="rgb(221,200,47)"/><text x="1.3074%" y="671.50"></text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::create_non_leaf (1 samples, 0.15%)</title><rect x="1.0574%" y="645" width="0.1511%" height="15" fill="rgb(226,26,5)"/><text x="1.3074%" y="655.50"></text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf (1 samples, 0.15%)</title><rect x="1.0574%" y="629" width="0.1511%" height="15" fill="rgb(249,33,26)"/><text x="1.3074%" y="639.50"></text></g><g><title>[unknown] (5 samples, 0.76%)</title><rect x="0.7553%" y="677" width="0.7553%" height="15" fill="rgb(235,183,28)"/><text x="1.0053%" y="687.50"></text></g><g><title>core::slice::sort::recurse (2 samples, 0.30%)</title><rect x="1.2085%" y="661" width="0.3021%" height="15" fill="rgb(221,5,38)"/><text x="1.4585%" y="671.50"></text></g><g><title>[unknown] (19 samples, 2.87%)</title><rect x="1.5106%" y="661" width="2.8701%" height="15" fill="rgb(247,18,42)"/><text x="1.7606%" y="671.50">[u..</text></g><g><title>[unknown] (19 samples, 2.87%)</title><rect x="1.5106%" y="645" width="2.8701%" height="15" fill="rgb(241,131,45)"/><text x="1.7606%" y="655.50">[u..</text></g><g><title>[unknown] (19 samples, 2.87%)</title><rect x="1.5106%" y="629" width="2.8701%" height="15" fill="rgb(249,31,29)"/><text x="1.7606%" y="639.50">[u..</text></g><g><title>[unknown] (19 samples, 2.87%)</title><rect x="1.5106%" y="613" width="2.8701%" height="15" fill="rgb(225,111,53)"/><text x="1.7606%" y="623.50">[u..</text></g><g><title>[unknown] (17 samples, 2.57%)</title><rect x="1.8127%" y="597" width="2.5680%" height="15" fill="rgb(238,160,17)"/><text x="2.0627%" y="607.50">[u..</text></g><g><title>[unknown] (17 samples, 2.57%)</title><rect x="1.8127%" y="581" width="2.5680%" height="15" fill="rgb(214,148,48)"/><text x="2.0627%" y="591.50">[u..</text></g><g><title>[unknown] (17 samples, 2.57%)</title><rect x="1.8127%" y="565" width="2.5680%" height="15" fill="rgb(232,36,49)"/><text x="2.0627%" y="575.50">[u..</text></g><g><title>[unknown] (17 samples, 2.57%)</title><rect x="1.8127%" y="549" width="2.5680%" height="15" fill="rgb(209,103,24)"/><text x="2.0627%" y="559.50">[u..</text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="4.2296%" y="533" width="0.1511%" height="15" fill="rgb(229,88,8)"/><text x="4.4796%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="4.2296%" y="517" width="0.1511%" height="15" fill="rgb(213,181,19)"/><text x="4.4796%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="4.2296%" y="501" width="0.1511%" height="15" fill="rgb(254,191,54)"/><text x="4.4796%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="4.2296%" y="485" width="0.1511%" height="15" fill="rgb(241,83,37)"/><text x="4.4796%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="4.2296%" y="469" width="0.1511%" height="15" fill="rgb(233,36,39)"/><text x="4.4796%" y="479.50"></text></g><g><title>__GI___sched_yield (1 samples, 0.15%)</title><rect x="4.3807%" y="373" width="0.1511%" height="15" fill="rgb(226,3,54)"/><text x="4.6307%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="4.3807%" y="357" width="0.1511%" height="15" fill="rgb(245,192,40)"/><text x="4.6307%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="4.3807%" y="341" width="0.1511%" height="15" fill="rgb(238,167,29)"/><text x="4.6307%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="4.3807%" y="325" width="0.1511%" height="15" fill="rgb(232,182,51)"/><text x="4.6307%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="4.3807%" y="309" width="0.1511%" height="15" fill="rgb(231,60,39)"/><text x="4.6307%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="4.3807%" y="293" width="0.1511%" height="15" fill="rgb(208,69,12)"/><text x="4.6307%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="4.3807%" y="277" width="0.1511%" height="15" fill="rgb(235,93,37)"/><text x="4.6307%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="4.3807%" y="261" width="0.1511%" height="15" fill="rgb(213,116,39)"/><text x="4.6307%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="4.3807%" y="245" width="0.1511%" height="15" fill="rgb(222,207,29)"/><text x="4.6307%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="4.3807%" y="229" width="0.1511%" height="15" fill="rgb(206,96,30)"/><text x="4.6307%" y="239.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (7 samples, 1.06%)</title><rect x="4.3807%" y="629" width="1.0574%" height="15" fill="rgb(218,138,4)"/><text x="4.6307%" y="639.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (7 samples, 1.06%)</title><rect x="4.3807%" y="613" width="1.0574%" height="15" fill="rgb(250,191,14)"/><text x="4.6307%" y="623.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (7 samples, 1.06%)</title><rect x="4.3807%" y="597" width="1.0574%" height="15" fill="rgb(239,60,40)"/><text x="4.6307%" y="607.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (7 samples, 1.06%)</title><rect x="4.3807%" y="581" width="1.0574%" height="15" fill="rgb(206,27,48)"/><text x="4.6307%" y="591.50"></text></g><g><title>std::panic::catch_unwind (7 samples, 1.06%)</title><rect x="4.3807%" y="565" width="1.0574%" height="15" fill="rgb(225,35,8)"/><text x="4.6307%" y="575.50"></text></g><g><title>std::panicking::try (7 samples, 1.06%)</title><rect x="4.3807%" y="549" width="1.0574%" height="15" fill="rgb(250,213,24)"/><text x="4.6307%" y="559.50"></text></g><g><title>std::panicking::try::do_call (7 samples, 1.06%)</title><rect x="4.3807%" y="533" width="1.0574%" height="15" fill="rgb(247,123,22)"/><text x="4.6307%" y="543.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (7 samples, 1.06%)</title><rect x="4.3807%" y="517" width="1.0574%" height="15" fill="rgb(231,138,38)"/><text x="4.6307%" y="527.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (7 samples, 1.06%)</title><rect x="4.3807%" y="501" width="1.0574%" height="15" fill="rgb(231,145,46)"/><text x="4.6307%" y="511.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (7 samples, 1.06%)</title><rect x="4.3807%" y="485" width="1.0574%" height="15" fill="rgb(251,118,11)"/><text x="4.6307%" y="495.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (7 samples, 1.06%)</title><rect x="4.3807%" y="469" width="1.0574%" height="15" fill="rgb(217,147,25)"/><text x="4.6307%" y="479.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (7 samples, 1.06%)</title><rect x="4.3807%" y="453" width="1.0574%" height="15" fill="rgb(247,81,37)"/><text x="4.6307%" y="463.50"></text></g><g><title>rayon_core::registry::main_loop (7 samples, 1.06%)</title><rect x="4.3807%" y="437" width="1.0574%" height="15" fill="rgb(209,12,38)"/><text x="4.6307%" y="447.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (7 samples, 1.06%)</title><rect x="4.3807%" y="421" width="1.0574%" height="15" fill="rgb(227,1,9)"/><text x="4.6307%" y="431.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (7 samples, 1.06%)</title><rect x="4.3807%" y="405" width="1.0574%" height="15" fill="rgb(248,47,43)"/><text x="4.6307%" y="415.50"></text></g><g><title>rayon_core::sleep::Sleep::no_work_found (7 samples, 1.06%)</title><rect x="4.3807%" y="389" width="1.0574%" height="15" fill="rgb(221,10,30)"/><text x="4.6307%" y="399.50"></text></g><g><title>rayon_core::sleep::Sleep::sleep (6 samples, 0.91%)</title><rect x="4.5317%" y="373" width="0.9063%" height="15" fill="rgb(210,229,1)"/><text x="4.7817%" y="383.50"></text></g><g><title>std::sync::condvar::Condvar::wait (6 samples, 0.91%)</title><rect x="4.5317%" y="357" width="0.9063%" height="15" fill="rgb(222,148,37)"/><text x="4.7817%" y="367.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait (6 samples, 0.91%)</title><rect x="4.5317%" y="341" width="0.9063%" height="15" fill="rgb(234,67,33)"/><text x="4.7817%" y="351.50"></text></g><g><title>std::sys::unix::condvar::Condvar::wait (6 samples, 0.91%)</title><rect x="4.5317%" y="325" width="0.9063%" height="15" fill="rgb(247,98,35)"/><text x="4.7817%" y="335.50"></text></g><g><title>__pthread_cond_wait (6 samples, 0.91%)</title><rect x="4.5317%" y="309" width="0.9063%" height="15" fill="rgb(247,138,52)"/><text x="4.7817%" y="319.50"></text></g><g><title>__pthread_cond_wait_common (6 samples, 0.91%)</title><rect x="4.5317%" y="293" width="0.9063%" height="15" fill="rgb(213,79,30)"/><text x="4.7817%" y="303.50"></text></g><g><title>futex_wait_cancelable (6 samples, 0.91%)</title><rect x="4.5317%" y="277" width="0.9063%" height="15" fill="rgb(246,177,23)"/><text x="4.7817%" y="287.50"></text></g><g><title>[unknown] (6 samples, 0.91%)</title><rect x="4.5317%" y="261" width="0.9063%" height="15" fill="rgb(230,62,27)"/><text x="4.7817%" y="271.50"></text></g><g><title>[unknown] (6 samples, 0.91%)</title><rect x="4.5317%" y="245" width="0.9063%" height="15" fill="rgb(216,154,8)"/><text x="4.7817%" y="255.50"></text></g><g><title>[unknown] (6 samples, 0.91%)</title><rect x="4.5317%" y="229" width="0.9063%" height="15" fill="rgb(244,35,45)"/><text x="4.7817%" y="239.50"></text></g><g><title>[unknown] (6 samples, 0.91%)</title><rect x="4.5317%" y="213" width="0.9063%" height="15" fill="rgb(251,115,12)"/><text x="4.7817%" y="223.50"></text></g><g><title>[unknown] (6 samples, 0.91%)</title><rect x="4.5317%" y="197" width="0.9063%" height="15" fill="rgb(240,54,50)"/><text x="4.7817%" y="207.50"></text></g><g><title>[unknown] (6 samples, 0.91%)</title><rect x="4.5317%" y="181" width="0.9063%" height="15" fill="rgb(233,84,52)"/><text x="4.7817%" y="191.50"></text></g><g><title>[unknown] (5 samples, 0.76%)</title><rect x="4.6828%" y="165" width="0.7553%" height="15" fill="rgb(207,117,47)"/><text x="4.9328%" y="175.50"></text></g><g><title>[unknown] (5 samples, 0.76%)</title><rect x="4.6828%" y="149" width="0.7553%" height="15" fill="rgb(249,43,39)"/><text x="4.9328%" y="159.50"></text></g><g><title>[unknown] (5 samples, 0.76%)</title><rect x="4.6828%" y="133" width="0.7553%" height="15" fill="rgb(209,38,44)"/><text x="4.9328%" y="143.50"></text></g><g><title>[unknown] (5 samples, 0.76%)</title><rect x="4.6828%" y="117" width="0.7553%" height="15" fill="rgb(236,212,23)"/><text x="4.9328%" y="127.50"></text></g><g><title>[unknown] (5 samples, 0.76%)</title><rect x="4.6828%" y="101" width="0.7553%" height="15" fill="rgb(242,79,21)"/><text x="4.9328%" y="111.50"></text></g><g><title>[unknown] (5 samples, 0.76%)</title><rect x="4.6828%" y="85" width="0.7553%" height="15" fill="rgb(211,96,35)"/><text x="4.9328%" y="95.50"></text></g><g><title>[unknown] (5 samples, 0.76%)</title><rect x="4.6828%" y="69" width="0.7553%" height="15" fill="rgb(253,215,40)"/><text x="4.9328%" y="79.50"></text></g><g><title>[unknown] (5 samples, 0.76%)</title><rect x="4.6828%" y="53" width="0.7553%" height="15" fill="rgb(211,81,21)"/><text x="4.9328%" y="63.50"></text></g><g><title>__GI___mmap64 (1 samples, 0.15%)</title><rect x="5.4381%" y="565" width="0.1511%" height="15" fill="rgb(208,190,38)"/><text x="5.6881%" y="575.50"></text></g><g><title>__GI___mmap64 (1 samples, 0.15%)</title><rect x="5.4381%" y="549" width="0.1511%" height="15" fill="rgb(235,213,38)"/><text x="5.6881%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="5.4381%" y="533" width="0.1511%" height="15" fill="rgb(237,122,38)"/><text x="5.6881%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="5.4381%" y="517" width="0.1511%" height="15" fill="rgb(244,218,35)"/><text x="5.6881%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="5.4381%" y="501" width="0.1511%" height="15" fill="rgb(240,68,47)"/><text x="5.6881%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="5.4381%" y="485" width="0.1511%" height="15" fill="rgb(210,16,53)"/><text x="5.6881%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="5.4381%" y="469" width="0.1511%" height="15" fill="rgb(235,124,12)"/><text x="5.6881%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="5.4381%" y="453" width="0.1511%" height="15" fill="rgb(224,169,11)"/><text x="5.6881%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="5.4381%" y="437" width="0.1511%" height="15" fill="rgb(250,166,2)"/><text x="5.6881%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="5.4381%" y="421" width="0.1511%" height="15" fill="rgb(242,216,29)"/><text x="5.6881%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="5.4381%" y="405" width="0.1511%" height="15" fill="rgb(230,116,27)"/><text x="5.6881%" y="415.50"></text></g><g><title>__GI___clone (28 samples, 4.23%)</title><rect x="1.5106%" y="677" width="4.2296%" height="15" fill="rgb(228,99,48)"/><text x="1.7606%" y="687.50">__GI_..</text></g><g><title>start_thread (9 samples, 1.36%)</title><rect x="4.3807%" y="661" width="1.3595%" height="15" fill="rgb(253,11,6)"/><text x="4.6307%" y="671.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (9 samples, 1.36%)</title><rect x="4.3807%" y="645" width="1.3595%" height="15" fill="rgb(247,143,39)"/><text x="4.6307%" y="655.50"></text></g><g><title>std::sys::unix::stack_overflow::Handler::new (2 samples, 0.30%)</title><rect x="5.4381%" y="629" width="0.3021%" height="15" fill="rgb(236,97,10)"/><text x="5.6881%" y="639.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (2 samples, 0.30%)</title><rect x="5.4381%" y="613" width="0.3021%" height="15" fill="rgb(233,208,19)"/><text x="5.6881%" y="623.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (2 samples, 0.30%)</title><rect x="5.4381%" y="597" width="0.3021%" height="15" fill="rgb(216,164,2)"/><text x="5.6881%" y="607.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (2 samples, 0.30%)</title><rect x="5.4381%" y="581" width="0.3021%" height="15" fill="rgb(220,129,5)"/><text x="5.6881%" y="591.50"></text></g><g><title>__GI___mprotect (1 samples, 0.15%)</title><rect x="5.5891%" y="565" width="0.1511%" height="15" fill="rgb(242,17,10)"/><text x="5.8391%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="5.5891%" y="549" width="0.1511%" height="15" fill="rgb(242,107,0)"/><text x="5.8391%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="5.5891%" y="533" width="0.1511%" height="15" fill="rgb(251,28,31)"/><text x="5.8391%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="5.5891%" y="517" width="0.1511%" height="15" fill="rgb(233,223,10)"/><text x="5.8391%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="5.5891%" y="501" width="0.1511%" height="15" fill="rgb(215,21,27)"/><text x="5.8391%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="5.5891%" y="485" width="0.1511%" height="15" fill="rgb(232,23,21)"/><text x="5.8391%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="5.5891%" y="469" width="0.1511%" height="15" fill="rgb(244,5,23)"/><text x="5.8391%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="5.5891%" y="453" width="0.1511%" height="15" fill="rgb(226,81,46)"/><text x="5.8391%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="5.5891%" y="437" width="0.1511%" height="15" fill="rgb(247,70,30)"/><text x="5.8391%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="5.5891%" y="421" width="0.1511%" height="15" fill="rgb(212,68,19)"/><text x="5.8391%" y="431.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_node (2 samples, 0.30%)</title><rect x="5.7402%" y="389" width="0.3021%" height="15" fill="rgb(240,187,13)"/><text x="5.9902%" y="399.50"></text></g><g><title>broccoli::query::colfind::oned::find_2d (2 samples, 0.30%)</title><rect x="5.7402%" y="373" width="0.3021%" height="15" fill="rgb(223,113,26)"/><text x="5.9902%" y="383.50"></text></g><g><title>broccoli::query::colfind::oned::find (2 samples, 0.30%)</title><rect x="5.7402%" y="357" width="0.3021%" height="15" fill="rgb(206,192,2)"/><text x="5.9902%" y="367.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (2 samples, 0.30%)</title><rect x="5.7402%" y="341" width="0.3021%" height="15" fill="rgb(241,108,4)"/><text x="5.9902%" y="351.50"></text></g><g><title>broccoli::query::colfind::oned::find::{{closure}} (2 samples, 0.30%)</title><rect x="5.7402%" y="325" width="0.3021%" height="15" fill="rgb(247,173,49)"/><text x="5.9902%" y="335.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (2 samples, 0.30%)</title><rect x="5.7402%" y="309" width="0.3021%" height="15" fill="rgb(224,114,35)"/><text x="5.9902%" y="319.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.15%)</title><rect x="5.8912%" y="293" width="0.1511%" height="15" fill="rgb(245,159,27)"/><text x="6.1412%" y="303.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (1 samples, 0.15%)</title><rect x="5.8912%" y="277" width="0.1511%" height="15" fill="rgb(245,172,44)"/><text x="6.1412%" y="287.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.15%)</title><rect x="5.8912%" y="261" width="0.1511%" height="15" fill="rgb(236,23,11)"/><text x="6.1412%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.15%)</title><rect x="6.0423%" y="325" width="0.1511%" height="15" fill="rgb(205,117,38)"/><text x="6.2923%" y="335.50"></text></g><g><title>core::ptr::write (1 samples, 0.15%)</title><rect x="6.0423%" y="309" width="0.1511%" height="15" fill="rgb(237,72,25)"/><text x="6.2923%" y="319.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.15%)</title><rect x="6.4955%" y="245" width="0.1511%" height="15" fill="rgb(244,70,9)"/><text x="6.7455%" y="255.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_node (5 samples, 0.76%)</title><rect x="6.0423%" y="373" width="0.7553%" height="15" fill="rgb(217,125,39)"/><text x="6.2923%" y="383.50"></text></g><g><title>broccoli::query::colfind::oned::find_2d (5 samples, 0.76%)</title><rect x="6.0423%" y="357" width="0.7553%" height="15" fill="rgb(235,36,10)"/><text x="6.2923%" y="367.50"></text></g><g><title>broccoli::query::colfind::oned::find (5 samples, 0.76%)</title><rect x="6.0423%" y="341" width="0.7553%" height="15" fill="rgb(251,123,47)"/><text x="6.2923%" y="351.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (4 samples, 0.60%)</title><rect x="6.1934%" y="325" width="0.6042%" height="15" fill="rgb(221,13,13)"/><text x="6.4434%" y="335.50"></text></g><g><title>broccoli::query::colfind::oned::find::{{closure}} (4 samples, 0.60%)</title><rect x="6.1934%" y="309" width="0.6042%" height="15" fill="rgb(238,131,9)"/><text x="6.4434%" y="319.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (3 samples, 0.45%)</title><rect x="6.3444%" y="293" width="0.4532%" height="15" fill="rgb(211,50,8)"/><text x="6.5944%" y="303.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (2 samples, 0.30%)</title><rect x="6.4955%" y="277" width="0.3021%" height="15" fill="rgb(245,182,24)"/><text x="6.7455%" y="287.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (2 samples, 0.30%)</title><rect x="6.4955%" y="261" width="0.3021%" height="15" fill="rgb(242,14,37)"/><text x="6.7455%" y="271.50"></text></g><g><title>data_gen::main::{{closure}}::{{closure}} (1 samples, 0.15%)</title><rect x="6.6465%" y="245" width="0.1511%" height="15" fill="rgb(246,228,12)"/><text x="6.8965%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (2 samples, 0.30%)</title><rect x="6.7976%" y="309" width="0.3021%" height="15" fill="rgb(213,55,15)"/><text x="7.0476%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::as_mut_ptr (1 samples, 0.15%)</title><rect x="6.9486%" y="293" width="0.1511%" height="15" fill="rgb(209,9,3)"/><text x="7.1986%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.15%)</title><rect x="6.9486%" y="277" width="0.1511%" height="15" fill="rgb(230,59,30)"/><text x="7.1986%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as twounordered::RetainMutUnordered&lt;T&gt;&gt;::truncate (1 samples, 0.15%)</title><rect x="7.0997%" y="293" width="0.1511%" height="15" fill="rgb(209,121,21)"/><text x="7.3497%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::truncate (1 samples, 0.15%)</title><rect x="7.0997%" y="277" width="0.1511%" height="15" fill="rgb(220,109,13)"/><text x="7.3497%" y="287.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (1 samples, 0.15%)</title><rect x="7.2508%" y="277" width="0.1511%" height="15" fill="rgb(232,18,1)"/><text x="7.5008%" y="287.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (2 samples, 0.30%)</title><rect x="7.4018%" y="229" width="0.3021%" height="15" fill="rgb(215,41,42)"/><text x="7.6518%" y="239.50"></text></g><g><title>broccoli::query::colfind::oned::find::{{closure}} (6 samples, 0.91%)</title><rect x="7.2508%" y="293" width="0.9063%" height="15" fill="rgb(224,123,36)"/><text x="7.5008%" y="303.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (5 samples, 0.76%)</title><rect x="7.4018%" y="277" width="0.7553%" height="15" fill="rgb(240,125,3)"/><text x="7.6518%" y="287.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (5 samples, 0.76%)</title><rect x="7.4018%" y="261" width="0.7553%" height="15" fill="rgb(205,98,50)"/><text x="7.6518%" y="271.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (5 samples, 0.76%)</title><rect x="7.4018%" y="245" width="0.7553%" height="15" fill="rgb(205,185,37)"/><text x="7.6518%" y="255.50"></text></g><g><title>data_gen::main::{{closure}}::{{closure}} (3 samples, 0.45%)</title><rect x="7.7039%" y="229" width="0.4532%" height="15" fill="rgb(238,207,15)"/><text x="7.9539%" y="239.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_node (10 samples, 1.51%)</title><rect x="6.7976%" y="357" width="1.5106%" height="15" fill="rgb(213,199,42)"/><text x="7.0476%" y="367.50"></text></g><g><title>broccoli::query::colfind::oned::find_2d (10 samples, 1.51%)</title><rect x="6.7976%" y="341" width="1.5106%" height="15" fill="rgb(235,201,11)"/><text x="7.0476%" y="351.50"></text></g><g><title>broccoli::query::colfind::oned::find (10 samples, 1.51%)</title><rect x="6.7976%" y="325" width="1.5106%" height="15" fill="rgb(207,46,11)"/><text x="7.0476%" y="335.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (8 samples, 1.21%)</title><rect x="7.0997%" y="309" width="1.2085%" height="15" fill="rgb(241,35,35)"/><text x="7.3497%" y="319.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.15%)</title><rect x="8.1571%" y="293" width="0.1511%" height="15" fill="rgb(243,32,47)"/><text x="8.4071%" y="303.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.15%)</title><rect x="8.1571%" y="277" width="0.1511%" height="15" fill="rgb(247,202,23)"/><text x="8.4071%" y="287.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (4 samples, 0.60%)</title><rect x="8.9124%" y="213" width="0.6042%" height="15" fill="rgb(219,102,11)"/><text x="9.1624%" y="223.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_node (10 samples, 1.51%)</title><rect x="8.3082%" y="341" width="1.5106%" height="15" fill="rgb(243,110,44)"/><text x="8.5582%" y="351.50"></text></g><g><title>broccoli::query::colfind::oned::find_2d (10 samples, 1.51%)</title><rect x="8.3082%" y="325" width="1.5106%" height="15" fill="rgb(222,74,54)"/><text x="8.5582%" y="335.50"></text></g><g><title>broccoli::query::colfind::oned::find (10 samples, 1.51%)</title><rect x="8.3082%" y="309" width="1.5106%" height="15" fill="rgb(216,99,12)"/><text x="8.5582%" y="319.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (9 samples, 1.36%)</title><rect x="8.4592%" y="293" width="1.3595%" height="15" fill="rgb(226,22,26)"/><text x="8.7092%" y="303.50"></text></g><g><title>broccoli::query::colfind::oned::find::{{closure}} (8 samples, 1.21%)</title><rect x="8.6103%" y="277" width="1.2085%" height="15" fill="rgb(217,163,10)"/><text x="8.8603%" y="287.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (6 samples, 0.91%)</title><rect x="8.9124%" y="261" width="0.9063%" height="15" fill="rgb(213,25,53)"/><text x="9.1624%" y="271.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (6 samples, 0.91%)</title><rect x="8.9124%" y="245" width="0.9063%" height="15" fill="rgb(252,105,26)"/><text x="9.1624%" y="255.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (6 samples, 0.91%)</title><rect x="8.9124%" y="229" width="0.9063%" height="15" fill="rgb(220,39,43)"/><text x="9.1624%" y="239.50"></text></g><g><title>data_gen::main::{{closure}}::{{closure}} (2 samples, 0.30%)</title><rect x="9.5166%" y="213" width="0.3021%" height="15" fill="rgb(229,68,48)"/><text x="9.7666%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as twounordered::RetainMutUnordered&lt;T&gt;&gt;::truncate (2 samples, 0.30%)</title><rect x="10.4230%" y="261" width="0.3021%" height="15" fill="rgb(252,8,32)"/><text x="10.6730%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::truncate (2 samples, 0.30%)</title><rect x="10.4230%" y="245" width="0.3021%" height="15" fill="rgb(223,20,43)"/><text x="10.6730%" y="255.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_node (7 samples, 1.06%)</title><rect x="9.9698%" y="325" width="1.0574%" height="15" fill="rgb(229,81,49)"/><text x="10.2198%" y="335.50"></text></g><g><title>broccoli::query::colfind::oned::find_2d (7 samples, 1.06%)</title><rect x="9.9698%" y="309" width="1.0574%" height="15" fill="rgb(236,28,36)"/><text x="10.2198%" y="319.50"></text></g><g><title>broccoli::query::colfind::oned::find (7 samples, 1.06%)</title><rect x="9.9698%" y="293" width="1.0574%" height="15" fill="rgb(249,185,26)"/><text x="10.2198%" y="303.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (7 samples, 1.06%)</title><rect x="9.9698%" y="277" width="1.0574%" height="15" fill="rgb(249,174,33)"/><text x="10.2198%" y="287.50"></text></g><g><title>broccoli::query::colfind::oned::find::{{closure}} (2 samples, 0.30%)</title><rect x="10.7251%" y="261" width="0.3021%" height="15" fill="rgb(233,201,37)"/><text x="10.9751%" y="271.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.15%)</title><rect x="10.8761%" y="245" width="0.1511%" height="15" fill="rgb(221,78,26)"/><text x="11.1261%" y="255.50"></text></g><g><title>broccoli::query::colfind::oned::find::{{closure}} (1 samples, 0.15%)</title><rect x="11.0272%" y="245" width="0.1511%" height="15" fill="rgb(250,127,30)"/><text x="11.2772%" y="255.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_node (2 samples, 0.30%)</title><rect x="11.0272%" y="309" width="0.3021%" height="15" fill="rgb(230,49,44)"/><text x="11.2772%" y="319.50"></text></g><g><title>broccoli::query::colfind::oned::find_2d (2 samples, 0.30%)</title><rect x="11.0272%" y="293" width="0.3021%" height="15" fill="rgb(229,67,23)"/><text x="11.2772%" y="303.50"></text></g><g><title>broccoli::query::colfind::oned::find (2 samples, 0.30%)</title><rect x="11.0272%" y="277" width="0.3021%" height="15" fill="rgb(249,83,47)"/><text x="11.2772%" y="287.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (2 samples, 0.30%)</title><rect x="11.0272%" y="261" width="0.3021%" height="15" fill="rgb(215,43,3)"/><text x="11.2772%" y="271.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.15%)</title><rect x="11.1782%" y="245" width="0.1511%" height="15" fill="rgb(238,154,13)"/><text x="11.4282%" y="255.50"></text></g><g><title>core::ptr::swap (1 samples, 0.15%)</title><rect x="11.1782%" y="229" width="0.1511%" height="15" fill="rgb(219,56,2)"/><text x="11.4282%" y="239.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.15%)</title><rect x="11.1782%" y="213" width="0.1511%" height="15" fill="rgb(233,0,4)"/><text x="11.4282%" y="223.50"></text></g><g><title>broccoli::query::colfind::inner::ColFindRecurser&lt;T,K,S&gt;::recurse_seq (1 samples, 0.15%)</title><rect x="11.3293%" y="277" width="0.1511%" height="15" fill="rgb(235,30,7)"/><text x="11.5793%" y="287.50"></text></g><g><title>broccoli::query::colfind::oned::find_2d (1 samples, 0.15%)</title><rect x="11.3293%" y="261" width="0.1511%" height="15" fill="rgb(250,79,13)"/><text x="11.5793%" y="271.50"></text></g><g><title>broccoli::query::colfind::oned::find (1 samples, 0.15%)</title><rect x="11.3293%" y="245" width="0.1511%" height="15" fill="rgb(211,146,34)"/><text x="11.5793%" y="255.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (1 samples, 0.15%)</title><rect x="11.3293%" y="229" width="0.1511%" height="15" fill="rgb(228,22,38)"/><text x="11.5793%" y="239.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.15%)</title><rect x="11.3293%" y="213" width="0.1511%" height="15" fill="rgb(235,168,5)"/><text x="11.5793%" y="223.50"></text></g><g><title>core::ptr::swap (1 samples, 0.15%)</title><rect x="11.3293%" y="197" width="0.1511%" height="15" fill="rgb(221,155,16)"/><text x="11.5793%" y="207.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.15%)</title><rect x="11.3293%" y="181" width="0.1511%" height="15" fill="rgb(215,215,53)"/><text x="11.5793%" y="191.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (2 samples, 0.30%)</title><rect x="11.4804%" y="261" width="0.3021%" height="15" fill="rgb(223,4,10)"/><text x="11.7304%" y="271.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (2 samples, 0.30%)</title><rect x="11.4804%" y="245" width="0.3021%" height="15" fill="rgb(234,103,6)"/><text x="11.7304%" y="255.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (2 samples, 0.30%)</title><rect x="11.4804%" y="229" width="0.3021%" height="15" fill="rgb(227,97,0)"/><text x="11.7304%" y="239.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (2 samples, 0.30%)</title><rect x="11.4804%" y="213" width="0.3021%" height="15" fill="rgb(234,150,53)"/><text x="11.7304%" y="223.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (2 samples, 0.30%)</title><rect x="11.4804%" y="197" width="0.3021%" height="15" fill="rgb(228,201,54)"/><text x="11.7304%" y="207.50"></text></g><g><title>data_gen::main::{{closure}}::{{closure}} (2 samples, 0.30%)</title><rect x="11.4804%" y="181" width="0.3021%" height="15" fill="rgb(222,22,37)"/><text x="11.7304%" y="191.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (3 samples, 0.45%)</title><rect x="11.4804%" y="277" width="0.4532%" height="15" fill="rgb(237,53,32)"/><text x="11.7304%" y="287.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (1 samples, 0.15%)</title><rect x="11.7825%" y="261" width="0.1511%" height="15" fill="rgb(233,25,53)"/><text x="12.0325%" y="271.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (1 samples, 0.15%)</title><rect x="11.7825%" y="245" width="0.1511%" height="15" fill="rgb(210,40,34)"/><text x="12.0325%" y="255.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (1 samples, 0.15%)</title><rect x="11.7825%" y="229" width="0.1511%" height="15" fill="rgb(241,220,44)"/><text x="12.0325%" y="239.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (1 samples, 0.15%)</title><rect x="11.7825%" y="213" width="0.1511%" height="15" fill="rgb(235,28,35)"/><text x="12.0325%" y="223.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.15%)</title><rect x="11.7825%" y="197" width="0.1511%" height="15" fill="rgb(210,56,17)"/><text x="12.0325%" y="207.50"></text></g><g><title>broccoli::query::colfind::oned::find_2d (1 samples, 0.15%)</title><rect x="11.9335%" y="277" width="0.1511%" height="15" fill="rgb(224,130,29)"/><text x="12.1835%" y="287.50"></text></g><g><title>broccoli::query::colfind::oned::find (1 samples, 0.15%)</title><rect x="11.9335%" y="261" width="0.1511%" height="15" fill="rgb(235,212,8)"/><text x="12.1835%" y="271.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (1 samples, 0.15%)</title><rect x="11.9335%" y="245" width="0.1511%" height="15" fill="rgb(223,33,50)"/><text x="12.1835%" y="255.50"></text></g><g><title>broccoli::query::colfind::oned::find::{{closure}} (1 samples, 0.15%)</title><rect x="11.9335%" y="229" width="0.1511%" height="15" fill="rgb(219,149,13)"/><text x="12.1835%" y="239.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.15%)</title><rect x="11.9335%" y="213" width="0.1511%" height="15" fill="rgb(250,156,29)"/><text x="12.1835%" y="223.50"></text></g><g><title>broccoli::query::colfind::inner::ColFindRecurser&lt;T,K,S&gt;::recurse_seq (6 samples, 0.91%)</title><rect x="11.3293%" y="293" width="0.9063%" height="15" fill="rgb(216,193,19)"/><text x="11.5793%" y="303.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (1 samples, 0.15%)</title><rect x="12.0846%" y="277" width="0.1511%" height="15" fill="rgb(216,135,14)"/><text x="12.3346%" y="287.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (1 samples, 0.15%)</title><rect x="12.0846%" y="261" width="0.1511%" height="15" fill="rgb(241,47,5)"/><text x="12.3346%" y="271.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (1 samples, 0.15%)</title><rect x="12.0846%" y="245" width="0.1511%" height="15" fill="rgb(233,42,35)"/><text x="12.3346%" y="255.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (1 samples, 0.15%)</title><rect x="12.0846%" y="229" width="0.1511%" height="15" fill="rgb(231,13,6)"/><text x="12.3346%" y="239.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.15%)</title><rect x="12.0846%" y="213" width="0.1511%" height="15" fill="rgb(207,181,40)"/><text x="12.3346%" y="223.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.15%)</title><rect x="12.0846%" y="197" width="0.1511%" height="15" fill="rgb(254,173,49)"/><text x="12.3346%" y="207.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (1 samples, 0.15%)</title><rect x="12.0846%" y="181" width="0.1511%" height="15" fill="rgb(221,1,38)"/><text x="12.3346%" y="191.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.15%)</title><rect x="12.0846%" y="165" width="0.1511%" height="15" fill="rgb(206,124,46)"/><text x="12.3346%" y="175.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.60%)</title><rect x="12.2356%" y="245" width="0.6042%" height="15" fill="rgb(249,21,11)"/><text x="12.4856%" y="255.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.60%)</title><rect x="12.2356%" y="229" width="0.6042%" height="15" fill="rgb(222,201,40)"/><text x="12.4856%" y="239.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (6 samples, 0.91%)</title><rect x="12.2356%" y="261" width="0.9063%" height="15" fill="rgb(235,61,29)"/><text x="12.4856%" y="271.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (2 samples, 0.30%)</title><rect x="12.8399%" y="245" width="0.3021%" height="15" fill="rgb(219,207,3)"/><text x="13.0899%" y="255.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.15%)</title><rect x="12.9909%" y="229" width="0.1511%" height="15" fill="rgb(222,56,46)"/><text x="13.2409%" y="239.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (1 samples, 0.15%)</title><rect x="12.9909%" y="213" width="0.1511%" height="15" fill="rgb(239,76,54)"/><text x="13.2409%" y="223.50"></text></g><g><title>data_gen::main::{{closure}}::{{closure}} (1 samples, 0.15%)</title><rect x="12.9909%" y="197" width="0.1511%" height="15" fill="rgb(231,124,27)"/><text x="13.2409%" y="207.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (8 samples, 1.21%)</title><rect x="12.2356%" y="277" width="1.2085%" height="15" fill="rgb(249,195,6)"/><text x="12.4856%" y="287.50"></text></g><g><title>broccoli::query::tools::get_section_mut (2 samples, 0.30%)</title><rect x="13.1420%" y="261" width="0.3021%" height="15" fill="rgb(237,174,47)"/><text x="13.3920%" y="271.50"></text></g><g><title>broccoli::pmut::PMut&lt;[T]&gt;::truncate (1 samples, 0.15%)</title><rect x="13.2931%" y="245" width="0.1511%" height="15" fill="rgb(206,201,31)"/><text x="13.5431%" y="255.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1 samples, 0.15%)</title><rect x="13.2931%" y="229" width="0.1511%" height="15" fill="rgb(231,57,52)"/><text x="13.5431%" y="239.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.15%)</title><rect x="13.2931%" y="213" width="0.1511%" height="15" fill="rgb(248,177,22)"/><text x="13.5431%" y="223.50"></text></g><g><title>twounordered::FirstVec&lt;T&gt;::push (1 samples, 0.15%)</title><rect x="13.4441%" y="245" width="0.1511%" height="15" fill="rgb(215,211,37)"/><text x="13.6941%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.15%)</title><rect x="13.4441%" y="229" width="0.1511%" height="15" fill="rgb(241,128,51)"/><text x="13.6941%" y="239.50"></text></g><g><title>core::ptr::write (1 samples, 0.15%)</title><rect x="13.4441%" y="213" width="0.1511%" height="15" fill="rgb(227,165,31)"/><text x="13.6941%" y="223.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (11 samples, 1.66%)</title><rect x="12.2356%" y="293" width="1.6616%" height="15" fill="rgb(228,167,24)"/><text x="12.4856%" y="303.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (3 samples, 0.45%)</title><rect x="13.4441%" y="277" width="0.4532%" height="15" fill="rgb(228,143,12)"/><text x="13.6941%" y="287.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (3 samples, 0.45%)</title><rect x="13.4441%" y="261" width="0.4532%" height="15" fill="rgb(249,149,8)"/><text x="13.6941%" y="271.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (2 samples, 0.30%)</title><rect x="13.5952%" y="245" width="0.3021%" height="15" fill="rgb(243,35,44)"/><text x="13.8452%" y="255.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (1 samples, 0.15%)</title><rect x="14.1994%" y="229" width="0.1511%" height="15" fill="rgb(246,89,9)"/><text x="14.4494%" y="239.50"></text></g><g><title>broccoli::query::colfind::oned::find_2d (6 samples, 0.91%)</title><rect x="13.8973%" y="293" width="0.9063%" height="15" fill="rgb(233,213,13)"/><text x="14.1473%" y="303.50"></text></g><g><title>broccoli::query::colfind::oned::find (6 samples, 0.91%)</title><rect x="13.8973%" y="277" width="0.9063%" height="15" fill="rgb(233,141,41)"/><text x="14.1473%" y="287.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (6 samples, 0.91%)</title><rect x="13.8973%" y="261" width="0.9063%" height="15" fill="rgb(239,167,4)"/><text x="14.1473%" y="271.50"></text></g><g><title>broccoli::query::colfind::oned::find::{{closure}} (4 samples, 0.60%)</title><rect x="14.1994%" y="245" width="0.6042%" height="15" fill="rgb(209,217,16)"/><text x="14.4494%" y="255.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (3 samples, 0.45%)</title><rect x="14.3505%" y="229" width="0.4532%" height="15" fill="rgb(219,88,35)"/><text x="14.6005%" y="239.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.15%)</title><rect x="14.6526%" y="213" width="0.1511%" height="15" fill="rgb(220,193,23)"/><text x="14.9026%" y="223.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (1 samples, 0.15%)</title><rect x="14.6526%" y="197" width="0.1511%" height="15" fill="rgb(230,90,52)"/><text x="14.9026%" y="207.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.15%)</title><rect x="14.6526%" y="181" width="0.1511%" height="15" fill="rgb(252,106,19)"/><text x="14.9026%" y="191.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.15%)</title><rect x="14.9547%" y="229" width="0.1511%" height="15" fill="rgb(206,74,20)"/><text x="15.2047%" y="239.50"></text></g><g><title>broccoli::query::colfind::inner::ColFindRecurser&lt;T,K,S&gt;::recurse_seq (26 samples, 3.93%)</title><rect x="11.3293%" y="309" width="3.9275%" height="15" fill="rgb(230,138,44)"/><text x="11.5793%" y="319.50">broc..</text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (3 samples, 0.45%)</title><rect x="14.8036%" y="293" width="0.4532%" height="15" fill="rgb(235,182,43)"/><text x="15.0536%" y="303.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (3 samples, 0.45%)</title><rect x="14.8036%" y="277" width="0.4532%" height="15" fill="rgb(242,16,51)"/><text x="15.0536%" y="287.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (3 samples, 0.45%)</title><rect x="14.8036%" y="261" width="0.4532%" height="15" fill="rgb(248,9,4)"/><text x="15.0536%" y="271.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (2 samples, 0.30%)</title><rect x="14.9547%" y="245" width="0.3021%" height="15" fill="rgb(210,31,22)"/><text x="15.2047%" y="255.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.15%)</title><rect x="15.1057%" y="229" width="0.1511%" height="15" fill="rgb(239,54,39)"/><text x="15.3557%" y="239.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.60%)</title><rect x="15.5589%" y="261" width="0.6042%" height="15" fill="rgb(230,99,41)"/><text x="15.8089%" y="271.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.60%)</title><rect x="15.5589%" y="245" width="0.6042%" height="15" fill="rgb(253,106,12)"/><text x="15.8089%" y="255.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (4 samples, 0.60%)</title><rect x="16.1631%" y="261" width="0.6042%" height="15" fill="rgb(213,46,41)"/><text x="16.4131%" y="271.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (2 samples, 0.30%)</title><rect x="16.4653%" y="245" width="0.3021%" height="15" fill="rgb(215,133,35)"/><text x="16.7153%" y="255.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (2 samples, 0.30%)</title><rect x="16.4653%" y="229" width="0.3021%" height="15" fill="rgb(213,28,5)"/><text x="16.7153%" y="239.50"></text></g><g><title>data_gen::main::{{closure}}::{{closure}} (2 samples, 0.30%)</title><rect x="16.4653%" y="213" width="0.3021%" height="15" fill="rgb(215,77,49)"/><text x="16.7153%" y="223.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (11 samples, 1.66%)</title><rect x="15.2568%" y="293" width="1.6616%" height="15" fill="rgb(248,100,22)"/><text x="15.5068%" y="303.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (11 samples, 1.66%)</title><rect x="15.2568%" y="277" width="1.6616%" height="15" fill="rgb(208,67,9)"/><text x="15.5068%" y="287.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::le (1 samples, 0.15%)</title><rect x="16.7674%" y="261" width="0.1511%" height="15" fill="rgb(219,133,21)"/><text x="17.0174%" y="271.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (1 samples, 0.15%)</title><rect x="16.9184%" y="293" width="0.1511%" height="15" fill="rgb(246,46,29)"/><text x="17.1684%" y="303.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (1 samples, 0.15%)</title><rect x="16.9184%" y="277" width="0.1511%" height="15" fill="rgb(246,185,52)"/><text x="17.1684%" y="287.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (1 samples, 0.15%)</title><rect x="16.9184%" y="261" width="0.1511%" height="15" fill="rgb(252,136,11)"/><text x="17.1684%" y="271.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (1 samples, 0.15%)</title><rect x="16.9184%" y="245" width="0.1511%" height="15" fill="rgb(219,138,53)"/><text x="17.1684%" y="255.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (1 samples, 0.15%)</title><rect x="16.9184%" y="229" width="0.1511%" height="15" fill="rgb(211,51,23)"/><text x="17.1684%" y="239.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (1 samples, 0.15%)</title><rect x="16.9184%" y="213" width="0.1511%" height="15" fill="rgb(247,221,28)"/><text x="17.1684%" y="223.50"></text></g><g><title>broccoli::query::colfind::node_handle::DestructuredNodeLeaf&lt;T,AnchorAxis&gt;::new (1 samples, 0.15%)</title><rect x="17.0695%" y="293" width="0.1511%" height="15" fill="rgb(251,222,45)"/><text x="17.3195%" y="303.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (1 samples, 0.15%)</title><rect x="17.0695%" y="277" width="0.1511%" height="15" fill="rgb(217,162,53)"/><text x="17.3195%" y="287.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.15%)</title><rect x="17.3716%" y="261" width="0.1511%" height="15" fill="rgb(229,93,14)"/><text x="17.6216%" y="271.50"></text></g><g><title>twounordered::FirstVec&lt;T&gt;::push (1 samples, 0.15%)</title><rect x="17.5227%" y="261" width="0.1511%" height="15" fill="rgb(209,67,49)"/><text x="17.7727%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.15%)</title><rect x="17.5227%" y="245" width="0.1511%" height="15" fill="rgb(213,87,29)"/><text x="17.7727%" y="255.50"></text></g><g><title>core::ptr::write (1 samples, 0.15%)</title><rect x="17.5227%" y="229" width="0.1511%" height="15" fill="rgb(205,151,52)"/><text x="17.7727%" y="239.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (3 samples, 0.45%)</title><rect x="17.6737%" y="261" width="0.4532%" height="15" fill="rgb(253,215,39)"/><text x="17.9237%" y="271.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (2 samples, 0.30%)</title><rect x="17.8248%" y="245" width="0.3021%" height="15" fill="rgb(221,220,41)"/><text x="18.0748%" y="255.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.15%)</title><rect x="17.9758%" y="229" width="0.1511%" height="15" fill="rgb(218,133,21)"/><text x="18.2258%" y="239.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (20 samples, 3.02%)</title><rect x="15.2568%" y="309" width="3.0211%" height="15" fill="rgb(221,193,43)"/><text x="15.5068%" y="319.50">bro..</text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (7 samples, 1.06%)</title><rect x="17.2205%" y="293" width="1.0574%" height="15" fill="rgb(240,128,52)"/><text x="17.4705%" y="303.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (7 samples, 1.06%)</title><rect x="17.2205%" y="277" width="1.0574%" height="15" fill="rgb(253,114,12)"/><text x="17.4705%" y="287.50"></text></g><g><title>twounordered::SecondVec&lt;T&gt;::push (1 samples, 0.15%)</title><rect x="18.1269%" y="261" width="0.1511%" height="15" fill="rgb(215,223,47)"/><text x="18.3769%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.15%)</title><rect x="18.1269%" y="245" width="0.1511%" height="15" fill="rgb(248,225,23)"/><text x="18.3769%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::as_mut_ptr (1 samples, 0.15%)</title><rect x="18.1269%" y="229" width="0.1511%" height="15" fill="rgb(250,108,0)"/><text x="18.3769%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.15%)</title><rect x="18.1269%" y="213" width="0.1511%" height="15" fill="rgb(228,208,7)"/><text x="18.3769%" y="223.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (5 samples, 0.76%)</title><rect x="18.7311%" y="245" width="0.7553%" height="15" fill="rgb(244,45,10)"/><text x="18.9811%" y="255.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (2 samples, 0.30%)</title><rect x="19.1843%" y="229" width="0.3021%" height="15" fill="rgb(207,125,25)"/><text x="19.4343%" y="239.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (2 samples, 0.30%)</title><rect x="19.1843%" y="213" width="0.3021%" height="15" fill="rgb(210,195,18)"/><text x="19.4343%" y="223.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (2 samples, 0.30%)</title><rect x="19.1843%" y="197" width="0.3021%" height="15" fill="rgb(249,80,12)"/><text x="19.4343%" y="207.50"></text></g><g><title>broccoli::query::colfind::oned::find_2d (9 samples, 1.36%)</title><rect x="18.2779%" y="309" width="1.3595%" height="15" fill="rgb(221,65,9)"/><text x="18.5279%" y="319.50"></text></g><g><title>broccoli::query::colfind::oned::find (9 samples, 1.36%)</title><rect x="18.2779%" y="293" width="1.3595%" height="15" fill="rgb(235,49,36)"/><text x="18.5279%" y="303.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (9 samples, 1.36%)</title><rect x="18.2779%" y="277" width="1.3595%" height="15" fill="rgb(225,32,20)"/><text x="18.5279%" y="287.50"></text></g><g><title>broccoli::query::colfind::oned::find::{{closure}} (8 samples, 1.21%)</title><rect x="18.4290%" y="261" width="1.2085%" height="15" fill="rgb(215,141,46)"/><text x="18.6790%" y="271.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.15%)</title><rect x="19.4864%" y="245" width="0.1511%" height="15" fill="rgb(250,160,47)"/><text x="19.7364%" y="255.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (1 samples, 0.15%)</title><rect x="19.6375%" y="277" width="0.1511%" height="15" fill="rgb(216,222,40)"/><text x="19.8875%" y="287.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (1 samples, 0.15%)</title><rect x="19.6375%" y="261" width="0.1511%" height="15" fill="rgb(234,217,39)"/><text x="19.8875%" y="271.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek::{{closure}} (1 samples, 0.15%)</title><rect x="19.6375%" y="245" width="0.1511%" height="15" fill="rgb(207,178,40)"/><text x="19.8875%" y="255.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.15%)</title><rect x="19.6375%" y="229" width="0.1511%" height="15" fill="rgb(221,136,13)"/><text x="19.8875%" y="239.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.15%)</title><rect x="19.6375%" y="213" width="0.1511%" height="15" fill="rgb(249,199,10)"/><text x="19.8875%" y="223.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.15%)</title><rect x="19.7885%" y="277" width="0.1511%" height="15" fill="rgb(249,222,13)"/><text x="20.0385%" y="287.50"></text></g><g><title>&lt;twounordered::FirstVec&lt;T&gt; as twounordered::RetainMutUnordered&lt;T&gt;&gt;::truncate (1 samples, 0.15%)</title><rect x="20.2417%" y="261" width="0.1511%" height="15" fill="rgb(244,185,38)"/><text x="20.4917%" y="271.50"></text></g><g><title>twounordered::FirstVec&lt;T&gt;::truncate (1 samples, 0.15%)</title><rect x="20.2417%" y="245" width="0.1511%" height="15" fill="rgb(236,202,9)"/><text x="20.4917%" y="255.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.15%)</title><rect x="20.2417%" y="229" width="0.1511%" height="15" fill="rgb(250,229,37)"/><text x="20.4917%" y="239.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.15%)</title><rect x="20.2417%" y="213" width="0.1511%" height="15" fill="rgb(206,174,23)"/><text x="20.4917%" y="223.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (1 samples, 0.15%)</title><rect x="20.5438%" y="245" width="0.1511%" height="15" fill="rgb(211,33,43)"/><text x="20.7938%" y="255.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (3 samples, 0.45%)</title><rect x="20.3927%" y="261" width="0.4532%" height="15" fill="rgb(245,58,50)"/><text x="20.6427%" y="271.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.15%)</title><rect x="20.6949%" y="245" width="0.1511%" height="15" fill="rgb(244,68,36)"/><text x="20.9449%" y="255.50"></text></g><g><title>axgeom::range::Range&lt;T&gt;::intersects (1 samples, 0.15%)</title><rect x="20.6949%" y="229" width="0.1511%" height="15" fill="rgb(232,229,15)"/><text x="20.9449%" y="239.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::le (1 samples, 0.15%)</title><rect x="20.6949%" y="213" width="0.1511%" height="15" fill="rgb(254,30,23)"/><text x="20.9449%" y="223.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (7 samples, 1.06%)</title><rect x="19.9396%" y="277" width="1.0574%" height="15" fill="rgb(235,160,14)"/><text x="20.1896%" y="287.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.15%)</title><rect x="20.8459%" y="261" width="0.1511%" height="15" fill="rgb(212,155,44)"/><text x="21.0959%" y="271.50"></text></g><g><title>core::ptr::swap (1 samples, 0.15%)</title><rect x="20.8459%" y="245" width="0.1511%" height="15" fill="rgb(226,2,50)"/><text x="21.0959%" y="255.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.15%)</title><rect x="20.8459%" y="229" width="0.1511%" height="15" fill="rgb(234,177,6)"/><text x="21.0959%" y="239.50"></text></g><g><title>broccoli::query::colfind::inner::ColFindRecurser&lt;T,K,S&gt;::recurse_seq (68 samples, 10.27%)</title><rect x="11.0272%" y="325" width="10.2719%" height="15" fill="rgb(217,24,9)"/><text x="11.2772%" y="335.50">broccoli::query..</text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (11 samples, 1.66%)</title><rect x="19.6375%" y="309" width="1.6616%" height="15" fill="rgb(220,13,46)"/><text x="19.8875%" y="319.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (11 samples, 1.66%)</title><rect x="19.6375%" y="293" width="1.6616%" height="15" fill="rgb(239,221,27)"/><text x="19.8875%" y="303.50"></text></g><g><title>twounordered::SecondVec&lt;T&gt;::push (2 samples, 0.30%)</title><rect x="20.9970%" y="277" width="0.3021%" height="15" fill="rgb(222,198,25)"/><text x="21.2470%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (2 samples, 0.30%)</title><rect x="20.9970%" y="261" width="0.3021%" height="15" fill="rgb(211,99,13)"/><text x="21.2470%" y="271.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.91%)</title><rect x="22.2054%" y="277" width="0.9063%" height="15" fill="rgb(232,111,31)"/><text x="22.4554%" y="287.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.91%)</title><rect x="22.2054%" y="261" width="0.9063%" height="15" fill="rgb(245,82,37)"/><text x="22.4554%" y="271.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (8 samples, 1.21%)</title><rect x="23.1118%" y="277" width="1.2085%" height="15" fill="rgb(227,149,46)"/><text x="23.3618%" y="287.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (3 samples, 0.45%)</title><rect x="23.8671%" y="261" width="0.4532%" height="15" fill="rgb(218,36,50)"/><text x="24.1171%" y="271.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (3 samples, 0.45%)</title><rect x="23.8671%" y="245" width="0.4532%" height="15" fill="rgb(226,80,48)"/><text x="24.1171%" y="255.50"></text></g><g><title>data_gen::main::{{closure}}::{{closure}} (3 samples, 0.45%)</title><rect x="23.8671%" y="229" width="0.4532%" height="15" fill="rgb(238,224,15)"/><text x="24.1171%" y="239.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (19 samples, 2.87%)</title><rect x="21.6012%" y="293" width="2.8701%" height="15" fill="rgb(241,136,10)"/><text x="21.8512%" y="303.50">br..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::le (1 samples, 0.15%)</title><rect x="24.3202%" y="277" width="0.1511%" height="15" fill="rgb(208,32,45)"/><text x="24.5702%" y="287.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (20 samples, 3.02%)</title><rect x="21.6012%" y="309" width="3.0211%" height="15" fill="rgb(207,135,9)"/><text x="21.8512%" y="319.50">&lt;br..</text></g><g><title>broccoli::query::tools::get_section_mut (1 samples, 0.15%)</title><rect x="24.4713%" y="293" width="0.1511%" height="15" fill="rgb(206,86,44)"/><text x="24.7213%" y="303.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (1 samples, 0.15%)</title><rect x="24.6224%" y="277" width="0.1511%" height="15" fill="rgb(245,177,15)"/><text x="24.8724%" y="287.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (1 samples, 0.15%)</title><rect x="24.6224%" y="261" width="0.1511%" height="15" fill="rgb(206,64,50)"/><text x="24.8724%" y="271.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.15%)</title><rect x="25.2266%" y="261" width="0.1511%" height="15" fill="rgb(234,36,40)"/><text x="25.4766%" y="271.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.15%)</title><rect x="25.2266%" y="245" width="0.1511%" height="15" fill="rgb(213,64,8)"/><text x="25.4766%" y="255.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.15%)</title><rect x="25.3776%" y="261" width="0.1511%" height="15" fill="rgb(210,75,36)"/><text x="25.6276%" y="271.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.15%)</title><rect x="25.3776%" y="245" width="0.1511%" height="15" fill="rgb(229,88,21)"/><text x="25.6276%" y="255.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (1 samples, 0.15%)</title><rect x="25.3776%" y="229" width="0.1511%" height="15" fill="rgb(252,204,47)"/><text x="25.6276%" y="239.50"></text></g><g><title>data_gen::main::{{closure}}::{{closure}} (1 samples, 0.15%)</title><rect x="25.3776%" y="213" width="0.1511%" height="15" fill="rgb(208,77,27)"/><text x="25.6276%" y="223.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (7 samples, 1.06%)</title><rect x="24.6224%" y="293" width="1.0574%" height="15" fill="rgb(221,76,26)"/><text x="24.8724%" y="303.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (6 samples, 0.91%)</title><rect x="24.7734%" y="277" width="0.9063%" height="15" fill="rgb(225,139,18)"/><text x="25.0234%" y="287.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::le (1 samples, 0.15%)</title><rect x="25.5287%" y="261" width="0.1511%" height="15" fill="rgb(230,137,11)"/><text x="25.7787%" y="271.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (8 samples, 1.21%)</title><rect x="24.6224%" y="309" width="1.2085%" height="15" fill="rgb(212,28,1)"/><text x="24.8724%" y="319.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (1 samples, 0.15%)</title><rect x="25.6798%" y="293" width="0.1511%" height="15" fill="rgb(248,164,17)"/><text x="25.9298%" y="303.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (1 samples, 0.15%)</title><rect x="25.6798%" y="277" width="0.1511%" height="15" fill="rgb(222,171,42)"/><text x="25.9298%" y="287.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (1 samples, 0.15%)</title><rect x="25.6798%" y="261" width="0.1511%" height="15" fill="rgb(243,84,45)"/><text x="25.9298%" y="271.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.15%)</title><rect x="25.6798%" y="245" width="0.1511%" height="15" fill="rgb(252,49,23)"/><text x="25.9298%" y="255.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.15%)</title><rect x="25.6798%" y="229" width="0.1511%" height="15" fill="rgb(215,19,7)"/><text x="25.9298%" y="239.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (1 samples, 0.15%)</title><rect x="25.9819%" y="277" width="0.1511%" height="15" fill="rgb(238,81,41)"/><text x="26.2319%" y="287.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.15%)</title><rect x="25.9819%" y="261" width="0.1511%" height="15" fill="rgb(210,199,37)"/><text x="26.2319%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.15%)</title><rect x="26.1329%" y="261" width="0.1511%" height="15" fill="rgb(244,192,49)"/><text x="26.3829%" y="271.50"></text></g><g><title>twounordered::FirstVec&lt;T&gt;::push (2 samples, 0.30%)</title><rect x="26.1329%" y="277" width="0.3021%" height="15" fill="rgb(226,211,11)"/><text x="26.3829%" y="287.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.15%)</title><rect x="26.2840%" y="261" width="0.1511%" height="15" fill="rgb(236,162,54)"/><text x="26.5340%" y="271.50"></text></g><g><title>core::ptr::swap (1 samples, 0.15%)</title><rect x="26.2840%" y="245" width="0.1511%" height="15" fill="rgb(220,229,9)"/><text x="26.5340%" y="255.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.15%)</title><rect x="26.2840%" y="229" width="0.1511%" height="15" fill="rgb(250,87,22)"/><text x="26.5340%" y="239.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (3 samples, 0.45%)</title><rect x="27.1903%" y="245" width="0.4532%" height="15" fill="rgb(239,43,17)"/><text x="27.4403%" y="255.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (3 samples, 0.45%)</title><rect x="27.1903%" y="229" width="0.4532%" height="15" fill="rgb(231,177,25)"/><text x="27.4403%" y="239.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (3 samples, 0.45%)</title><rect x="27.1903%" y="213" width="0.4532%" height="15" fill="rgb(219,179,1)"/><text x="27.4403%" y="223.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (3 samples, 0.45%)</title><rect x="27.1903%" y="197" width="0.4532%" height="15" fill="rgb(238,219,53)"/><text x="27.4403%" y="207.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (43 samples, 6.50%)</title><rect x="21.2991%" y="325" width="6.4955%" height="15" fill="rgb(232,167,36)"/><text x="21.5491%" y="335.50">broccoli:..</text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (13 samples, 1.96%)</title><rect x="25.8308%" y="309" width="1.9637%" height="15" fill="rgb(244,19,51)"/><text x="26.0808%" y="319.50">b..</text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (13 samples, 1.96%)</title><rect x="25.8308%" y="293" width="1.9637%" height="15" fill="rgb(224,6,22)"/><text x="26.0808%" y="303.50">b..</text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (9 samples, 1.36%)</title><rect x="26.4350%" y="277" width="1.3595%" height="15" fill="rgb(224,145,5)"/><text x="26.6850%" y="287.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (6 samples, 0.91%)</title><rect x="26.8882%" y="261" width="0.9063%" height="15" fill="rgb(234,130,49)"/><text x="27.1382%" y="271.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.15%)</title><rect x="27.6435%" y="245" width="0.1511%" height="15" fill="rgb(254,6,2)"/><text x="27.8935%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::as_mut_ptr (1 samples, 0.15%)</title><rect x="27.9456%" y="277" width="0.1511%" height="15" fill="rgb(208,96,46)"/><text x="28.1956%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.15%)</title><rect x="27.9456%" y="261" width="0.1511%" height="15" fill="rgb(239,3,39)"/><text x="28.1956%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (3 samples, 0.45%)</title><rect x="27.7946%" y="293" width="0.4532%" height="15" fill="rgb(233,210,1)"/><text x="28.0446%" y="303.50"></text></g><g><title>core::ptr::write (1 samples, 0.15%)</title><rect x="28.0967%" y="277" width="0.1511%" height="15" fill="rgb(244,137,37)"/><text x="28.3467%" y="287.50"></text></g><g><title>broccoli::query::colfind::oned::find_2d (14 samples, 2.11%)</title><rect x="27.7946%" y="325" width="2.1148%" height="15" fill="rgb(240,136,2)"/><text x="28.0446%" y="335.50">b..</text></g><g><title>broccoli::query::colfind::oned::find (14 samples, 2.11%)</title><rect x="27.7946%" y="309" width="2.1148%" height="15" fill="rgb(239,18,37)"/><text x="28.0446%" y="319.50">b..</text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (11 samples, 1.66%)</title><rect x="28.2477%" y="293" width="1.6616%" height="15" fill="rgb(218,185,22)"/><text x="28.4977%" y="303.50"></text></g><g><title>broccoli::query::colfind::oned::find::{{closure}} (8 samples, 1.21%)</title><rect x="28.7009%" y="277" width="1.2085%" height="15" fill="rgb(225,218,4)"/><text x="28.9509%" y="287.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (3 samples, 0.45%)</title><rect x="29.4562%" y="261" width="0.4532%" height="15" fill="rgb(230,182,32)"/><text x="29.7062%" y="271.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (2 samples, 0.30%)</title><rect x="29.6073%" y="245" width="0.3021%" height="15" fill="rgb(242,56,43)"/><text x="29.8573%" y="255.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (2 samples, 0.30%)</title><rect x="29.6073%" y="229" width="0.3021%" height="15" fill="rgb(233,99,24)"/><text x="29.8573%" y="239.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (2 samples, 0.30%)</title><rect x="29.6073%" y="213" width="0.3021%" height="15" fill="rgb(234,209,42)"/><text x="29.8573%" y="223.50"></text></g><g><title>&lt;twounordered::SecondVec&lt;T&gt; as twounordered::RetainMutUnordered&lt;T&gt;&gt;::as_slice_mut (1 samples, 0.15%)</title><rect x="30.3625%" y="277" width="0.1511%" height="15" fill="rgb(227,7,12)"/><text x="30.6125%" y="287.50"></text></g><g><title>twounordered::SecondVec&lt;T&gt;::as_slice_mut (1 samples, 0.15%)</title><rect x="30.3625%" y="261" width="0.1511%" height="15" fill="rgb(245,203,43)"/><text x="30.6125%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1 samples, 0.15%)</title><rect x="30.3625%" y="245" width="0.1511%" height="15" fill="rgb(238,205,33)"/><text x="30.6125%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.15%)</title><rect x="30.3625%" y="229" width="0.1511%" height="15" fill="rgb(231,56,7)"/><text x="30.6125%" y="239.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.15%)</title><rect x="31.2689%" y="245" width="0.1511%" height="15" fill="rgb(244,186,29)"/><text x="31.5189%" y="255.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (1 samples, 0.15%)</title><rect x="31.2689%" y="229" width="0.1511%" height="15" fill="rgb(234,111,31)"/><text x="31.5189%" y="239.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.15%)</title><rect x="31.2689%" y="213" width="0.1511%" height="15" fill="rgb(241,149,10)"/><text x="31.5189%" y="223.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (7 samples, 1.06%)</title><rect x="30.5136%" y="261" width="1.0574%" height="15" fill="rgb(249,206,44)"/><text x="30.7636%" y="271.50"></text></g><g><title>axgeom::range::Range&lt;T&gt;::intersects (1 samples, 0.15%)</title><rect x="31.4199%" y="245" width="0.1511%" height="15" fill="rgb(251,153,30)"/><text x="31.6699%" y="255.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::le (1 samples, 0.15%)</title><rect x="31.4199%" y="229" width="0.1511%" height="15" fill="rgb(239,152,38)"/><text x="31.6699%" y="239.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (11 samples, 1.66%)</title><rect x="30.0604%" y="293" width="1.6616%" height="15" fill="rgb(249,139,47)"/><text x="30.3104%" y="303.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (8 samples, 1.21%)</title><rect x="30.5136%" y="277" width="1.2085%" height="15" fill="rgb(244,64,35)"/><text x="30.7636%" y="287.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.15%)</title><rect x="31.5710%" y="261" width="0.1511%" height="15" fill="rgb(216,46,15)"/><text x="31.8210%" y="271.50"></text></g><g><title>broccoli::query::colfind::inner::ColFindRecurser&lt;T,K,S&gt;::recurse_seq (146 samples, 22.05%)</title><rect x="9.8187%" y="341" width="22.0544%" height="15" fill="rgb(250,74,19)"/><text x="10.0687%" y="351.50">broccoli::query::colfind::inner::Co..</text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (13 samples, 1.96%)</title><rect x="29.9094%" y="325" width="1.9637%" height="15" fill="rgb(249,42,33)"/><text x="30.1594%" y="335.50">b..</text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (13 samples, 1.96%)</title><rect x="29.9094%" y="309" width="1.9637%" height="15" fill="rgb(242,149,17)"/><text x="30.1594%" y="319.50">b..</text></g><g><title>twounordered::SecondVec&lt;T&gt;::push (1 samples, 0.15%)</title><rect x="31.7221%" y="293" width="0.1511%" height="15" fill="rgb(244,29,21)"/><text x="31.9721%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.15%)</title><rect x="31.7221%" y="277" width="0.1511%" height="15" fill="rgb(220,130,37)"/><text x="31.9721%" y="287.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (7 samples, 1.06%)</title><rect x="31.8731%" y="309" width="1.0574%" height="15" fill="rgb(211,67,2)"/><text x="32.1231%" y="319.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.91%)</title><rect x="32.0242%" y="293" width="0.9063%" height="15" fill="rgb(235,68,52)"/><text x="32.2742%" y="303.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.91%)</title><rect x="32.0242%" y="277" width="0.9063%" height="15" fill="rgb(246,142,3)"/><text x="32.2742%" y="287.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (10 samples, 1.51%)</title><rect x="31.8731%" y="325" width="1.5106%" height="15" fill="rgb(241,25,7)"/><text x="32.1231%" y="335.50"></text></g><g><title>broccoli::query::tools::get_section_mut (3 samples, 0.45%)</title><rect x="32.9305%" y="309" width="0.4532%" height="15" fill="rgb(242,119,39)"/><text x="33.1805%" y="319.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::ge (1 samples, 0.15%)</title><rect x="33.2326%" y="293" width="0.1511%" height="15" fill="rgb(241,98,45)"/><text x="33.4826%" y="303.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (1 samples, 0.15%)</title><rect x="33.3837%" y="293" width="0.1511%" height="15" fill="rgb(254,28,30)"/><text x="33.6337%" y="303.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (1 samples, 0.15%)</title><rect x="33.3837%" y="277" width="0.1511%" height="15" fill="rgb(241,142,54)"/><text x="33.6337%" y="287.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (1 samples, 0.15%)</title><rect x="33.3837%" y="261" width="0.1511%" height="15" fill="rgb(222,85,15)"/><text x="33.6337%" y="271.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (3 samples, 0.45%)</title><rect x="33.5347%" y="293" width="0.4532%" height="15" fill="rgb(210,85,47)"/><text x="33.7847%" y="303.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (2 samples, 0.30%)</title><rect x="33.6858%" y="277" width="0.3021%" height="15" fill="rgb(224,206,25)"/><text x="33.9358%" y="287.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (2 samples, 0.30%)</title><rect x="33.6858%" y="261" width="0.3021%" height="15" fill="rgb(243,201,19)"/><text x="33.9358%" y="271.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (2 samples, 0.30%)</title><rect x="33.6858%" y="245" width="0.3021%" height="15" fill="rgb(236,59,4)"/><text x="33.9358%" y="255.50"></text></g><g><title>data_gen::main::{{closure}}::{{closure}} (2 samples, 0.30%)</title><rect x="33.6858%" y="229" width="0.3021%" height="15" fill="rgb(254,179,45)"/><text x="33.9358%" y="239.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (5 samples, 0.76%)</title><rect x="33.3837%" y="309" width="0.7553%" height="15" fill="rgb(226,14,10)"/><text x="33.6337%" y="319.50"></text></g><g><title>broccoli::query::tools::get_section_mut (1 samples, 0.15%)</title><rect x="33.9879%" y="293" width="0.1511%" height="15" fill="rgb(244,27,41)"/><text x="34.2379%" y="303.50"></text></g><g><title>broccoli::pmut::PMut&lt;[T]&gt;::truncate (1 samples, 0.15%)</title><rect x="33.9879%" y="277" width="0.1511%" height="15" fill="rgb(235,35,32)"/><text x="34.2379%" y="287.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1 samples, 0.15%)</title><rect x="33.9879%" y="261" width="0.1511%" height="15" fill="rgb(218,68,31)"/><text x="34.2379%" y="271.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.15%)</title><rect x="33.9879%" y="245" width="0.1511%" height="15" fill="rgb(207,120,37)"/><text x="34.2379%" y="255.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (1 samples, 0.15%)</title><rect x="34.1390%" y="277" width="0.1511%" height="15" fill="rgb(227,98,0)"/><text x="34.3890%" y="287.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.15%)</title><rect x="34.1390%" y="261" width="0.1511%" height="15" fill="rgb(207,7,3)"/><text x="34.3890%" y="271.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.15%)</title><rect x="34.1390%" y="245" width="0.1511%" height="15" fill="rgb(206,98,19)"/><text x="34.3890%" y="255.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (2 samples, 0.30%)</title><rect x="34.1390%" y="309" width="0.3021%" height="15" fill="rgb(217,5,26)"/><text x="34.3890%" y="319.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (2 samples, 0.30%)</title><rect x="34.1390%" y="293" width="0.3021%" height="15" fill="rgb(235,190,38)"/><text x="34.3890%" y="303.50"></text></g><g><title>broccoli::query::tools::get_section_mut (1 samples, 0.15%)</title><rect x="34.2900%" y="277" width="0.1511%" height="15" fill="rgb(247,86,24)"/><text x="34.5400%" y="287.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::lt (1 samples, 0.15%)</title><rect x="34.5921%" y="277" width="0.1511%" height="15" fill="rgb(205,101,16)"/><text x="34.8421%" y="287.50"></text></g><g><title>twounordered::FirstVec&lt;T&gt;::push (1 samples, 0.15%)</title><rect x="34.7432%" y="277" width="0.1511%" height="15" fill="rgb(246,168,33)"/><text x="34.9932%" y="287.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.15%)</title><rect x="34.7432%" y="261" width="0.1511%" height="15" fill="rgb(231,114,1)"/><text x="34.9932%" y="271.50"></text></g><g><title>core::ptr::swap (1 samples, 0.15%)</title><rect x="34.7432%" y="245" width="0.1511%" height="15" fill="rgb(207,184,53)"/><text x="34.9932%" y="255.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.15%)</title><rect x="34.7432%" y="229" width="0.1511%" height="15" fill="rgb(224,95,51)"/><text x="34.9932%" y="239.50"></text></g><g><title>&lt;twounordered::SecondVec&lt;T&gt; as twounordered::RetainMutUnordered&lt;T&gt;&gt;::as_slice_mut (1 samples, 0.15%)</title><rect x="35.0453%" y="261" width="0.1511%" height="15" fill="rgb(212,188,45)"/><text x="35.2953%" y="271.50"></text></g><g><title>twounordered::SecondVec&lt;T&gt;::as_slice_mut (1 samples, 0.15%)</title><rect x="35.0453%" y="245" width="0.1511%" height="15" fill="rgb(223,154,38)"/><text x="35.2953%" y="255.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (14 samples, 2.11%)</title><rect x="33.3837%" y="325" width="2.1148%" height="15" fill="rgb(251,22,52)"/><text x="33.6337%" y="335.50">b..</text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (7 samples, 1.06%)</title><rect x="34.4411%" y="309" width="1.0574%" height="15" fill="rgb(229,209,22)"/><text x="34.6911%" y="319.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (7 samples, 1.06%)</title><rect x="34.4411%" y="293" width="1.0574%" height="15" fill="rgb(234,138,34)"/><text x="34.6911%" y="303.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (4 samples, 0.60%)</title><rect x="34.8943%" y="277" width="0.6042%" height="15" fill="rgb(212,95,11)"/><text x="35.1443%" y="287.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (2 samples, 0.30%)</title><rect x="35.1964%" y="261" width="0.3021%" height="15" fill="rgb(240,179,47)"/><text x="35.4464%" y="271.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (2 samples, 0.30%)</title><rect x="35.1964%" y="245" width="0.3021%" height="15" fill="rgb(240,163,11)"/><text x="35.4464%" y="255.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (1 samples, 0.15%)</title><rect x="35.6495%" y="293" width="0.1511%" height="15" fill="rgb(236,37,12)"/><text x="35.8995%" y="303.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (1 samples, 0.15%)</title><rect x="35.6495%" y="277" width="0.1511%" height="15" fill="rgb(232,164,16)"/><text x="35.8995%" y="287.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek::{{closure}} (1 samples, 0.15%)</title><rect x="35.6495%" y="261" width="0.1511%" height="15" fill="rgb(244,205,15)"/><text x="35.8995%" y="271.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.15%)</title><rect x="35.6495%" y="245" width="0.1511%" height="15" fill="rgb(223,117,47)"/><text x="35.8995%" y="255.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.15%)</title><rect x="35.6495%" y="229" width="0.1511%" height="15" fill="rgb(244,107,35)"/><text x="35.8995%" y="239.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.15%)</title><rect x="35.8006%" y="293" width="0.1511%" height="15" fill="rgb(205,140,8)"/><text x="36.0506%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.15%)</title><rect x="36.1027%" y="277" width="0.1511%" height="15" fill="rgb(228,84,46)"/><text x="36.3527%" y="287.50"></text></g><g><title>twounordered::FirstVec&lt;T&gt;::push (3 samples, 0.45%)</title><rect x="35.9517%" y="293" width="0.4532%" height="15" fill="rgb(254,188,9)"/><text x="36.2017%" y="303.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.15%)</title><rect x="36.2538%" y="277" width="0.1511%" height="15" fill="rgb(206,112,54)"/><text x="36.5038%" y="287.50"></text></g><g><title>core::ptr::swap (1 samples, 0.15%)</title><rect x="36.2538%" y="261" width="0.1511%" height="15" fill="rgb(216,84,49)"/><text x="36.5038%" y="271.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.15%)</title><rect x="36.2538%" y="245" width="0.1511%" height="15" fill="rgb(214,194,35)"/><text x="36.5038%" y="255.50"></text></g><g><title>&lt;twounordered::FirstVec&lt;T&gt; as twounordered::RetainMutUnordered&lt;T&gt;&gt;::truncate (1 samples, 0.15%)</title><rect x="36.7069%" y="277" width="0.1511%" height="15" fill="rgb(249,28,3)"/><text x="36.9569%" y="287.50"></text></g><g><title>twounordered::FirstVec&lt;T&gt;::truncate (1 samples, 0.15%)</title><rect x="36.7069%" y="261" width="0.1511%" height="15" fill="rgb(222,56,52)"/><text x="36.9569%" y="271.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.15%)</title><rect x="36.7069%" y="245" width="0.1511%" height="15" fill="rgb(245,217,50)"/><text x="36.9569%" y="255.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.15%)</title><rect x="36.7069%" y="229" width="0.1511%" height="15" fill="rgb(213,201,24)"/><text x="36.9569%" y="239.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (2 samples, 0.30%)</title><rect x="36.8580%" y="261" width="0.3021%" height="15" fill="rgb(248,116,28)"/><text x="37.1080%" y="271.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (2 samples, 0.30%)</title><rect x="37.1601%" y="261" width="0.3021%" height="15" fill="rgb(219,72,43)"/><text x="37.4101%" y="271.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (2 samples, 0.30%)</title><rect x="37.1601%" y="245" width="0.3021%" height="15" fill="rgb(209,138,14)"/><text x="37.4101%" y="255.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (2 samples, 0.30%)</title><rect x="37.1601%" y="229" width="0.3021%" height="15" fill="rgb(222,18,33)"/><text x="37.4101%" y="239.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (2 samples, 0.30%)</title><rect x="37.1601%" y="213" width="0.3021%" height="15" fill="rgb(213,199,7)"/><text x="37.4101%" y="223.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (5 samples, 0.76%)</title><rect x="36.8580%" y="277" width="0.7553%" height="15" fill="rgb(250,110,10)"/><text x="37.1080%" y="287.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.15%)</title><rect x="37.4622%" y="261" width="0.1511%" height="15" fill="rgb(248,123,6)"/><text x="37.7122%" y="271.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (9 samples, 1.36%)</title><rect x="36.4048%" y="293" width="1.3595%" height="15" fill="rgb(206,91,31)"/><text x="36.6548%" y="303.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.15%)</title><rect x="37.6133%" y="277" width="0.1511%" height="15" fill="rgb(211,154,13)"/><text x="37.8633%" y="287.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (40 samples, 6.04%)</title><rect x="31.8731%" y="341" width="6.0423%" height="15" fill="rgb(225,148,7)"/><text x="32.1231%" y="351.50">broccoli..</text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (16 samples, 2.42%)</title><rect x="35.4985%" y="325" width="2.4169%" height="15" fill="rgb(220,160,43)"/><text x="35.7485%" y="335.50">br..</text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (16 samples, 2.42%)</title><rect x="35.4985%" y="309" width="2.4169%" height="15" fill="rgb(213,52,39)"/><text x="35.7485%" y="319.50">br..</text></g><g><title>twounordered::SecondVec&lt;T&gt;::push (1 samples, 0.15%)</title><rect x="37.7644%" y="293" width="0.1511%" height="15" fill="rgb(243,137,7)"/><text x="38.0144%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.15%)</title><rect x="37.7644%" y="277" width="0.1511%" height="15" fill="rgb(230,79,13)"/><text x="38.0144%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (3 samples, 0.45%)</title><rect x="37.9154%" y="309" width="0.4532%" height="15" fill="rgb(247,105,23)"/><text x="38.1654%" y="319.50"></text></g><g><title>core::ptr::write (2 samples, 0.30%)</title><rect x="38.0665%" y="293" width="0.3021%" height="15" fill="rgb(223,179,41)"/><text x="38.3165%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as twounordered::RetainMutUnordered&lt;T&gt;&gt;::truncate (1 samples, 0.15%)</title><rect x="39.7281%" y="293" width="0.1511%" height="15" fill="rgb(218,9,34)"/><text x="39.9781%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::truncate (1 samples, 0.15%)</title><rect x="39.7281%" y="277" width="0.1511%" height="15" fill="rgb(222,106,8)"/><text x="39.9781%" y="287.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (8 samples, 1.21%)</title><rect x="40.0302%" y="277" width="1.2085%" height="15" fill="rgb(211,220,0)"/><text x="40.2802%" y="287.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (4 samples, 0.60%)</title><rect x="40.6344%" y="261" width="0.6042%" height="15" fill="rgb(229,52,16)"/><text x="40.8844%" y="271.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (4 samples, 0.60%)</title><rect x="40.6344%" y="245" width="0.6042%" height="15" fill="rgb(212,155,18)"/><text x="40.8844%" y="255.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (4 samples, 0.60%)</title><rect x="40.6344%" y="229" width="0.6042%" height="15" fill="rgb(242,21,14)"/><text x="40.8844%" y="239.50"></text></g><g><title>broccoli::query::colfind::oned::find::{{closure}} (11 samples, 1.66%)</title><rect x="39.8792%" y="293" width="1.6616%" height="15" fill="rgb(222,19,48)"/><text x="40.1292%" y="303.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (2 samples, 0.30%)</title><rect x="41.2387%" y="277" width="0.3021%" height="15" fill="rgb(232,45,27)"/><text x="41.4887%" y="287.50"></text></g><g><title>broccoli::query::colfind::oned::find_2d (25 samples, 3.78%)</title><rect x="37.9154%" y="341" width="3.7764%" height="15" fill="rgb(249,103,42)"/><text x="38.1654%" y="351.50">broc..</text></g><g><title>broccoli::query::colfind::oned::find (25 samples, 3.78%)</title><rect x="37.9154%" y="325" width="3.7764%" height="15" fill="rgb(246,81,33)"/><text x="38.1654%" y="335.50">broc..</text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (22 samples, 3.32%)</title><rect x="38.3686%" y="309" width="3.3233%" height="15" fill="rgb(252,33,42)"/><text x="38.6186%" y="319.50">two..</text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.15%)</title><rect x="41.5408%" y="293" width="0.1511%" height="15" fill="rgb(209,212,41)"/><text x="41.7908%" y="303.50"></text></g><g><title>core::ptr::swap (1 samples, 0.15%)</title><rect x="41.5408%" y="277" width="0.1511%" height="15" fill="rgb(207,154,6)"/><text x="41.7908%" y="287.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.15%)</title><rect x="41.5408%" y="261" width="0.1511%" height="15" fill="rgb(223,64,47)"/><text x="41.7908%" y="271.50"></text></g><g><title>&lt;twounordered::FirstVec&lt;T&gt; as twounordered::RetainMutUnordered&lt;T&gt;&gt;::as_slice_mut (2 samples, 0.30%)</title><rect x="41.9940%" y="293" width="0.3021%" height="15" fill="rgb(211,161,38)"/><text x="42.2440%" y="303.50"></text></g><g><title>twounordered::FirstVec&lt;T&gt;::as_slice_mut (2 samples, 0.30%)</title><rect x="41.9940%" y="277" width="0.3021%" height="15" fill="rgb(219,138,40)"/><text x="42.2440%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1 samples, 0.15%)</title><rect x="42.1450%" y="261" width="0.1511%" height="15" fill="rgb(241,228,46)"/><text x="42.3950%" y="271.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1 samples, 0.15%)</title><rect x="42.1450%" y="245" width="0.1511%" height="15" fill="rgb(223,209,38)"/><text x="42.3950%" y="255.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.15%)</title><rect x="42.1450%" y="229" width="0.1511%" height="15" fill="rgb(236,164,45)"/><text x="42.3950%" y="239.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.15%)</title><rect x="42.1450%" y="213" width="0.1511%" height="15" fill="rgb(231,15,5)"/><text x="42.3950%" y="223.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (2 samples, 0.30%)</title><rect x="42.7492%" y="277" width="0.3021%" height="15" fill="rgb(252,35,15)"/><text x="42.9992%" y="287.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (5 samples, 0.76%)</title><rect x="43.5045%" y="261" width="0.7553%" height="15" fill="rgb(248,181,18)"/><text x="43.7545%" y="271.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (5 samples, 0.76%)</title><rect x="43.5045%" y="245" width="0.7553%" height="15" fill="rgb(233,39,42)"/><text x="43.7545%" y="255.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (5 samples, 0.76%)</title><rect x="43.5045%" y="229" width="0.7553%" height="15" fill="rgb(238,110,33)"/><text x="43.7545%" y="239.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (17 samples, 2.57%)</title><rect x="41.8429%" y="309" width="2.5680%" height="15" fill="rgb(233,195,10)"/><text x="42.0929%" y="319.50">tw..</text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (14 samples, 2.11%)</title><rect x="42.2961%" y="293" width="2.1148%" height="15" fill="rgb(254,105,3)"/><text x="42.5461%" y="303.50">b..</text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (9 samples, 1.36%)</title><rect x="43.0514%" y="277" width="1.3595%" height="15" fill="rgb(221,225,9)"/><text x="43.3014%" y="287.50"></text></g><g><title>axgeom::range::Range&lt;T&gt;::intersects (1 samples, 0.15%)</title><rect x="44.2598%" y="261" width="0.1511%" height="15" fill="rgb(224,227,45)"/><text x="44.5098%" y="271.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::le (1 samples, 0.15%)</title><rect x="44.2598%" y="245" width="0.1511%" height="15" fill="rgb(229,198,43)"/><text x="44.5098%" y="255.50"></text></g><g><title>broccoli::query::colfind::inner::ColFindRecurser&lt;T,K,S&gt;::recurse_seq (240 samples, 36.25%)</title><rect x="8.3082%" y="357" width="36.2538%" height="15" fill="rgb(206,209,35)"/><text x="8.5582%" y="367.50">broccoli::query::colfind::inner::ColFindRecurser&lt;T,K,S&gt;::re..</text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (19 samples, 2.87%)</title><rect x="41.6918%" y="341" width="2.8701%" height="15" fill="rgb(245,195,53)"/><text x="41.9418%" y="351.50">br..</text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (19 samples, 2.87%)</title><rect x="41.6918%" y="325" width="2.8701%" height="15" fill="rgb(240,92,26)"/><text x="41.9418%" y="335.50">br..</text></g><g><title>twounordered::SecondVec&lt;T&gt;::push (1 samples, 0.15%)</title><rect x="44.4109%" y="309" width="0.1511%" height="15" fill="rgb(207,40,23)"/><text x="44.6609%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.15%)</title><rect x="44.4109%" y="293" width="0.1511%" height="15" fill="rgb(223,111,35)"/><text x="44.6609%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::as_mut_ptr (1 samples, 0.15%)</title><rect x="44.4109%" y="277" width="0.1511%" height="15" fill="rgb(229,147,28)"/><text x="44.6609%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.15%)</title><rect x="44.4109%" y="261" width="0.1511%" height="15" fill="rgb(211,29,28)"/><text x="44.6609%" y="271.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.60%)</title><rect x="44.5619%" y="309" width="0.6042%" height="15" fill="rgb(228,72,33)"/><text x="44.8119%" y="319.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.60%)</title><rect x="44.5619%" y="293" width="0.6042%" height="15" fill="rgb(205,214,31)"/><text x="44.8119%" y="303.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (5 samples, 0.76%)</title><rect x="45.1662%" y="309" width="0.7553%" height="15" fill="rgb(224,111,15)"/><text x="45.4162%" y="319.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (4 samples, 0.60%)</title><rect x="45.3172%" y="293" width="0.6042%" height="15" fill="rgb(253,21,26)"/><text x="45.5672%" y="303.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (4 samples, 0.60%)</title><rect x="45.3172%" y="277" width="0.6042%" height="15" fill="rgb(245,139,43)"/><text x="45.5672%" y="287.50"></text></g><g><title>data_gen::main::{{closure}}::{{closure}} (4 samples, 0.60%)</title><rect x="45.3172%" y="261" width="0.6042%" height="15" fill="rgb(252,170,7)"/><text x="45.5672%" y="271.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (10 samples, 1.51%)</title><rect x="44.5619%" y="325" width="1.5106%" height="15" fill="rgb(231,118,14)"/><text x="44.8119%" y="335.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::le (1 samples, 0.15%)</title><rect x="45.9215%" y="309" width="0.1511%" height="15" fill="rgb(238,83,0)"/><text x="46.1715%" y="319.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.15%)</title><rect x="46.3746%" y="309" width="0.1511%" height="15" fill="rgb(221,39,39)"/><text x="46.6246%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.15%)</title><rect x="46.3746%" y="293" width="0.1511%" height="15" fill="rgb(222,119,46)"/><text x="46.6246%" y="303.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.15%)</title><rect x="46.3746%" y="277" width="0.1511%" height="15" fill="rgb(222,165,49)"/><text x="46.6246%" y="287.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (14 samples, 2.11%)</title><rect x="44.5619%" y="341" width="2.1148%" height="15" fill="rgb(219,113,52)"/><text x="44.8119%" y="351.50">&lt;..</text></g><g><title>broccoli::query::tools::get_section_mut (4 samples, 0.60%)</title><rect x="46.0725%" y="325" width="0.6042%" height="15" fill="rgb(214,7,15)"/><text x="46.3225%" y="335.50"></text></g><g><title>broccoli::pmut::PMut&lt;[T]&gt;::truncate_from (1 samples, 0.15%)</title><rect x="46.5257%" y="309" width="0.1511%" height="15" fill="rgb(235,32,4)"/><text x="46.7757%" y="319.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1 samples, 0.15%)</title><rect x="46.5257%" y="293" width="0.1511%" height="15" fill="rgb(238,90,54)"/><text x="46.7757%" y="303.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.15%)</title><rect x="46.5257%" y="277" width="0.1511%" height="15" fill="rgb(213,208,19)"/><text x="46.7757%" y="287.50"></text></g><g><title>&lt;broccoli::node::vistr_mut::VistrMut&lt;N&gt; as compt::Visitor&gt;::next (1 samples, 0.15%)</title><rect x="46.6767%" y="325" width="0.1511%" height="15" fill="rgb(233,156,4)"/><text x="46.9267%" y="335.50"></text></g><g><title>&lt;compt::dfs_order::VistrMut&lt;T,compt::dfs_order::PreOrder&gt; as compt::Visitor&gt;::next (1 samples, 0.15%)</title><rect x="46.6767%" y="309" width="0.1511%" height="15" fill="rgb(207,194,5)"/><text x="46.9267%" y="319.50"></text></g><g><title>compt::dfs_order::vistr_mut_next (1 samples, 0.15%)</title><rect x="46.6767%" y="293" width="0.1511%" height="15" fill="rgb(206,111,30)"/><text x="46.9267%" y="303.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.15%)</title><rect x="47.1299%" y="293" width="0.1511%" height="15" fill="rgb(243,70,54)"/><text x="47.3799%" y="303.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.15%)</title><rect x="47.1299%" y="277" width="0.1511%" height="15" fill="rgb(242,28,8)"/><text x="47.3799%" y="287.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (4 samples, 0.60%)</title><rect x="46.8278%" y="325" width="0.6042%" height="15" fill="rgb(219,106,18)"/><text x="47.0778%" y="335.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (4 samples, 0.60%)</title><rect x="46.8278%" y="309" width="0.6042%" height="15" fill="rgb(244,222,10)"/><text x="47.0778%" y="319.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.15%)</title><rect x="47.2810%" y="293" width="0.1511%" height="15" fill="rgb(236,179,52)"/><text x="47.5310%" y="303.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (2 samples, 0.30%)</title><rect x="47.4320%" y="325" width="0.3021%" height="15" fill="rgb(213,23,39)"/><text x="47.6820%" y="335.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (2 samples, 0.30%)</title><rect x="47.4320%" y="309" width="0.3021%" height="15" fill="rgb(238,48,10)"/><text x="47.6820%" y="319.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (2 samples, 0.30%)</title><rect x="47.4320%" y="293" width="0.3021%" height="15" fill="rgb(251,196,23)"/><text x="47.6820%" y="303.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (2 samples, 0.30%)</title><rect x="47.4320%" y="277" width="0.3021%" height="15" fill="rgb(250,152,24)"/><text x="47.6820%" y="287.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (2 samples, 0.30%)</title><rect x="47.4320%" y="261" width="0.3021%" height="15" fill="rgb(209,150,17)"/><text x="47.6820%" y="271.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (1 samples, 0.15%)</title><rect x="47.5831%" y="245" width="0.1511%" height="15" fill="rgb(234,202,34)"/><text x="47.8331%" y="255.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (1 samples, 0.15%)</title><rect x="47.5831%" y="229" width="0.1511%" height="15" fill="rgb(253,148,53)"/><text x="47.8331%" y="239.50"></text></g><g><title>broccoli::query::colfind::node_handle::DestructuredNodeLeaf&lt;T,AnchorAxis&gt;::new (1 samples, 0.15%)</title><rect x="47.7341%" y="325" width="0.1511%" height="15" fill="rgb(218,129,16)"/><text x="47.9841%" y="335.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (1 samples, 0.15%)</title><rect x="47.7341%" y="309" width="0.1511%" height="15" fill="rgb(216,85,19)"/><text x="47.9841%" y="319.50"></text></g><g><title>twounordered::FirstVec&lt;T&gt;::push (2 samples, 0.30%)</title><rect x="47.8852%" y="293" width="0.3021%" height="15" fill="rgb(235,228,7)"/><text x="48.1352%" y="303.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (2 samples, 0.30%)</title><rect x="47.8852%" y="277" width="0.3021%" height="15" fill="rgb(245,175,0)"/><text x="48.1352%" y="287.50"></text></g><g><title>core::ptr::swap (2 samples, 0.30%)</title><rect x="47.8852%" y="261" width="0.3021%" height="15" fill="rgb(208,168,36)"/><text x="48.1352%" y="271.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.30%)</title><rect x="47.8852%" y="245" width="0.3021%" height="15" fill="rgb(246,171,24)"/><text x="48.1352%" y="255.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (3 samples, 0.45%)</title><rect x="48.3384%" y="277" width="0.4532%" height="15" fill="rgb(215,142,24)"/><text x="48.5884%" y="287.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.15%)</title><rect x="48.6405%" y="261" width="0.1511%" height="15" fill="rgb(250,187,7)"/><text x="48.8905%" y="271.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (5 samples, 0.76%)</title><rect x="48.1873%" y="293" width="0.7553%" height="15" fill="rgb(228,66,33)"/><text x="48.4373%" y="303.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.15%)</title><rect x="48.7915%" y="277" width="0.1511%" height="15" fill="rgb(234,215,21)"/><text x="49.0415%" y="287.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (16 samples, 2.42%)</title><rect x="46.6767%" y="341" width="2.4169%" height="15" fill="rgb(222,191,20)"/><text x="46.9267%" y="351.50">br..</text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (8 samples, 1.21%)</title><rect x="47.8852%" y="325" width="1.2085%" height="15" fill="rgb(245,79,54)"/><text x="48.1352%" y="335.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (8 samples, 1.21%)</title><rect x="47.8852%" y="309" width="1.2085%" height="15" fill="rgb(240,10,37)"/><text x="48.1352%" y="319.50"></text></g><g><title>twounordered::SecondVec&lt;T&gt;::push (1 samples, 0.15%)</title><rect x="48.9426%" y="293" width="0.1511%" height="15" fill="rgb(214,192,32)"/><text x="49.1926%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.15%)</title><rect x="48.9426%" y="277" width="0.1511%" height="15" fill="rgb(209,36,54)"/><text x="49.1926%" y="287.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.15%)</title><rect x="49.0937%" y="309" width="0.1511%" height="15" fill="rgb(220,10,11)"/><text x="49.3437%" y="319.50"></text></g><g><title>twounordered::FirstVec&lt;T&gt;::push (3 samples, 0.45%)</title><rect x="49.2447%" y="309" width="0.4532%" height="15" fill="rgb(221,106,17)"/><text x="49.4947%" y="319.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (2 samples, 0.30%)</title><rect x="49.3958%" y="293" width="0.3021%" height="15" fill="rgb(251,142,44)"/><text x="49.6458%" y="303.50"></text></g><g><title>core::ptr::swap (2 samples, 0.30%)</title><rect x="49.3958%" y="277" width="0.3021%" height="15" fill="rgb(238,13,15)"/><text x="49.6458%" y="287.50"></text></g><g><title>core::intrinsics::copy (2 samples, 0.30%)</title><rect x="49.3958%" y="261" width="0.3021%" height="15" fill="rgb(208,107,27)"/><text x="49.6458%" y="271.50"></text></g><g><title>&lt;twounordered::FirstVec&lt;T&gt; as twounordered::RetainMutUnordered&lt;T&gt;&gt;::truncate (2 samples, 0.30%)</title><rect x="50.0000%" y="293" width="0.3021%" height="15" fill="rgb(205,136,37)"/><text x="50.2500%" y="303.50"></text></g><g><title>twounordered::FirstVec&lt;T&gt;::truncate (2 samples, 0.30%)</title><rect x="50.0000%" y="277" width="0.3021%" height="15" fill="rgb(250,205,27)"/><text x="50.2500%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::set_len (1 samples, 0.15%)</title><rect x="50.1511%" y="261" width="0.1511%" height="15" fill="rgb(210,80,43)"/><text x="50.4011%" y="271.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (2 samples, 0.30%)</title><rect x="50.4532%" y="277" width="0.3021%" height="15" fill="rgb(247,160,36)"/><text x="50.7032%" y="287.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (3 samples, 0.45%)</title><rect x="50.7553%" y="277" width="0.4532%" height="15" fill="rgb(234,13,49)"/><text x="51.0053%" y="287.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (3 samples, 0.45%)</title><rect x="50.7553%" y="261" width="0.4532%" height="15" fill="rgb(234,122,0)"/><text x="51.0053%" y="271.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (3 samples, 0.45%)</title><rect x="50.7553%" y="245" width="0.4532%" height="15" fill="rgb(207,146,38)"/><text x="51.0053%" y="255.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (3 samples, 0.45%)</title><rect x="50.7553%" y="229" width="0.4532%" height="15" fill="rgb(207,177,25)"/><text x="51.0053%" y="239.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (11 samples, 1.66%)</title><rect x="49.6979%" y="309" width="1.6616%" height="15" fill="rgb(211,178,42)"/><text x="49.9479%" y="319.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (7 samples, 1.06%)</title><rect x="50.3021%" y="293" width="1.0574%" height="15" fill="rgb(230,69,54)"/><text x="50.5521%" y="303.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.15%)</title><rect x="51.2085%" y="277" width="0.1511%" height="15" fill="rgb(214,135,41)"/><text x="51.4585%" y="287.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (46 samples, 6.95%)</title><rect x="44.5619%" y="357" width="6.9486%" height="15" fill="rgb(237,67,25)"/><text x="44.8119%" y="367.50">broccoli:..</text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (16 samples, 2.42%)</title><rect x="49.0937%" y="341" width="2.4169%" height="15" fill="rgb(222,189,50)"/><text x="49.3437%" y="351.50">br..</text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (16 samples, 2.42%)</title><rect x="49.0937%" y="325" width="2.4169%" height="15" fill="rgb(245,148,34)"/><text x="49.3437%" y="335.50">br..</text></g><g><title>twounordered::SecondVec&lt;T&gt;::push (1 samples, 0.15%)</title><rect x="51.3595%" y="309" width="0.1511%" height="15" fill="rgb(222,29,6)"/><text x="51.6095%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.15%)</title><rect x="51.3595%" y="293" width="0.1511%" height="15" fill="rgb(221,189,43)"/><text x="51.6095%" y="303.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (2 samples, 0.30%)</title><rect x="52.8701%" y="293" width="0.3021%" height="15" fill="rgb(207,36,27)"/><text x="53.1201%" y="303.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (6 samples, 0.91%)</title><rect x="53.1722%" y="293" width="0.9063%" height="15" fill="rgb(217,90,24)"/><text x="53.4222%" y="303.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (3 samples, 0.45%)</title><rect x="53.6254%" y="277" width="0.4532%" height="15" fill="rgb(224,66,35)"/><text x="53.8754%" y="287.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (3 samples, 0.45%)</title><rect x="53.6254%" y="261" width="0.4532%" height="15" fill="rgb(221,13,50)"/><text x="53.8754%" y="271.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (3 samples, 0.45%)</title><rect x="53.6254%" y="245" width="0.4532%" height="15" fill="rgb(236,68,49)"/><text x="53.8754%" y="255.50"></text></g><g><title>broccoli::query::colfind::oned::find_2d (19 samples, 2.87%)</title><rect x="51.5106%" y="357" width="2.8701%" height="15" fill="rgb(229,146,28)"/><text x="51.7606%" y="367.50">br..</text></g><g><title>broccoli::query::colfind::oned::find (19 samples, 2.87%)</title><rect x="51.5106%" y="341" width="2.8701%" height="15" fill="rgb(225,31,38)"/><text x="51.7606%" y="351.50">br..</text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (19 samples, 2.87%)</title><rect x="51.5106%" y="325" width="2.8701%" height="15" fill="rgb(250,208,3)"/><text x="51.7606%" y="335.50">tw..</text></g><g><title>broccoli::query::colfind::oned::find::{{closure}} (12 samples, 1.81%)</title><rect x="52.5680%" y="309" width="1.8127%" height="15" fill="rgb(246,54,23)"/><text x="52.8180%" y="319.50">b..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (2 samples, 0.30%)</title><rect x="54.0785%" y="293" width="0.3021%" height="15" fill="rgb(243,76,11)"/><text x="54.3285%" y="303.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::lt (1 samples, 0.15%)</title><rect x="54.3807%" y="325" width="0.1511%" height="15" fill="rgb(245,21,50)"/><text x="54.6307%" y="335.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.15%)</title><rect x="54.5317%" y="325" width="0.1511%" height="15" fill="rgb(228,9,43)"/><text x="54.7817%" y="335.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (2 samples, 0.30%)</title><rect x="55.1360%" y="293" width="0.3021%" height="15" fill="rgb(208,100,47)"/><text x="55.3860%" y="303.50"></text></g><g><title>broccoli::query::colfind::inner::ColFindRecurser&lt;T,K,S&gt;::recurse_seq (327 samples, 49.40%)</title><rect x="6.7976%" y="373" width="49.3958%" height="15" fill="rgb(232,26,8)"/><text x="7.0476%" y="383.50">broccoli::query::colfind::inner::ColFindRecurser&lt;T,K,S&gt;::recurse_seq</text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (12 samples, 1.81%)</title><rect x="54.3807%" y="357" width="1.8127%" height="15" fill="rgb(216,166,38)"/><text x="54.6307%" y="367.50">b..</text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (12 samples, 1.81%)</title><rect x="54.3807%" y="341" width="1.8127%" height="15" fill="rgb(251,202,51)"/><text x="54.6307%" y="351.50">b..</text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (10 samples, 1.51%)</title><rect x="54.6828%" y="325" width="1.5106%" height="15" fill="rgb(254,216,34)"/><text x="54.9328%" y="335.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (8 samples, 1.21%)</title><rect x="54.9849%" y="309" width="1.2085%" height="15" fill="rgb(251,32,27)"/><text x="55.2349%" y="319.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (5 samples, 0.76%)</title><rect x="55.4381%" y="293" width="0.7553%" height="15" fill="rgb(208,127,28)"/><text x="55.6881%" y="303.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (5 samples, 0.76%)</title><rect x="55.4381%" y="277" width="0.7553%" height="15" fill="rgb(224,137,22)"/><text x="55.6881%" y="287.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (5 samples, 0.76%)</title><rect x="55.4381%" y="261" width="0.7553%" height="15" fill="rgb(254,70,32)"/><text x="55.6881%" y="271.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (5 samples, 0.76%)</title><rect x="55.4381%" y="245" width="0.7553%" height="15" fill="rgb(229,75,37)"/><text x="55.6881%" y="255.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.30%)</title><rect x="56.1934%" y="325" width="0.3021%" height="15" fill="rgb(252,64,23)"/><text x="56.4434%" y="335.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.30%)</title><rect x="56.1934%" y="309" width="0.3021%" height="15" fill="rgb(232,162,48)"/><text x="56.4434%" y="319.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (5 samples, 0.76%)</title><rect x="56.1934%" y="341" width="0.7553%" height="15" fill="rgb(246,160,12)"/><text x="56.4434%" y="351.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (3 samples, 0.45%)</title><rect x="56.4955%" y="325" width="0.4532%" height="15" fill="rgb(247,166,0)"/><text x="56.7455%" y="335.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.15%)</title><rect x="56.7976%" y="309" width="0.1511%" height="15" fill="rgb(249,219,21)"/><text x="57.0476%" y="319.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (1 samples, 0.15%)</title><rect x="56.7976%" y="293" width="0.1511%" height="15" fill="rgb(205,209,3)"/><text x="57.0476%" y="303.50"></text></g><g><title>data_gen::main::{{closure}}::{{closure}} (1 samples, 0.15%)</title><rect x="56.7976%" y="277" width="0.1511%" height="15" fill="rgb(243,44,1)"/><text x="57.0476%" y="287.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (7 samples, 1.06%)</title><rect x="56.1934%" y="357" width="1.0574%" height="15" fill="rgb(206,159,16)"/><text x="56.4434%" y="367.50"></text></g><g><title>broccoli::query::tools::get_section_mut (2 samples, 0.30%)</title><rect x="56.9486%" y="341" width="0.3021%" height="15" fill="rgb(244,77,30)"/><text x="57.1986%" y="351.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (1 samples, 0.15%)</title><rect x="57.4018%" y="325" width="0.1511%" height="15" fill="rgb(218,69,12)"/><text x="57.6518%" y="335.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (1 samples, 0.15%)</title><rect x="57.4018%" y="309" width="0.1511%" height="15" fill="rgb(212,87,7)"/><text x="57.6518%" y="319.50"></text></g><g><title>twounordered::FirstVec&lt;T&gt;::push (1 samples, 0.15%)</title><rect x="57.4018%" y="293" width="0.1511%" height="15" fill="rgb(245,114,25)"/><text x="57.6518%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.15%)</title><rect x="57.4018%" y="277" width="0.1511%" height="15" fill="rgb(210,61,42)"/><text x="57.6518%" y="287.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.15%)</title><rect x="57.7039%" y="309" width="0.1511%" height="15" fill="rgb(211,52,33)"/><text x="57.9539%" y="319.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.15%)</title><rect x="57.7039%" y="293" width="0.1511%" height="15" fill="rgb(234,58,33)"/><text x="57.9539%" y="303.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (4 samples, 0.60%)</title><rect x="57.5529%" y="325" width="0.6042%" height="15" fill="rgb(220,115,36)"/><text x="57.8029%" y="335.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (2 samples, 0.30%)</title><rect x="57.8550%" y="309" width="0.3021%" height="15" fill="rgb(243,153,54)"/><text x="58.1050%" y="319.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.15%)</title><rect x="58.0060%" y="293" width="0.1511%" height="15" fill="rgb(251,47,18)"/><text x="58.2560%" y="303.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (1 samples, 0.15%)</title><rect x="58.0060%" y="277" width="0.1511%" height="15" fill="rgb(242,102,42)"/><text x="58.2560%" y="287.50"></text></g><g><title>data_gen::main::{{closure}}::{{closure}} (1 samples, 0.15%)</title><rect x="58.0060%" y="261" width="0.1511%" height="15" fill="rgb(234,31,38)"/><text x="58.2560%" y="271.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (6 samples, 0.91%)</title><rect x="57.4018%" y="341" width="0.9063%" height="15" fill="rgb(221,117,51)"/><text x="57.6518%" y="351.50"></text></g><g><title>broccoli::query::tools::get_section_mut (1 samples, 0.15%)</title><rect x="58.1571%" y="325" width="0.1511%" height="15" fill="rgb(212,20,18)"/><text x="58.4071%" y="335.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (1 samples, 0.15%)</title><rect x="58.3082%" y="309" width="0.1511%" height="15" fill="rgb(245,133,36)"/><text x="58.5582%" y="319.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (1 samples, 0.15%)</title><rect x="58.3082%" y="293" width="0.1511%" height="15" fill="rgb(212,6,19)"/><text x="58.5582%" y="303.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (1 samples, 0.15%)</title><rect x="58.3082%" y="277" width="0.1511%" height="15" fill="rgb(218,1,36)"/><text x="58.5582%" y="287.50"></text></g><g><title>&lt;twounordered::SecondVec&lt;T&gt; as twounordered::RetainMutUnordered&lt;T&gt;&gt;::as_slice_mut (1 samples, 0.15%)</title><rect x="58.3082%" y="261" width="0.1511%" height="15" fill="rgb(246,84,54)"/><text x="58.5582%" y="271.50"></text></g><g><title>twounordered::SecondVec&lt;T&gt;::as_slice_mut (1 samples, 0.15%)</title><rect x="58.3082%" y="245" width="0.1511%" height="15" fill="rgb(242,110,6)"/><text x="58.5582%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1 samples, 0.15%)</title><rect x="58.3082%" y="229" width="0.1511%" height="15" fill="rgb(214,47,5)"/><text x="58.5582%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.15%)</title><rect x="58.3082%" y="213" width="0.1511%" height="15" fill="rgb(218,159,25)"/><text x="58.5582%" y="223.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (4 samples, 0.60%)</title><rect x="58.3082%" y="325" width="0.6042%" height="15" fill="rgb(215,211,28)"/><text x="58.5582%" y="335.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (3 samples, 0.45%)</title><rect x="58.4592%" y="309" width="0.4532%" height="15" fill="rgb(238,59,32)"/><text x="58.7092%" y="319.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.15%)</title><rect x="58.7613%" y="293" width="0.1511%" height="15" fill="rgb(226,82,3)"/><text x="59.0113%" y="303.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.15%)</title><rect x="58.7613%" y="277" width="0.1511%" height="15" fill="rgb(240,164,32)"/><text x="59.0113%" y="287.50"></text></g><g><title>twounordered::FirstVec&lt;T&gt;::push (1 samples, 0.15%)</title><rect x="58.9124%" y="261" width="0.1511%" height="15" fill="rgb(232,46,7)"/><text x="59.1624%" y="271.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.15%)</title><rect x="58.9124%" y="245" width="0.1511%" height="15" fill="rgb(229,129,53)"/><text x="59.1624%" y="255.50"></text></g><g><title>core::ptr::swap (1 samples, 0.15%)</title><rect x="58.9124%" y="229" width="0.1511%" height="15" fill="rgb(234,188,29)"/><text x="59.1624%" y="239.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.15%)</title><rect x="58.9124%" y="213" width="0.1511%" height="15" fill="rgb(246,141,4)"/><text x="59.1624%" y="223.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (6 samples, 0.91%)</title><rect x="58.3082%" y="341" width="0.9063%" height="15" fill="rgb(229,23,39)"/><text x="58.5582%" y="351.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (2 samples, 0.30%)</title><rect x="58.9124%" y="325" width="0.3021%" height="15" fill="rgb(206,12,3)"/><text x="59.1624%" y="335.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (2 samples, 0.30%)</title><rect x="58.9124%" y="309" width="0.3021%" height="15" fill="rgb(252,226,20)"/><text x="59.1624%" y="319.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (2 samples, 0.30%)</title><rect x="58.9124%" y="293" width="0.3021%" height="15" fill="rgb(216,123,35)"/><text x="59.1624%" y="303.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (2 samples, 0.30%)</title><rect x="58.9124%" y="277" width="0.3021%" height="15" fill="rgb(212,68,40)"/><text x="59.1624%" y="287.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (1 samples, 0.15%)</title><rect x="59.0634%" y="261" width="0.1511%" height="15" fill="rgb(254,125,32)"/><text x="59.3134%" y="271.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (1 samples, 0.15%)</title><rect x="59.0634%" y="245" width="0.1511%" height="15" fill="rgb(253,97,22)"/><text x="59.3134%" y="255.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.15%)</title><rect x="59.0634%" y="229" width="0.1511%" height="15" fill="rgb(241,101,14)"/><text x="59.3134%" y="239.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::lt (1 samples, 0.15%)</title><rect x="59.3656%" y="309" width="0.1511%" height="15" fill="rgb(238,103,29)"/><text x="59.6156%" y="319.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (3 samples, 0.45%)</title><rect x="59.5166%" y="293" width="0.4532%" height="15" fill="rgb(233,195,47)"/><text x="59.7666%" y="303.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.15%)</title><rect x="59.8187%" y="277" width="0.1511%" height="15" fill="rgb(246,218,30)"/><text x="60.0687%" y="287.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.15%)</title><rect x="59.8187%" y="261" width="0.1511%" height="15" fill="rgb(219,145,47)"/><text x="60.0687%" y="271.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (1 samples, 0.15%)</title><rect x="59.8187%" y="245" width="0.1511%" height="15" fill="rgb(243,12,26)"/><text x="60.0687%" y="255.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.15%)</title><rect x="59.8187%" y="229" width="0.1511%" height="15" fill="rgb(214,87,16)"/><text x="60.0687%" y="239.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (19 samples, 2.87%)</title><rect x="57.2508%" y="357" width="2.8701%" height="15" fill="rgb(208,99,42)"/><text x="57.5008%" y="367.50">br..</text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (6 samples, 0.91%)</title><rect x="59.2145%" y="341" width="0.9063%" height="15" fill="rgb(253,99,2)"/><text x="59.4645%" y="351.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (6 samples, 0.91%)</title><rect x="59.2145%" y="325" width="0.9063%" height="15" fill="rgb(220,168,23)"/><text x="59.4645%" y="335.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (4 samples, 0.60%)</title><rect x="59.5166%" y="309" width="0.6042%" height="15" fill="rgb(242,38,24)"/><text x="59.7666%" y="319.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.15%)</title><rect x="59.9698%" y="293" width="0.1511%" height="15" fill="rgb(225,182,9)"/><text x="60.2198%" y="303.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (1 samples, 0.15%)</title><rect x="60.1208%" y="325" width="0.1511%" height="15" fill="rgb(243,178,37)"/><text x="60.3708%" y="335.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (1 samples, 0.15%)</title><rect x="60.1208%" y="309" width="0.1511%" height="15" fill="rgb(232,139,19)"/><text x="60.3708%" y="319.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek::{{closure}} (1 samples, 0.15%)</title><rect x="60.1208%" y="293" width="0.1511%" height="15" fill="rgb(225,201,24)"/><text x="60.3708%" y="303.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.15%)</title><rect x="60.1208%" y="277" width="0.1511%" height="15" fill="rgb(221,47,46)"/><text x="60.3708%" y="287.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.15%)</title><rect x="60.1208%" y="261" width="0.1511%" height="15" fill="rgb(249,23,13)"/><text x="60.3708%" y="271.50"></text></g><g><title>&lt;twounordered::FirstVec&lt;T&gt; as twounordered::RetainMutUnordered&lt;T&gt;&gt;::truncate (1 samples, 0.15%)</title><rect x="60.2719%" y="309" width="0.1511%" height="15" fill="rgb(219,9,5)"/><text x="60.5219%" y="319.50"></text></g><g><title>twounordered::FirstVec&lt;T&gt;::truncate (1 samples, 0.15%)</title><rect x="60.2719%" y="293" width="0.1511%" height="15" fill="rgb(254,171,16)"/><text x="60.5219%" y="303.50"></text></g><g><title>&lt;twounordered::SecondVec&lt;T&gt; as twounordered::RetainMutUnordered&lt;T&gt;&gt;::as_slice_mut (1 samples, 0.15%)</title><rect x="60.4230%" y="309" width="0.1511%" height="15" fill="rgb(230,171,20)"/><text x="60.6730%" y="319.50"></text></g><g><title>twounordered::SecondVec&lt;T&gt;::as_slice_mut (1 samples, 0.15%)</title><rect x="60.4230%" y="293" width="0.1511%" height="15" fill="rgb(210,71,41)"/><text x="60.6730%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1 samples, 0.15%)</title><rect x="60.4230%" y="277" width="0.1511%" height="15" fill="rgb(206,173,20)"/><text x="60.6730%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.15%)</title><rect x="60.4230%" y="261" width="0.1511%" height="15" fill="rgb(233,88,34)"/><text x="60.6730%" y="271.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (2 samples, 0.30%)</title><rect x="60.5740%" y="293" width="0.3021%" height="15" fill="rgb(223,209,46)"/><text x="60.8240%" y="303.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (4 samples, 0.60%)</title><rect x="60.5740%" y="309" width="0.6042%" height="15" fill="rgb(250,43,18)"/><text x="60.8240%" y="319.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (2 samples, 0.30%)</title><rect x="60.8761%" y="293" width="0.3021%" height="15" fill="rgb(208,13,10)"/><text x="61.1261%" y="303.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.15%)</title><rect x="61.0272%" y="277" width="0.1511%" height="15" fill="rgb(212,200,36)"/><text x="61.2772%" y="287.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (1 samples, 0.15%)</title><rect x="61.0272%" y="261" width="0.1511%" height="15" fill="rgb(225,90,30)"/><text x="61.2772%" y="271.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.15%)</title><rect x="61.0272%" y="245" width="0.1511%" height="15" fill="rgb(236,182,39)"/><text x="61.2772%" y="255.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (34 samples, 5.14%)</title><rect x="56.1934%" y="373" width="5.1360%" height="15" fill="rgb(212,144,35)"/><text x="56.4434%" y="383.50">brocco..</text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (8 samples, 1.21%)</title><rect x="60.1208%" y="357" width="1.2085%" height="15" fill="rgb(228,63,44)"/><text x="60.3708%" y="367.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (8 samples, 1.21%)</title><rect x="60.1208%" y="341" width="1.2085%" height="15" fill="rgb(228,109,6)"/><text x="60.3708%" y="351.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (7 samples, 1.06%)</title><rect x="60.2719%" y="325" width="1.0574%" height="15" fill="rgb(238,117,24)"/><text x="60.5219%" y="335.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.15%)</title><rect x="61.1782%" y="309" width="0.1511%" height="15" fill="rgb(242,26,26)"/><text x="61.4282%" y="319.50"></text></g><g><title>core::ptr::swap (1 samples, 0.15%)</title><rect x="61.1782%" y="293" width="0.1511%" height="15" fill="rgb(221,92,48)"/><text x="61.4282%" y="303.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.15%)</title><rect x="61.1782%" y="277" width="0.1511%" height="15" fill="rgb(209,209,32)"/><text x="61.4282%" y="287.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (4 samples, 0.60%)</title><rect x="61.7825%" y="293" width="0.6042%" height="15" fill="rgb(221,70,22)"/><text x="62.0325%" y="303.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (4 samples, 0.60%)</title><rect x="61.7825%" y="277" width="0.6042%" height="15" fill="rgb(248,145,5)"/><text x="62.0325%" y="287.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (4 samples, 0.60%)</title><rect x="61.7825%" y="261" width="0.6042%" height="15" fill="rgb(226,116,26)"/><text x="62.0325%" y="271.50"></text></g><g><title>broccoli::query::colfind::oned::find::{{closure}} (5 samples, 0.76%)</title><rect x="61.7825%" y="325" width="0.7553%" height="15" fill="rgb(244,5,17)"/><text x="62.0325%" y="335.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (5 samples, 0.76%)</title><rect x="61.7825%" y="309" width="0.7553%" height="15" fill="rgb(252,159,33)"/><text x="62.0325%" y="319.50"></text></g><g><title>axgeom::range::Range&lt;T&gt;::intersects (1 samples, 0.15%)</title><rect x="62.3867%" y="293" width="0.1511%" height="15" fill="rgb(206,71,0)"/><text x="62.6367%" y="303.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::le (1 samples, 0.15%)</title><rect x="62.3867%" y="277" width="0.1511%" height="15" fill="rgb(233,118,54)"/><text x="62.6367%" y="287.50"></text></g><g><title>broccoli::query::colfind::oned::find_2d (9 samples, 1.36%)</title><rect x="61.3293%" y="373" width="1.3595%" height="15" fill="rgb(234,83,48)"/><text x="61.5793%" y="383.50"></text></g><g><title>broccoli::query::colfind::oned::find (9 samples, 1.36%)</title><rect x="61.3293%" y="357" width="1.3595%" height="15" fill="rgb(228,3,54)"/><text x="61.5793%" y="367.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (9 samples, 1.36%)</title><rect x="61.3293%" y="341" width="1.3595%" height="15" fill="rgb(226,155,13)"/><text x="61.5793%" y="351.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.15%)</title><rect x="62.5378%" y="325" width="0.1511%" height="15" fill="rgb(241,28,37)"/><text x="62.7878%" y="335.50"></text></g><g><title>core::ptr::swap (1 samples, 0.15%)</title><rect x="62.5378%" y="309" width="0.1511%" height="15" fill="rgb(233,93,10)"/><text x="62.7878%" y="319.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.15%)</title><rect x="62.5378%" y="293" width="0.1511%" height="15" fill="rgb(225,113,19)"/><text x="62.7878%" y="303.50"></text></g><g><title>twounordered::FirstVec&lt;T&gt;::push (1 samples, 0.15%)</title><rect x="62.6888%" y="341" width="0.1511%" height="15" fill="rgb(241,2,18)"/><text x="62.9388%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.15%)</title><rect x="62.6888%" y="325" width="0.1511%" height="15" fill="rgb(228,207,21)"/><text x="62.9388%" y="335.50"></text></g><g><title>broccoli::query::colfind::inner::ColFindRecurser&lt;T,K,S&gt;::recurse_seq (379 samples, 57.25%)</title><rect x="6.0423%" y="389" width="57.2508%" height="15" fill="rgb(213,211,35)"/><text x="6.2923%" y="399.50">broccoli::query::colfind::inner::ColFindRecurser&lt;T,K,S&gt;::recurse_seq</text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (4 samples, 0.60%)</title><rect x="62.6888%" y="373" width="0.6042%" height="15" fill="rgb(209,83,10)"/><text x="62.9388%" y="383.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (4 samples, 0.60%)</title><rect x="62.6888%" y="357" width="0.6042%" height="15" fill="rgb(209,164,1)"/><text x="62.9388%" y="367.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (3 samples, 0.45%)</title><rect x="62.8399%" y="341" width="0.4532%" height="15" fill="rgb(213,184,43)"/><text x="63.0899%" y="351.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (1 samples, 0.15%)</title><rect x="63.1420%" y="325" width="0.1511%" height="15" fill="rgb(231,61,34)"/><text x="63.3920%" y="335.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.15%)</title><rect x="63.1420%" y="309" width="0.1511%" height="15" fill="rgb(235,75,3)"/><text x="63.3920%" y="319.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.15%)</title><rect x="63.1420%" y="293" width="0.1511%" height="15" fill="rgb(220,106,47)"/><text x="63.3920%" y="303.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (1 samples, 0.15%)</title><rect x="63.1420%" y="277" width="0.1511%" height="15" fill="rgb(210,196,33)"/><text x="63.3920%" y="287.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.15%)</title><rect x="63.1420%" y="261" width="0.1511%" height="15" fill="rgb(229,154,42)"/><text x="63.3920%" y="271.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (1 samples, 0.15%)</title><rect x="63.2931%" y="357" width="0.1511%" height="15" fill="rgb(228,114,26)"/><text x="63.5431%" y="367.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (1 samples, 0.15%)</title><rect x="63.2931%" y="341" width="0.1511%" height="15" fill="rgb(208,144,1)"/><text x="63.5431%" y="351.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (1 samples, 0.15%)</title><rect x="63.2931%" y="325" width="0.1511%" height="15" fill="rgb(239,112,37)"/><text x="63.5431%" y="335.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.15%)</title><rect x="63.2931%" y="309" width="0.1511%" height="15" fill="rgb(210,96,50)"/><text x="63.5431%" y="319.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (1 samples, 0.15%)</title><rect x="63.4441%" y="357" width="0.1511%" height="15" fill="rgb(222,178,2)"/><text x="63.6941%" y="367.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.15%)</title><rect x="63.4441%" y="341" width="0.1511%" height="15" fill="rgb(226,74,18)"/><text x="63.6941%" y="351.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.15%)</title><rect x="63.4441%" y="325" width="0.1511%" height="15" fill="rgb(225,67,54)"/><text x="63.6941%" y="335.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (1 samples, 0.15%)</title><rect x="63.4441%" y="309" width="0.1511%" height="15" fill="rgb(251,92,32)"/><text x="63.6941%" y="319.50"></text></g><g><title>data_gen::main::{{closure}}::{{closure}} (1 samples, 0.15%)</title><rect x="63.4441%" y="293" width="0.1511%" height="15" fill="rgb(228,149,22)"/><text x="63.6941%" y="303.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (3 samples, 0.45%)</title><rect x="63.2931%" y="373" width="0.4532%" height="15" fill="rgb(243,54,13)"/><text x="63.5431%" y="383.50"></text></g><g><title>broccoli::query::tools::get_section_mut (1 samples, 0.15%)</title><rect x="63.5952%" y="357" width="0.1511%" height="15" fill="rgb(243,180,28)"/><text x="63.8452%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::ge (1 samples, 0.15%)</title><rect x="63.5952%" y="341" width="0.1511%" height="15" fill="rgb(208,167,24)"/><text x="63.8452%" y="351.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (1 samples, 0.15%)</title><rect x="63.7462%" y="341" width="0.1511%" height="15" fill="rgb(245,73,45)"/><text x="63.9962%" y="351.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (1 samples, 0.15%)</title><rect x="63.7462%" y="325" width="0.1511%" height="15" fill="rgb(237,203,48)"/><text x="63.9962%" y="335.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (1 samples, 0.15%)</title><rect x="63.8973%" y="341" width="0.1511%" height="15" fill="rgb(211,197,16)"/><text x="64.1473%" y="351.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.15%)</title><rect x="63.8973%" y="325" width="0.1511%" height="15" fill="rgb(243,99,51)"/><text x="64.1473%" y="335.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.15%)</title><rect x="63.8973%" y="309" width="0.1511%" height="15" fill="rgb(215,123,29)"/><text x="64.1473%" y="319.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (1 samples, 0.15%)</title><rect x="63.8973%" y="293" width="0.1511%" height="15" fill="rgb(239,186,37)"/><text x="64.1473%" y="303.50"></text></g><g><title>data_gen::main::{{closure}}::{{closure}} (1 samples, 0.15%)</title><rect x="63.8973%" y="277" width="0.1511%" height="15" fill="rgb(252,136,39)"/><text x="64.1473%" y="287.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (4 samples, 0.60%)</title><rect x="63.7462%" y="357" width="0.6042%" height="15" fill="rgb(223,213,32)"/><text x="63.9962%" y="367.50"></text></g><g><title>broccoli::query::tools::get_section_mut (2 samples, 0.30%)</title><rect x="64.0483%" y="341" width="0.3021%" height="15" fill="rgb(233,115,5)"/><text x="64.2983%" y="351.50"></text></g><g><title>&lt;broccoli::node::vistr_mut::VistrMut&lt;N&gt; as compt::Visitor&gt;::next (1 samples, 0.15%)</title><rect x="64.3505%" y="341" width="0.1511%" height="15" fill="rgb(207,226,44)"/><text x="64.6005%" y="351.50"></text></g><g><title>&lt;compt::dfs_order::VistrMut&lt;T,compt::dfs_order::PreOrder&gt; as compt::Visitor&gt;::next (1 samples, 0.15%)</title><rect x="64.3505%" y="325" width="0.1511%" height="15" fill="rgb(208,126,0)"/><text x="64.6005%" y="335.50"></text></g><g><title>compt::dfs_order::vistr_mut_next (1 samples, 0.15%)</title><rect x="64.3505%" y="309" width="0.1511%" height="15" fill="rgb(244,66,21)"/><text x="64.6005%" y="319.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (1 samples, 0.15%)</title><rect x="64.5015%" y="341" width="0.1511%" height="15" fill="rgb(222,97,12)"/><text x="64.7515%" y="351.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (1 samples, 0.15%)</title><rect x="64.5015%" y="325" width="0.1511%" height="15" fill="rgb(219,213,19)"/><text x="64.7515%" y="335.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (1 samples, 0.15%)</title><rect x="64.5015%" y="309" width="0.1511%" height="15" fill="rgb(252,169,30)"/><text x="64.7515%" y="319.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (1 samples, 0.15%)</title><rect x="64.6526%" y="309" width="0.1511%" height="15" fill="rgb(206,32,51)"/><text x="64.9026%" y="319.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.15%)</title><rect x="64.6526%" y="293" width="0.1511%" height="15" fill="rgb(250,172,42)"/><text x="64.9026%" y="303.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.15%)</title><rect x="64.6526%" y="277" width="0.1511%" height="15" fill="rgb(209,34,43)"/><text x="64.9026%" y="287.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (2 samples, 0.30%)</title><rect x="64.6526%" y="325" width="0.3021%" height="15" fill="rgb(223,11,35)"/><text x="64.9026%" y="335.50"></text></g><g><title>broccoli::query::tools::get_section_mut (1 samples, 0.15%)</title><rect x="64.8036%" y="309" width="0.1511%" height="15" fill="rgb(251,219,26)"/><text x="65.0536%" y="319.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (1 samples, 0.15%)</title><rect x="64.9547%" y="293" width="0.1511%" height="15" fill="rgb(231,119,3)"/><text x="65.2047%" y="303.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (1 samples, 0.15%)</title><rect x="64.9547%" y="277" width="0.1511%" height="15" fill="rgb(216,97,11)"/><text x="65.2047%" y="287.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek::{{closure}} (1 samples, 0.15%)</title><rect x="64.9547%" y="261" width="0.1511%" height="15" fill="rgb(223,59,9)"/><text x="65.2047%" y="271.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.15%)</title><rect x="64.9547%" y="245" width="0.1511%" height="15" fill="rgb(233,93,31)"/><text x="65.2047%" y="255.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.15%)</title><rect x="64.9547%" y="229" width="0.1511%" height="15" fill="rgb(239,81,33)"/><text x="65.2047%" y="239.50"></text></g><g><title>twounordered::FirstVec&lt;T&gt;::push (1 samples, 0.15%)</title><rect x="65.1057%" y="293" width="0.1511%" height="15" fill="rgb(213,120,34)"/><text x="65.3557%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.15%)</title><rect x="65.1057%" y="277" width="0.1511%" height="15" fill="rgb(243,49,53)"/><text x="65.3557%" y="287.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (5 samples, 0.76%)</title><rect x="64.6526%" y="341" width="0.7553%" height="15" fill="rgb(247,216,33)"/><text x="64.9026%" y="351.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (3 samples, 0.45%)</title><rect x="64.9547%" y="325" width="0.4532%" height="15" fill="rgb(226,26,14)"/><text x="65.2047%" y="335.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (3 samples, 0.45%)</title><rect x="64.9547%" y="309" width="0.4532%" height="15" fill="rgb(215,49,53)"/><text x="65.2047%" y="319.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (1 samples, 0.15%)</title><rect x="65.2568%" y="293" width="0.1511%" height="15" fill="rgb(245,162,40)"/><text x="65.5068%" y="303.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (9 samples, 1.36%)</title><rect x="64.3505%" y="357" width="1.3595%" height="15" fill="rgb(229,68,17)"/><text x="64.6005%" y="367.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (2 samples, 0.30%)</title><rect x="65.4079%" y="341" width="0.3021%" height="15" fill="rgb(213,182,10)"/><text x="65.6579%" y="351.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (2 samples, 0.30%)</title><rect x="65.4079%" y="325" width="0.3021%" height="15" fill="rgb(245,125,30)"/><text x="65.6579%" y="335.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (2 samples, 0.30%)</title><rect x="65.4079%" y="309" width="0.3021%" height="15" fill="rgb(232,202,2)"/><text x="65.6579%" y="319.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (1 samples, 0.15%)</title><rect x="65.7100%" y="325" width="0.1511%" height="15" fill="rgb(237,140,51)"/><text x="65.9600%" y="335.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (1 samples, 0.15%)</title><rect x="65.7100%" y="309" width="0.1511%" height="15" fill="rgb(236,157,25)"/><text x="65.9600%" y="319.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek::{{closure}} (1 samples, 0.15%)</title><rect x="65.7100%" y="293" width="0.1511%" height="15" fill="rgb(219,209,0)"/><text x="65.9600%" y="303.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.15%)</title><rect x="65.7100%" y="277" width="0.1511%" height="15" fill="rgb(240,116,54)"/><text x="65.9600%" y="287.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.15%)</title><rect x="65.7100%" y="261" width="0.1511%" height="15" fill="rgb(216,10,36)"/><text x="65.9600%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.15%)</title><rect x="65.8610%" y="309" width="0.1511%" height="15" fill="rgb(222,72,44)"/><text x="66.1110%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::as_mut_ptr (1 samples, 0.15%)</title><rect x="65.8610%" y="293" width="0.1511%" height="15" fill="rgb(232,159,9)"/><text x="66.1110%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.15%)</title><rect x="65.8610%" y="277" width="0.1511%" height="15" fill="rgb(210,39,32)"/><text x="66.1110%" y="287.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.15%)</title><rect x="66.0121%" y="277" width="0.1511%" height="15" fill="rgb(216,194,45)"/><text x="66.2621%" y="287.50"></text></g><g><title>twounordered::FirstVec&lt;T&gt;::push (3 samples, 0.45%)</title><rect x="65.8610%" y="325" width="0.4532%" height="15" fill="rgb(218,18,35)"/><text x="66.1110%" y="335.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (2 samples, 0.30%)</title><rect x="66.0121%" y="309" width="0.3021%" height="15" fill="rgb(207,83,51)"/><text x="66.2621%" y="319.50"></text></g><g><title>core::ptr::swap (2 samples, 0.30%)</title><rect x="66.0121%" y="293" width="0.3021%" height="15" fill="rgb(225,63,43)"/><text x="66.2621%" y="303.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.15%)</title><rect x="66.1631%" y="277" width="0.1511%" height="15" fill="rgb(207,57,36)"/><text x="66.4131%" y="287.50"></text></g><g><title>&lt;twounordered::FirstVec&lt;T&gt; as twounordered::RetainMutUnordered&lt;T&gt;&gt;::truncate (2 samples, 0.30%)</title><rect x="66.4653%" y="309" width="0.3021%" height="15" fill="rgb(216,99,33)"/><text x="66.7153%" y="319.50"></text></g><g><title>twounordered::FirstVec&lt;T&gt;::truncate (2 samples, 0.30%)</title><rect x="66.4653%" y="293" width="0.3021%" height="15" fill="rgb(225,42,16)"/><text x="66.7153%" y="303.50"></text></g><g><title>core::intrinsics::copy (2 samples, 0.30%)</title><rect x="66.4653%" y="277" width="0.3021%" height="15" fill="rgb(220,201,45)"/><text x="66.7153%" y="287.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.30%)</title><rect x="66.4653%" y="261" width="0.3021%" height="15" fill="rgb(225,33,4)"/><text x="66.7153%" y="271.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (2 samples, 0.30%)</title><rect x="66.7674%" y="309" width="0.3021%" height="15" fill="rgb(224,33,50)"/><text x="67.0174%" y="319.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (2 samples, 0.30%)</title><rect x="66.7674%" y="293" width="0.3021%" height="15" fill="rgb(246,198,51)"/><text x="67.0174%" y="303.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.15%)</title><rect x="66.9184%" y="277" width="0.1511%" height="15" fill="rgb(205,22,4)"/><text x="67.1684%" y="287.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (1 samples, 0.15%)</title><rect x="66.9184%" y="261" width="0.1511%" height="15" fill="rgb(206,3,8)"/><text x="67.1684%" y="271.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.15%)</title><rect x="66.9184%" y="245" width="0.1511%" height="15" fill="rgb(251,23,15)"/><text x="67.1684%" y="255.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (23 samples, 3.47%)</title><rect x="63.7462%" y="373" width="3.4743%" height="15" fill="rgb(252,88,28)"/><text x="63.9962%" y="383.50">bro..</text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (10 samples, 1.51%)</title><rect x="65.7100%" y="357" width="1.5106%" height="15" fill="rgb(212,127,14)"/><text x="65.9600%" y="367.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (10 samples, 1.51%)</title><rect x="65.7100%" y="341" width="1.5106%" height="15" fill="rgb(247,145,37)"/><text x="65.9600%" y="351.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (6 samples, 0.91%)</title><rect x="66.3142%" y="325" width="0.9063%" height="15" fill="rgb(209,117,53)"/><text x="66.5642%" y="335.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.15%)</title><rect x="67.0695%" y="309" width="0.1511%" height="15" fill="rgb(212,90,42)"/><text x="67.3195%" y="319.50"></text></g><g><title>twounordered::FirstVec&lt;T&gt;::push (1 samples, 0.15%)</title><rect x="67.2205%" y="341" width="0.1511%" height="15" fill="rgb(218,164,37)"/><text x="67.4705%" y="351.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.15%)</title><rect x="67.2205%" y="325" width="0.1511%" height="15" fill="rgb(246,65,34)"/><text x="67.4705%" y="335.50"></text></g><g><title>&lt;twounordered::FirstVec&lt;T&gt; as twounordered::RetainMutUnordered&lt;T&gt;&gt;::truncate (1 samples, 0.15%)</title><rect x="67.6737%" y="325" width="0.1511%" height="15" fill="rgb(231,100,33)"/><text x="67.9237%" y="335.50"></text></g><g><title>twounordered::FirstVec&lt;T&gt;::truncate (1 samples, 0.15%)</title><rect x="67.6737%" y="309" width="0.1511%" height="15" fill="rgb(228,126,14)"/><text x="67.9237%" y="319.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.15%)</title><rect x="67.6737%" y="293" width="0.1511%" height="15" fill="rgb(215,173,21)"/><text x="67.9237%" y="303.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.15%)</title><rect x="67.6737%" y="277" width="0.1511%" height="15" fill="rgb(210,6,40)"/><text x="67.9237%" y="287.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (31 samples, 4.68%)</title><rect x="63.2931%" y="389" width="4.6828%" height="15" fill="rgb(212,48,18)"/><text x="63.5431%" y="399.50">brocc..</text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (5 samples, 0.76%)</title><rect x="67.2205%" y="373" width="0.7553%" height="15" fill="rgb(230,214,11)"/><text x="67.4705%" y="383.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (5 samples, 0.76%)</title><rect x="67.2205%" y="357" width="0.7553%" height="15" fill="rgb(254,105,39)"/><text x="67.4705%" y="367.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (4 samples, 0.60%)</title><rect x="67.3716%" y="341" width="0.6042%" height="15" fill="rgb(245,158,5)"/><text x="67.6216%" y="351.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (1 samples, 0.15%)</title><rect x="67.8248%" y="325" width="0.1511%" height="15" fill="rgb(249,208,11)"/><text x="68.0748%" y="335.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.15%)</title><rect x="67.8248%" y="309" width="0.1511%" height="15" fill="rgb(210,39,28)"/><text x="68.0748%" y="319.50"></text></g><g><title>broccoli::query::colfind::oned::find_2d (2 samples, 0.30%)</title><rect x="67.9758%" y="389" width="0.3021%" height="15" fill="rgb(211,56,53)"/><text x="68.2258%" y="399.50"></text></g><g><title>broccoli::query::colfind::oned::find (2 samples, 0.30%)</title><rect x="67.9758%" y="373" width="0.3021%" height="15" fill="rgb(226,201,30)"/><text x="68.2258%" y="383.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (2 samples, 0.30%)</title><rect x="67.9758%" y="357" width="0.3021%" height="15" fill="rgb(239,101,34)"/><text x="68.2258%" y="367.50"></text></g><g><title>broccoli::query::colfind::oned::find::{{closure}} (2 samples, 0.30%)</title><rect x="67.9758%" y="341" width="0.3021%" height="15" fill="rgb(226,209,5)"/><text x="68.2258%" y="351.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (1 samples, 0.15%)</title><rect x="68.1269%" y="325" width="0.1511%" height="15" fill="rgb(250,105,47)"/><text x="68.3769%" y="335.50"></text></g><g><title>broccoli::query::colfind::inner::ColFindRecurser&lt;T,K,S&gt;::recurse_seq (415 samples, 62.69%)</title><rect x="5.7402%" y="405" width="62.6888%" height="15" fill="rgb(230,72,3)"/><text x="5.9902%" y="415.50">broccoli::query::colfind::inner::ColFindRecurser&lt;T,K,S&gt;::recurse_seq</text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (1 samples, 0.15%)</title><rect x="68.2779%" y="389" width="0.1511%" height="15" fill="rgb(232,218,39)"/><text x="68.5279%" y="399.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (1 samples, 0.15%)</title><rect x="68.2779%" y="373" width="0.1511%" height="15" fill="rgb(248,166,6)"/><text x="68.5279%" y="383.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (1 samples, 0.15%)</title><rect x="68.2779%" y="357" width="0.1511%" height="15" fill="rgb(247,89,20)"/><text x="68.5279%" y="367.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (1 samples, 0.15%)</title><rect x="68.2779%" y="341" width="0.1511%" height="15" fill="rgb(248,130,54)"/><text x="68.5279%" y="351.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (1 samples, 0.15%)</title><rect x="68.2779%" y="325" width="0.1511%" height="15" fill="rgb(234,196,4)"/><text x="68.5279%" y="335.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut (416 samples, 62.84%)</title><rect x="5.7402%" y="437" width="62.8399%" height="15" fill="rgb(250,143,31)"/><text x="5.9902%" y="447.50">broccoli::query::Queries::find_colliding_pairs_mut</text></g><g><title>broccoli::query::colfind::QueryBuilder&lt;A,T&gt;::query_seq (416 samples, 62.84%)</title><rect x="5.7402%" y="421" width="62.8399%" height="15" fill="rgb(211,110,34)"/><text x="5.9902%" y="431.50">broccoli::query::colfind::QueryBuilder&lt;A,T&gt;::query_seq</text></g><g><title>core::ptr::drop_in_place (1 samples, 0.15%)</title><rect x="68.4290%" y="405" width="0.1511%" height="15" fill="rgb(215,124,48)"/><text x="68.6790%" y="415.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.15%)</title><rect x="68.4290%" y="389" width="0.1511%" height="15" fill="rgb(216,46,13)"/><text x="68.6790%" y="399.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.15%)</title><rect x="68.4290%" y="373" width="0.1511%" height="15" fill="rgb(205,184,25)"/><text x="68.6790%" y="383.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.15%)</title><rect x="68.4290%" y="357" width="0.1511%" height="15" fill="rgb(228,1,10)"/><text x="68.6790%" y="367.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.15%)</title><rect x="68.4290%" y="341" width="0.1511%" height="15" fill="rgb(213,116,27)"/><text x="68.6790%" y="351.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.15%)</title><rect x="68.4290%" y="325" width="0.1511%" height="15" fill="rgb(241,95,50)"/><text x="68.6790%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::dealloc (1 samples, 0.15%)</title><rect x="68.4290%" y="309" width="0.1511%" height="15" fill="rgb(238,48,32)"/><text x="68.6790%" y="319.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.15%)</title><rect x="68.4290%" y="293" width="0.1511%" height="15" fill="rgb(235,113,49)"/><text x="68.6790%" y="303.50"></text></g><g><title>__GI___libc_free (1 samples, 0.15%)</title><rect x="68.4290%" y="277" width="0.1511%" height="15" fill="rgb(205,127,43)"/><text x="68.6790%" y="287.50"></text></g><g><title>broccoli::tree::analyze::builder::NonLeafFinisher&lt;A,T&gt;::finish (1 samples, 0.15%)</title><rect x="68.5801%" y="373" width="0.1511%" height="15" fill="rgb(250,162,2)"/><text x="68.8301%" y="383.50"></text></g><g><title>&lt;broccoli::tree::analyze::DefaultSorter as broccoli::tree::analyze::Sorter&gt;::sort (1 samples, 0.15%)</title><rect x="68.5801%" y="357" width="0.1511%" height="15" fill="rgb(220,13,41)"/><text x="68.8301%" y="367.50"></text></g><g><title>broccoli::util::sweeper_update (1 samples, 0.15%)</title><rect x="68.5801%" y="341" width="0.1511%" height="15" fill="rgb(249,221,25)"/><text x="68.8301%" y="351.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by (1 samples, 0.15%)</title><rect x="68.5801%" y="325" width="0.1511%" height="15" fill="rgb(215,208,19)"/><text x="68.8301%" y="335.50"></text></g><g><title>core::slice::sort::quicksort (1 samples, 0.15%)</title><rect x="68.5801%" y="309" width="0.1511%" height="15" fill="rgb(236,175,2)"/><text x="68.8301%" y="319.50"></text></g><g><title>core::slice::sort::recurse (1 samples, 0.15%)</title><rect x="68.5801%" y="293" width="0.1511%" height="15" fill="rgb(241,52,2)"/><text x="68.8301%" y="303.50"></text></g><g><title>core::slice::sort::recurse (1 samples, 0.15%)</title><rect x="68.5801%" y="277" width="0.1511%" height="15" fill="rgb(248,140,14)"/><text x="68.8301%" y="287.50"></text></g><g><title>core::slice::sort::recurse (1 samples, 0.15%)</title><rect x="68.5801%" y="261" width="0.1511%" height="15" fill="rgb(253,22,42)"/><text x="68.8301%" y="271.50"></text></g><g><title>core::slice::sort::recurse (1 samples, 0.15%)</title><rect x="68.5801%" y="245" width="0.1511%" height="15" fill="rgb(234,61,47)"/><text x="68.8301%" y="255.50"></text></g><g><title>core::slice::sort::insertion_sort (1 samples, 0.15%)</title><rect x="68.5801%" y="229" width="0.1511%" height="15" fill="rgb(208,226,15)"/><text x="68.8301%" y="239.50"></text></g><g><title>core::slice::sort::shift_tail (1 samples, 0.15%)</title><rect x="68.5801%" y="213" width="0.1511%" height="15" fill="rgb(217,221,4)"/><text x="68.8301%" y="223.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.15%)</title><rect x="68.5801%" y="197" width="0.1511%" height="15" fill="rgb(212,174,34)"/><text x="68.8301%" y="207.50"></text></g><g><title>&lt;core::slice::sort::CopyOnDrop&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.15%)</title><rect x="68.5801%" y="181" width="0.1511%" height="15" fill="rgb(253,83,4)"/><text x="68.8301%" y="191.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.15%)</title><rect x="68.5801%" y="165" width="0.1511%" height="15" fill="rgb(250,195,49)"/><text x="68.8301%" y="175.50"></text></g><g><title>axgeom::range::Range&lt;T&gt;::contains_ext (2 samples, 0.30%)</title><rect x="68.8822%" y="325" width="0.3021%" height="15" fill="rgb(241,192,25)"/><text x="69.1322%" y="335.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::lt (1 samples, 0.15%)</title><rect x="69.0332%" y="309" width="0.1511%" height="15" fill="rgb(208,124,10)"/><text x="69.2832%" y="319.50"></text></g><g><title>broccoli::tree::analyze::oned::bin_middle_left_right (5 samples, 0.76%)</title><rect x="68.7311%" y="341" width="0.7553%" height="15" fill="rgb(222,33,0)"/><text x="68.9811%" y="351.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (2 samples, 0.30%)</title><rect x="69.1843%" y="325" width="0.3021%" height="15" fill="rgb(234,209,28)"/><text x="69.4343%" y="335.50"></text></g><g><title>core::ptr::swap (2 samples, 0.30%)</title><rect x="69.1843%" y="309" width="0.3021%" height="15" fill="rgb(224,11,23)"/><text x="69.4343%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.30%)</title><rect x="69.1843%" y="293" width="0.3021%" height="15" fill="rgb(232,99,1)"/><text x="69.4343%" y="303.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (2 samples, 0.30%)</title><rect x="70.2417%" y="261" width="0.3021%" height="15" fill="rgb(237,95,45)"/><text x="70.4917%" y="271.50"></text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::create_non_leaf (14 samples, 2.11%)</title><rect x="68.7311%" y="373" width="2.1148%" height="15" fill="rgb(208,109,11)"/><text x="68.9811%" y="383.50">b..</text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf (14 samples, 2.11%)</title><rect x="68.7311%" y="357" width="2.1148%" height="15" fill="rgb(216,190,48)"/><text x="68.9811%" y="367.50">b..</text></g><g><title>pdqselect::select_by (9 samples, 1.36%)</title><rect x="69.4864%" y="341" width="1.3595%" height="15" fill="rgb(251,171,36)"/><text x="69.7364%" y="351.50"></text></g><g><title>pdqselect::quickselect (9 samples, 1.36%)</title><rect x="69.4864%" y="325" width="1.3595%" height="15" fill="rgb(230,62,22)"/><text x="69.7364%" y="335.50"></text></g><g><title>pdqselect::recurse (9 samples, 1.36%)</title><rect x="69.4864%" y="309" width="1.3595%" height="15" fill="rgb(225,114,35)"/><text x="69.7364%" y="319.50"></text></g><g><title>pdqselect::partition (9 samples, 1.36%)</title><rect x="69.4864%" y="293" width="1.3595%" height="15" fill="rgb(215,118,42)"/><text x="69.7364%" y="303.50"></text></g><g><title>pdqselect::partition_in_blocks (6 samples, 0.91%)</title><rect x="69.9396%" y="277" width="0.9063%" height="15" fill="rgb(243,119,21)"/><text x="70.1896%" y="287.50"></text></g><g><title>pdqselect::select_by::{{closure}} (2 samples, 0.30%)</title><rect x="70.5438%" y="261" width="0.3021%" height="15" fill="rgb(252,177,53)"/><text x="70.7938%" y="271.50"></text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf::{{closure}} (2 samples, 0.30%)</title><rect x="70.5438%" y="245" width="0.3021%" height="15" fill="rgb(237,209,29)"/><text x="70.7938%" y="255.50"></text></g><g><title>broccoli::util::compare_bots (2 samples, 0.30%)</title><rect x="70.5438%" y="229" width="0.3021%" height="15" fill="rgb(212,65,23)"/><text x="70.7938%" y="239.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (2 samples, 0.30%)</title><rect x="70.5438%" y="213" width="0.3021%" height="15" fill="rgb(230,222,46)"/><text x="70.7938%" y="223.50"></text></g><g><title>core::slice::sort::choose_pivot (1 samples, 0.15%)</title><rect x="70.8459%" y="261" width="0.1511%" height="15" fill="rgb(215,135,32)"/><text x="71.0959%" y="271.50"></text></g><g><title>core::slice::sort::choose_pivot::{{closure}} (1 samples, 0.15%)</title><rect x="70.8459%" y="245" width="0.1511%" height="15" fill="rgb(246,101,22)"/><text x="71.0959%" y="255.50"></text></g><g><title>core::slice::sort::choose_pivot::{{closure}} (1 samples, 0.15%)</title><rect x="70.8459%" y="229" width="0.1511%" height="15" fill="rgb(206,107,13)"/><text x="71.0959%" y="239.50"></text></g><g><title>core::slice::sort::choose_pivot::{{closure}} (1 samples, 0.15%)</title><rect x="70.8459%" y="213" width="0.1511%" height="15" fill="rgb(250,100,44)"/><text x="71.0959%" y="223.50"></text></g><g><title>core::slice::sort::partition (1 samples, 0.15%)</title><rect x="70.9970%" y="261" width="0.1511%" height="15" fill="rgb(231,147,38)"/><text x="71.2470%" y="271.50"></text></g><g><title>core::slice::sort::partition_in_blocks (1 samples, 0.15%)</title><rect x="70.9970%" y="245" width="0.1511%" height="15" fill="rgb(229,8,40)"/><text x="71.2470%" y="255.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by::{{closure}} (1 samples, 0.15%)</title><rect x="70.9970%" y="229" width="0.1511%" height="15" fill="rgb(221,135,30)"/><text x="71.2470%" y="239.50"></text></g><g><title>broccoli::util::sweeper_update::{{closure}} (1 samples, 0.15%)</title><rect x="70.9970%" y="213" width="0.1511%" height="15" fill="rgb(249,193,18)"/><text x="71.2470%" y="223.50"></text></g><g><title>broccoli::util::compare_bots (1 samples, 0.15%)</title><rect x="70.9970%" y="197" width="0.1511%" height="15" fill="rgb(209,133,39)"/><text x="71.2470%" y="207.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.15%)</title><rect x="70.9970%" y="181" width="0.1511%" height="15" fill="rgb(232,100,14)"/><text x="71.2470%" y="191.50"></text></g><g><title>broccoli::tree::analyze::builder::NonLeafFinisher&lt;A,T&gt;::finish (3 samples, 0.45%)</title><rect x="70.8459%" y="357" width="0.4532%" height="15" fill="rgb(224,185,1)"/><text x="71.0959%" y="367.50"></text></g><g><title>&lt;broccoli::tree::analyze::DefaultSorter as broccoli::tree::analyze::Sorter&gt;::sort (3 samples, 0.45%)</title><rect x="70.8459%" y="341" width="0.4532%" height="15" fill="rgb(223,139,8)"/><text x="71.0959%" y="351.50"></text></g><g><title>broccoli::util::sweeper_update (3 samples, 0.45%)</title><rect x="70.8459%" y="325" width="0.4532%" height="15" fill="rgb(232,213,38)"/><text x="71.0959%" y="335.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by (3 samples, 0.45%)</title><rect x="70.8459%" y="309" width="0.4532%" height="15" fill="rgb(207,94,22)"/><text x="71.0959%" y="319.50"></text></g><g><title>core::slice::sort::quicksort (3 samples, 0.45%)</title><rect x="70.8459%" y="293" width="0.4532%" height="15" fill="rgb(219,183,54)"/><text x="71.0959%" y="303.50"></text></g><g><title>core::slice::sort::recurse (3 samples, 0.45%)</title><rect x="70.8459%" y="277" width="0.4532%" height="15" fill="rgb(216,185,54)"/><text x="71.0959%" y="287.50"></text></g><g><title>core::slice::sort::recurse (1 samples, 0.15%)</title><rect x="71.1480%" y="261" width="0.1511%" height="15" fill="rgb(254,217,39)"/><text x="71.3980%" y="271.50"></text></g><g><title>core::slice::sort::recurse (1 samples, 0.15%)</title><rect x="71.1480%" y="245" width="0.1511%" height="15" fill="rgb(240,178,23)"/><text x="71.3980%" y="255.50"></text></g><g><title>core::slice::sort::recurse (1 samples, 0.15%)</title><rect x="71.1480%" y="229" width="0.1511%" height="15" fill="rgb(218,11,47)"/><text x="71.3980%" y="239.50"></text></g><g><title>core::slice::sort::partition (1 samples, 0.15%)</title><rect x="71.1480%" y="213" width="0.1511%" height="15" fill="rgb(218,51,51)"/><text x="71.3980%" y="223.50"></text></g><g><title>core::slice::sort::partition_in_blocks (1 samples, 0.15%)</title><rect x="71.1480%" y="197" width="0.1511%" height="15" fill="rgb(238,126,27)"/><text x="71.3980%" y="207.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by::{{closure}} (1 samples, 0.15%)</title><rect x="71.1480%" y="181" width="0.1511%" height="15" fill="rgb(249,202,22)"/><text x="71.3980%" y="191.50"></text></g><g><title>broccoli::util::sweeper_update::{{closure}} (1 samples, 0.15%)</title><rect x="71.1480%" y="165" width="0.1511%" height="15" fill="rgb(254,195,49)"/><text x="71.3980%" y="175.50"></text></g><g><title>broccoli::util::compare_bots (1 samples, 0.15%)</title><rect x="71.1480%" y="149" width="0.1511%" height="15" fill="rgb(208,123,14)"/><text x="71.3980%" y="159.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.15%)</title><rect x="71.1480%" y="133" width="0.1511%" height="15" fill="rgb(224,200,8)"/><text x="71.3980%" y="143.50"></text></g><g><title>axgeom::range::Range&lt;T&gt;::contains_ext (1 samples, 0.15%)</title><rect x="71.9033%" y="309" width="0.1511%" height="15" fill="rgb(217,61,36)"/><text x="72.1533%" y="319.50"></text></g><g><title>broccoli::tree::analyze::oned::bin_middle_left_right (6 samples, 0.91%)</title><rect x="71.2991%" y="325" width="0.9063%" height="15" fill="rgb(206,35,45)"/><text x="71.5491%" y="335.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.15%)</title><rect x="72.0544%" y="309" width="0.1511%" height="15" fill="rgb(217,65,33)"/><text x="72.3044%" y="319.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.15%)</title><rect x="72.0544%" y="293" width="0.1511%" height="15" fill="rgb(222,158,48)"/><text x="72.3044%" y="303.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.15%)</title><rect x="72.2054%" y="245" width="0.1511%" height="15" fill="rgb(254,2,54)"/><text x="72.4554%" y="255.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.15%)</title><rect x="72.3565%" y="245" width="0.1511%" height="15" fill="rgb(250,143,38)"/><text x="72.6065%" y="255.50"></text></g><g><title>core::ptr::read (1 samples, 0.15%)</title><rect x="72.5076%" y="245" width="0.1511%" height="15" fill="rgb(248,25,0)"/><text x="72.7576%" y="255.50"></text></g><g><title>pdqselect::partition_in_blocks (4 samples, 0.60%)</title><rect x="72.2054%" y="261" width="0.6042%" height="15" fill="rgb(206,152,27)"/><text x="72.4554%" y="271.50"></text></g><g><title>pdqselect::select_by::{{closure}} (1 samples, 0.15%)</title><rect x="72.6586%" y="245" width="0.1511%" height="15" fill="rgb(240,77,30)"/><text x="72.9086%" y="255.50"></text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf::{{closure}} (1 samples, 0.15%)</title><rect x="72.6586%" y="229" width="0.1511%" height="15" fill="rgb(231,5,3)"/><text x="72.9086%" y="239.50"></text></g><g><title>broccoli::util::compare_bots (1 samples, 0.15%)</title><rect x="72.6586%" y="213" width="0.1511%" height="15" fill="rgb(207,226,32)"/><text x="72.9086%" y="223.50"></text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::create_non_leaf (11 samples, 1.66%)</title><rect x="71.2991%" y="357" width="1.6616%" height="15" fill="rgb(222,207,47)"/><text x="71.5491%" y="367.50"></text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf (11 samples, 1.66%)</title><rect x="71.2991%" y="341" width="1.6616%" height="15" fill="rgb(229,115,45)"/><text x="71.5491%" y="351.50"></text></g><g><title>pdqselect::select_by (5 samples, 0.76%)</title><rect x="72.2054%" y="325" width="0.7553%" height="15" fill="rgb(224,191,6)"/><text x="72.4554%" y="335.50"></text></g><g><title>pdqselect::quickselect (5 samples, 0.76%)</title><rect x="72.2054%" y="309" width="0.7553%" height="15" fill="rgb(230,227,24)"/><text x="72.4554%" y="319.50"></text></g><g><title>pdqselect::recurse (5 samples, 0.76%)</title><rect x="72.2054%" y="293" width="0.7553%" height="15" fill="rgb(228,80,19)"/><text x="72.4554%" y="303.50"></text></g><g><title>pdqselect::partition (5 samples, 0.76%)</title><rect x="72.2054%" y="277" width="0.7553%" height="15" fill="rgb(247,229,0)"/><text x="72.4554%" y="287.50"></text></g><g><title>pdqselect::select_by::{{closure}} (1 samples, 0.15%)</title><rect x="72.8097%" y="261" width="0.1511%" height="15" fill="rgb(237,194,15)"/><text x="73.0597%" y="271.50"></text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf::{{closure}} (1 samples, 0.15%)</title><rect x="72.8097%" y="245" width="0.1511%" height="15" fill="rgb(219,203,20)"/><text x="73.0597%" y="255.50"></text></g><g><title>broccoli::util::compare_bots (1 samples, 0.15%)</title><rect x="72.8097%" y="229" width="0.1511%" height="15" fill="rgb(234,128,8)"/><text x="73.0597%" y="239.50"></text></g><g><title>broccoli::tree::analyze::builder::NonLeafFinisher&lt;A,T&gt;::finish (1 samples, 0.15%)</title><rect x="72.9607%" y="341" width="0.1511%" height="15" fill="rgb(248,202,8)"/><text x="73.2107%" y="351.50"></text></g><g><title>&lt;broccoli::tree::analyze::DefaultSorter as broccoli::tree::analyze::Sorter&gt;::sort (1 samples, 0.15%)</title><rect x="72.9607%" y="325" width="0.1511%" height="15" fill="rgb(206,104,37)"/><text x="73.2107%" y="335.50"></text></g><g><title>broccoli::util::sweeper_update (1 samples, 0.15%)</title><rect x="72.9607%" y="309" width="0.1511%" height="15" fill="rgb(223,8,27)"/><text x="73.2107%" y="319.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by (1 samples, 0.15%)</title><rect x="72.9607%" y="293" width="0.1511%" height="15" fill="rgb(216,217,28)"/><text x="73.2107%" y="303.50"></text></g><g><title>core::slice::sort::quicksort (1 samples, 0.15%)</title><rect x="72.9607%" y="277" width="0.1511%" height="15" fill="rgb(249,199,1)"/><text x="73.2107%" y="287.50"></text></g><g><title>core::slice::sort::recurse (1 samples, 0.15%)</title><rect x="72.9607%" y="261" width="0.1511%" height="15" fill="rgb(240,85,17)"/><text x="73.2107%" y="271.50"></text></g><g><title>core::slice::sort::partition (1 samples, 0.15%)</title><rect x="72.9607%" y="245" width="0.1511%" height="15" fill="rgb(206,108,45)"/><text x="73.2107%" y="255.50"></text></g><g><title>core::slice::sort::partition_in_blocks (1 samples, 0.15%)</title><rect x="72.9607%" y="229" width="0.1511%" height="15" fill="rgb(245,210,41)"/><text x="73.2107%" y="239.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.15%)</title><rect x="72.9607%" y="213" width="0.1511%" height="15" fill="rgb(206,13,37)"/><text x="73.2107%" y="223.50"></text></g><g><title>broccoli::tree::analyze::oned::bin_middle_left_right (2 samples, 0.30%)</title><rect x="73.1118%" y="309" width="0.3021%" height="15" fill="rgb(250,61,18)"/><text x="73.3618%" y="319.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.15%)</title><rect x="73.2628%" y="293" width="0.1511%" height="15" fill="rgb(235,172,48)"/><text x="73.5128%" y="303.50"></text></g><g><title>core::ptr::swap (1 samples, 0.15%)</title><rect x="73.2628%" y="277" width="0.1511%" height="15" fill="rgb(249,201,17)"/><text x="73.5128%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.15%)</title><rect x="73.2628%" y="261" width="0.1511%" height="15" fill="rgb(219,208,6)"/><text x="73.5128%" y="271.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.15%)</title><rect x="73.8671%" y="229" width="0.1511%" height="15" fill="rgb(248,31,23)"/><text x="74.1171%" y="239.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (2 samples, 0.30%)</title><rect x="74.0181%" y="229" width="0.3021%" height="15" fill="rgb(245,15,42)"/><text x="74.2681%" y="239.50"></text></g><g><title>pdqselect::partition_in_blocks (6 samples, 0.91%)</title><rect x="73.5650%" y="245" width="0.9063%" height="15" fill="rgb(222,217,39)"/><text x="73.8150%" y="255.50"></text></g><g><title>core::ptr::swap (1 samples, 0.15%)</title><rect x="74.3202%" y="229" width="0.1511%" height="15" fill="rgb(210,219,27)"/><text x="74.5702%" y="239.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.15%)</title><rect x="74.3202%" y="213" width="0.1511%" height="15" fill="rgb(252,166,36)"/><text x="74.5702%" y="223.50"></text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::create_non_leaf (10 samples, 1.51%)</title><rect x="73.1118%" y="341" width="1.5106%" height="15" fill="rgb(245,132,34)"/><text x="73.3618%" y="351.50"></text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf (10 samples, 1.51%)</title><rect x="73.1118%" y="325" width="1.5106%" height="15" fill="rgb(236,54,3)"/><text x="73.3618%" y="335.50"></text></g><g><title>pdqselect::select_by (8 samples, 1.21%)</title><rect x="73.4139%" y="309" width="1.2085%" height="15" fill="rgb(241,173,43)"/><text x="73.6639%" y="319.50"></text></g><g><title>pdqselect::quickselect (8 samples, 1.21%)</title><rect x="73.4139%" y="293" width="1.2085%" height="15" fill="rgb(215,190,9)"/><text x="73.6639%" y="303.50"></text></g><g><title>pdqselect::recurse (8 samples, 1.21%)</title><rect x="73.4139%" y="277" width="1.2085%" height="15" fill="rgb(242,101,16)"/><text x="73.6639%" y="287.50"></text></g><g><title>pdqselect::partition (8 samples, 1.21%)</title><rect x="73.4139%" y="261" width="1.2085%" height="15" fill="rgb(223,190,21)"/><text x="73.6639%" y="271.50"></text></g><g><title>pdqselect::select_by::{{closure}} (1 samples, 0.15%)</title><rect x="74.4713%" y="245" width="0.1511%" height="15" fill="rgb(215,228,25)"/><text x="74.7213%" y="255.50"></text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf::{{closure}} (1 samples, 0.15%)</title><rect x="74.4713%" y="229" width="0.1511%" height="15" fill="rgb(225,36,22)"/><text x="74.7213%" y="239.50"></text></g><g><title>broccoli::util::compare_bots (1 samples, 0.15%)</title><rect x="74.4713%" y="213" width="0.1511%" height="15" fill="rgb(251,106,46)"/><text x="74.7213%" y="223.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.15%)</title><rect x="74.4713%" y="197" width="0.1511%" height="15" fill="rgb(208,90,1)"/><text x="74.7213%" y="207.50"></text></g><g><title>broccoli::tree::analyze::builder::NonLeafFinisher&lt;A,T&gt;::finish (1 samples, 0.15%)</title><rect x="74.6224%" y="325" width="0.1511%" height="15" fill="rgb(243,10,4)"/><text x="74.8724%" y="335.50"></text></g><g><title>&lt;broccoli::tree::analyze::DefaultSorter as broccoli::tree::analyze::Sorter&gt;::sort (1 samples, 0.15%)</title><rect x="74.6224%" y="309" width="0.1511%" height="15" fill="rgb(212,137,27)"/><text x="74.8724%" y="319.50"></text></g><g><title>broccoli::util::sweeper_update (1 samples, 0.15%)</title><rect x="74.6224%" y="293" width="0.1511%" height="15" fill="rgb(231,220,49)"/><text x="74.8724%" y="303.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by (1 samples, 0.15%)</title><rect x="74.6224%" y="277" width="0.1511%" height="15" fill="rgb(237,96,20)"/><text x="74.8724%" y="287.50"></text></g><g><title>core::slice::sort::quicksort (1 samples, 0.15%)</title><rect x="74.6224%" y="261" width="0.1511%" height="15" fill="rgb(239,229,30)"/><text x="74.8724%" y="271.50"></text></g><g><title>core::slice::sort::recurse (1 samples, 0.15%)</title><rect x="74.6224%" y="245" width="0.1511%" height="15" fill="rgb(219,65,33)"/><text x="74.8724%" y="255.50"></text></g><g><title>core::slice::sort::choose_pivot (1 samples, 0.15%)</title><rect x="74.6224%" y="229" width="0.1511%" height="15" fill="rgb(243,134,7)"/><text x="74.8724%" y="239.50"></text></g><g><title>core::slice::sort::choose_pivot::{{closure}} (1 samples, 0.15%)</title><rect x="74.6224%" y="213" width="0.1511%" height="15" fill="rgb(216,177,54)"/><text x="74.8724%" y="223.50"></text></g><g><title>core::slice::sort::choose_pivot::{{closure}} (1 samples, 0.15%)</title><rect x="74.6224%" y="197" width="0.1511%" height="15" fill="rgb(211,160,20)"/><text x="74.8724%" y="207.50"></text></g><g><title>core::slice::sort::choose_pivot::{{closure}} (1 samples, 0.15%)</title><rect x="74.6224%" y="181" width="0.1511%" height="15" fill="rgb(239,85,39)"/><text x="74.8724%" y="191.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.30%)</title><rect x="74.9245%" y="277" width="0.3021%" height="15" fill="rgb(232,125,22)"/><text x="75.1745%" y="287.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (2 samples, 0.30%)</title><rect x="74.9245%" y="261" width="0.3021%" height="15" fill="rgb(244,57,34)"/><text x="75.1745%" y="271.50"></text></g><g><title>broccoli::tree::analyze::oned::bin_middle_left_right (5 samples, 0.76%)</title><rect x="74.7734%" y="293" width="0.7553%" height="15" fill="rgb(214,203,32)"/><text x="75.0234%" y="303.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (2 samples, 0.30%)</title><rect x="75.2266%" y="277" width="0.3021%" height="15" fill="rgb(207,58,43)"/><text x="75.4766%" y="287.50"></text></g><g><title>core::ptr::swap (2 samples, 0.30%)</title><rect x="75.2266%" y="261" width="0.3021%" height="15" fill="rgb(215,193,15)"/><text x="75.4766%" y="271.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.30%)</title><rect x="75.2266%" y="245" width="0.3021%" height="15" fill="rgb(232,15,44)"/><text x="75.4766%" y="255.50"></text></g><g><title>pdqselect::choose_pivot (1 samples, 0.15%)</title><rect x="75.5287%" y="245" width="0.1511%" height="15" fill="rgb(212,3,48)"/><text x="75.7787%" y="255.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::reverse (1 samples, 0.15%)</title><rect x="75.5287%" y="229" width="0.1511%" height="15" fill="rgb(218,128,7)"/><text x="75.7787%" y="239.50"></text></g><g><title>core::ptr::swap (1 samples, 0.15%)</title><rect x="75.5287%" y="213" width="0.1511%" height="15" fill="rgb(226,216,39)"/><text x="75.7787%" y="223.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.15%)</title><rect x="75.5287%" y="197" width="0.1511%" height="15" fill="rgb(243,47,51)"/><text x="75.7787%" y="207.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.30%)</title><rect x="75.8308%" y="213" width="0.3021%" height="15" fill="rgb(241,183,40)"/><text x="76.0808%" y="223.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (2 samples, 0.30%)</title><rect x="76.1329%" y="213" width="0.3021%" height="15" fill="rgb(231,217,32)"/><text x="76.3829%" y="223.50"></text></g><g><title>pdqselect::partition_in_blocks (7 samples, 1.06%)</title><rect x="75.6798%" y="229" width="1.0574%" height="15" fill="rgb(229,61,38)"/><text x="75.9298%" y="239.50"></text></g><g><title>pdqselect::select_by::{{closure}} (2 samples, 0.30%)</title><rect x="76.4350%" y="213" width="0.3021%" height="15" fill="rgb(225,210,5)"/><text x="76.6850%" y="223.50"></text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf::{{closure}} (2 samples, 0.30%)</title><rect x="76.4350%" y="197" width="0.3021%" height="15" fill="rgb(231,79,45)"/><text x="76.6850%" y="207.50"></text></g><g><title>broccoli::util::compare_bots (2 samples, 0.30%)</title><rect x="76.4350%" y="181" width="0.3021%" height="15" fill="rgb(224,100,7)"/><text x="76.6850%" y="191.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (2 samples, 0.30%)</title><rect x="76.4350%" y="165" width="0.3021%" height="15" fill="rgb(241,198,18)"/><text x="76.6850%" y="175.50"></text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::create_non_leaf (14 samples, 2.11%)</title><rect x="74.7734%" y="325" width="2.1148%" height="15" fill="rgb(252,97,53)"/><text x="75.0234%" y="335.50">b..</text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf (14 samples, 2.11%)</title><rect x="74.7734%" y="309" width="2.1148%" height="15" fill="rgb(220,88,7)"/><text x="75.0234%" y="319.50">b..</text></g><g><title>pdqselect::select_by (9 samples, 1.36%)</title><rect x="75.5287%" y="293" width="1.3595%" height="15" fill="rgb(213,176,14)"/><text x="75.7787%" y="303.50"></text></g><g><title>pdqselect::quickselect (9 samples, 1.36%)</title><rect x="75.5287%" y="277" width="1.3595%" height="15" fill="rgb(246,73,7)"/><text x="75.7787%" y="287.50"></text></g><g><title>pdqselect::recurse (9 samples, 1.36%)</title><rect x="75.5287%" y="261" width="1.3595%" height="15" fill="rgb(245,64,36)"/><text x="75.7787%" y="271.50"></text></g><g><title>pdqselect::partition (8 samples, 1.21%)</title><rect x="75.6798%" y="245" width="1.2085%" height="15" fill="rgb(245,80,10)"/><text x="75.9298%" y="255.50"></text></g><g><title>pdqselect::select_by::{{closure}} (1 samples, 0.15%)</title><rect x="76.7372%" y="229" width="0.1511%" height="15" fill="rgb(232,107,50)"/><text x="76.9872%" y="239.50"></text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf::{{closure}} (1 samples, 0.15%)</title><rect x="76.7372%" y="213" width="0.1511%" height="15" fill="rgb(253,3,0)"/><text x="76.9872%" y="223.50"></text></g><g><title>broccoli::util::compare_bots (1 samples, 0.15%)</title><rect x="76.7372%" y="197" width="0.1511%" height="15" fill="rgb(212,99,53)"/><text x="76.9872%" y="207.50"></text></g><g><title>axgeom::range::Range&lt;T&gt;::contains_ext (1 samples, 0.15%)</title><rect x="77.1903%" y="261" width="0.1511%" height="15" fill="rgb(249,111,54)"/><text x="77.4403%" y="271.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::lt (1 samples, 0.15%)</title><rect x="77.1903%" y="245" width="0.1511%" height="15" fill="rgb(249,55,30)"/><text x="77.4403%" y="255.50"></text></g><g><title>broccoli::tree::analyze::oned::bin_middle_left_right (5 samples, 0.76%)</title><rect x="76.8882%" y="277" width="0.7553%" height="15" fill="rgb(237,47,42)"/><text x="77.1382%" y="287.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (2 samples, 0.30%)</title><rect x="77.3414%" y="261" width="0.3021%" height="15" fill="rgb(211,20,18)"/><text x="77.5914%" y="271.50"></text></g><g><title>core::ptr::swap (2 samples, 0.30%)</title><rect x="77.3414%" y="245" width="0.3021%" height="15" fill="rgb(231,203,46)"/><text x="77.5914%" y="255.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.30%)</title><rect x="77.3414%" y="229" width="0.3021%" height="15" fill="rgb(237,142,3)"/><text x="77.5914%" y="239.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.30%)</title><rect x="77.7946%" y="197" width="0.3021%" height="15" fill="rgb(241,107,1)"/><text x="78.0446%" y="207.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.15%)</title><rect x="78.0967%" y="197" width="0.1511%" height="15" fill="rgb(229,83,13)"/><text x="78.3467%" y="207.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.15%)</title><rect x="78.2477%" y="197" width="0.1511%" height="15" fill="rgb(241,91,40)"/><text x="78.4977%" y="207.50"></text></g><g><title>core::ptr::swap (1 samples, 0.15%)</title><rect x="78.3988%" y="197" width="0.1511%" height="15" fill="rgb(225,3,45)"/><text x="78.6488%" y="207.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.15%)</title><rect x="78.3988%" y="181" width="0.1511%" height="15" fill="rgb(244,223,14)"/><text x="78.6488%" y="191.50"></text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::create_non_leaf (14 samples, 2.11%)</title><rect x="76.8882%" y="309" width="2.1148%" height="15" fill="rgb(224,124,37)"/><text x="77.1382%" y="319.50">b..</text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf (14 samples, 2.11%)</title><rect x="76.8882%" y="293" width="2.1148%" height="15" fill="rgb(251,171,30)"/><text x="77.1382%" y="303.50">b..</text></g><g><title>pdqselect::select_by (9 samples, 1.36%)</title><rect x="77.6435%" y="277" width="1.3595%" height="15" fill="rgb(236,46,54)"/><text x="77.8935%" y="287.50"></text></g><g><title>pdqselect::quickselect (9 samples, 1.36%)</title><rect x="77.6435%" y="261" width="1.3595%" height="15" fill="rgb(245,213,5)"/><text x="77.8935%" y="271.50"></text></g><g><title>pdqselect::recurse (9 samples, 1.36%)</title><rect x="77.6435%" y="245" width="1.3595%" height="15" fill="rgb(230,144,27)"/><text x="77.8935%" y="255.50"></text></g><g><title>pdqselect::partition (9 samples, 1.36%)</title><rect x="77.6435%" y="229" width="1.3595%" height="15" fill="rgb(220,86,6)"/><text x="77.8935%" y="239.50"></text></g><g><title>pdqselect::partition_in_blocks (9 samples, 1.36%)</title><rect x="77.6435%" y="213" width="1.3595%" height="15" fill="rgb(240,20,13)"/><text x="77.8935%" y="223.50"></text></g><g><title>pdqselect::select_by::{{closure}} (3 samples, 0.45%)</title><rect x="78.5498%" y="197" width="0.4532%" height="15" fill="rgb(217,89,34)"/><text x="78.7998%" y="207.50"></text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf::{{closure}} (3 samples, 0.45%)</title><rect x="78.5498%" y="181" width="0.4532%" height="15" fill="rgb(229,13,5)"/><text x="78.7998%" y="191.50"></text></g><g><title>broccoli::util::compare_bots (3 samples, 0.45%)</title><rect x="78.5498%" y="165" width="0.4532%" height="15" fill="rgb(244,67,35)"/><text x="78.7998%" y="175.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (3 samples, 0.45%)</title><rect x="78.5498%" y="149" width="0.4532%" height="15" fill="rgb(221,40,2)"/><text x="78.7998%" y="159.50"></text></g><g><title>core::slice::sort::partition (1 samples, 0.15%)</title><rect x="79.0030%" y="197" width="0.1511%" height="15" fill="rgb(237,157,21)"/><text x="79.2530%" y="207.50"></text></g><g><title>core::slice::sort::partition_in_blocks (1 samples, 0.15%)</title><rect x="79.0030%" y="181" width="0.1511%" height="15" fill="rgb(222,94,11)"/><text x="79.2530%" y="191.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by::{{closure}} (1 samples, 0.15%)</title><rect x="79.0030%" y="165" width="0.1511%" height="15" fill="rgb(249,113,6)"/><text x="79.2530%" y="175.50"></text></g><g><title>broccoli::util::sweeper_update::{{closure}} (1 samples, 0.15%)</title><rect x="79.0030%" y="149" width="0.1511%" height="15" fill="rgb(238,137,36)"/><text x="79.2530%" y="159.50"></text></g><g><title>broccoli::util::compare_bots (1 samples, 0.15%)</title><rect x="79.0030%" y="133" width="0.1511%" height="15" fill="rgb(210,102,26)"/><text x="79.2530%" y="143.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.15%)</title><rect x="79.0030%" y="117" width="0.1511%" height="15" fill="rgb(218,30,30)"/><text x="79.2530%" y="127.50"></text></g><g><title>core::slice::sort::insertion_sort (1 samples, 0.15%)</title><rect x="79.1541%" y="181" width="0.1511%" height="15" fill="rgb(214,67,26)"/><text x="79.4041%" y="191.50"></text></g><g><title>core::slice::sort::shift_tail (1 samples, 0.15%)</title><rect x="79.1541%" y="165" width="0.1511%" height="15" fill="rgb(251,9,53)"/><text x="79.4041%" y="175.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.15%)</title><rect x="79.1541%" y="149" width="0.1511%" height="15" fill="rgb(228,204,25)"/><text x="79.4041%" y="159.50"></text></g><g><title>&lt;core::slice::sort::CopyOnDrop&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.15%)</title><rect x="79.1541%" y="133" width="0.1511%" height="15" fill="rgb(207,153,8)"/><text x="79.4041%" y="143.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.15%)</title><rect x="79.1541%" y="117" width="0.1511%" height="15" fill="rgb(242,9,16)"/><text x="79.4041%" y="127.50"></text></g><g><title>&lt;broccoli::tree::analyze::DefaultSorter as broccoli::tree::analyze::Sorter&gt;::sort (3 samples, 0.45%)</title><rect x="79.0030%" y="277" width="0.4532%" height="15" fill="rgb(217,211,10)"/><text x="79.2530%" y="287.50"></text></g><g><title>broccoli::util::sweeper_update (3 samples, 0.45%)</title><rect x="79.0030%" y="261" width="0.4532%" height="15" fill="rgb(219,228,52)"/><text x="79.2530%" y="271.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by (3 samples, 0.45%)</title><rect x="79.0030%" y="245" width="0.4532%" height="15" fill="rgb(231,92,29)"/><text x="79.2530%" y="255.50"></text></g><g><title>core::slice::sort::quicksort (3 samples, 0.45%)</title><rect x="79.0030%" y="229" width="0.4532%" height="15" fill="rgb(232,8,23)"/><text x="79.2530%" y="239.50"></text></g><g><title>core::slice::sort::recurse (3 samples, 0.45%)</title><rect x="79.0030%" y="213" width="0.4532%" height="15" fill="rgb(216,211,34)"/><text x="79.2530%" y="223.50"></text></g><g><title>core::slice::sort::recurse (2 samples, 0.30%)</title><rect x="79.1541%" y="197" width="0.3021%" height="15" fill="rgb(236,151,0)"/><text x="79.4041%" y="207.50"></text></g><g><title>core::slice::sort::recurse (1 samples, 0.15%)</title><rect x="79.3051%" y="181" width="0.1511%" height="15" fill="rgb(209,168,3)"/><text x="79.5551%" y="191.50"></text></g><g><title>core::slice::sort::insertion_sort (1 samples, 0.15%)</title><rect x="79.3051%" y="165" width="0.1511%" height="15" fill="rgb(208,129,28)"/><text x="79.5551%" y="175.50"></text></g><g><title>core::slice::sort::shift_tail (1 samples, 0.15%)</title><rect x="79.3051%" y="149" width="0.1511%" height="15" fill="rgb(229,78,22)"/><text x="79.5551%" y="159.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.15%)</title><rect x="79.3051%" y="133" width="0.1511%" height="15" fill="rgb(228,187,13)"/><text x="79.5551%" y="143.50"></text></g><g><title>broccoli::tree::analyze::builder::NonLeafFinisher&lt;A,T&gt;::finish (4 samples, 0.60%)</title><rect x="79.0030%" y="293" width="0.6042%" height="15" fill="rgb(240,119,24)"/><text x="79.2530%" y="303.50"></text></g><g><title>broccoli::tree::analyze::builder::create_cont (1 samples, 0.15%)</title><rect x="79.4562%" y="277" width="0.1511%" height="15" fill="rgb(209,194,42)"/><text x="79.7062%" y="287.50"></text></g><g><title>axgeom::range::Range&lt;T&gt;::contains_ext (1 samples, 0.15%)</title><rect x="79.7583%" y="245" width="0.1511%" height="15" fill="rgb(247,200,46)"/><text x="80.0083%" y="255.50"></text></g><g><title>broccoli::tree::analyze::oned::bin_middle_left_right (3 samples, 0.45%)</title><rect x="79.6073%" y="261" width="0.4532%" height="15" fill="rgb(218,76,16)"/><text x="79.8573%" y="271.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.15%)</title><rect x="79.9094%" y="245" width="0.1511%" height="15" fill="rgb(225,21,48)"/><text x="80.1594%" y="255.50"></text></g><g><title>core::ptr::swap (1 samples, 0.15%)</title><rect x="79.9094%" y="229" width="0.1511%" height="15" fill="rgb(239,223,50)"/><text x="80.1594%" y="239.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.15%)</title><rect x="79.9094%" y="213" width="0.1511%" height="15" fill="rgb(244,45,21)"/><text x="80.1594%" y="223.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.15%)</title><rect x="80.0604%" y="181" width="0.1511%" height="15" fill="rgb(232,33,43)"/><text x="80.3104%" y="191.50"></text></g><g><title>pdqselect::insertion_sort (2 samples, 0.30%)</title><rect x="80.0604%" y="213" width="0.3021%" height="15" fill="rgb(209,8,3)"/><text x="80.3104%" y="223.50"></text></g><g><title>pdqselect::shift_tail (2 samples, 0.30%)</title><rect x="80.0604%" y="197" width="0.3021%" height="15" fill="rgb(214,25,53)"/><text x="80.3104%" y="207.50"></text></g><g><title>pdqselect::select_by::{{closure}} (1 samples, 0.15%)</title><rect x="80.2115%" y="181" width="0.1511%" height="15" fill="rgb(254,186,54)"/><text x="80.4615%" y="191.50"></text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf::{{closure}} (1 samples, 0.15%)</title><rect x="80.2115%" y="165" width="0.1511%" height="15" fill="rgb(208,174,49)"/><text x="80.4615%" y="175.50"></text></g><g><title>broccoli::util::compare_bots (1 samples, 0.15%)</title><rect x="80.2115%" y="149" width="0.1511%" height="15" fill="rgb(233,191,51)"/><text x="80.4615%" y="159.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.15%)</title><rect x="80.2115%" y="133" width="0.1511%" height="15" fill="rgb(222,134,10)"/><text x="80.4615%" y="143.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.15%)</title><rect x="80.3625%" y="181" width="0.1511%" height="15" fill="rgb(230,226,20)"/><text x="80.6125%" y="191.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.15%)</title><rect x="80.5136%" y="181" width="0.1511%" height="15" fill="rgb(251,111,25)"/><text x="80.7636%" y="191.50"></text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::create_non_leaf (8 samples, 1.21%)</title><rect x="79.6073%" y="293" width="1.2085%" height="15" fill="rgb(224,40,46)"/><text x="79.8573%" y="303.50"></text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf (8 samples, 1.21%)</title><rect x="79.6073%" y="277" width="1.2085%" height="15" fill="rgb(236,108,47)"/><text x="79.8573%" y="287.50"></text></g><g><title>pdqselect::select_by (5 samples, 0.76%)</title><rect x="80.0604%" y="261" width="0.7553%" height="15" fill="rgb(234,93,0)"/><text x="80.3104%" y="271.50"></text></g><g><title>pdqselect::quickselect (5 samples, 0.76%)</title><rect x="80.0604%" y="245" width="0.7553%" height="15" fill="rgb(224,213,32)"/><text x="80.3104%" y="255.50"></text></g><g><title>pdqselect::recurse (5 samples, 0.76%)</title><rect x="80.0604%" y="229" width="0.7553%" height="15" fill="rgb(251,11,48)"/><text x="80.3104%" y="239.50"></text></g><g><title>pdqselect::partition (3 samples, 0.45%)</title><rect x="80.3625%" y="213" width="0.4532%" height="15" fill="rgb(236,173,5)"/><text x="80.6125%" y="223.50"></text></g><g><title>pdqselect::partition_in_blocks (3 samples, 0.45%)</title><rect x="80.3625%" y="197" width="0.4532%" height="15" fill="rgb(230,95,12)"/><text x="80.6125%" y="207.50"></text></g><g><title>pdqselect::select_by::{{closure}} (1 samples, 0.15%)</title><rect x="80.6647%" y="181" width="0.1511%" height="15" fill="rgb(232,209,1)"/><text x="80.9147%" y="191.50"></text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf::{{closure}} (1 samples, 0.15%)</title><rect x="80.6647%" y="165" width="0.1511%" height="15" fill="rgb(232,6,1)"/><text x="80.9147%" y="175.50"></text></g><g><title>broccoli::util::compare_bots (1 samples, 0.15%)</title><rect x="80.6647%" y="149" width="0.1511%" height="15" fill="rgb(210,224,50)"/><text x="80.9147%" y="159.50"></text></g><g><title>core::slice::sort::insertion_sort (2 samples, 0.30%)</title><rect x="80.8157%" y="181" width="0.3021%" height="15" fill="rgb(228,127,35)"/><text x="81.0657%" y="191.50"></text></g><g><title>core::slice::sort::shift_tail (2 samples, 0.30%)</title><rect x="80.8157%" y="165" width="0.3021%" height="15" fill="rgb(245,102,45)"/><text x="81.0657%" y="175.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by::{{closure}} (2 samples, 0.30%)</title><rect x="80.8157%" y="149" width="0.3021%" height="15" fill="rgb(214,1,49)"/><text x="81.0657%" y="159.50"></text></g><g><title>broccoli::util::sweeper_update::{{closure}} (2 samples, 0.30%)</title><rect x="80.8157%" y="133" width="0.3021%" height="15" fill="rgb(226,163,40)"/><text x="81.0657%" y="143.50"></text></g><g><title>broccoli::util::compare_bots (2 samples, 0.30%)</title><rect x="80.8157%" y="117" width="0.3021%" height="15" fill="rgb(239,212,28)"/><text x="81.0657%" y="127.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.15%)</title><rect x="80.9668%" y="101" width="0.1511%" height="15" fill="rgb(220,20,13)"/><text x="81.2168%" y="111.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.15%)</title><rect x="81.1178%" y="149" width="0.1511%" height="15" fill="rgb(210,164,35)"/><text x="81.3678%" y="159.50"></text></g><g><title>core::slice::sort::partition (2 samples, 0.30%)</title><rect x="81.1178%" y="181" width="0.3021%" height="15" fill="rgb(248,109,41)"/><text x="81.3678%" y="191.50"></text></g><g><title>core::slice::sort::partition_in_blocks (2 samples, 0.30%)</title><rect x="81.1178%" y="165" width="0.3021%" height="15" fill="rgb(238,23,50)"/><text x="81.3678%" y="175.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.15%)</title><rect x="81.2689%" y="149" width="0.1511%" height="15" fill="rgb(211,48,49)"/><text x="81.5189%" y="159.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.15%)</title><rect x="81.4199%" y="149" width="0.1511%" height="15" fill="rgb(223,36,21)"/><text x="81.6699%" y="159.50"></text></g><g><title>&lt;broccoli::tree::analyze::DefaultSorter as broccoli::tree::analyze::Sorter&gt;::sort (6 samples, 0.91%)</title><rect x="80.8157%" y="261" width="0.9063%" height="15" fill="rgb(207,123,46)"/><text x="81.0657%" y="271.50"></text></g><g><title>broccoli::util::sweeper_update (6 samples, 0.91%)</title><rect x="80.8157%" y="245" width="0.9063%" height="15" fill="rgb(240,218,32)"/><text x="81.0657%" y="255.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by (6 samples, 0.91%)</title><rect x="80.8157%" y="229" width="0.9063%" height="15" fill="rgb(252,5,43)"/><text x="81.0657%" y="239.50"></text></g><g><title>core::slice::sort::quicksort (6 samples, 0.91%)</title><rect x="80.8157%" y="213" width="0.9063%" height="15" fill="rgb(252,84,19)"/><text x="81.0657%" y="223.50"></text></g><g><title>core::slice::sort::recurse (6 samples, 0.91%)</title><rect x="80.8157%" y="197" width="0.9063%" height="15" fill="rgb(243,152,39)"/><text x="81.0657%" y="207.50"></text></g><g><title>core::slice::sort::recurse (2 samples, 0.30%)</title><rect x="81.4199%" y="181" width="0.3021%" height="15" fill="rgb(234,160,15)"/><text x="81.6699%" y="191.50"></text></g><g><title>core::slice::sort::insertion_sort (2 samples, 0.30%)</title><rect x="81.4199%" y="165" width="0.3021%" height="15" fill="rgb(237,34,20)"/><text x="81.6699%" y="175.50"></text></g><g><title>core::slice::sort::shift_tail (1 samples, 0.15%)</title><rect x="81.5710%" y="149" width="0.1511%" height="15" fill="rgb(229,97,13)"/><text x="81.8210%" y="159.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.15%)</title><rect x="81.5710%" y="133" width="0.1511%" height="15" fill="rgb(234,71,50)"/><text x="81.8210%" y="143.50"></text></g><g><title>broccoli::tree::analyze::builder::NonLeafFinisher&lt;A,T&gt;::finish (7 samples, 1.06%)</title><rect x="80.8157%" y="277" width="1.0574%" height="15" fill="rgb(253,155,4)"/><text x="81.0657%" y="287.50"></text></g><g><title>broccoli::tree::analyze::builder::create_cont (1 samples, 0.15%)</title><rect x="81.7221%" y="261" width="0.1511%" height="15" fill="rgb(222,185,37)"/><text x="81.9721%" y="271.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::lt (1 samples, 0.15%)</title><rect x="81.7221%" y="245" width="0.1511%" height="15" fill="rgb(251,177,13)"/><text x="81.9721%" y="255.50"></text></g><g><title>axgeom::range::Range&lt;T&gt;::contains_ext (2 samples, 0.30%)</title><rect x="81.8731%" y="229" width="0.3021%" height="15" fill="rgb(250,179,40)"/><text x="82.1231%" y="239.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::lt (1 samples, 0.15%)</title><rect x="82.0242%" y="213" width="0.1511%" height="15" fill="rgb(242,44,2)"/><text x="82.2742%" y="223.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.15%)</title><rect x="82.1752%" y="229" width="0.1511%" height="15" fill="rgb(216,177,13)"/><text x="82.4252%" y="239.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.15%)</title><rect x="82.1752%" y="213" width="0.1511%" height="15" fill="rgb(216,106,43)"/><text x="82.4252%" y="223.50"></text></g><g><title>broccoli::tree::analyze::oned::bin_middle_left_right (4 samples, 0.60%)</title><rect x="81.8731%" y="245" width="0.6042%" height="15" fill="rgb(216,183,2)"/><text x="82.1231%" y="255.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.15%)</title><rect x="82.3263%" y="229" width="0.1511%" height="15" fill="rgb(249,75,3)"/><text x="82.5763%" y="239.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.15%)</title><rect x="83.2326%" y="165" width="0.1511%" height="15" fill="rgb(219,67,39)"/><text x="83.4826%" y="175.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.15%)</title><rect x="83.3837%" y="165" width="0.1511%" height="15" fill="rgb(253,228,2)"/><text x="83.6337%" y="175.50"></text></g><g><title>core::ptr::swap (2 samples, 0.30%)</title><rect x="83.5347%" y="165" width="0.3021%" height="15" fill="rgb(235,138,27)"/><text x="83.7847%" y="175.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.30%)</title><rect x="83.5347%" y="149" width="0.3021%" height="15" fill="rgb(236,97,51)"/><text x="83.7847%" y="159.50"></text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::create_non_leaf (14 samples, 2.11%)</title><rect x="81.8731%" y="277" width="2.1148%" height="15" fill="rgb(240,80,30)"/><text x="82.1231%" y="287.50">b..</text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf (14 samples, 2.11%)</title><rect x="81.8731%" y="261" width="2.1148%" height="15" fill="rgb(230,178,19)"/><text x="82.1231%" y="271.50">b..</text></g><g><title>pdqselect::select_by (10 samples, 1.51%)</title><rect x="82.4773%" y="245" width="1.5106%" height="15" fill="rgb(210,190,27)"/><text x="82.7273%" y="255.50"></text></g><g><title>pdqselect::quickselect (10 samples, 1.51%)</title><rect x="82.4773%" y="229" width="1.5106%" height="15" fill="rgb(222,107,31)"/><text x="82.7273%" y="239.50"></text></g><g><title>pdqselect::recurse (10 samples, 1.51%)</title><rect x="82.4773%" y="213" width="1.5106%" height="15" fill="rgb(216,127,34)"/><text x="82.7273%" y="223.50"></text></g><g><title>pdqselect::partition (10 samples, 1.51%)</title><rect x="82.4773%" y="197" width="1.5106%" height="15" fill="rgb(234,116,52)"/><text x="82.7273%" y="207.50"></text></g><g><title>pdqselect::partition_in_blocks (9 samples, 1.36%)</title><rect x="82.6284%" y="181" width="1.3595%" height="15" fill="rgb(222,124,15)"/><text x="82.8784%" y="191.50"></text></g><g><title>pdqselect::select_by::{{closure}} (1 samples, 0.15%)</title><rect x="83.8369%" y="165" width="0.1511%" height="15" fill="rgb(231,179,28)"/><text x="84.0869%" y="175.50"></text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf::{{closure}} (1 samples, 0.15%)</title><rect x="83.8369%" y="149" width="0.1511%" height="15" fill="rgb(226,93,45)"/><text x="84.0869%" y="159.50"></text></g><g><title>broccoli::util::compare_bots (1 samples, 0.15%)</title><rect x="83.8369%" y="133" width="0.1511%" height="15" fill="rgb(215,8,51)"/><text x="84.0869%" y="143.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.15%)</title><rect x="83.8369%" y="117" width="0.1511%" height="15" fill="rgb(223,106,5)"/><text x="84.0869%" y="127.50"></text></g><g><title>core::slice::sort::insertion_sort (2 samples, 0.30%)</title><rect x="83.9879%" y="165" width="0.3021%" height="15" fill="rgb(250,191,5)"/><text x="84.2379%" y="175.50"></text></g><g><title>core::slice::sort::shift_tail (2 samples, 0.30%)</title><rect x="83.9879%" y="149" width="0.3021%" height="15" fill="rgb(242,132,44)"/><text x="84.2379%" y="159.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by::{{closure}} (1 samples, 0.15%)</title><rect x="84.1390%" y="133" width="0.1511%" height="15" fill="rgb(251,152,29)"/><text x="84.3890%" y="143.50"></text></g><g><title>broccoli::util::sweeper_update::{{closure}} (1 samples, 0.15%)</title><rect x="84.1390%" y="117" width="0.1511%" height="15" fill="rgb(218,179,5)"/><text x="84.3890%" y="127.50"></text></g><g><title>broccoli::util::compare_bots (1 samples, 0.15%)</title><rect x="84.1390%" y="101" width="0.1511%" height="15" fill="rgb(227,67,19)"/><text x="84.3890%" y="111.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.15%)</title><rect x="84.1390%" y="85" width="0.1511%" height="15" fill="rgb(233,119,31)"/><text x="84.3890%" y="95.50"></text></g><g><title>&lt;broccoli::tree::analyze::DefaultSorter as broccoli::tree::analyze::Sorter&gt;::sort (3 samples, 0.45%)</title><rect x="83.9879%" y="245" width="0.4532%" height="15" fill="rgb(241,120,22)"/><text x="84.2379%" y="255.50"></text></g><g><title>broccoli::util::sweeper_update (3 samples, 0.45%)</title><rect x="83.9879%" y="229" width="0.4532%" height="15" fill="rgb(224,102,30)"/><text x="84.2379%" y="239.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by (3 samples, 0.45%)</title><rect x="83.9879%" y="213" width="0.4532%" height="15" fill="rgb(210,164,37)"/><text x="84.2379%" y="223.50"></text></g><g><title>core::slice::sort::quicksort (3 samples, 0.45%)</title><rect x="83.9879%" y="197" width="0.4532%" height="15" fill="rgb(226,191,16)"/><text x="84.2379%" y="207.50"></text></g><g><title>core::slice::sort::recurse (3 samples, 0.45%)</title><rect x="83.9879%" y="181" width="0.4532%" height="15" fill="rgb(214,40,45)"/><text x="84.2379%" y="191.50"></text></g><g><title>core::slice::sort::partition (1 samples, 0.15%)</title><rect x="84.2900%" y="165" width="0.1511%" height="15" fill="rgb(244,29,26)"/><text x="84.5400%" y="175.50"></text></g><g><title>broccoli::tree::analyze::builder::NonLeafFinisher&lt;A,T&gt;::finish (4 samples, 0.60%)</title><rect x="83.9879%" y="261" width="0.6042%" height="15" fill="rgb(216,16,5)"/><text x="84.2379%" y="271.50"></text></g><g><title>broccoli::tree::analyze::builder::create_cont (1 samples, 0.15%)</title><rect x="84.4411%" y="245" width="0.1511%" height="15" fill="rgb(249,76,35)"/><text x="84.6911%" y="255.50"></text></g><g><title>broccoli::tree::analyze::oned::bin_middle_left_right (3 samples, 0.45%)</title><rect x="84.5921%" y="229" width="0.4532%" height="15" fill="rgb(207,11,44)"/><text x="84.8421%" y="239.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.15%)</title><rect x="84.8943%" y="213" width="0.1511%" height="15" fill="rgb(228,190,49)"/><text x="85.1443%" y="223.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.15%)</title><rect x="84.8943%" y="197" width="0.1511%" height="15" fill="rgb(214,173,12)"/><text x="85.1443%" y="207.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.15%)</title><rect x="85.8006%" y="149" width="0.1511%" height="15" fill="rgb(218,26,35)"/><text x="86.0506%" y="159.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (2 samples, 0.30%)</title><rect x="85.9517%" y="149" width="0.3021%" height="15" fill="rgb(220,200,19)"/><text x="86.2017%" y="159.50"></text></g><g><title>core::ptr::swap (1 samples, 0.15%)</title><rect x="86.2538%" y="149" width="0.1511%" height="15" fill="rgb(239,95,49)"/><text x="86.5038%" y="159.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.15%)</title><rect x="86.2538%" y="133" width="0.1511%" height="15" fill="rgb(235,85,53)"/><text x="86.5038%" y="143.50"></text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::create_non_leaf (14 samples, 2.11%)</title><rect x="84.5921%" y="261" width="2.1148%" height="15" fill="rgb(233,133,31)"/><text x="84.8421%" y="271.50">b..</text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf (14 samples, 2.11%)</title><rect x="84.5921%" y="245" width="2.1148%" height="15" fill="rgb(218,25,20)"/><text x="84.8421%" y="255.50">b..</text></g><g><title>pdqselect::select_by (11 samples, 1.66%)</title><rect x="85.0453%" y="229" width="1.6616%" height="15" fill="rgb(252,210,38)"/><text x="85.2953%" y="239.50"></text></g><g><title>pdqselect::quickselect (11 samples, 1.66%)</title><rect x="85.0453%" y="213" width="1.6616%" height="15" fill="rgb(242,134,21)"/><text x="85.2953%" y="223.50"></text></g><g><title>pdqselect::recurse (11 samples, 1.66%)</title><rect x="85.0453%" y="197" width="1.6616%" height="15" fill="rgb(213,28,48)"/><text x="85.2953%" y="207.50"></text></g><g><title>pdqselect::partition (11 samples, 1.66%)</title><rect x="85.0453%" y="181" width="1.6616%" height="15" fill="rgb(250,196,2)"/><text x="85.2953%" y="191.50"></text></g><g><title>pdqselect::partition_in_blocks (9 samples, 1.36%)</title><rect x="85.3474%" y="165" width="1.3595%" height="15" fill="rgb(227,5,17)"/><text x="85.5974%" y="175.50"></text></g><g><title>pdqselect::select_by::{{closure}} (2 samples, 0.30%)</title><rect x="86.4048%" y="149" width="0.3021%" height="15" fill="rgb(221,226,24)"/><text x="86.6548%" y="159.50"></text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf::{{closure}} (2 samples, 0.30%)</title><rect x="86.4048%" y="133" width="0.3021%" height="15" fill="rgb(211,5,48)"/><text x="86.6548%" y="143.50"></text></g><g><title>broccoli::util::compare_bots (2 samples, 0.30%)</title><rect x="86.4048%" y="117" width="0.3021%" height="15" fill="rgb(219,150,6)"/><text x="86.6548%" y="127.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.15%)</title><rect x="86.5559%" y="101" width="0.1511%" height="15" fill="rgb(251,46,16)"/><text x="86.8059%" y="111.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.15%)</title><rect x="87.0091%" y="117" width="0.1511%" height="15" fill="rgb(220,204,40)"/><text x="87.2591%" y="127.50"></text></g><g><title>&lt;core::slice::sort::CopyOnDrop&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.15%)</title><rect x="87.0091%" y="101" width="0.1511%" height="15" fill="rgb(211,85,2)"/><text x="87.2591%" y="111.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.15%)</title><rect x="87.0091%" y="85" width="0.1511%" height="15" fill="rgb(229,17,7)"/><text x="87.2591%" y="95.50"></text></g><g><title>core::slice::sort::insertion_sort (5 samples, 0.76%)</title><rect x="86.7069%" y="149" width="0.7553%" height="15" fill="rgb(239,72,28)"/><text x="86.9569%" y="159.50"></text></g><g><title>core::slice::sort::shift_tail (5 samples, 0.76%)</title><rect x="86.7069%" y="133" width="0.7553%" height="15" fill="rgb(230,47,54)"/><text x="86.9569%" y="143.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by::{{closure}} (2 samples, 0.30%)</title><rect x="87.1601%" y="117" width="0.3021%" height="15" fill="rgb(214,50,8)"/><text x="87.4101%" y="127.50"></text></g><g><title>broccoli::util::sweeper_update::{{closure}} (2 samples, 0.30%)</title><rect x="87.1601%" y="101" width="0.3021%" height="15" fill="rgb(216,198,43)"/><text x="87.4101%" y="111.50"></text></g><g><title>broccoli::util::compare_bots (2 samples, 0.30%)</title><rect x="87.1601%" y="85" width="0.3021%" height="15" fill="rgb(234,20,35)"/><text x="87.4101%" y="95.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (2 samples, 0.30%)</title><rect x="87.1601%" y="69" width="0.3021%" height="15" fill="rgb(254,45,19)"/><text x="87.4101%" y="79.50"></text></g><g><title>core::slice::sort::partition (2 samples, 0.30%)</title><rect x="87.4622%" y="149" width="0.3021%" height="15" fill="rgb(219,14,44)"/><text x="87.7122%" y="159.50"></text></g><g><title>core::slice::sort::partition_in_blocks (2 samples, 0.30%)</title><rect x="87.4622%" y="133" width="0.3021%" height="15" fill="rgb(217,220,26)"/><text x="87.7122%" y="143.50"></text></g><g><title>core::ptr::swap (1 samples, 0.15%)</title><rect x="87.6133%" y="117" width="0.1511%" height="15" fill="rgb(213,158,28)"/><text x="87.8633%" y="127.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.15%)</title><rect x="87.6133%" y="101" width="0.1511%" height="15" fill="rgb(252,51,52)"/><text x="87.8633%" y="111.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.30%)</title><rect x="87.7644%" y="101" width="0.3021%" height="15" fill="rgb(246,89,16)"/><text x="88.0144%" y="111.50"></text></g><g><title>&lt;core::slice::sort::CopyOnDrop&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.30%)</title><rect x="87.7644%" y="85" width="0.3021%" height="15" fill="rgb(216,158,49)"/><text x="88.0144%" y="95.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.30%)</title><rect x="87.7644%" y="69" width="0.3021%" height="15" fill="rgb(236,107,19)"/><text x="88.0144%" y="79.50"></text></g><g><title>&lt;broccoli::tree::analyze::DefaultSorter as broccoli::tree::analyze::Sorter&gt;::sort (10 samples, 1.51%)</title><rect x="86.7069%" y="229" width="1.5106%" height="15" fill="rgb(228,185,30)"/><text x="86.9569%" y="239.50"></text></g><g><title>broccoli::util::sweeper_update (10 samples, 1.51%)</title><rect x="86.7069%" y="213" width="1.5106%" height="15" fill="rgb(246,134,8)"/><text x="86.9569%" y="223.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by (10 samples, 1.51%)</title><rect x="86.7069%" y="197" width="1.5106%" height="15" fill="rgb(214,143,50)"/><text x="86.9569%" y="207.50"></text></g><g><title>core::slice::sort::quicksort (10 samples, 1.51%)</title><rect x="86.7069%" y="181" width="1.5106%" height="15" fill="rgb(228,75,8)"/><text x="86.9569%" y="191.50"></text></g><g><title>core::slice::sort::recurse (10 samples, 1.51%)</title><rect x="86.7069%" y="165" width="1.5106%" height="15" fill="rgb(207,175,4)"/><text x="86.9569%" y="175.50"></text></g><g><title>core::slice::sort::recurse (3 samples, 0.45%)</title><rect x="87.7644%" y="149" width="0.4532%" height="15" fill="rgb(205,108,24)"/><text x="88.0144%" y="159.50"></text></g><g><title>core::slice::sort::insertion_sort (3 samples, 0.45%)</title><rect x="87.7644%" y="133" width="0.4532%" height="15" fill="rgb(244,120,49)"/><text x="88.0144%" y="143.50"></text></g><g><title>core::slice::sort::shift_tail (3 samples, 0.45%)</title><rect x="87.7644%" y="117" width="0.4532%" height="15" fill="rgb(223,47,38)"/><text x="88.0144%" y="127.50"></text></g><g><title>core::ptr::read (1 samples, 0.15%)</title><rect x="88.0665%" y="101" width="0.1511%" height="15" fill="rgb(229,179,11)"/><text x="88.3165%" y="111.50"></text></g><g><title>broccoli::tree::analyze::builder::NonLeafFinisher&lt;A,T&gt;::finish (11 samples, 1.66%)</title><rect x="86.7069%" y="245" width="1.6616%" height="15" fill="rgb(231,122,1)"/><text x="86.9569%" y="255.50"></text></g><g><title>broccoli::tree::analyze::builder::create_cont (1 samples, 0.15%)</title><rect x="88.2175%" y="229" width="0.1511%" height="15" fill="rgb(245,119,9)"/><text x="88.4675%" y="239.50"></text></g><g><title>broccoli::tree::analyze::oned::bin_middle_left_right (1 samples, 0.15%)</title><rect x="88.3686%" y="213" width="0.1511%" height="15" fill="rgb(241,163,25)"/><text x="88.6186%" y="223.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.15%)</title><rect x="88.3686%" y="197" width="0.1511%" height="15" fill="rgb(217,214,3)"/><text x="88.6186%" y="207.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.15%)</title><rect x="88.3686%" y="181" width="0.1511%" height="15" fill="rgb(240,86,28)"/><text x="88.6186%" y="191.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.15%)</title><rect x="89.5770%" y="133" width="0.1511%" height="15" fill="rgb(215,47,9)"/><text x="89.8270%" y="143.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (1 samples, 0.15%)</title><rect x="89.5770%" y="117" width="0.1511%" height="15" fill="rgb(252,25,45)"/><text x="89.8270%" y="127.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (1 samples, 0.15%)</title><rect x="89.5770%" y="101" width="0.1511%" height="15" fill="rgb(251,164,9)"/><text x="89.8270%" y="111.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (4 samples, 0.60%)</title><rect x="89.7281%" y="133" width="0.6042%" height="15" fill="rgb(233,194,0)"/><text x="89.9781%" y="143.50"></text></g><g><title>core::ptr::swap (2 samples, 0.30%)</title><rect x="90.3323%" y="133" width="0.3021%" height="15" fill="rgb(249,111,24)"/><text x="90.5823%" y="143.50"></text></g><g><title>core::intrinsics::copy (2 samples, 0.30%)</title><rect x="90.3323%" y="117" width="0.3021%" height="15" fill="rgb(250,223,3)"/><text x="90.5823%" y="127.50"></text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::create_non_leaf (16 samples, 2.42%)</title><rect x="88.3686%" y="245" width="2.4169%" height="15" fill="rgb(236,178,37)"/><text x="88.6186%" y="255.50">br..</text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf (16 samples, 2.42%)</title><rect x="88.3686%" y="229" width="2.4169%" height="15" fill="rgb(241,158,50)"/><text x="88.6186%" y="239.50">br..</text></g><g><title>pdqselect::select_by (15 samples, 2.27%)</title><rect x="88.5196%" y="213" width="2.2659%" height="15" fill="rgb(213,121,41)"/><text x="88.7696%" y="223.50">p..</text></g><g><title>pdqselect::quickselect (15 samples, 2.27%)</title><rect x="88.5196%" y="197" width="2.2659%" height="15" fill="rgb(240,92,3)"/><text x="88.7696%" y="207.50">p..</text></g><g><title>pdqselect::recurse (15 samples, 2.27%)</title><rect x="88.5196%" y="181" width="2.2659%" height="15" fill="rgb(205,123,3)"/><text x="88.7696%" y="191.50">p..</text></g><g><title>pdqselect::partition (15 samples, 2.27%)</title><rect x="88.5196%" y="165" width="2.2659%" height="15" fill="rgb(205,97,47)"/><text x="88.7696%" y="175.50">p..</text></g><g><title>pdqselect::partition_in_blocks (13 samples, 1.96%)</title><rect x="88.8218%" y="149" width="1.9637%" height="15" fill="rgb(247,152,14)"/><text x="89.0718%" y="159.50">p..</text></g><g><title>pdqselect::select_by::{{closure}} (1 samples, 0.15%)</title><rect x="90.6344%" y="133" width="0.1511%" height="15" fill="rgb(248,195,53)"/><text x="90.8844%" y="143.50"></text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf::{{closure}} (1 samples, 0.15%)</title><rect x="90.6344%" y="117" width="0.1511%" height="15" fill="rgb(226,201,16)"/><text x="90.8844%" y="127.50"></text></g><g><title>broccoli::util::compare_bots (1 samples, 0.15%)</title><rect x="90.6344%" y="101" width="0.1511%" height="15" fill="rgb(205,98,0)"/><text x="90.8844%" y="111.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.15%)</title><rect x="90.6344%" y="85" width="0.1511%" height="15" fill="rgb(214,191,48)"/><text x="90.8844%" y="95.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.15%)</title><rect x="90.7855%" y="229" width="0.1511%" height="15" fill="rgb(237,112,39)"/><text x="91.0355%" y="239.50"></text></g><g><title>core::ptr::write (1 samples, 0.15%)</title><rect x="90.7855%" y="213" width="0.1511%" height="15" fill="rgb(247,203,27)"/><text x="91.0355%" y="223.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.30%)</title><rect x="90.9366%" y="101" width="0.3021%" height="15" fill="rgb(235,124,28)"/><text x="91.1866%" y="111.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.45%)</title><rect x="91.2387%" y="101" width="0.4532%" height="15" fill="rgb(208,207,46)"/><text x="91.4887%" y="111.50"></text></g><g><title>&lt;core::slice::sort::CopyOnDrop&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.45%)</title><rect x="91.2387%" y="85" width="0.4532%" height="15" fill="rgb(234,176,4)"/><text x="91.4887%" y="95.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.45%)</title><rect x="91.2387%" y="69" width="0.4532%" height="15" fill="rgb(230,133,28)"/><text x="91.4887%" y="79.50"></text></g><g><title>&lt;broccoli::tree::analyze::DefaultSorter as broccoli::tree::analyze::Sorter&gt;::sort (6 samples, 0.91%)</title><rect x="90.9366%" y="213" width="0.9063%" height="15" fill="rgb(211,137,40)"/><text x="91.1866%" y="223.50"></text></g><g><title>broccoli::util::sweeper_update (6 samples, 0.91%)</title><rect x="90.9366%" y="197" width="0.9063%" height="15" fill="rgb(254,35,13)"/><text x="91.1866%" y="207.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by (6 samples, 0.91%)</title><rect x="90.9366%" y="181" width="0.9063%" height="15" fill="rgb(225,49,51)"/><text x="91.1866%" y="191.50"></text></g><g><title>core::slice::sort::quicksort (6 samples, 0.91%)</title><rect x="90.9366%" y="165" width="0.9063%" height="15" fill="rgb(251,10,15)"/><text x="91.1866%" y="175.50"></text></g><g><title>core::slice::sort::recurse (6 samples, 0.91%)</title><rect x="90.9366%" y="149" width="0.9063%" height="15" fill="rgb(228,207,15)"/><text x="91.1866%" y="159.50"></text></g><g><title>core::slice::sort::insertion_sort (6 samples, 0.91%)</title><rect x="90.9366%" y="133" width="0.9063%" height="15" fill="rgb(241,99,19)"/><text x="91.1866%" y="143.50"></text></g><g><title>core::slice::sort::shift_tail (6 samples, 0.91%)</title><rect x="90.9366%" y="117" width="0.9063%" height="15" fill="rgb(207,104,49)"/><text x="91.1866%" y="127.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by::{{closure}} (1 samples, 0.15%)</title><rect x="91.6918%" y="101" width="0.1511%" height="15" fill="rgb(234,99,18)"/><text x="91.9418%" y="111.50"></text></g><g><title>broccoli::util::sweeper_update::{{closure}} (1 samples, 0.15%)</title><rect x="91.6918%" y="85" width="0.1511%" height="15" fill="rgb(213,191,49)"/><text x="91.9418%" y="95.50"></text></g><g><title>broccoli::util::compare_bots (1 samples, 0.15%)</title><rect x="91.6918%" y="69" width="0.1511%" height="15" fill="rgb(210,226,19)"/><text x="91.9418%" y="79.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.15%)</title><rect x="91.6918%" y="53" width="0.1511%" height="15" fill="rgb(229,97,18)"/><text x="91.9418%" y="63.50"></text></g><g><title>broccoli::tree::analyze::builder::NonLeafFinisher&lt;A,T&gt;::finish (8 samples, 1.21%)</title><rect x="90.9366%" y="229" width="1.2085%" height="15" fill="rgb(211,167,15)"/><text x="91.1866%" y="239.50"></text></g><g><title>broccoli::tree::analyze::builder::create_cont (2 samples, 0.30%)</title><rect x="91.8429%" y="213" width="0.3021%" height="15" fill="rgb(210,169,34)"/><text x="92.0929%" y="223.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::lt (1 samples, 0.15%)</title><rect x="91.9940%" y="197" width="0.1511%" height="15" fill="rgb(241,121,31)"/><text x="92.2440%" y="207.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.15%)</title><rect x="92.2961%" y="181" width="0.1511%" height="15" fill="rgb(232,40,11)"/><text x="92.5461%" y="191.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.15%)</title><rect x="92.2961%" y="165" width="0.1511%" height="15" fill="rgb(205,86,26)"/><text x="92.5461%" y="175.50"></text></g><g><title>core::intrinsics::copy (2 samples, 0.30%)</title><rect x="92.7492%" y="149" width="0.3021%" height="15" fill="rgb(231,126,28)"/><text x="92.9992%" y="159.50"></text></g><g><title>broccoli::tree::analyze::oned::bin_middle_left_right (7 samples, 1.06%)</title><rect x="92.1450%" y="197" width="1.0574%" height="15" fill="rgb(219,221,18)"/><text x="92.3950%" y="207.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (5 samples, 0.76%)</title><rect x="92.4471%" y="181" width="0.7553%" height="15" fill="rgb(211,40,0)"/><text x="92.6971%" y="191.50"></text></g><g><title>core::ptr::swap (3 samples, 0.45%)</title><rect x="92.7492%" y="165" width="0.4532%" height="15" fill="rgb(239,85,43)"/><text x="92.9992%" y="175.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.15%)</title><rect x="93.0514%" y="149" width="0.1511%" height="15" fill="rgb(231,55,21)"/><text x="93.3014%" y="159.50"></text></g><g><title>pdqselect::choose_pivot (1 samples, 0.15%)</title><rect x="93.5045%" y="149" width="0.1511%" height="15" fill="rgb(225,184,43)"/><text x="93.7545%" y="159.50"></text></g><g><title>pdqselect::choose_pivot::{{closure}} (1 samples, 0.15%)</title><rect x="93.5045%" y="133" width="0.1511%" height="15" fill="rgb(251,158,41)"/><text x="93.7545%" y="143.50"></text></g><g><title>pdqselect::choose_pivot::{{closure}} (1 samples, 0.15%)</title><rect x="93.5045%" y="117" width="0.1511%" height="15" fill="rgb(234,159,37)"/><text x="93.7545%" y="127.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.30%)</title><rect x="93.6556%" y="133" width="0.3021%" height="15" fill="rgb(216,204,22)"/><text x="93.9056%" y="143.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.15%)</title><rect x="94.1088%" y="117" width="0.1511%" height="15" fill="rgb(214,17,3)"/><text x="94.3588%" y="127.50"></text></g><g><title>&lt;pdqselect::CopyOnDrop&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.15%)</title><rect x="94.1088%" y="101" width="0.1511%" height="15" fill="rgb(212,111,17)"/><text x="94.3588%" y="111.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.15%)</title><rect x="94.1088%" y="85" width="0.1511%" height="15" fill="rgb(221,157,24)"/><text x="94.3588%" y="95.50"></text></g><g><title>core::ptr::read (1 samples, 0.15%)</title><rect x="94.2598%" y="117" width="0.1511%" height="15" fill="rgb(252,16,13)"/><text x="94.5098%" y="127.50"></text></g><g><title>pdqselect::insertion_sort (6 samples, 0.91%)</title><rect x="93.6556%" y="149" width="0.9063%" height="15" fill="rgb(221,62,2)"/><text x="93.9056%" y="159.50"></text></g><g><title>pdqselect::shift_tail (4 samples, 0.60%)</title><rect x="93.9577%" y="133" width="0.6042%" height="15" fill="rgb(247,87,22)"/><text x="94.2077%" y="143.50"></text></g><g><title>pdqselect::select_by::{{closure}} (1 samples, 0.15%)</title><rect x="94.4109%" y="117" width="0.1511%" height="15" fill="rgb(215,73,9)"/><text x="94.6609%" y="127.50"></text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf::{{closure}} (1 samples, 0.15%)</title><rect x="94.4109%" y="101" width="0.1511%" height="15" fill="rgb(207,175,33)"/><text x="94.6609%" y="111.50"></text></g><g><title>broccoli::util::compare_bots (1 samples, 0.15%)</title><rect x="94.4109%" y="85" width="0.1511%" height="15" fill="rgb(243,129,54)"/><text x="94.6609%" y="95.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.15%)</title><rect x="94.4109%" y="69" width="0.1511%" height="15" fill="rgb(227,119,45)"/><text x="94.6609%" y="79.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.15%)</title><rect x="95.0151%" y="117" width="0.1511%" height="15" fill="rgb(205,109,36)"/><text x="95.2651%" y="127.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.15%)</title><rect x="95.1662%" y="117" width="0.1511%" height="15" fill="rgb(205,6,39)"/><text x="95.4162%" y="127.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.15%)</title><rect x="95.3172%" y="117" width="0.1511%" height="15" fill="rgb(221,32,16)"/><text x="95.5672%" y="127.50"></text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::create_non_leaf (23 samples, 3.47%)</title><rect x="92.1450%" y="229" width="3.4743%" height="15" fill="rgb(228,144,50)"/><text x="92.3950%" y="239.50">bro..</text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf (23 samples, 3.47%)</title><rect x="92.1450%" y="213" width="3.4743%" height="15" fill="rgb(229,201,53)"/><text x="92.3950%" y="223.50">bro..</text></g><g><title>pdqselect::select_by (16 samples, 2.42%)</title><rect x="93.2024%" y="197" width="2.4169%" height="15" fill="rgb(249,153,27)"/><text x="93.4524%" y="207.50">pd..</text></g><g><title>pdqselect::quickselect (16 samples, 2.42%)</title><rect x="93.2024%" y="181" width="2.4169%" height="15" fill="rgb(227,106,25)"/><text x="93.4524%" y="191.50">pd..</text></g><g><title>pdqselect::recurse (16 samples, 2.42%)</title><rect x="93.2024%" y="165" width="2.4169%" height="15" fill="rgb(230,65,29)"/><text x="93.4524%" y="175.50">pd..</text></g><g><title>pdqselect::partition (7 samples, 1.06%)</title><rect x="94.5619%" y="149" width="1.0574%" height="15" fill="rgb(221,57,46)"/><text x="94.8119%" y="159.50"></text></g><g><title>pdqselect::partition_in_blocks (6 samples, 0.91%)</title><rect x="94.7130%" y="133" width="0.9063%" height="15" fill="rgb(229,161,17)"/><text x="94.9630%" y="143.50"></text></g><g><title>core::ptr::read (1 samples, 0.15%)</title><rect x="95.4683%" y="117" width="0.1511%" height="15" fill="rgb(222,213,11)"/><text x="95.7183%" y="127.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.15%)</title><rect x="95.6193%" y="197" width="0.1511%" height="15" fill="rgb(235,35,13)"/><text x="95.8693%" y="207.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.15%)</title><rect x="95.6193%" y="181" width="0.1511%" height="15" fill="rgb(233,158,34)"/><text x="95.8693%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (2 samples, 0.30%)</title><rect x="95.6193%" y="213" width="0.3021%" height="15" fill="rgb(215,151,48)"/><text x="95.8693%" y="223.50"></text></g><g><title>core::ptr::write (1 samples, 0.15%)</title><rect x="95.7704%" y="197" width="0.1511%" height="15" fill="rgb(229,84,14)"/><text x="96.0204%" y="207.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.30%)</title><rect x="95.9215%" y="101" width="0.3021%" height="15" fill="rgb(229,68,14)"/><text x="96.1715%" y="111.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.15%)</title><rect x="96.0725%" y="85" width="0.1511%" height="15" fill="rgb(243,106,26)"/><text x="96.3225%" y="95.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.15%)</title><rect x="96.3746%" y="85" width="0.1511%" height="15" fill="rgb(206,45,38)"/><text x="96.6246%" y="95.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.45%)</title><rect x="96.5257%" y="85" width="0.4532%" height="15" fill="rgb(226,6,15)"/><text x="96.7757%" y="95.50"></text></g><g><title>&lt;core::slice::sort::CopyOnDrop&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.45%)</title><rect x="96.5257%" y="69" width="0.4532%" height="15" fill="rgb(232,22,54)"/><text x="96.7757%" y="79.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.45%)</title><rect x="96.5257%" y="53" width="0.4532%" height="15" fill="rgb(229,222,32)"/><text x="96.7757%" y="63.50"></text></g><g><title>core::ptr::read (1 samples, 0.15%)</title><rect x="96.9789%" y="85" width="0.1511%" height="15" fill="rgb(228,62,29)"/><text x="97.2289%" y="95.50"></text></g><g><title>core::slice::sort::insertion_sort (9 samples, 1.36%)</title><rect x="95.9215%" y="117" width="1.3595%" height="15" fill="rgb(251,103,34)"/><text x="96.1715%" y="127.50"></text></g><g><title>core::slice::sort::shift_tail (7 samples, 1.06%)</title><rect x="96.2236%" y="101" width="1.0574%" height="15" fill="rgb(233,12,30)"/><text x="96.4736%" y="111.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by::{{closure}} (1 samples, 0.15%)</title><rect x="97.1299%" y="85" width="0.1511%" height="15" fill="rgb(238,52,0)"/><text x="97.3799%" y="95.50"></text></g><g><title>broccoli::util::sweeper_update::{{closure}} (1 samples, 0.15%)</title><rect x="97.1299%" y="69" width="0.1511%" height="15" fill="rgb(223,98,5)"/><text x="97.3799%" y="79.50"></text></g><g><title>broccoli::util::compare_bots (1 samples, 0.15%)</title><rect x="97.1299%" y="53" width="0.1511%" height="15" fill="rgb(228,75,37)"/><text x="97.3799%" y="63.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.15%)</title><rect x="97.1299%" y="37" width="0.1511%" height="15" fill="rgb(205,115,49)"/><text x="97.3799%" y="47.50"></text></g><g><title>core::slice::sort::partition (2 samples, 0.30%)</title><rect x="97.2810%" y="117" width="0.3021%" height="15" fill="rgb(250,154,43)"/><text x="97.5310%" y="127.50"></text></g><g><title>core::slice::sort::partition_in_blocks (2 samples, 0.30%)</title><rect x="97.2810%" y="101" width="0.3021%" height="15" fill="rgb(226,43,29)"/><text x="97.5310%" y="111.50"></text></g><g><title>&lt;broccoli::tree::analyze::DefaultSorter as broccoli::tree::analyze::Sorter&gt;::sort (12 samples, 1.81%)</title><rect x="95.9215%" y="197" width="1.8127%" height="15" fill="rgb(249,228,39)"/><text x="96.1715%" y="207.50">&lt;..</text></g><g><title>broccoli::util::sweeper_update (12 samples, 1.81%)</title><rect x="95.9215%" y="181" width="1.8127%" height="15" fill="rgb(216,79,43)"/><text x="96.1715%" y="191.50">b..</text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by (12 samples, 1.81%)</title><rect x="95.9215%" y="165" width="1.8127%" height="15" fill="rgb(228,95,12)"/><text x="96.1715%" y="175.50">c..</text></g><g><title>core::slice::sort::quicksort (12 samples, 1.81%)</title><rect x="95.9215%" y="149" width="1.8127%" height="15" fill="rgb(249,221,15)"/><text x="96.1715%" y="159.50">c..</text></g><g><title>core::slice::sort::recurse (12 samples, 1.81%)</title><rect x="95.9215%" y="133" width="1.8127%" height="15" fill="rgb(233,34,13)"/><text x="96.1715%" y="143.50">c..</text></g><g><title>core::slice::sort::recurse (1 samples, 0.15%)</title><rect x="97.5831%" y="117" width="0.1511%" height="15" fill="rgb(214,103,39)"/><text x="97.8331%" y="127.50"></text></g><g><title>core::slice::sort::insertion_sort (1 samples, 0.15%)</title><rect x="97.5831%" y="101" width="0.1511%" height="15" fill="rgb(251,126,39)"/><text x="97.8331%" y="111.50"></text></g><g><title>core::slice::sort::shift_tail (1 samples, 0.15%)</title><rect x="97.5831%" y="85" width="0.1511%" height="15" fill="rgb(214,216,36)"/><text x="97.8331%" y="95.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.15%)</title><rect x="97.5831%" y="69" width="0.1511%" height="15" fill="rgb(220,221,8)"/><text x="97.8331%" y="79.50"></text></g><g><title>&lt;core::slice::sort::CopyOnDrop&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.15%)</title><rect x="97.5831%" y="53" width="0.1511%" height="15" fill="rgb(240,216,3)"/><text x="97.8331%" y="63.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.15%)</title><rect x="97.5831%" y="37" width="0.1511%" height="15" fill="rgb(232,218,17)"/><text x="97.8331%" y="47.50"></text></g><g><title>data_gen::support::bench_closure (612 samples, 92.45%)</title><rect x="5.7402%" y="485" width="92.4471%" height="15" fill="rgb(229,163,45)"/><text x="5.9902%" y="495.50">data_gen::support::bench_closure</text></g><g><title>data_gen::support::bench_closure_ret (612 samples, 92.45%)</title><rect x="5.7402%" y="469" width="92.4471%" height="15" fill="rgb(231,110,42)"/><text x="5.9902%" y="479.50">data_gen::support::bench_closure_ret</text></g><g><title>data_gen::main::{{closure}} (612 samples, 92.45%)</title><rect x="5.7402%" y="453" width="92.4471%" height="15" fill="rgb(208,170,48)"/><text x="5.9902%" y="463.50">data_gen::main::{{closure}}</text></g><g><title>broccoli::tree::new (196 samples, 29.61%)</title><rect x="68.5801%" y="437" width="29.6073%" height="15" fill="rgb(239,116,25)"/><text x="68.8301%" y="447.50">broccoli::tree::new</text></g><g><title>broccoli::tree::analyze::builder::TreeBuilder&lt;A,T&gt;::build_seq (196 samples, 29.61%)</title><rect x="68.5801%" y="421" width="29.6073%" height="15" fill="rgb(219,200,50)"/><text x="68.8301%" y="431.50">broccoli::tree::analyze::builder::TreeBuilder&lt;A,..</text></g><g><title>broccoli::tree::analyze::builder::create_tree_seq (196 samples, 29.61%)</title><rect x="68.5801%" y="405" width="29.6073%" height="15" fill="rgb(245,200,0)"/><text x="68.8301%" y="415.50">broccoli::tree::analyze::builder::create_tree_seq</text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::recurse_preorder_seq (196 samples, 29.61%)</title><rect x="68.5801%" y="389" width="29.6073%" height="15" fill="rgb(245,119,33)"/><text x="68.8301%" y="399.50">broccoli::tree::analyze::builder::Recurser&lt;T,K,S..</text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::recurse_preorder_seq (181 samples, 27.34%)</title><rect x="70.8459%" y="373" width="27.3414%" height="15" fill="rgb(231,125,12)"/><text x="71.0959%" y="383.50">broccoli::tree::analyze::builder::Recurser&lt;T..</text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::recurse_preorder_seq (167 samples, 25.23%)</title><rect x="72.9607%" y="357" width="25.2266%" height="15" fill="rgb(216,96,41)"/><text x="73.2107%" y="367.50">broccoli::tree::analyze::builder::Recurs..</text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::recurse_preorder_seq (156 samples, 23.56%)</title><rect x="74.6224%" y="341" width="23.5650%" height="15" fill="rgb(248,43,45)"/><text x="74.8724%" y="351.50">broccoli::tree::analyze::builder::Rec..</text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::recurse_preorder_seq (141 samples, 21.30%)</title><rect x="76.8882%" y="325" width="21.2991%" height="15" fill="rgb(217,222,7)"/><text x="77.1382%" y="335.50">broccoli::tree::analyze::builder::..</text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::recurse_preorder_seq (127 samples, 19.18%)</title><rect x="79.0030%" y="309" width="19.1843%" height="15" fill="rgb(233,28,6)"/><text x="79.2530%" y="319.50">broccoli::tree::analyze::build..</text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::recurse_preorder_seq (115 samples, 17.37%)</title><rect x="80.8157%" y="293" width="17.3716%" height="15" fill="rgb(231,218,15)"/><text x="81.0657%" y="303.50">broccoli::tree::analyze::bu..</text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::recurse_preorder_seq (94 samples, 14.20%)</title><rect x="83.9879%" y="277" width="14.1994%" height="15" fill="rgb(226,171,48)"/><text x="84.2379%" y="287.50">broccoli::tree::analyz..</text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::recurse_preorder_seq (76 samples, 11.48%)</title><rect x="86.7069%" y="261" width="11.4804%" height="15" fill="rgb(235,201,9)"/><text x="86.9569%" y="271.50">broccoli::tree::a..</text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::recurse_preorder_seq (49 samples, 7.40%)</title><rect x="90.7855%" y="245" width="7.4018%" height="15" fill="rgb(217,80,15)"/><text x="91.0355%" y="255.50">broccoli::..</text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::recurse_preorder_seq (17 samples, 2.57%)</title><rect x="95.6193%" y="229" width="2.5680%" height="15" fill="rgb(219,152,8)"/><text x="95.8693%" y="239.50">br..</text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::create_leaf (15 samples, 2.27%)</title><rect x="95.9215%" y="213" width="2.2659%" height="15" fill="rgb(243,107,38)"/><text x="96.1715%" y="223.50">b..</text></g><g><title>broccoli::tree::analyze::builder::create_cont (3 samples, 0.45%)</title><rect x="97.7341%" y="197" width="0.4532%" height="15" fill="rgb(231,17,5)"/><text x="97.9841%" y="207.50"></text></g><g><title>do_sin (1 samples, 0.15%)</title><rect x="98.3384%" y="229" width="0.1511%" height="15" fill="rgb(209,25,54)"/><text x="98.5884%" y="239.50"></text></g><g><title>data_gen::support::distribute (3 samples, 0.45%)</title><rect x="98.1873%" y="485" width="0.4532%" height="15" fill="rgb(219,0,2)"/><text x="98.4373%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 0.45%)</title><rect x="98.1873%" y="469" width="0.4532%" height="15" fill="rgb(246,9,5)"/><text x="98.4373%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3 samples, 0.45%)</title><rect x="98.1873%" y="453" width="0.4532%" height="15" fill="rgb(226,159,4)"/><text x="98.4373%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.45%)</title><rect x="98.1873%" y="437" width="0.4532%" height="15" fill="rgb(219,175,34)"/><text x="98.4373%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (3 samples, 0.45%)</title><rect x="98.1873%" y="421" width="0.4532%" height="15" fill="rgb(236,10,46)"/><text x="98.4373%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.45%)</title><rect x="98.1873%" y="405" width="0.4532%" height="15" fill="rgb(240,211,16)"/><text x="98.4373%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.45%)</title><rect x="98.1873%" y="389" width="0.4532%" height="15" fill="rgb(205,3,43)"/><text x="98.4373%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.45%)</title><rect x="98.1873%" y="373" width="0.4532%" height="15" fill="rgb(245,7,22)"/><text x="98.4373%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.45%)</title><rect x="98.1873%" y="357" width="0.4532%" height="15" fill="rgb(239,132,32)"/><text x="98.4373%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.45%)</title><rect x="98.1873%" y="341" width="0.4532%" height="15" fill="rgb(228,202,34)"/><text x="98.4373%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (3 samples, 0.45%)</title><rect x="98.1873%" y="325" width="0.4532%" height="15" fill="rgb(254,200,22)"/><text x="98.4373%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.45%)</title><rect x="98.1873%" y="309" width="0.4532%" height="15" fill="rgb(219,10,39)"/><text x="98.4373%" y="319.50"></text></g><g><title>&lt;core::iter::sources::RepeatWith&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.45%)</title><rect x="98.1873%" y="293" width="0.4532%" height="15" fill="rgb(226,210,39)"/><text x="98.4373%" y="303.50"></text></g><g><title>dists::spiral_iter::{{closure}} (3 samples, 0.45%)</title><rect x="98.1873%" y="277" width="0.4532%" height="15" fill="rgb(208,219,16)"/><text x="98.4373%" y="287.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::cos (3 samples, 0.45%)</title><rect x="98.1873%" y="261" width="0.4532%" height="15" fill="rgb(216,158,51)"/><text x="98.4373%" y="271.50"></text></g><g><title>__sincos (3 samples, 0.45%)</title><rect x="98.1873%" y="245" width="0.4532%" height="15" fill="rgb(233,14,44)"/><text x="98.4373%" y="255.50"></text></g><g><title>reduce_sincos (1 samples, 0.15%)</title><rect x="98.4894%" y="229" width="0.1511%" height="15" fill="rgb(237,97,39)"/><text x="98.7394%" y="239.50"></text></g><g><title>num_cpus::get_physical (1 samples, 0.15%)</title><rect x="98.6405%" y="485" width="0.1511%" height="15" fill="rgb(218,198,43)"/><text x="98.8905%" y="495.50"></text></g><g><title>num_cpus::linux::get_num_physical_cpus (1 samples, 0.15%)</title><rect x="98.6405%" y="469" width="0.1511%" height="15" fill="rgb(231,104,20)"/><text x="98.8905%" y="479.50"></text></g><g><title>std::fs::File::open (1 samples, 0.15%)</title><rect x="98.6405%" y="453" width="0.1511%" height="15" fill="rgb(254,36,13)"/><text x="98.8905%" y="463.50"></text></g><g><title>std::fs::OpenOptions::open (1 samples, 0.15%)</title><rect x="98.6405%" y="437" width="0.1511%" height="15" fill="rgb(248,14,50)"/><text x="98.8905%" y="447.50"></text></g><g><title>std::fs::OpenOptions::_open (1 samples, 0.15%)</title><rect x="98.6405%" y="421" width="0.1511%" height="15" fill="rgb(217,107,29)"/><text x="98.8905%" y="431.50"></text></g><g><title>std::sys::unix::fs::File::open (1 samples, 0.15%)</title><rect x="98.6405%" y="405" width="0.1511%" height="15" fill="rgb(251,169,33)"/><text x="98.8905%" y="415.50"></text></g><g><title>std::sys::unix::fs::File::open_c (1 samples, 0.15%)</title><rect x="98.6405%" y="389" width="0.1511%" height="15" fill="rgb(217,108,32)"/><text x="98.8905%" y="399.50"></text></g><g><title>std::sys::unix::cvt_r (1 samples, 0.15%)</title><rect x="98.6405%" y="373" width="0.1511%" height="15" fill="rgb(219,66,42)"/><text x="98.8905%" y="383.50"></text></g><g><title>std::sys::unix::fs::File::open_c::{{closure}} (1 samples, 0.15%)</title><rect x="98.6405%" y="357" width="0.1511%" height="15" fill="rgb(206,180,7)"/><text x="98.8905%" y="367.50"></text></g><g><title>__libc_open64 (1 samples, 0.15%)</title><rect x="98.6405%" y="341" width="0.1511%" height="15" fill="rgb(208,226,31)"/><text x="98.8905%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="98.6405%" y="325" width="0.1511%" height="15" fill="rgb(218,26,49)"/><text x="98.8905%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="98.6405%" y="309" width="0.1511%" height="15" fill="rgb(233,197,48)"/><text x="98.8905%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="98.6405%" y="293" width="0.1511%" height="15" fill="rgb(252,181,51)"/><text x="98.8905%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="98.6405%" y="277" width="0.1511%" height="15" fill="rgb(253,90,19)"/><text x="98.8905%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="98.6405%" y="261" width="0.1511%" height="15" fill="rgb(215,171,30)"/><text x="98.8905%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="98.6405%" y="245" width="0.1511%" height="15" fill="rgb(214,222,9)"/><text x="98.8905%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="98.6405%" y="229" width="0.1511%" height="15" fill="rgb(223,3,22)"/><text x="98.8905%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="98.6405%" y="213" width="0.1511%" height="15" fill="rgb(225,196,46)"/><text x="98.8905%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="98.6405%" y="197" width="0.1511%" height="15" fill="rgb(209,110,37)"/><text x="98.8905%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="98.6405%" y="181" width="0.1511%" height="15" fill="rgb(249,89,12)"/><text x="98.8905%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="98.6405%" y="165" width="0.1511%" height="15" fill="rgb(226,27,33)"/><text x="98.8905%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="98.6405%" y="149" width="0.1511%" height="15" fill="rgb(213,82,22)"/><text x="98.8905%" y="159.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="98.6405%" y="133" width="0.1511%" height="15" fill="rgb(248,140,0)"/><text x="98.8905%" y="143.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="98.6405%" y="117" width="0.1511%" height="15" fill="rgb(228,106,3)"/><text x="98.8905%" y="127.50"></text></g><g><title>__libc_start_main (617 samples, 93.20%)</title><rect x="5.7402%" y="661" width="93.2024%" height="15" fill="rgb(209,23,37)"/><text x="5.9902%" y="671.50">__libc_start_main</text></g><g><title>main (617 samples, 93.20%)</title><rect x="5.7402%" y="645" width="93.2024%" height="15" fill="rgb(241,93,50)"/><text x="5.9902%" y="655.50">main</text></g><g><title>std::rt::lang_start_internal (617 samples, 93.20%)</title><rect x="5.7402%" y="629" width="93.2024%" height="15" fill="rgb(253,46,43)"/><text x="5.9902%" y="639.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (617 samples, 93.20%)</title><rect x="5.7402%" y="613" width="93.2024%" height="15" fill="rgb(226,206,43)"/><text x="5.9902%" y="623.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (617 samples, 93.20%)</title><rect x="5.7402%" y="597" width="93.2024%" height="15" fill="rgb(217,54,7)"/><text x="5.9902%" y="607.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (617 samples, 93.20%)</title><rect x="5.7402%" y="581" width="93.2024%" height="15" fill="rgb(223,5,52)"/><text x="5.9902%" y="591.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (617 samples, 93.20%)</title><rect x="5.7402%" y="565" width="93.2024%" height="15" fill="rgb(206,52,46)"/><text x="5.9902%" y="575.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (617 samples, 93.20%)</title><rect x="5.7402%" y="549" width="93.2024%" height="15" fill="rgb(253,136,11)"/><text x="5.9902%" y="559.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (617 samples, 93.20%)</title><rect x="5.7402%" y="533" width="93.2024%" height="15" fill="rgb(208,106,33)"/><text x="5.9902%" y="543.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (617 samples, 93.20%)</title><rect x="5.7402%" y="517" width="93.2024%" height="15" fill="rgb(206,54,4)"/><text x="5.9902%" y="527.50">core::ops::function::FnOnce::call_once</text></g><g><title>data_gen::main (617 samples, 93.20%)</title><rect x="5.7402%" y="501" width="93.2024%" height="15" fill="rgb(213,3,15)"/><text x="5.9902%" y="511.50">data_gen::main</text></g><g><title>std::io::stdio::_eprint (1 samples, 0.15%)</title><rect x="98.7915%" y="485" width="0.1511%" height="15" fill="rgb(252,211,39)"/><text x="99.0415%" y="495.50"></text></g><g><title>std::io::stdio::print_to (1 samples, 0.15%)</title><rect x="98.7915%" y="469" width="0.1511%" height="15" fill="rgb(223,6,36)"/><text x="99.0415%" y="479.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (1 samples, 0.15%)</title><rect x="98.7915%" y="453" width="0.1511%" height="15" fill="rgb(252,169,45)"/><text x="99.0415%" y="463.50"></text></g><g><title>std::io::stdio::print_to::{{closure}} (1 samples, 0.15%)</title><rect x="98.7915%" y="437" width="0.1511%" height="15" fill="rgb(212,48,26)"/><text x="99.0415%" y="447.50"></text></g><g><title>&lt;std::io::stdio::Stderr as std::io::Write&gt;::write_fmt (1 samples, 0.15%)</title><rect x="98.7915%" y="421" width="0.1511%" height="15" fill="rgb(251,102,48)"/><text x="99.0415%" y="431.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stderr as std::io::Write&gt;::write_fmt (1 samples, 0.15%)</title><rect x="98.7915%" y="405" width="0.1511%" height="15" fill="rgb(243,208,16)"/><text x="99.0415%" y="415.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.15%)</title><rect x="98.7915%" y="389" width="0.1511%" height="15" fill="rgb(219,96,24)"/><text x="99.0415%" y="399.50"></text></g><g><title>core::fmt::write (1 samples, 0.15%)</title><rect x="98.7915%" y="373" width="0.1511%" height="15" fill="rgb(219,33,29)"/><text x="99.0415%" y="383.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adaptor&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.15%)</title><rect x="98.7915%" y="357" width="0.1511%" height="15" fill="rgb(223,176,5)"/><text x="99.0415%" y="367.50"></text></g><g><title>&lt;std::io::stdio::StderrLock as std::io::Write&gt;::write_all (1 samples, 0.15%)</title><rect x="98.7915%" y="341" width="0.1511%" height="15" fill="rgb(228,140,14)"/><text x="99.0415%" y="351.50"></text></g><g><title>&lt;std::io::stdio::StderrRaw as std::io::Write&gt;::write_all (1 samples, 0.15%)</title><rect x="98.7915%" y="325" width="0.1511%" height="15" fill="rgb(217,179,31)"/><text x="99.0415%" y="335.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.15%)</title><rect x="98.7915%" y="309" width="0.1511%" height="15" fill="rgb(230,9,30)"/><text x="99.0415%" y="319.50"></text></g><g><title>&lt;std::sys::unix::stdio::Stderr as std::io::Write&gt;::write (1 samples, 0.15%)</title><rect x="98.7915%" y="293" width="0.1511%" height="15" fill="rgb(230,136,20)"/><text x="99.0415%" y="303.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (1 samples, 0.15%)</title><rect x="98.7915%" y="277" width="0.1511%" height="15" fill="rgb(215,210,22)"/><text x="99.0415%" y="287.50"></text></g><g><title>__GI___libc_write (1 samples, 0.15%)</title><rect x="98.7915%" y="261" width="0.1511%" height="15" fill="rgb(218,43,5)"/><text x="99.0415%" y="271.50"></text></g><g><title>__GI___libc_write (1 samples, 0.15%)</title><rect x="98.7915%" y="245" width="0.1511%" height="15" fill="rgb(216,11,5)"/><text x="99.0415%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="98.7915%" y="229" width="0.1511%" height="15" fill="rgb(209,82,29)"/><text x="99.0415%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="98.7915%" y="213" width="0.1511%" height="15" fill="rgb(244,115,12)"/><text x="99.0415%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="98.7915%" y="197" width="0.1511%" height="15" fill="rgb(222,82,18)"/><text x="99.0415%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="98.7915%" y="181" width="0.1511%" height="15" fill="rgb(249,227,8)"/><text x="99.0415%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="98.7915%" y="165" width="0.1511%" height="15" fill="rgb(253,141,45)"/><text x="99.0415%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="98.7915%" y="149" width="0.1511%" height="15" fill="rgb(234,184,4)"/><text x="99.0415%" y="159.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="98.7915%" y="133" width="0.1511%" height="15" fill="rgb(218,194,23)"/><text x="99.0415%" y="143.50"></text></g><g><title>data_gen (656 samples, 99.09%)</title><rect x="0.0000%" y="693" width="99.0937%" height="15" fill="rgb(235,66,41)"/><text x="0.2500%" y="703.50">data_gen</text></g><g><title>_start (618 samples, 93.35%)</title><rect x="5.7402%" y="677" width="93.3535%" height="15" fill="rgb(245,217,1)"/><text x="5.9902%" y="687.50">_start</text></g><g><title>_dl_start (1 samples, 0.15%)</title><rect x="98.9426%" y="661" width="0.1511%" height="15" fill="rgb(229,91,1)"/><text x="99.1926%" y="671.50"></text></g><g><title>_dl_start_final (1 samples, 0.15%)</title><rect x="98.9426%" y="645" width="0.1511%" height="15" fill="rgb(207,101,30)"/><text x="99.1926%" y="655.50"></text></g><g><title>_dl_sysdep_start (1 samples, 0.15%)</title><rect x="98.9426%" y="629" width="0.1511%" height="15" fill="rgb(223,82,49)"/><text x="99.1926%" y="639.50"></text></g><g><title>dl_main (1 samples, 0.15%)</title><rect x="98.9426%" y="613" width="0.1511%" height="15" fill="rgb(218,167,17)"/><text x="99.1926%" y="623.50"></text></g><g><title>_dl_map_object_deps (1 samples, 0.15%)</title><rect x="98.9426%" y="597" width="0.1511%" height="15" fill="rgb(208,103,14)"/><text x="99.1926%" y="607.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.15%)</title><rect x="98.9426%" y="581" width="0.1511%" height="15" fill="rgb(238,20,8)"/><text x="99.1926%" y="591.50"></text></g><g><title>openaux (1 samples, 0.15%)</title><rect x="98.9426%" y="565" width="0.1511%" height="15" fill="rgb(218,80,54)"/><text x="99.1926%" y="575.50"></text></g><g><title>_dl_map_object (1 samples, 0.15%)</title><rect x="98.9426%" y="549" width="0.1511%" height="15" fill="rgb(240,144,17)"/><text x="99.1926%" y="559.50"></text></g><g><title>open_path (1 samples, 0.15%)</title><rect x="98.9426%" y="533" width="0.1511%" height="15" fill="rgb(245,27,50)"/><text x="99.1926%" y="543.50"></text></g><g><title>__GI___xstat (1 samples, 0.15%)</title><rect x="98.9426%" y="517" width="0.1511%" height="15" fill="rgb(251,51,7)"/><text x="99.1926%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="98.9426%" y="501" width="0.1511%" height="15" fill="rgb(245,217,29)"/><text x="99.1926%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="98.9426%" y="485" width="0.1511%" height="15" fill="rgb(221,176,29)"/><text x="99.1926%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="98.9426%" y="469" width="0.1511%" height="15" fill="rgb(212,180,24)"/><text x="99.1926%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="98.9426%" y="453" width="0.1511%" height="15" fill="rgb(254,24,2)"/><text x="99.1926%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="98.9426%" y="437" width="0.1511%" height="15" fill="rgb(230,100,2)"/><text x="99.1926%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="98.9426%" y="421" width="0.1511%" height="15" fill="rgb(219,142,25)"/><text x="99.1926%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="98.9426%" y="405" width="0.1511%" height="15" fill="rgb(240,73,43)"/><text x="99.1926%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="98.9426%" y="389" width="0.1511%" height="15" fill="rgb(214,114,15)"/><text x="99.1926%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="98.9426%" y="373" width="0.1511%" height="15" fill="rgb(207,130,4)"/><text x="99.1926%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="98.9426%" y="357" width="0.1511%" height="15" fill="rgb(221,25,40)"/><text x="99.1926%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="98.9426%" y="341" width="0.1511%" height="15" fill="rgb(241,184,7)"/><text x="99.1926%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="98.9426%" y="325" width="0.1511%" height="15" fill="rgb(235,159,4)"/><text x="99.1926%" y="335.50"></text></g><g><title>all (662 samples, 100%)</title><rect x="0.0000%" y="709" width="100.0000%" height="15" fill="rgb(214,87,48)"/><text x="0.2500%" y="719.50"></text></g><g><title>perf (6 samples, 0.91%)</title><rect x="99.0937%" y="693" width="0.9063%" height="15" fill="rgb(246,198,24)"/><text x="99.3437%" y="703.50"></text></g><g><title>[unknown] (6 samples, 0.91%)</title><rect x="99.0937%" y="677" width="0.9063%" height="15" fill="rgb(209,66,40)"/><text x="99.3437%" y="687.50"></text></g><g><title>[unknown] (6 samples, 0.91%)</title><rect x="99.0937%" y="661" width="0.9063%" height="15" fill="rgb(233,147,39)"/><text x="99.3437%" y="671.50"></text></g><g><title>[unknown] (6 samples, 0.91%)</title><rect x="99.0937%" y="645" width="0.9063%" height="15" fill="rgb(231,145,52)"/><text x="99.3437%" y="655.50"></text></g><g><title>[unknown] (6 samples, 0.91%)</title><rect x="99.0937%" y="629" width="0.9063%" height="15" fill="rgb(206,20,26)"/><text x="99.3437%" y="639.50"></text></g><g><title>[unknown] (6 samples, 0.91%)</title><rect x="99.0937%" y="613" width="0.9063%" height="15" fill="rgb(238,220,4)"/><text x="99.3437%" y="623.50"></text></g><g><title>[unknown] (6 samples, 0.91%)</title><rect x="99.0937%" y="597" width="0.9063%" height="15" fill="rgb(252,195,42)"/><text x="99.3437%" y="607.50"></text></g><g><title>[unknown] (6 samples, 0.91%)</title><rect x="99.0937%" y="581" width="0.9063%" height="15" fill="rgb(209,10,6)"/><text x="99.3437%" y="591.50"></text></g><g><title>[unknown] (6 samples, 0.91%)</title><rect x="99.0937%" y="565" width="0.9063%" height="15" fill="rgb(229,3,52)"/><text x="99.3437%" y="575.50"></text></g><g><title>[unknown] (6 samples, 0.91%)</title><rect x="99.0937%" y="549" width="0.9063%" height="15" fill="rgb(253,49,37)"/><text x="99.3437%" y="559.50"></text></g><g><title>[unknown] (5 samples, 0.76%)</title><rect x="99.2447%" y="533" width="0.7553%" height="15" fill="rgb(240,103,49)"/><text x="99.4947%" y="543.50"></text></g><g><title>[unknown] (5 samples, 0.76%)</title><rect x="99.2447%" y="517" width="0.7553%" height="15" fill="rgb(250,182,30)"/><text x="99.4947%" y="527.50"></text></g><g><title>[unknown] (5 samples, 0.76%)</title><rect x="99.2447%" y="501" width="0.7553%" height="15" fill="rgb(248,8,30)"/><text x="99.4947%" y="511.50"></text></g><g><title>[unknown] (5 samples, 0.76%)</title><rect x="99.2447%" y="485" width="0.7553%" height="15" fill="rgb(237,120,30)"/><text x="99.4947%" y="495.50"></text></g></svg></svg>