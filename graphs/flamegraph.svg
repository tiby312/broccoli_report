<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="870" onload="init(evt)" viewBox="0 0 1200 870" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="870" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="853.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="853.00"> </text><svg id="frames" x="10" width="1180"><g><title>[[heap]] (1 samples, 0.13%)</title><rect x="0.0000%" y="789" width="0.1269%" height="15" fill="rgb(227,0,7)"/><text x="0.2500%" y="799.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (1 samples, 0.13%)</title><rect x="0.0000%" y="773" width="0.1269%" height="15" fill="rgb(217,0,24)"/><text x="0.2500%" y="783.50"></text></g><g><title>[unknown] (3 samples, 0.38%)</title><rect x="0.1269%" y="773" width="0.3807%" height="15" fill="rgb(221,193,54)"/><text x="0.3769%" y="783.50"></text></g><g><title>[unknown] (3 samples, 0.38%)</title><rect x="0.1269%" y="757" width="0.3807%" height="15" fill="rgb(248,212,6)"/><text x="0.3769%" y="767.50"></text></g><g><title>[unknown] (3 samples, 0.38%)</title><rect x="0.1269%" y="741" width="0.3807%" height="15" fill="rgb(208,68,35)"/><text x="0.3769%" y="751.50"></text></g><g><title>[unknown] (3 samples, 0.38%)</title><rect x="0.1269%" y="725" width="0.3807%" height="15" fill="rgb(232,128,0)"/><text x="0.3769%" y="735.50"></text></g><g><title>[unknown] (3 samples, 0.38%)</title><rect x="0.1269%" y="709" width="0.3807%" height="15" fill="rgb(207,160,47)"/><text x="0.3769%" y="719.50"></text></g><g><title>[unknown] (3 samples, 0.38%)</title><rect x="0.1269%" y="693" width="0.3807%" height="15" fill="rgb(228,23,34)"/><text x="0.3769%" y="703.50"></text></g><g><title>[unknown] (3 samples, 0.38%)</title><rect x="0.1269%" y="677" width="0.3807%" height="15" fill="rgb(218,30,26)"/><text x="0.3769%" y="687.50"></text></g><g><title>[unknown] (3 samples, 0.38%)</title><rect x="0.1269%" y="661" width="0.3807%" height="15" fill="rgb(220,122,19)"/><text x="0.3769%" y="671.50"></text></g><g><title>[unknown] (3 samples, 0.38%)</title><rect x="0.1269%" y="645" width="0.3807%" height="15" fill="rgb(250,228,42)"/><text x="0.3769%" y="655.50"></text></g><g><title>[unknown] (3 samples, 0.38%)</title><rect x="0.1269%" y="629" width="0.3807%" height="15" fill="rgb(240,193,28)"/><text x="0.3769%" y="639.50"></text></g><g><title>[unknown] (3 samples, 0.38%)</title><rect x="0.1269%" y="613" width="0.3807%" height="15" fill="rgb(216,20,37)"/><text x="0.3769%" y="623.50"></text></g><g><title>[unknown] (3 samples, 0.38%)</title><rect x="0.1269%" y="597" width="0.3807%" height="15" fill="rgb(206,188,39)"/><text x="0.3769%" y="607.50"></text></g><g><title>[unknown] (3 samples, 0.38%)</title><rect x="0.1269%" y="581" width="0.3807%" height="15" fill="rgb(217,207,13)"/><text x="0.3769%" y="591.50"></text></g><g><title>[unknown] (2 samples, 0.25%)</title><rect x="0.2538%" y="565" width="0.2538%" height="15" fill="rgb(231,73,38)"/><text x="0.5038%" y="575.50"></text></g><g><title>[unknown] (2 samples, 0.25%)</title><rect x="0.2538%" y="549" width="0.2538%" height="15" fill="rgb(225,20,46)"/><text x="0.5038%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="0.3807%" y="533" width="0.1269%" height="15" fill="rgb(210,31,41)"/><text x="0.6307%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="0.3807%" y="517" width="0.1269%" height="15" fill="rgb(221,200,47)"/><text x="0.6307%" y="527.50"></text></g><g><title>__GI___sysconf (1 samples, 0.13%)</title><rect x="0.5076%" y="773" width="0.1269%" height="15" fill="rgb(226,26,5)"/><text x="0.7576%" y="783.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (1 samples, 0.13%)</title><rect x="0.6345%" y="773" width="0.1269%" height="15" fill="rgb(249,33,26)"/><text x="0.8845%" y="783.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (1 samples, 0.13%)</title><rect x="0.7614%" y="773" width="0.1269%" height="15" fill="rgb(235,183,28)"/><text x="1.0114%" y="783.50"></text></g><g><title>[unknown] (7 samples, 0.89%)</title><rect x="0.1269%" y="789" width="0.8883%" height="15" fill="rgb(221,5,38)"/><text x="0.3769%" y="799.50"></text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::recurse_preorder_seq (1 samples, 0.13%)</title><rect x="0.8883%" y="773" width="0.1269%" height="15" fill="rgb(247,18,42)"/><text x="1.1383%" y="783.50"></text></g><g><title>[unknown] (18 samples, 2.28%)</title><rect x="1.0152%" y="773" width="2.2843%" height="15" fill="rgb(241,131,45)"/><text x="1.2652%" y="783.50">[..</text></g><g><title>[unknown] (18 samples, 2.28%)</title><rect x="1.0152%" y="757" width="2.2843%" height="15" fill="rgb(249,31,29)"/><text x="1.2652%" y="767.50">[..</text></g><g><title>[unknown] (18 samples, 2.28%)</title><rect x="1.0152%" y="741" width="2.2843%" height="15" fill="rgb(225,111,53)"/><text x="1.2652%" y="751.50">[..</text></g><g><title>[unknown] (18 samples, 2.28%)</title><rect x="1.0152%" y="725" width="2.2843%" height="15" fill="rgb(238,160,17)"/><text x="1.2652%" y="735.50">[..</text></g><g><title>[unknown] (17 samples, 2.16%)</title><rect x="1.1421%" y="709" width="2.1574%" height="15" fill="rgb(214,148,48)"/><text x="1.3921%" y="719.50">[..</text></g><g><title>[unknown] (17 samples, 2.16%)</title><rect x="1.1421%" y="693" width="2.1574%" height="15" fill="rgb(232,36,49)"/><text x="1.3921%" y="703.50">[..</text></g><g><title>[unknown] (17 samples, 2.16%)</title><rect x="1.1421%" y="677" width="2.1574%" height="15" fill="rgb(209,103,24)"/><text x="1.3921%" y="687.50">[..</text></g><g><title>[unknown] (17 samples, 2.16%)</title><rect x="1.1421%" y="661" width="2.1574%" height="15" fill="rgb(229,88,8)"/><text x="1.3921%" y="671.50">[..</text></g><g><title>__GI___sched_yield (1 samples, 0.13%)</title><rect x="3.2995%" y="485" width="0.1269%" height="15" fill="rgb(213,181,19)"/><text x="3.5495%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="3.2995%" y="469" width="0.1269%" height="15" fill="rgb(254,191,54)"/><text x="3.5495%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="3.2995%" y="453" width="0.1269%" height="15" fill="rgb(241,83,37)"/><text x="3.5495%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="3.2995%" y="437" width="0.1269%" height="15" fill="rgb(233,36,39)"/><text x="3.5495%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="3.2995%" y="421" width="0.1269%" height="15" fill="rgb(226,3,54)"/><text x="3.5495%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="3.2995%" y="405" width="0.1269%" height="15" fill="rgb(245,192,40)"/><text x="3.5495%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="3.2995%" y="389" width="0.1269%" height="15" fill="rgb(238,167,29)"/><text x="3.5495%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="3.2995%" y="373" width="0.1269%" height="15" fill="rgb(232,182,51)"/><text x="3.5495%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="3.2995%" y="357" width="0.1269%" height="15" fill="rgb(231,60,39)"/><text x="3.5495%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="3.2995%" y="341" width="0.1269%" height="15" fill="rgb(208,69,12)"/><text x="3.5495%" y="351.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (13 samples, 1.65%)</title><rect x="3.2995%" y="741" width="1.6497%" height="15" fill="rgb(235,93,37)"/><text x="3.5495%" y="751.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (13 samples, 1.65%)</title><rect x="3.2995%" y="725" width="1.6497%" height="15" fill="rgb(213,116,39)"/><text x="3.5495%" y="735.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (13 samples, 1.65%)</title><rect x="3.2995%" y="709" width="1.6497%" height="15" fill="rgb(222,207,29)"/><text x="3.5495%" y="719.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (13 samples, 1.65%)</title><rect x="3.2995%" y="693" width="1.6497%" height="15" fill="rgb(206,96,30)"/><text x="3.5495%" y="703.50"></text></g><g><title>std::panic::catch_unwind (13 samples, 1.65%)</title><rect x="3.2995%" y="677" width="1.6497%" height="15" fill="rgb(218,138,4)"/><text x="3.5495%" y="687.50"></text></g><g><title>std::panicking::try (13 samples, 1.65%)</title><rect x="3.2995%" y="661" width="1.6497%" height="15" fill="rgb(250,191,14)"/><text x="3.5495%" y="671.50"></text></g><g><title>std::panicking::try::do_call (13 samples, 1.65%)</title><rect x="3.2995%" y="645" width="1.6497%" height="15" fill="rgb(239,60,40)"/><text x="3.5495%" y="655.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (13 samples, 1.65%)</title><rect x="3.2995%" y="629" width="1.6497%" height="15" fill="rgb(206,27,48)"/><text x="3.5495%" y="639.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (13 samples, 1.65%)</title><rect x="3.2995%" y="613" width="1.6497%" height="15" fill="rgb(225,35,8)"/><text x="3.5495%" y="623.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (13 samples, 1.65%)</title><rect x="3.2995%" y="597" width="1.6497%" height="15" fill="rgb(250,213,24)"/><text x="3.5495%" y="607.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (13 samples, 1.65%)</title><rect x="3.2995%" y="581" width="1.6497%" height="15" fill="rgb(247,123,22)"/><text x="3.5495%" y="591.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (13 samples, 1.65%)</title><rect x="3.2995%" y="565" width="1.6497%" height="15" fill="rgb(231,138,38)"/><text x="3.5495%" y="575.50"></text></g><g><title>rayon_core::registry::main_loop (13 samples, 1.65%)</title><rect x="3.2995%" y="549" width="1.6497%" height="15" fill="rgb(231,145,46)"/><text x="3.5495%" y="559.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (13 samples, 1.65%)</title><rect x="3.2995%" y="533" width="1.6497%" height="15" fill="rgb(251,118,11)"/><text x="3.5495%" y="543.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (13 samples, 1.65%)</title><rect x="3.2995%" y="517" width="1.6497%" height="15" fill="rgb(217,147,25)"/><text x="3.5495%" y="527.50"></text></g><g><title>rayon_core::sleep::Sleep::no_work_found (13 samples, 1.65%)</title><rect x="3.2995%" y="501" width="1.6497%" height="15" fill="rgb(247,81,37)"/><text x="3.5495%" y="511.50"></text></g><g><title>rayon_core::sleep::Sleep::sleep (12 samples, 1.52%)</title><rect x="3.4264%" y="485" width="1.5228%" height="15" fill="rgb(209,12,38)"/><text x="3.6764%" y="495.50"></text></g><g><title>std::sync::condvar::Condvar::wait (12 samples, 1.52%)</title><rect x="3.4264%" y="469" width="1.5228%" height="15" fill="rgb(227,1,9)"/><text x="3.6764%" y="479.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait (12 samples, 1.52%)</title><rect x="3.4264%" y="453" width="1.5228%" height="15" fill="rgb(248,47,43)"/><text x="3.6764%" y="463.50"></text></g><g><title>std::sys::unix::condvar::Condvar::wait (12 samples, 1.52%)</title><rect x="3.4264%" y="437" width="1.5228%" height="15" fill="rgb(221,10,30)"/><text x="3.6764%" y="447.50"></text></g><g><title>__pthread_cond_wait (12 samples, 1.52%)</title><rect x="3.4264%" y="421" width="1.5228%" height="15" fill="rgb(210,229,1)"/><text x="3.6764%" y="431.50"></text></g><g><title>__pthread_cond_wait_common (12 samples, 1.52%)</title><rect x="3.4264%" y="405" width="1.5228%" height="15" fill="rgb(222,148,37)"/><text x="3.6764%" y="415.50"></text></g><g><title>futex_wait_cancelable (12 samples, 1.52%)</title><rect x="3.4264%" y="389" width="1.5228%" height="15" fill="rgb(234,67,33)"/><text x="3.6764%" y="399.50"></text></g><g><title>[unknown] (12 samples, 1.52%)</title><rect x="3.4264%" y="373" width="1.5228%" height="15" fill="rgb(247,98,35)"/><text x="3.6764%" y="383.50"></text></g><g><title>[unknown] (12 samples, 1.52%)</title><rect x="3.4264%" y="357" width="1.5228%" height="15" fill="rgb(247,138,52)"/><text x="3.6764%" y="367.50"></text></g><g><title>[unknown] (12 samples, 1.52%)</title><rect x="3.4264%" y="341" width="1.5228%" height="15" fill="rgb(213,79,30)"/><text x="3.6764%" y="351.50"></text></g><g><title>[unknown] (12 samples, 1.52%)</title><rect x="3.4264%" y="325" width="1.5228%" height="15" fill="rgb(246,177,23)"/><text x="3.6764%" y="335.50"></text></g><g><title>[unknown] (12 samples, 1.52%)</title><rect x="3.4264%" y="309" width="1.5228%" height="15" fill="rgb(230,62,27)"/><text x="3.6764%" y="319.50"></text></g><g><title>[unknown] (11 samples, 1.40%)</title><rect x="3.5533%" y="293" width="1.3959%" height="15" fill="rgb(216,154,8)"/><text x="3.8033%" y="303.50"></text></g><g><title>[unknown] (11 samples, 1.40%)</title><rect x="3.5533%" y="277" width="1.3959%" height="15" fill="rgb(244,35,45)"/><text x="3.8033%" y="287.50"></text></g><g><title>[unknown] (11 samples, 1.40%)</title><rect x="3.5533%" y="261" width="1.3959%" height="15" fill="rgb(251,115,12)"/><text x="3.8033%" y="271.50"></text></g><g><title>[unknown] (11 samples, 1.40%)</title><rect x="3.5533%" y="245" width="1.3959%" height="15" fill="rgb(240,54,50)"/><text x="3.8033%" y="255.50"></text></g><g><title>[unknown] (11 samples, 1.40%)</title><rect x="3.5533%" y="229" width="1.3959%" height="15" fill="rgb(233,84,52)"/><text x="3.8033%" y="239.50"></text></g><g><title>[unknown] (11 samples, 1.40%)</title><rect x="3.5533%" y="213" width="1.3959%" height="15" fill="rgb(207,117,47)"/><text x="3.8033%" y="223.50"></text></g><g><title>[unknown] (11 samples, 1.40%)</title><rect x="3.5533%" y="197" width="1.3959%" height="15" fill="rgb(249,43,39)"/><text x="3.8033%" y="207.50"></text></g><g><title>[unknown] (10 samples, 1.27%)</title><rect x="3.6802%" y="181" width="1.2690%" height="15" fill="rgb(209,38,44)"/><text x="3.9302%" y="191.50"></text></g><g><title>[unknown] (10 samples, 1.27%)</title><rect x="3.6802%" y="165" width="1.2690%" height="15" fill="rgb(236,212,23)"/><text x="3.9302%" y="175.50"></text></g><g><title>__GI___clone (33 samples, 4.19%)</title><rect x="1.0152%" y="789" width="4.1878%" height="15" fill="rgb(242,79,21)"/><text x="1.2652%" y="799.50">__GI_..</text></g><g><title>start_thread (15 samples, 1.90%)</title><rect x="3.2995%" y="773" width="1.9036%" height="15" fill="rgb(211,96,35)"/><text x="3.5495%" y="783.50">s..</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (15 samples, 1.90%)</title><rect x="3.2995%" y="757" width="1.9036%" height="15" fill="rgb(253,215,40)"/><text x="3.5495%" y="767.50">s..</text></g><g><title>std::sys::unix::stack_overflow::Handler::new (2 samples, 0.25%)</title><rect x="4.9492%" y="741" width="0.2538%" height="15" fill="rgb(211,81,21)"/><text x="5.1992%" y="751.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (2 samples, 0.25%)</title><rect x="4.9492%" y="725" width="0.2538%" height="15" fill="rgb(208,190,38)"/><text x="5.1992%" y="735.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (2 samples, 0.25%)</title><rect x="4.9492%" y="709" width="0.2538%" height="15" fill="rgb(235,213,38)"/><text x="5.1992%" y="719.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (2 samples, 0.25%)</title><rect x="4.9492%" y="693" width="0.2538%" height="15" fill="rgb(237,122,38)"/><text x="5.1992%" y="703.50"></text></g><g><title>__GI___mmap64 (2 samples, 0.25%)</title><rect x="4.9492%" y="677" width="0.2538%" height="15" fill="rgb(244,218,35)"/><text x="5.1992%" y="687.50"></text></g><g><title>__GI___mmap64 (2 samples, 0.25%)</title><rect x="4.9492%" y="661" width="0.2538%" height="15" fill="rgb(240,68,47)"/><text x="5.1992%" y="671.50"></text></g><g><title>[unknown] (2 samples, 0.25%)</title><rect x="4.9492%" y="645" width="0.2538%" height="15" fill="rgb(210,16,53)"/><text x="5.1992%" y="655.50"></text></g><g><title>[unknown] (2 samples, 0.25%)</title><rect x="4.9492%" y="629" width="0.2538%" height="15" fill="rgb(235,124,12)"/><text x="5.1992%" y="639.50"></text></g><g><title>[unknown] (2 samples, 0.25%)</title><rect x="4.9492%" y="613" width="0.2538%" height="15" fill="rgb(224,169,11)"/><text x="5.1992%" y="623.50"></text></g><g><title>[unknown] (2 samples, 0.25%)</title><rect x="4.9492%" y="597" width="0.2538%" height="15" fill="rgb(250,166,2)"/><text x="5.1992%" y="607.50"></text></g><g><title>[unknown] (2 samples, 0.25%)</title><rect x="4.9492%" y="581" width="0.2538%" height="15" fill="rgb(242,216,29)"/><text x="5.1992%" y="591.50"></text></g><g><title>[unknown] (2 samples, 0.25%)</title><rect x="4.9492%" y="565" width="0.2538%" height="15" fill="rgb(230,116,27)"/><text x="5.1992%" y="575.50"></text></g><g><title>[unknown] (2 samples, 0.25%)</title><rect x="4.9492%" y="549" width="0.2538%" height="15" fill="rgb(228,99,48)"/><text x="5.1992%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="5.0761%" y="533" width="0.1269%" height="15" fill="rgb(253,11,6)"/><text x="5.3261%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="5.0761%" y="517" width="0.1269%" height="15" fill="rgb(247,143,39)"/><text x="5.3261%" y="527.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="5.2030%" y="597" width="0.1269%" height="15" fill="rgb(236,97,10)"/><text x="5.4530%" y="607.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="5.2030%" y="581" width="0.1269%" height="15" fill="rgb(233,208,19)"/><text x="5.4530%" y="591.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.13%)</title><rect x="5.2030%" y="565" width="0.1269%" height="15" fill="rgb(216,164,2)"/><text x="5.4530%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::dealloc (1 samples, 0.13%)</title><rect x="5.2030%" y="549" width="0.1269%" height="15" fill="rgb(220,129,5)"/><text x="5.4530%" y="559.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.13%)</title><rect x="5.2030%" y="533" width="0.1269%" height="15" fill="rgb(242,17,10)"/><text x="5.4530%" y="543.50"></text></g><g><title>__GI_munmap (1 samples, 0.13%)</title><rect x="5.2030%" y="517" width="0.1269%" height="15" fill="rgb(242,107,0)"/><text x="5.4530%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="5.2030%" y="501" width="0.1269%" height="15" fill="rgb(251,28,31)"/><text x="5.4530%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="5.2030%" y="485" width="0.1269%" height="15" fill="rgb(233,223,10)"/><text x="5.4530%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="5.2030%" y="469" width="0.1269%" height="15" fill="rgb(215,21,27)"/><text x="5.4530%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="5.2030%" y="453" width="0.1269%" height="15" fill="rgb(232,23,21)"/><text x="5.4530%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="5.2030%" y="437" width="0.1269%" height="15" fill="rgb(244,5,23)"/><text x="5.4530%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="5.2030%" y="421" width="0.1269%" height="15" fill="rgb(226,81,46)"/><text x="5.4530%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="5.2030%" y="405" width="0.1269%" height="15" fill="rgb(247,70,30)"/><text x="5.4530%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="5.2030%" y="389" width="0.1269%" height="15" fill="rgb(212,68,19)"/><text x="5.4530%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="5.2030%" y="373" width="0.1269%" height="15" fill="rgb(240,187,13)"/><text x="5.4530%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="5.2030%" y="357" width="0.1269%" height="15" fill="rgb(223,113,26)"/><text x="5.4530%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="5.2030%" y="341" width="0.1269%" height="15" fill="rgb(206,192,2)"/><text x="5.4530%" y="351.50"></text></g><g><title>data_gen::colfind::float_vs_integer::handle_bench::{{closure}}::{{closure}} (2 samples, 0.25%)</title><rect x="5.5838%" y="373" width="0.2538%" height="15" fill="rgb(241,108,4)"/><text x="5.8338%" y="383.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_node (5 samples, 0.63%)</title><rect x="5.3299%" y="501" width="0.6345%" height="15" fill="rgb(247,173,49)"/><text x="5.5799%" y="511.50"></text></g><g><title>broccoli::query::colfind::oned::find_2d (5 samples, 0.63%)</title><rect x="5.3299%" y="485" width="0.6345%" height="15" fill="rgb(224,114,35)"/><text x="5.5799%" y="495.50"></text></g><g><title>broccoli::query::colfind::oned::find (5 samples, 0.63%)</title><rect x="5.3299%" y="469" width="0.6345%" height="15" fill="rgb(245,159,27)"/><text x="5.5799%" y="479.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (5 samples, 0.63%)</title><rect x="5.3299%" y="453" width="0.6345%" height="15" fill="rgb(245,172,44)"/><text x="5.5799%" y="463.50"></text></g><g><title>broccoli::query::colfind::oned::find::{{closure}} (5 samples, 0.63%)</title><rect x="5.3299%" y="437" width="0.6345%" height="15" fill="rgb(236,23,11)"/><text x="5.5799%" y="447.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (5 samples, 0.63%)</title><rect x="5.3299%" y="421" width="0.6345%" height="15" fill="rgb(205,117,38)"/><text x="5.5799%" y="431.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFn&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (3 samples, 0.38%)</title><rect x="5.5838%" y="405" width="0.3807%" height="15" fill="rgb(237,72,25)"/><text x="5.8338%" y="415.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut_par::{{closure}} (3 samples, 0.38%)</title><rect x="5.5838%" y="389" width="0.3807%" height="15" fill="rgb(244,70,9)"/><text x="5.8338%" y="399.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.13%)</title><rect x="5.8376%" y="373" width="0.1269%" height="15" fill="rgb(217,125,39)"/><text x="6.0876%" y="383.50"></text></g><g><title>data_gen::colfind::float_vs_integer::handle_bench::{{closure}}::{{closure}} (1 samples, 0.13%)</title><rect x="5.9645%" y="357" width="0.1269%" height="15" fill="rgb(235,36,10)"/><text x="6.2145%" y="367.50"></text></g><g><title>broccoli::query::colfind::oned::find::{{closure}} (3 samples, 0.38%)</title><rect x="5.9645%" y="421" width="0.3807%" height="15" fill="rgb(251,123,47)"/><text x="6.2145%" y="431.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (3 samples, 0.38%)</title><rect x="5.9645%" y="405" width="0.3807%" height="15" fill="rgb(221,13,13)"/><text x="6.2145%" y="415.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFn&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (3 samples, 0.38%)</title><rect x="5.9645%" y="389" width="0.3807%" height="15" fill="rgb(238,131,9)"/><text x="6.2145%" y="399.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut_par::{{closure}} (3 samples, 0.38%)</title><rect x="5.9645%" y="373" width="0.3807%" height="15" fill="rgb(211,50,8)"/><text x="6.2145%" y="383.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (2 samples, 0.25%)</title><rect x="6.0914%" y="357" width="0.2538%" height="15" fill="rgb(245,182,24)"/><text x="6.3414%" y="367.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.13%)</title><rect x="6.3452%" y="421" width="0.1269%" height="15" fill="rgb(242,14,37)"/><text x="6.5952%" y="431.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.13%)</title><rect x="6.3452%" y="405" width="0.1269%" height="15" fill="rgb(246,228,12)"/><text x="6.5952%" y="415.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_node (5 samples, 0.63%)</title><rect x="5.9645%" y="485" width="0.6345%" height="15" fill="rgb(213,55,15)"/><text x="6.2145%" y="495.50"></text></g><g><title>broccoli::query::colfind::oned::find_2d (5 samples, 0.63%)</title><rect x="5.9645%" y="469" width="0.6345%" height="15" fill="rgb(209,9,3)"/><text x="6.2145%" y="479.50"></text></g><g><title>broccoli::query::colfind::oned::find (5 samples, 0.63%)</title><rect x="5.9645%" y="453" width="0.6345%" height="15" fill="rgb(230,59,30)"/><text x="6.2145%" y="463.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (5 samples, 0.63%)</title><rect x="5.9645%" y="437" width="0.6345%" height="15" fill="rgb(209,121,21)"/><text x="6.2145%" y="447.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.13%)</title><rect x="6.4721%" y="421" width="0.1269%" height="15" fill="rgb(220,109,13)"/><text x="6.7221%" y="431.50"></text></g><g><title>core::ptr::swap (1 samples, 0.13%)</title><rect x="6.4721%" y="405" width="0.1269%" height="15" fill="rgb(232,18,1)"/><text x="6.7221%" y="415.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.13%)</title><rect x="6.4721%" y="389" width="0.1269%" height="15" fill="rgb(215,41,42)"/><text x="6.7221%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (2 samples, 0.25%)</title><rect x="6.5990%" y="421" width="0.2538%" height="15" fill="rgb(224,123,36)"/><text x="6.8490%" y="431.50"></text></g><g><title>data_gen::colfind::float_vs_integer::handle_bench::{{closure}}::{{closure}} (1 samples, 0.13%)</title><rect x="7.2335%" y="341" width="0.1269%" height="15" fill="rgb(240,125,3)"/><text x="7.4835%" y="351.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_node (8 samples, 1.02%)</title><rect x="6.5990%" y="469" width="1.0152%" height="15" fill="rgb(205,98,50)"/><text x="6.8490%" y="479.50"></text></g><g><title>broccoli::query::colfind::oned::find_2d (8 samples, 1.02%)</title><rect x="6.5990%" y="453" width="1.0152%" height="15" fill="rgb(205,185,37)"/><text x="6.8490%" y="463.50"></text></g><g><title>broccoli::query::colfind::oned::find (8 samples, 1.02%)</title><rect x="6.5990%" y="437" width="1.0152%" height="15" fill="rgb(238,207,15)"/><text x="6.8490%" y="447.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (6 samples, 0.76%)</title><rect x="6.8528%" y="421" width="0.7614%" height="15" fill="rgb(213,199,42)"/><text x="7.1028%" y="431.50"></text></g><g><title>broccoli::query::colfind::oned::find::{{closure}} (4 samples, 0.51%)</title><rect x="7.1066%" y="405" width="0.5076%" height="15" fill="rgb(235,201,11)"/><text x="7.3566%" y="415.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (4 samples, 0.51%)</title><rect x="7.1066%" y="389" width="0.5076%" height="15" fill="rgb(207,46,11)"/><text x="7.3566%" y="399.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFn&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (3 samples, 0.38%)</title><rect x="7.2335%" y="373" width="0.3807%" height="15" fill="rgb(241,35,35)"/><text x="7.4835%" y="383.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut_par::{{closure}} (3 samples, 0.38%)</title><rect x="7.2335%" y="357" width="0.3807%" height="15" fill="rgb(243,32,47)"/><text x="7.4835%" y="367.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (2 samples, 0.25%)</title><rect x="7.3604%" y="341" width="0.2538%" height="15" fill="rgb(247,202,23)"/><text x="7.6104%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as twounordered::RetainMutUnordered&lt;T&gt;&gt;::truncate (1 samples, 0.13%)</title><rect x="7.7411%" y="389" width="0.1269%" height="15" fill="rgb(219,102,11)"/><text x="7.9911%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::truncate (1 samples, 0.13%)</title><rect x="7.7411%" y="373" width="0.1269%" height="15" fill="rgb(243,110,44)"/><text x="7.9911%" y="383.50"></text></g><g><title>data_gen::colfind::float_vs_integer::handle_bench::{{closure}}::{{closure}} (2 samples, 0.25%)</title><rect x="7.9949%" y="325" width="0.2538%" height="15" fill="rgb(222,74,54)"/><text x="8.2449%" y="335.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFn&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (5 samples, 0.63%)</title><rect x="7.9949%" y="357" width="0.6345%" height="15" fill="rgb(216,99,12)"/><text x="8.2449%" y="367.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut_par::{{closure}} (5 samples, 0.63%)</title><rect x="7.9949%" y="341" width="0.6345%" height="15" fill="rgb(226,22,26)"/><text x="8.2449%" y="351.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (3 samples, 0.38%)</title><rect x="8.2487%" y="325" width="0.3807%" height="15" fill="rgb(217,163,10)"/><text x="8.4987%" y="335.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_node (10 samples, 1.27%)</title><rect x="7.6142%" y="453" width="1.2690%" height="15" fill="rgb(213,25,53)"/><text x="7.8642%" y="463.50"></text></g><g><title>broccoli::query::colfind::oned::find_2d (10 samples, 1.27%)</title><rect x="7.6142%" y="437" width="1.2690%" height="15" fill="rgb(252,105,26)"/><text x="7.8642%" y="447.50"></text></g><g><title>broccoli::query::colfind::oned::find (10 samples, 1.27%)</title><rect x="7.6142%" y="421" width="1.2690%" height="15" fill="rgb(220,39,43)"/><text x="7.8642%" y="431.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (10 samples, 1.27%)</title><rect x="7.6142%" y="405" width="1.2690%" height="15" fill="rgb(229,68,48)"/><text x="7.8642%" y="415.50"></text></g><g><title>broccoli::query::colfind::oned::find::{{closure}} (8 samples, 1.02%)</title><rect x="7.8680%" y="389" width="1.0152%" height="15" fill="rgb(252,8,32)"/><text x="8.1180%" y="399.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (7 samples, 0.89%)</title><rect x="7.9949%" y="373" width="0.8883%" height="15" fill="rgb(223,20,43)"/><text x="8.2449%" y="383.50"></text></g><g><title>axgeom::range::Range&lt;T&gt;::intersects (2 samples, 0.25%)</title><rect x="8.6294%" y="357" width="0.2538%" height="15" fill="rgb(229,81,49)"/><text x="8.8794%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::le (2 samples, 0.25%)</title><rect x="8.6294%" y="341" width="0.2538%" height="15" fill="rgb(236,28,36)"/><text x="8.8794%" y="351.50"></text></g><g><title>&lt;broccoli::node::vistr_mut::VistrMut&lt;N&gt; as compt::Visitor&gt;::next (1 samples, 0.13%)</title><rect x="8.8832%" y="437" width="0.1269%" height="15" fill="rgb(249,185,26)"/><text x="9.1332%" y="447.50"></text></g><g><title>&lt;compt::dfs_order::VistrMut&lt;T,compt::dfs_order::PreOrder&gt; as compt::Visitor&gt;::next (1 samples, 0.13%)</title><rect x="8.8832%" y="421" width="0.1269%" height="15" fill="rgb(249,174,33)"/><text x="9.1332%" y="431.50"></text></g><g><title>compt::dfs_order::vistr_mut_next (1 samples, 0.13%)</title><rect x="8.8832%" y="405" width="0.1269%" height="15" fill="rgb(233,201,37)"/><text x="9.1332%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as twounordered::RetainMutUnordered&lt;T&gt;&gt;::truncate (1 samples, 0.13%)</title><rect x="9.1371%" y="373" width="0.1269%" height="15" fill="rgb(221,78,26)"/><text x="9.3871%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::truncate (1 samples, 0.13%)</title><rect x="9.1371%" y="357" width="0.1269%" height="15" fill="rgb(250,127,30)"/><text x="9.3871%" y="367.50"></text></g><g><title>data_gen::colfind::float_vs_integer::handle_bench::{{closure}}::{{closure}} (1 samples, 0.13%)</title><rect x="9.5178%" y="309" width="0.1269%" height="15" fill="rgb(230,49,44)"/><text x="9.7678%" y="319.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (3 samples, 0.38%)</title><rect x="9.3909%" y="357" width="0.3807%" height="15" fill="rgb(229,67,23)"/><text x="9.6409%" y="367.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFn&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (2 samples, 0.25%)</title><rect x="9.5178%" y="341" width="0.2538%" height="15" fill="rgb(249,83,47)"/><text x="9.7678%" y="351.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut_par::{{closure}} (2 samples, 0.25%)</title><rect x="9.5178%" y="325" width="0.2538%" height="15" fill="rgb(215,43,3)"/><text x="9.7678%" y="335.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.13%)</title><rect x="9.6447%" y="309" width="0.1269%" height="15" fill="rgb(238,154,13)"/><text x="9.8947%" y="319.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_node (7 samples, 0.89%)</title><rect x="9.0102%" y="437" width="0.8883%" height="15" fill="rgb(219,56,2)"/><text x="9.2602%" y="447.50"></text></g><g><title>broccoli::query::colfind::oned::find_2d (7 samples, 0.89%)</title><rect x="9.0102%" y="421" width="0.8883%" height="15" fill="rgb(233,0,4)"/><text x="9.2602%" y="431.50"></text></g><g><title>broccoli::query::colfind::oned::find (7 samples, 0.89%)</title><rect x="9.0102%" y="405" width="0.8883%" height="15" fill="rgb(235,30,7)"/><text x="9.2602%" y="415.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (7 samples, 0.89%)</title><rect x="9.0102%" y="389" width="0.8883%" height="15" fill="rgb(250,79,13)"/><text x="9.2602%" y="399.50"></text></g><g><title>broccoli::query::colfind::oned::find::{{closure}} (5 samples, 0.63%)</title><rect x="9.2640%" y="373" width="0.6345%" height="15" fill="rgb(211,146,34)"/><text x="9.5140%" y="383.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.13%)</title><rect x="9.7716%" y="357" width="0.1269%" height="15" fill="rgb(228,22,38)"/><text x="10.0216%" y="367.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_node (6 samples, 0.76%)</title><rect x="9.8985%" y="421" width="0.7614%" height="15" fill="rgb(235,168,5)"/><text x="10.1485%" y="431.50"></text></g><g><title>broccoli::query::colfind::oned::find_2d (6 samples, 0.76%)</title><rect x="9.8985%" y="405" width="0.7614%" height="15" fill="rgb(221,155,16)"/><text x="10.1485%" y="415.50"></text></g><g><title>broccoli::query::colfind::oned::find (6 samples, 0.76%)</title><rect x="9.8985%" y="389" width="0.7614%" height="15" fill="rgb(215,215,53)"/><text x="10.1485%" y="399.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (6 samples, 0.76%)</title><rect x="9.8985%" y="373" width="0.7614%" height="15" fill="rgb(223,4,10)"/><text x="10.1485%" y="383.50"></text></g><g><title>broccoli::query::colfind::oned::find::{{closure}} (4 samples, 0.51%)</title><rect x="10.1523%" y="357" width="0.5076%" height="15" fill="rgb(234,103,6)"/><text x="10.4023%" y="367.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (3 samples, 0.38%)</title><rect x="10.2792%" y="341" width="0.3807%" height="15" fill="rgb(227,97,0)"/><text x="10.5292%" y="351.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFn&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (2 samples, 0.25%)</title><rect x="10.4061%" y="325" width="0.2538%" height="15" fill="rgb(234,150,53)"/><text x="10.6561%" y="335.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut_par::{{closure}} (2 samples, 0.25%)</title><rect x="10.4061%" y="309" width="0.2538%" height="15" fill="rgb(228,201,54)"/><text x="10.6561%" y="319.50"></text></g><g><title>data_gen::colfind::float_vs_integer::handle_bench::{{closure}}::{{closure}} (2 samples, 0.25%)</title><rect x="10.4061%" y="293" width="0.2538%" height="15" fill="rgb(222,22,37)"/><text x="10.6561%" y="303.50"></text></g><g><title>data_gen::colfind::float_vs_integer::handle_bench::{{closure}}::{{closure}} (1 samples, 0.13%)</title><rect x="10.7868%" y="277" width="0.1269%" height="15" fill="rgb(237,53,32)"/><text x="11.0368%" y="287.50"></text></g><g><title>broccoli::query::colfind::oned::find::{{closure}} (2 samples, 0.25%)</title><rect x="10.7868%" y="341" width="0.2538%" height="15" fill="rgb(233,25,53)"/><text x="11.0368%" y="351.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (2 samples, 0.25%)</title><rect x="10.7868%" y="325" width="0.2538%" height="15" fill="rgb(210,40,34)"/><text x="11.0368%" y="335.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFn&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (2 samples, 0.25%)</title><rect x="10.7868%" y="309" width="0.2538%" height="15" fill="rgb(241,220,44)"/><text x="11.0368%" y="319.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut_par::{{closure}} (2 samples, 0.25%)</title><rect x="10.7868%" y="293" width="0.2538%" height="15" fill="rgb(235,28,35)"/><text x="11.0368%" y="303.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.13%)</title><rect x="10.9137%" y="277" width="0.1269%" height="15" fill="rgb(210,56,17)"/><text x="11.1637%" y="287.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_node (4 samples, 0.51%)</title><rect x="10.6599%" y="405" width="0.5076%" height="15" fill="rgb(224,130,29)"/><text x="10.9099%" y="415.50"></text></g><g><title>broccoli::query::colfind::oned::find_2d (4 samples, 0.51%)</title><rect x="10.6599%" y="389" width="0.5076%" height="15" fill="rgb(235,212,8)"/><text x="10.9099%" y="399.50"></text></g><g><title>broccoli::query::colfind::oned::find (4 samples, 0.51%)</title><rect x="10.6599%" y="373" width="0.5076%" height="15" fill="rgb(223,33,50)"/><text x="10.9099%" y="383.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (4 samples, 0.51%)</title><rect x="10.6599%" y="357" width="0.5076%" height="15" fill="rgb(219,149,13)"/><text x="10.9099%" y="367.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.13%)</title><rect x="11.0406%" y="341" width="0.1269%" height="15" fill="rgb(250,156,29)"/><text x="11.2906%" y="351.50"></text></g><g><title>core::ptr::swap (1 samples, 0.13%)</title><rect x="11.0406%" y="325" width="0.1269%" height="15" fill="rgb(216,193,19)"/><text x="11.2906%" y="335.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.13%)</title><rect x="11.0406%" y="309" width="0.1269%" height="15" fill="rgb(216,135,14)"/><text x="11.2906%" y="319.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_node (1 samples, 0.13%)</title><rect x="11.1675%" y="389" width="0.1269%" height="15" fill="rgb(241,47,5)"/><text x="11.4175%" y="399.50"></text></g><g><title>broccoli::query::colfind::oned::find_2d (1 samples, 0.13%)</title><rect x="11.1675%" y="373" width="0.1269%" height="15" fill="rgb(233,42,35)"/><text x="11.4175%" y="383.50"></text></g><g><title>broccoli::query::colfind::oned::find (1 samples, 0.13%)</title><rect x="11.1675%" y="357" width="0.1269%" height="15" fill="rgb(231,13,6)"/><text x="11.4175%" y="367.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (1 samples, 0.13%)</title><rect x="11.1675%" y="341" width="0.1269%" height="15" fill="rgb(207,181,40)"/><text x="11.4175%" y="351.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (1 samples, 0.13%)</title><rect x="11.2944%" y="389" width="0.1269%" height="15" fill="rgb(254,173,49)"/><text x="11.5444%" y="399.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (1 samples, 0.13%)</title><rect x="11.2944%" y="373" width="0.1269%" height="15" fill="rgb(221,1,38)"/><text x="11.5444%" y="383.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (1 samples, 0.13%)</title><rect x="11.2944%" y="357" width="0.1269%" height="15" fill="rgb(206,124,46)"/><text x="11.5444%" y="367.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (1 samples, 0.13%)</title><rect x="11.2944%" y="341" width="0.1269%" height="15" fill="rgb(249,21,11)"/><text x="11.5444%" y="351.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (1 samples, 0.13%)</title><rect x="11.4213%" y="389" width="0.1269%" height="15" fill="rgb(222,201,40)"/><text x="11.6713%" y="399.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (1 samples, 0.13%)</title><rect x="11.4213%" y="373" width="0.1269%" height="15" fill="rgb(235,61,29)"/><text x="11.6713%" y="383.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (1 samples, 0.13%)</title><rect x="11.4213%" y="357" width="0.1269%" height="15" fill="rgb(219,207,3)"/><text x="11.6713%" y="367.50"></text></g><g><title>&lt;twounordered::FirstVec&lt;T&gt; as twounordered::RetainMutUnordered&lt;T&gt;&gt;::truncate (1 samples, 0.13%)</title><rect x="11.4213%" y="341" width="0.1269%" height="15" fill="rgb(222,56,46)"/><text x="11.6713%" y="351.50"></text></g><g><title>twounordered::FirstVec&lt;T&gt;::truncate (1 samples, 0.13%)</title><rect x="11.4213%" y="325" width="0.1269%" height="15" fill="rgb(239,76,54)"/><text x="11.6713%" y="335.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.13%)</title><rect x="11.4213%" y="309" width="0.1269%" height="15" fill="rgb(231,124,27)"/><text x="11.6713%" y="319.50"></text></g><g><title>broccoli::query::colfind::inner::ColFindRecurser&lt;T,K,S&gt;::recurse_seq (4 samples, 0.51%)</title><rect x="11.1675%" y="405" width="0.5076%" height="15" fill="rgb(249,195,6)"/><text x="11.4175%" y="415.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (1 samples, 0.13%)</title><rect x="11.5482%" y="389" width="0.1269%" height="15" fill="rgb(237,174,47)"/><text x="11.7982%" y="399.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (1 samples, 0.13%)</title><rect x="11.5482%" y="373" width="0.1269%" height="15" fill="rgb(206,201,31)"/><text x="11.7982%" y="383.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (1 samples, 0.13%)</title><rect x="11.5482%" y="357" width="0.1269%" height="15" fill="rgb(231,57,52)"/><text x="11.7982%" y="367.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (1 samples, 0.13%)</title><rect x="11.5482%" y="341" width="0.1269%" height="15" fill="rgb(248,177,22)"/><text x="11.7982%" y="351.50"></text></g><g><title>twounordered::FirstVec&lt;T&gt;::push (1 samples, 0.13%)</title><rect x="11.6751%" y="341" width="0.1269%" height="15" fill="rgb(215,211,37)"/><text x="11.9251%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.13%)</title><rect x="11.6751%" y="325" width="0.1269%" height="15" fill="rgb(241,128,51)"/><text x="11.9251%" y="335.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (2 samples, 0.25%)</title><rect x="11.6751%" y="389" width="0.2538%" height="15" fill="rgb(227,165,31)"/><text x="11.9251%" y="399.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (2 samples, 0.25%)</title><rect x="11.6751%" y="373" width="0.2538%" height="15" fill="rgb(228,167,24)"/><text x="11.9251%" y="383.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (2 samples, 0.25%)</title><rect x="11.6751%" y="357" width="0.2538%" height="15" fill="rgb(228,143,12)"/><text x="11.9251%" y="367.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (1 samples, 0.13%)</title><rect x="11.8020%" y="341" width="0.1269%" height="15" fill="rgb(249,149,8)"/><text x="12.0520%" y="351.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (1 samples, 0.13%)</title><rect x="11.8020%" y="325" width="0.1269%" height="15" fill="rgb(243,35,44)"/><text x="12.0520%" y="335.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.13%)</title><rect x="11.8020%" y="309" width="0.1269%" height="15" fill="rgb(246,89,9)"/><text x="12.0520%" y="319.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (1 samples, 0.13%)</title><rect x="11.9289%" y="357" width="0.1269%" height="15" fill="rgb(233,213,13)"/><text x="12.1789%" y="367.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.13%)</title><rect x="11.9289%" y="341" width="0.1269%" height="15" fill="rgb(233,141,41)"/><text x="12.1789%" y="351.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (2 samples, 0.25%)</title><rect x="12.0558%" y="341" width="0.2538%" height="15" fill="rgb(239,167,4)"/><text x="12.3058%" y="351.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.13%)</title><rect x="12.1827%" y="325" width="0.1269%" height="15" fill="rgb(209,217,16)"/><text x="12.4327%" y="335.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (3 samples, 0.38%)</title><rect x="12.0558%" y="357" width="0.3807%" height="15" fill="rgb(219,88,35)"/><text x="12.3058%" y="367.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.13%)</title><rect x="12.3096%" y="341" width="0.1269%" height="15" fill="rgb(220,193,23)"/><text x="12.5596%" y="351.50"></text></g><g><title>core::ptr::swap (1 samples, 0.13%)</title><rect x="12.3096%" y="325" width="0.1269%" height="15" fill="rgb(230,90,52)"/><text x="12.5596%" y="335.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.13%)</title><rect x="12.3096%" y="309" width="0.1269%" height="15" fill="rgb(252,106,19)"/><text x="12.5596%" y="319.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (7 samples, 0.89%)</title><rect x="11.6751%" y="405" width="0.8883%" height="15" fill="rgb(206,74,20)"/><text x="11.9251%" y="415.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (5 samples, 0.63%)</title><rect x="11.9289%" y="389" width="0.6345%" height="15" fill="rgb(230,138,44)"/><text x="12.1789%" y="399.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (5 samples, 0.63%)</title><rect x="11.9289%" y="373" width="0.6345%" height="15" fill="rgb(235,182,43)"/><text x="12.1789%" y="383.50"></text></g><g><title>twounordered::SecondVec&lt;T&gt;::push (1 samples, 0.13%)</title><rect x="12.4365%" y="357" width="0.1269%" height="15" fill="rgb(242,16,51)"/><text x="12.6865%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.13%)</title><rect x="12.4365%" y="341" width="0.1269%" height="15" fill="rgb(248,9,4)"/><text x="12.6865%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.13%)</title><rect x="12.5635%" y="373" width="0.1269%" height="15" fill="rgb(210,31,22)"/><text x="12.8135%" y="383.50"></text></g><g><title>broccoli::query::colfind::oned::find_2d (4 samples, 0.51%)</title><rect x="12.5635%" y="405" width="0.5076%" height="15" fill="rgb(239,54,39)"/><text x="12.8135%" y="415.50"></text></g><g><title>broccoli::query::colfind::oned::find (4 samples, 0.51%)</title><rect x="12.5635%" y="389" width="0.5076%" height="15" fill="rgb(230,99,41)"/><text x="12.8135%" y="399.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (3 samples, 0.38%)</title><rect x="12.6904%" y="373" width="0.3807%" height="15" fill="rgb(253,106,12)"/><text x="12.9404%" y="383.50"></text></g><g><title>broccoli::query::colfind::oned::find::{{closure}} (1 samples, 0.13%)</title><rect x="12.9442%" y="357" width="0.1269%" height="15" fill="rgb(213,46,41)"/><text x="13.1942%" y="367.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.13%)</title><rect x="12.9442%" y="341" width="0.1269%" height="15" fill="rgb(215,133,35)"/><text x="13.1942%" y="351.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFn&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.13%)</title><rect x="12.9442%" y="325" width="0.1269%" height="15" fill="rgb(213,28,5)"/><text x="13.1942%" y="335.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut_par::{{closure}} (1 samples, 0.13%)</title><rect x="12.9442%" y="309" width="0.1269%" height="15" fill="rgb(215,77,49)"/><text x="13.1942%" y="319.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.13%)</title><rect x="12.9442%" y="293" width="0.1269%" height="15" fill="rgb(248,100,22)"/><text x="13.1942%" y="303.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.13%)</title><rect x="13.0711%" y="373" width="0.1269%" height="15" fill="rgb(208,67,9)"/><text x="13.3211%" y="383.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (2 samples, 0.25%)</title><rect x="13.0711%" y="405" width="0.2538%" height="15" fill="rgb(219,133,21)"/><text x="13.3211%" y="415.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (2 samples, 0.25%)</title><rect x="13.0711%" y="389" width="0.2538%" height="15" fill="rgb(246,46,29)"/><text x="13.3211%" y="399.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (1 samples, 0.13%)</title><rect x="13.1980%" y="373" width="0.1269%" height="15" fill="rgb(246,185,52)"/><text x="13.4480%" y="383.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (1 samples, 0.13%)</title><rect x="13.4518%" y="373" width="0.1269%" height="15" fill="rgb(252,136,11)"/><text x="13.7018%" y="383.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (1 samples, 0.13%)</title><rect x="13.4518%" y="357" width="0.1269%" height="15" fill="rgb(219,138,53)"/><text x="13.7018%" y="367.50"></text></g><g><title>twounordered::FirstVec&lt;T&gt;::push (1 samples, 0.13%)</title><rect x="13.5787%" y="373" width="0.1269%" height="15" fill="rgb(211,51,23)"/><text x="13.8287%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.13%)</title><rect x="13.5787%" y="357" width="0.1269%" height="15" fill="rgb(247,221,28)"/><text x="13.8287%" y="367.50"></text></g><g><title>&lt;twounordered::FirstVec&lt;T&gt; as twounordered::RetainMutUnordered&lt;T&gt;&gt;::truncate (1 samples, 0.13%)</title><rect x="14.0863%" y="357" width="0.1269%" height="15" fill="rgb(251,222,45)"/><text x="14.3363%" y="367.50"></text></g><g><title>twounordered::FirstVec&lt;T&gt;::truncate (1 samples, 0.13%)</title><rect x="14.0863%" y="341" width="0.1269%" height="15" fill="rgb(217,162,53)"/><text x="14.3363%" y="351.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.13%)</title><rect x="14.0863%" y="325" width="0.1269%" height="15" fill="rgb(229,93,14)"/><text x="14.3363%" y="335.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.13%)</title><rect x="14.0863%" y="309" width="0.1269%" height="15" fill="rgb(209,67,49)"/><text x="14.3363%" y="319.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.13%)</title><rect x="14.3401%" y="341" width="0.1269%" height="15" fill="rgb(213,87,29)"/><text x="14.5901%" y="351.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFn&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.13%)</title><rect x="14.3401%" y="325" width="0.1269%" height="15" fill="rgb(205,151,52)"/><text x="14.5901%" y="335.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut_par::{{closure}} (1 samples, 0.13%)</title><rect x="14.3401%" y="309" width="0.1269%" height="15" fill="rgb(253,215,39)"/><text x="14.5901%" y="319.50"></text></g><g><title>data_gen::colfind::float_vs_integer::handle_bench::{{closure}}::{{closure}} (1 samples, 0.13%)</title><rect x="14.3401%" y="293" width="0.1269%" height="15" fill="rgb(221,220,41)"/><text x="14.5901%" y="303.50"></text></g><g><title>broccoli::query::colfind::inner::ColFindRecurser&lt;T,K,S&gt;::recurse_seq (32 samples, 4.06%)</title><rect x="10.6599%" y="421" width="4.0609%" height="15" fill="rgb(218,133,21)"/><text x="10.9099%" y="431.50">broc..</text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (11 samples, 1.40%)</title><rect x="13.3249%" y="405" width="1.3959%" height="15" fill="rgb(221,193,43)"/><text x="13.5749%" y="415.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (11 samples, 1.40%)</title><rect x="13.3249%" y="389" width="1.3959%" height="15" fill="rgb(240,128,52)"/><text x="13.5749%" y="399.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (8 samples, 1.02%)</title><rect x="13.7056%" y="373" width="1.0152%" height="15" fill="rgb(253,114,12)"/><text x="13.9556%" y="383.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (4 samples, 0.51%)</title><rect x="14.2132%" y="357" width="0.5076%" height="15" fill="rgb(215,223,47)"/><text x="14.4632%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (2 samples, 0.25%)</title><rect x="14.4670%" y="341" width="0.2538%" height="15" fill="rgb(248,225,23)"/><text x="14.7170%" y="351.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::lt (2 samples, 0.25%)</title><rect x="14.7208%" y="357" width="0.2538%" height="15" fill="rgb(250,108,0)"/><text x="14.9708%" y="367.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (1 samples, 0.13%)</title><rect x="14.9746%" y="357" width="0.1269%" height="15" fill="rgb(228,208,7)"/><text x="15.2246%" y="367.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (1 samples, 0.13%)</title><rect x="14.9746%" y="341" width="0.1269%" height="15" fill="rgb(244,45,10)"/><text x="15.2246%" y="351.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek::{{closure}} (1 samples, 0.13%)</title><rect x="14.9746%" y="325" width="0.1269%" height="15" fill="rgb(207,125,25)"/><text x="15.2246%" y="335.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.13%)</title><rect x="14.9746%" y="309" width="0.1269%" height="15" fill="rgb(210,195,18)"/><text x="15.2246%" y="319.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.13%)</title><rect x="14.9746%" y="293" width="0.1269%" height="15" fill="rgb(249,80,12)"/><text x="15.2246%" y="303.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.13%)</title><rect x="15.3553%" y="325" width="0.1269%" height="15" fill="rgb(221,65,9)"/><text x="15.6053%" y="335.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.13%)</title><rect x="15.3553%" y="309" width="0.1269%" height="15" fill="rgb(235,49,36)"/><text x="15.6053%" y="319.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (1 samples, 0.13%)</title><rect x="15.3553%" y="293" width="0.1269%" height="15" fill="rgb(225,32,20)"/><text x="15.6053%" y="303.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.13%)</title><rect x="15.3553%" y="277" width="0.1269%" height="15" fill="rgb(215,141,46)"/><text x="15.6053%" y="287.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (4 samples, 0.51%)</title><rect x="15.1015%" y="341" width="0.5076%" height="15" fill="rgb(250,160,47)"/><text x="15.3515%" y="351.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.13%)</title><rect x="15.4822%" y="325" width="0.1269%" height="15" fill="rgb(216,222,40)"/><text x="15.7322%" y="335.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (8 samples, 1.02%)</title><rect x="14.7208%" y="405" width="1.0152%" height="15" fill="rgb(234,217,39)"/><text x="14.9708%" y="415.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (8 samples, 1.02%)</title><rect x="14.7208%" y="389" width="1.0152%" height="15" fill="rgb(207,178,40)"/><text x="14.9708%" y="399.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (8 samples, 1.02%)</title><rect x="14.7208%" y="373" width="1.0152%" height="15" fill="rgb(221,136,13)"/><text x="14.9708%" y="383.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (5 samples, 0.63%)</title><rect x="15.1015%" y="357" width="0.6345%" height="15" fill="rgb(249,199,10)"/><text x="15.3515%" y="367.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.13%)</title><rect x="15.6091%" y="341" width="0.1269%" height="15" fill="rgb(249,222,13)"/><text x="15.8591%" y="351.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (1 samples, 0.13%)</title><rect x="15.7360%" y="405" width="0.1269%" height="15" fill="rgb(244,185,38)"/><text x="15.9860%" y="415.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (1 samples, 0.13%)</title><rect x="15.7360%" y="389" width="0.1269%" height="15" fill="rgb(236,202,9)"/><text x="15.9860%" y="399.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (1 samples, 0.13%)</title><rect x="15.7360%" y="373" width="0.1269%" height="15" fill="rgb(250,229,37)"/><text x="15.9860%" y="383.50"></text></g><g><title>twounordered::FirstVec&lt;T&gt;::push (1 samples, 0.13%)</title><rect x="15.7360%" y="357" width="0.1269%" height="15" fill="rgb(206,174,23)"/><text x="15.9860%" y="367.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.13%)</title><rect x="15.7360%" y="341" width="0.1269%" height="15" fill="rgb(211,33,43)"/><text x="15.9860%" y="351.50"></text></g><g><title>core::ptr::swap (1 samples, 0.13%)</title><rect x="15.7360%" y="325" width="0.1269%" height="15" fill="rgb(245,58,50)"/><text x="15.9860%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.13%)</title><rect x="15.7360%" y="309" width="0.1269%" height="15" fill="rgb(244,68,36)"/><text x="15.9860%" y="319.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (2 samples, 0.25%)</title><rect x="15.8629%" y="373" width="0.2538%" height="15" fill="rgb(232,229,15)"/><text x="16.1129%" y="383.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (2 samples, 0.25%)</title><rect x="15.8629%" y="357" width="0.2538%" height="15" fill="rgb(254,30,23)"/><text x="16.1129%" y="367.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (2 samples, 0.25%)</title><rect x="15.8629%" y="341" width="0.2538%" height="15" fill="rgb(235,160,14)"/><text x="16.1129%" y="351.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (3 samples, 0.38%)</title><rect x="15.8629%" y="405" width="0.3807%" height="15" fill="rgb(212,155,44)"/><text x="16.1129%" y="415.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (3 samples, 0.38%)</title><rect x="15.8629%" y="389" width="0.3807%" height="15" fill="rgb(226,2,50)"/><text x="16.1129%" y="399.50"></text></g><g><title>twounordered::SecondVec&lt;T&gt;::push (1 samples, 0.13%)</title><rect x="16.1168%" y="373" width="0.1269%" height="15" fill="rgb(234,177,6)"/><text x="16.3668%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.13%)</title><rect x="16.1168%" y="357" width="0.1269%" height="15" fill="rgb(217,24,9)"/><text x="16.3668%" y="367.50"></text></g><g><title>core::ptr::write (1 samples, 0.13%)</title><rect x="16.1168%" y="341" width="0.1269%" height="15" fill="rgb(220,13,46)"/><text x="16.3668%" y="351.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::lt (1 samples, 0.13%)</title><rect x="16.3706%" y="373" width="0.1269%" height="15" fill="rgb(239,221,27)"/><text x="16.6206%" y="383.50"></text></g><g><title>twounordered::FirstVec&lt;T&gt;::push (1 samples, 0.13%)</title><rect x="16.4975%" y="373" width="0.1269%" height="15" fill="rgb(222,198,25)"/><text x="16.7475%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.13%)</title><rect x="16.4975%" y="357" width="0.1269%" height="15" fill="rgb(211,99,13)"/><text x="16.7475%" y="367.50"></text></g><g><title>core::ptr::write (1 samples, 0.13%)</title><rect x="16.4975%" y="341" width="0.1269%" height="15" fill="rgb(232,111,31)"/><text x="16.7475%" y="351.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (2 samples, 0.25%)</title><rect x="16.6244%" y="341" width="0.2538%" height="15" fill="rgb(245,82,37)"/><text x="16.8744%" y="351.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFn&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.13%)</title><rect x="16.7513%" y="325" width="0.1269%" height="15" fill="rgb(227,149,46)"/><text x="17.0013%" y="335.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut_par::{{closure}} (1 samples, 0.13%)</title><rect x="16.7513%" y="309" width="0.1269%" height="15" fill="rgb(218,36,50)"/><text x="17.0013%" y="319.50"></text></g><g><title>data_gen::colfind::float_vs_integer::handle_bench::{{closure}}::{{closure}} (1 samples, 0.13%)</title><rect x="16.7513%" y="293" width="0.1269%" height="15" fill="rgb(226,80,48)"/><text x="17.0013%" y="303.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (18 samples, 2.28%)</title><rect x="14.7208%" y="421" width="2.2843%" height="15" fill="rgb(238,224,15)"/><text x="14.9708%" y="431.50">b..</text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (6 samples, 0.76%)</title><rect x="16.2437%" y="405" width="0.7614%" height="15" fill="rgb(241,136,10)"/><text x="16.4937%" y="415.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (6 samples, 0.76%)</title><rect x="16.2437%" y="389" width="0.7614%" height="15" fill="rgb(208,32,45)"/><text x="16.4937%" y="399.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (3 samples, 0.38%)</title><rect x="16.6244%" y="373" width="0.3807%" height="15" fill="rgb(207,135,9)"/><text x="16.8744%" y="383.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (3 samples, 0.38%)</title><rect x="16.6244%" y="357" width="0.3807%" height="15" fill="rgb(206,86,44)"/><text x="16.8744%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.13%)</title><rect x="16.8782%" y="341" width="0.1269%" height="15" fill="rgb(245,177,15)"/><text x="17.1282%" y="351.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (1 samples, 0.13%)</title><rect x="17.3858%" y="357" width="0.1269%" height="15" fill="rgb(206,64,50)"/><text x="17.6358%" y="367.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (2 samples, 0.25%)</title><rect x="17.5127%" y="357" width="0.2538%" height="15" fill="rgb(234,36,40)"/><text x="17.7627%" y="367.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFn&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.13%)</title><rect x="17.6396%" y="341" width="0.1269%" height="15" fill="rgb(213,64,8)"/><text x="17.8896%" y="351.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut_par::{{closure}} (1 samples, 0.13%)</title><rect x="17.6396%" y="325" width="0.1269%" height="15" fill="rgb(210,75,36)"/><text x="17.8896%" y="335.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.13%)</title><rect x="17.6396%" y="309" width="0.1269%" height="15" fill="rgb(229,88,21)"/><text x="17.8896%" y="319.50"></text></g><g><title>broccoli::query::colfind::oned::find_2d (7 samples, 0.89%)</title><rect x="17.0051%" y="421" width="0.8883%" height="15" fill="rgb(252,204,47)"/><text x="17.2551%" y="431.50"></text></g><g><title>broccoli::query::colfind::oned::find (7 samples, 0.89%)</title><rect x="17.0051%" y="405" width="0.8883%" height="15" fill="rgb(208,77,27)"/><text x="17.2551%" y="415.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (7 samples, 0.89%)</title><rect x="17.0051%" y="389" width="0.8883%" height="15" fill="rgb(221,76,26)"/><text x="17.2551%" y="399.50"></text></g><g><title>broccoli::query::colfind::oned::find::{{closure}} (6 samples, 0.76%)</title><rect x="17.1320%" y="373" width="0.7614%" height="15" fill="rgb(225,139,18)"/><text x="17.3820%" y="383.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.13%)</title><rect x="17.7665%" y="357" width="0.1269%" height="15" fill="rgb(230,137,11)"/><text x="18.0165%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::lt (1 samples, 0.13%)</title><rect x="17.8934%" y="389" width="0.1269%" height="15" fill="rgb(212,28,1)"/><text x="18.1434%" y="399.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (1 samples, 0.13%)</title><rect x="18.0203%" y="389" width="0.1269%" height="15" fill="rgb(248,164,17)"/><text x="18.2703%" y="399.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.13%)</title><rect x="18.0203%" y="373" width="0.1269%" height="15" fill="rgb(222,171,42)"/><text x="18.2703%" y="383.50"></text></g><g><title>twounordered::FirstVec&lt;T&gt;::push (1 samples, 0.13%)</title><rect x="18.1472%" y="389" width="0.1269%" height="15" fill="rgb(243,84,45)"/><text x="18.3972%" y="399.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (1 samples, 0.13%)</title><rect x="18.5279%" y="357" width="0.1269%" height="15" fill="rgb(252,49,23)"/><text x="18.7779%" y="367.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (10 samples, 1.27%)</title><rect x="17.8934%" y="421" width="1.2690%" height="15" fill="rgb(215,19,7)"/><text x="18.1434%" y="431.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (10 samples, 1.27%)</title><rect x="17.8934%" y="405" width="1.2690%" height="15" fill="rgb(238,81,41)"/><text x="18.1434%" y="415.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (7 samples, 0.89%)</title><rect x="18.2741%" y="389" width="0.8883%" height="15" fill="rgb(210,199,37)"/><text x="18.5241%" y="399.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (6 samples, 0.76%)</title><rect x="18.4010%" y="373" width="0.7614%" height="15" fill="rgb(244,192,49)"/><text x="18.6510%" y="383.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (4 samples, 0.51%)</title><rect x="18.6548%" y="357" width="0.5076%" height="15" fill="rgb(226,211,11)"/><text x="18.9048%" y="367.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.13%)</title><rect x="19.0355%" y="341" width="0.1269%" height="15" fill="rgb(236,162,54)"/><text x="19.2855%" y="351.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (1 samples, 0.13%)</title><rect x="19.0355%" y="325" width="0.1269%" height="15" fill="rgb(220,229,9)"/><text x="19.2855%" y="335.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.13%)</title><rect x="19.0355%" y="309" width="0.1269%" height="15" fill="rgb(250,87,22)"/><text x="19.2855%" y="319.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (4 samples, 0.51%)</title><rect x="19.2893%" y="389" width="0.5076%" height="15" fill="rgb(239,43,17)"/><text x="19.5393%" y="399.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (4 samples, 0.51%)</title><rect x="19.2893%" y="373" width="0.5076%" height="15" fill="rgb(231,177,25)"/><text x="19.5393%" y="383.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek::{{closure}} (4 samples, 0.51%)</title><rect x="19.2893%" y="357" width="0.5076%" height="15" fill="rgb(219,179,1)"/><text x="19.5393%" y="367.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.51%)</title><rect x="19.2893%" y="341" width="0.5076%" height="15" fill="rgb(238,219,53)"/><text x="19.5393%" y="351.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.51%)</title><rect x="19.2893%" y="325" width="0.5076%" height="15" fill="rgb(232,167,36)"/><text x="19.5393%" y="335.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (2 samples, 0.25%)</title><rect x="19.7970%" y="389" width="0.2538%" height="15" fill="rgb(244,19,51)"/><text x="20.0470%" y="399.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.13%)</title><rect x="20.5584%" y="357" width="0.1269%" height="15" fill="rgb(224,6,22)"/><text x="20.8084%" y="367.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFn&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.13%)</title><rect x="20.5584%" y="341" width="0.1269%" height="15" fill="rgb(224,145,5)"/><text x="20.8084%" y="351.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut_par::{{closure}} (1 samples, 0.13%)</title><rect x="20.5584%" y="325" width="0.1269%" height="15" fill="rgb(234,130,49)"/><text x="20.8084%" y="335.50"></text></g><g><title>data_gen::colfind::float_vs_integer::handle_bench::{{closure}}::{{closure}} (1 samples, 0.13%)</title><rect x="20.5584%" y="309" width="0.1269%" height="15" fill="rgb(254,6,2)"/><text x="20.8084%" y="319.50"></text></g><g><title>broccoli::query::colfind::inner::ColFindRecurser&lt;T,K,S&gt;::recurse_seq (87 samples, 11.04%)</title><rect x="9.8985%" y="437" width="11.0406%" height="15" fill="rgb(208,96,46)"/><text x="10.1485%" y="447.50">broccoli::query:..</text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (14 samples, 1.78%)</title><rect x="19.1624%" y="421" width="1.7766%" height="15" fill="rgb(239,3,39)"/><text x="19.4124%" y="431.50">b..</text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (14 samples, 1.78%)</title><rect x="19.1624%" y="405" width="1.7766%" height="15" fill="rgb(233,210,1)"/><text x="19.4124%" y="415.50">b..</text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (7 samples, 0.89%)</title><rect x="20.0508%" y="389" width="0.8883%" height="15" fill="rgb(244,137,37)"/><text x="20.3008%" y="399.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (4 samples, 0.51%)</title><rect x="20.4315%" y="373" width="0.5076%" height="15" fill="rgb(240,136,2)"/><text x="20.6815%" y="383.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (2 samples, 0.25%)</title><rect x="20.6853%" y="357" width="0.2538%" height="15" fill="rgb(239,18,37)"/><text x="20.9353%" y="367.50"></text></g><g><title>&lt;broccoli::node::vistr_mut::VistrMut&lt;N&gt; as compt::Visitor&gt;::next (2 samples, 0.25%)</title><rect x="20.9391%" y="421" width="0.2538%" height="15" fill="rgb(218,185,22)"/><text x="21.1891%" y="431.50"></text></g><g><title>&lt;compt::dfs_order::VistrMut&lt;T,compt::dfs_order::PreOrder&gt; as compt::Visitor&gt;::next (2 samples, 0.25%)</title><rect x="20.9391%" y="405" width="0.2538%" height="15" fill="rgb(225,218,4)"/><text x="21.1891%" y="415.50"></text></g><g><title>compt::dfs_order::vistr_mut_next (2 samples, 0.25%)</title><rect x="20.9391%" y="389" width="0.2538%" height="15" fill="rgb(230,182,32)"/><text x="21.1891%" y="399.50"></text></g><g><title>&lt;compt::dfs_order::PreOrder as compt::dfs_order::DfsOrder&gt;::split_mut (1 samples, 0.13%)</title><rect x="21.0660%" y="373" width="0.1269%" height="15" fill="rgb(242,56,43)"/><text x="21.3160%" y="383.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_first_mut (1 samples, 0.13%)</title><rect x="21.0660%" y="357" width="0.1269%" height="15" fill="rgb(233,99,24)"/><text x="21.3160%" y="367.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (2 samples, 0.25%)</title><rect x="21.3198%" y="341" width="0.2538%" height="15" fill="rgb(234,209,42)"/><text x="21.5698%" y="351.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.13%)</title><rect x="21.5736%" y="341" width="0.1269%" height="15" fill="rgb(227,7,12)"/><text x="21.8236%" y="351.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (4 samples, 0.51%)</title><rect x="21.3198%" y="373" width="0.5076%" height="15" fill="rgb(245,203,43)"/><text x="21.5698%" y="383.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (4 samples, 0.51%)</title><rect x="21.3198%" y="357" width="0.5076%" height="15" fill="rgb(238,205,33)"/><text x="21.5698%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.13%)</title><rect x="21.7005%" y="341" width="0.1269%" height="15" fill="rgb(231,56,7)"/><text x="21.9505%" y="351.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (6 samples, 0.76%)</title><rect x="21.1929%" y="405" width="0.7614%" height="15" fill="rgb(244,186,29)"/><text x="21.4429%" y="415.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (5 samples, 0.63%)</title><rect x="21.3198%" y="389" width="0.6345%" height="15" fill="rgb(234,111,31)"/><text x="21.5698%" y="399.50"></text></g><g><title>twounordered::SecondVec&lt;T&gt;::push (1 samples, 0.13%)</title><rect x="21.8274%" y="373" width="0.1269%" height="15" fill="rgb(241,149,10)"/><text x="22.0774%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.13%)</title><rect x="21.8274%" y="357" width="0.1269%" height="15" fill="rgb(249,206,44)"/><text x="22.0774%" y="367.50"></text></g><g><title>core::ptr::write (1 samples, 0.13%)</title><rect x="21.8274%" y="341" width="0.1269%" height="15" fill="rgb(251,153,30)"/><text x="22.0774%" y="351.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (10 samples, 1.27%)</title><rect x="21.1929%" y="421" width="1.2690%" height="15" fill="rgb(239,152,38)"/><text x="21.4429%" y="431.50"></text></g><g><title>broccoli::query::tools::get_section_mut (4 samples, 0.51%)</title><rect x="21.9543%" y="405" width="0.5076%" height="15" fill="rgb(249,139,47)"/><text x="22.2043%" y="415.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (1 samples, 0.13%)</title><rect x="22.4619%" y="357" width="0.1269%" height="15" fill="rgb(244,64,35)"/><text x="22.7119%" y="367.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (1 samples, 0.13%)</title><rect x="22.4619%" y="341" width="0.1269%" height="15" fill="rgb(216,46,15)"/><text x="22.7119%" y="351.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek::{{closure}} (1 samples, 0.13%)</title><rect x="22.4619%" y="325" width="0.1269%" height="15" fill="rgb(250,74,19)"/><text x="22.7119%" y="335.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.13%)</title><rect x="22.4619%" y="309" width="0.1269%" height="15" fill="rgb(249,42,33)"/><text x="22.7119%" y="319.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.13%)</title><rect x="22.4619%" y="293" width="0.1269%" height="15" fill="rgb(242,149,17)"/><text x="22.7119%" y="303.50"></text></g><g><title>twounordered::FirstVec&lt;T&gt;::push (1 samples, 0.13%)</title><rect x="22.5888%" y="357" width="0.1269%" height="15" fill="rgb(244,29,21)"/><text x="22.8388%" y="367.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.13%)</title><rect x="22.5888%" y="341" width="0.1269%" height="15" fill="rgb(220,130,37)"/><text x="22.8388%" y="351.50"></text></g><g><title>core::ptr::swap (1 samples, 0.13%)</title><rect x="22.5888%" y="325" width="0.1269%" height="15" fill="rgb(211,67,2)"/><text x="22.8388%" y="335.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.13%)</title><rect x="22.5888%" y="309" width="0.1269%" height="15" fill="rgb(235,68,52)"/><text x="22.8388%" y="319.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (3 samples, 0.38%)</title><rect x="22.4619%" y="389" width="0.3807%" height="15" fill="rgb(246,142,3)"/><text x="22.7119%" y="399.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (3 samples, 0.38%)</title><rect x="22.4619%" y="373" width="0.3807%" height="15" fill="rgb(241,25,7)"/><text x="22.7119%" y="383.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (1 samples, 0.13%)</title><rect x="22.7157%" y="357" width="0.1269%" height="15" fill="rgb(242,119,39)"/><text x="22.9657%" y="367.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (1 samples, 0.13%)</title><rect x="22.7157%" y="341" width="0.1269%" height="15" fill="rgb(241,98,45)"/><text x="22.9657%" y="351.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (4 samples, 0.51%)</title><rect x="22.4619%" y="405" width="0.5076%" height="15" fill="rgb(254,28,30)"/><text x="22.7119%" y="415.50"></text></g><g><title>broccoli::query::tools::get_section_mut (1 samples, 0.13%)</title><rect x="22.8426%" y="389" width="0.1269%" height="15" fill="rgb(241,142,54)"/><text x="23.0926%" y="399.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (1 samples, 0.13%)</title><rect x="22.9695%" y="405" width="0.1269%" height="15" fill="rgb(222,85,15)"/><text x="23.2195%" y="415.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (1 samples, 0.13%)</title><rect x="22.9695%" y="389" width="0.1269%" height="15" fill="rgb(210,85,47)"/><text x="23.2195%" y="399.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (1 samples, 0.13%)</title><rect x="22.9695%" y="373" width="0.1269%" height="15" fill="rgb(224,206,25)"/><text x="23.2195%" y="383.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (1 samples, 0.13%)</title><rect x="22.9695%" y="357" width="0.1269%" height="15" fill="rgb(243,201,19)"/><text x="23.2195%" y="367.50"></text></g><g><title>twounordered::FirstVec&lt;T&gt;::push (1 samples, 0.13%)</title><rect x="23.0964%" y="373" width="0.1269%" height="15" fill="rgb(236,59,4)"/><text x="23.3464%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.13%)</title><rect x="23.0964%" y="357" width="0.1269%" height="15" fill="rgb(254,179,45)"/><text x="23.3464%" y="367.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (2 samples, 0.25%)</title><rect x="23.0964%" y="405" width="0.2538%" height="15" fill="rgb(226,14,10)"/><text x="23.3464%" y="415.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (2 samples, 0.25%)</title><rect x="23.0964%" y="389" width="0.2538%" height="15" fill="rgb(244,27,41)"/><text x="23.3464%" y="399.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (1 samples, 0.13%)</title><rect x="23.2234%" y="373" width="0.1269%" height="15" fill="rgb(235,35,32)"/><text x="23.4734%" y="383.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (8 samples, 1.02%)</title><rect x="22.4619%" y="421" width="1.0152%" height="15" fill="rgb(218,68,31)"/><text x="22.7119%" y="431.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (1 samples, 0.13%)</title><rect x="23.3503%" y="405" width="0.1269%" height="15" fill="rgb(207,120,37)"/><text x="23.6003%" y="415.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (1 samples, 0.13%)</title><rect x="23.3503%" y="389" width="0.1269%" height="15" fill="rgb(227,98,0)"/><text x="23.6003%" y="399.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (1 samples, 0.13%)</title><rect x="23.3503%" y="373" width="0.1269%" height="15" fill="rgb(207,7,3)"/><text x="23.6003%" y="383.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (1 samples, 0.13%)</title><rect x="23.3503%" y="357" width="0.1269%" height="15" fill="rgb(206,98,19)"/><text x="23.6003%" y="367.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.13%)</title><rect x="23.6041%" y="389" width="0.1269%" height="15" fill="rgb(217,5,26)"/><text x="23.8541%" y="399.50"></text></g><g><title>twounordered::FirstVec&lt;T&gt;::push (2 samples, 0.25%)</title><rect x="23.7310%" y="389" width="0.2538%" height="15" fill="rgb(235,190,38)"/><text x="23.9810%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.13%)</title><rect x="23.8579%" y="373" width="0.1269%" height="15" fill="rgb(247,86,24)"/><text x="24.1079%" y="383.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (5 samples, 0.63%)</title><rect x="25.0000%" y="357" width="0.6345%" height="15" fill="rgb(205,101,16)"/><text x="25.2500%" y="367.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (2 samples, 0.25%)</title><rect x="25.3807%" y="341" width="0.2538%" height="15" fill="rgb(246,168,33)"/><text x="25.6307%" y="351.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (2 samples, 0.25%)</title><rect x="25.3807%" y="325" width="0.2538%" height="15" fill="rgb(231,114,1)"/><text x="25.6307%" y="335.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (2 samples, 0.25%)</title><rect x="25.3807%" y="309" width="0.2538%" height="15" fill="rgb(207,184,53)"/><text x="25.6307%" y="319.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (20 samples, 2.54%)</title><rect x="23.4772%" y="421" width="2.5381%" height="15" fill="rgb(224,95,51)"/><text x="23.7272%" y="431.50">br..</text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (20 samples, 2.54%)</title><rect x="23.4772%" y="405" width="2.5381%" height="15" fill="rgb(212,188,45)"/><text x="23.7272%" y="415.50">br..</text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (16 samples, 2.03%)</title><rect x="23.9848%" y="389" width="2.0305%" height="15" fill="rgb(223,154,38)"/><text x="24.2348%" y="399.50">t..</text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (12 samples, 1.52%)</title><rect x="24.4924%" y="373" width="1.5228%" height="15" fill="rgb(251,22,52)"/><text x="24.7424%" y="383.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (3 samples, 0.38%)</title><rect x="25.6345%" y="357" width="0.3807%" height="15" fill="rgb(229,209,22)"/><text x="25.8845%" y="367.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (2 samples, 0.25%)</title><rect x="26.0152%" y="389" width="0.2538%" height="15" fill="rgb(234,138,34)"/><text x="26.2652%" y="399.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (2 samples, 0.25%)</title><rect x="26.0152%" y="373" width="0.2538%" height="15" fill="rgb(212,95,11)"/><text x="26.2652%" y="383.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek::{{closure}} (2 samples, 0.25%)</title><rect x="26.0152%" y="357" width="0.2538%" height="15" fill="rgb(240,179,47)"/><text x="26.2652%" y="367.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.25%)</title><rect x="26.0152%" y="341" width="0.2538%" height="15" fill="rgb(240,163,11)"/><text x="26.2652%" y="351.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.25%)</title><rect x="26.0152%" y="325" width="0.2538%" height="15" fill="rgb(236,37,12)"/><text x="26.2652%" y="335.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (2 samples, 0.25%)</title><rect x="26.3959%" y="373" width="0.2538%" height="15" fill="rgb(232,164,16)"/><text x="26.6459%" y="383.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (46 samples, 5.84%)</title><rect x="20.9391%" y="437" width="5.8376%" height="15" fill="rgb(244,205,15)"/><text x="21.1891%" y="447.50">broccol..</text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (6 samples, 0.76%)</title><rect x="26.0152%" y="421" width="0.7614%" height="15" fill="rgb(223,117,47)"/><text x="26.2652%" y="431.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (6 samples, 0.76%)</title><rect x="26.0152%" y="405" width="0.7614%" height="15" fill="rgb(244,107,35)"/><text x="26.2652%" y="415.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (4 samples, 0.51%)</title><rect x="26.2690%" y="389" width="0.5076%" height="15" fill="rgb(205,140,8)"/><text x="26.5190%" y="399.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.13%)</title><rect x="26.6497%" y="373" width="0.1269%" height="15" fill="rgb(228,84,46)"/><text x="26.8997%" y="383.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.13%)</title><rect x="26.6497%" y="357" width="0.1269%" height="15" fill="rgb(254,188,9)"/><text x="26.8997%" y="367.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (1 samples, 0.13%)</title><rect x="27.7919%" y="373" width="0.1269%" height="15" fill="rgb(206,112,54)"/><text x="28.0419%" y="383.50"></text></g><g><title>broccoli::query::colfind::oned::find_2d (14 samples, 1.78%)</title><rect x="26.7766%" y="437" width="1.7766%" height="15" fill="rgb(216,84,49)"/><text x="27.0266%" y="447.50">b..</text></g><g><title>broccoli::query::colfind::oned::find (14 samples, 1.78%)</title><rect x="26.7766%" y="421" width="1.7766%" height="15" fill="rgb(214,194,35)"/><text x="27.0266%" y="431.50">b..</text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (14 samples, 1.78%)</title><rect x="26.7766%" y="405" width="1.7766%" height="15" fill="rgb(249,28,3)"/><text x="27.0266%" y="415.50">t..</text></g><g><title>broccoli::query::colfind::oned::find::{{closure}} (8 samples, 1.02%)</title><rect x="27.5381%" y="389" width="1.0152%" height="15" fill="rgb(222,56,52)"/><text x="27.7881%" y="399.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (5 samples, 0.63%)</title><rect x="27.9188%" y="373" width="0.6345%" height="15" fill="rgb(245,217,50)"/><text x="28.1688%" y="383.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFn&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.13%)</title><rect x="28.4264%" y="357" width="0.1269%" height="15" fill="rgb(213,201,24)"/><text x="28.6764%" y="367.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut_par::{{closure}} (1 samples, 0.13%)</title><rect x="28.4264%" y="341" width="0.1269%" height="15" fill="rgb(248,116,28)"/><text x="28.6764%" y="351.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.13%)</title><rect x="28.4264%" y="325" width="0.1269%" height="15" fill="rgb(219,72,43)"/><text x="28.6764%" y="335.50"></text></g><g><title>&lt;twounordered::FirstVec&lt;T&gt; as twounordered::RetainMutUnordered&lt;T&gt;&gt;::truncate (1 samples, 0.13%)</title><rect x="28.8071%" y="389" width="0.1269%" height="15" fill="rgb(209,138,14)"/><text x="29.0571%" y="399.50"></text></g><g><title>twounordered::FirstVec&lt;T&gt;::truncate (1 samples, 0.13%)</title><rect x="28.8071%" y="373" width="0.1269%" height="15" fill="rgb(222,18,33)"/><text x="29.0571%" y="383.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.13%)</title><rect x="28.8071%" y="357" width="0.1269%" height="15" fill="rgb(213,199,7)"/><text x="29.0571%" y="367.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.13%)</title><rect x="28.8071%" y="341" width="0.1269%" height="15" fill="rgb(250,110,10)"/><text x="29.0571%" y="351.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (2 samples, 0.25%)</title><rect x="28.9340%" y="373" width="0.2538%" height="15" fill="rgb(248,123,6)"/><text x="29.1840%" y="383.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (6 samples, 0.76%)</title><rect x="29.1878%" y="373" width="0.7614%" height="15" fill="rgb(206,91,31)"/><text x="29.4378%" y="383.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.13%)</title><rect x="29.8223%" y="357" width="0.1269%" height="15" fill="rgb(211,154,13)"/><text x="30.0723%" y="367.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (1 samples, 0.13%)</title><rect x="29.8223%" y="341" width="0.1269%" height="15" fill="rgb(225,148,7)"/><text x="30.0723%" y="351.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.13%)</title><rect x="29.8223%" y="325" width="0.1269%" height="15" fill="rgb(220,160,43)"/><text x="30.0723%" y="335.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (12 samples, 1.52%)</title><rect x="28.5533%" y="405" width="1.5228%" height="15" fill="rgb(213,52,39)"/><text x="28.8033%" y="415.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (9 samples, 1.14%)</title><rect x="28.9340%" y="389" width="1.1421%" height="15" fill="rgb(243,137,7)"/><text x="29.1840%" y="399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.13%)</title><rect x="29.9492%" y="373" width="0.1269%" height="15" fill="rgb(230,79,13)"/><text x="30.1992%" y="383.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (15 samples, 1.90%)</title><rect x="28.5533%" y="437" width="1.9036%" height="15" fill="rgb(247,105,23)"/><text x="28.8033%" y="447.50">b..</text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (15 samples, 1.90%)</title><rect x="28.5533%" y="421" width="1.9036%" height="15" fill="rgb(223,179,41)"/><text x="28.8033%" y="431.50">b..</text></g><g><title>twounordered::SecondVec&lt;T&gt;::push (3 samples, 0.38%)</title><rect x="30.0761%" y="405" width="0.3807%" height="15" fill="rgb(218,9,34)"/><text x="30.3261%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (3 samples, 0.38%)</title><rect x="30.0761%" y="389" width="0.3807%" height="15" fill="rgb(222,106,8)"/><text x="30.3261%" y="399.50"></text></g><g><title>core::ptr::write (2 samples, 0.25%)</title><rect x="30.2030%" y="373" width="0.2538%" height="15" fill="rgb(211,220,0)"/><text x="30.4530%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="30.7107%" y="405" width="0.1269%" height="15" fill="rgb(229,52,16)"/><text x="30.9607%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="30.7107%" y="389" width="0.1269%" height="15" fill="rgb(212,155,18)"/><text x="30.9607%" y="399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::lt (1 samples, 0.13%)</title><rect x="30.8376%" y="405" width="0.1269%" height="15" fill="rgb(242,21,14)"/><text x="31.0876%" y="415.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (7 samples, 0.89%)</title><rect x="30.9645%" y="405" width="0.8883%" height="15" fill="rgb(222,19,48)"/><text x="31.2145%" y="415.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (7 samples, 0.89%)</title><rect x="30.9645%" y="389" width="0.8883%" height="15" fill="rgb(232,45,27)"/><text x="31.2145%" y="399.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek::{{closure}} (6 samples, 0.76%)</title><rect x="31.0914%" y="373" width="0.7614%" height="15" fill="rgb(249,103,42)"/><text x="31.3414%" y="383.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.76%)</title><rect x="31.0914%" y="357" width="0.7614%" height="15" fill="rgb(246,81,33)"/><text x="31.3414%" y="367.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.76%)</title><rect x="31.0914%" y="341" width="0.7614%" height="15" fill="rgb(252,33,42)"/><text x="31.3414%" y="351.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.13%)</title><rect x="31.8528%" y="405" width="0.1269%" height="15" fill="rgb(209,212,41)"/><text x="32.1028%" y="415.50"></text></g><g><title>twounordered::FirstVec&lt;T&gt;::push (1 samples, 0.13%)</title><rect x="31.9797%" y="405" width="0.1269%" height="15" fill="rgb(207,154,6)"/><text x="32.2297%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.13%)</title><rect x="31.9797%" y="389" width="0.1269%" height="15" fill="rgb(223,64,47)"/><text x="32.2297%" y="399.50"></text></g><g><title>&lt;twounordered::FirstVec&lt;T&gt; as twounordered::RetainMutUnordered&lt;T&gt;&gt;::truncate (1 samples, 0.13%)</title><rect x="32.6142%" y="389" width="0.1269%" height="15" fill="rgb(211,161,38)"/><text x="32.8642%" y="399.50"></text></g><g><title>twounordered::FirstVec&lt;T&gt;::truncate (1 samples, 0.13%)</title><rect x="32.6142%" y="373" width="0.1269%" height="15" fill="rgb(219,138,40)"/><text x="32.8642%" y="383.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.13%)</title><rect x="32.6142%" y="357" width="0.1269%" height="15" fill="rgb(241,228,46)"/><text x="32.8642%" y="367.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.13%)</title><rect x="32.6142%" y="341" width="0.1269%" height="15" fill="rgb(223,209,38)"/><text x="32.8642%" y="351.50"></text></g><g><title>&lt;twounordered::SecondVec&lt;T&gt; as twounordered::RetainMutUnordered&lt;T&gt;&gt;::as_slice_mut (1 samples, 0.13%)</title><rect x="32.7411%" y="389" width="0.1269%" height="15" fill="rgb(236,164,45)"/><text x="32.9911%" y="399.50"></text></g><g><title>twounordered::SecondVec&lt;T&gt;::as_slice_mut (1 samples, 0.13%)</title><rect x="32.7411%" y="373" width="0.1269%" height="15" fill="rgb(231,15,5)"/><text x="32.9911%" y="383.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (1 samples, 0.13%)</title><rect x="33.2487%" y="373" width="0.1269%" height="15" fill="rgb(252,35,15)"/><text x="33.4987%" y="383.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (4 samples, 0.51%)</title><rect x="33.3756%" y="373" width="0.5076%" height="15" fill="rgb(248,181,18)"/><text x="33.6256%" y="383.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFn&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (3 samples, 0.38%)</title><rect x="33.5025%" y="357" width="0.3807%" height="15" fill="rgb(233,39,42)"/><text x="33.7525%" y="367.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut_par::{{closure}} (3 samples, 0.38%)</title><rect x="33.5025%" y="341" width="0.3807%" height="15" fill="rgb(238,110,33)"/><text x="33.7525%" y="351.50"></text></g><g><title>data_gen::colfind::float_vs_integer::handle_bench::{{closure}}::{{closure}} (3 samples, 0.38%)</title><rect x="33.5025%" y="325" width="0.3807%" height="15" fill="rgb(233,195,10)"/><text x="33.7525%" y="335.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (9 samples, 1.14%)</title><rect x="32.8680%" y="389" width="1.1421%" height="15" fill="rgb(254,105,3)"/><text x="33.1180%" y="399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.13%)</title><rect x="33.8832%" y="373" width="0.1269%" height="15" fill="rgb(221,225,9)"/><text x="34.1332%" y="383.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (16 samples, 2.03%)</title><rect x="32.1066%" y="405" width="2.0305%" height="15" fill="rgb(224,227,45)"/><text x="32.3566%" y="415.50">t..</text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.13%)</title><rect x="34.0102%" y="389" width="0.1269%" height="15" fill="rgb(229,198,43)"/><text x="34.2602%" y="399.50"></text></g><g><title>core::ptr::swap (1 samples, 0.13%)</title><rect x="34.0102%" y="373" width="0.1269%" height="15" fill="rgb(206,209,35)"/><text x="34.2602%" y="383.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.13%)</title><rect x="34.0102%" y="357" width="0.1269%" height="15" fill="rgb(245,195,53)"/><text x="34.2602%" y="367.50"></text></g><g><title>broccoli::query::colfind::inner::ColFindRecurser&lt;T,K,S&gt;::recurse_seq (200 samples, 25.38%)</title><rect x="8.8832%" y="453" width="25.3807%" height="15" fill="rgb(240,92,26)"/><text x="9.1332%" y="463.50">broccoli::query::colfind::inner::ColFindR..</text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (30 samples, 3.81%)</title><rect x="30.4569%" y="437" width="3.8071%" height="15" fill="rgb(207,40,23)"/><text x="30.7069%" y="447.50">broc..</text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (29 samples, 3.68%)</title><rect x="30.5838%" y="421" width="3.6802%" height="15" fill="rgb(223,111,35)"/><text x="30.8338%" y="431.50">broc..</text></g><g><title>twounordered::SecondVec&lt;T&gt;::push (1 samples, 0.13%)</title><rect x="34.1371%" y="405" width="0.1269%" height="15" fill="rgb(229,147,28)"/><text x="34.3871%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.13%)</title><rect x="34.1371%" y="389" width="0.1269%" height="15" fill="rgb(211,29,28)"/><text x="34.3871%" y="399.50"></text></g><g><title>broccoli::util::prevec::PreVecMut&lt;T&gt;::get_empty_vec_mut (1 samples, 0.13%)</title><rect x="34.3909%" y="389" width="0.1269%" height="15" fill="rgb(228,72,33)"/><text x="34.6409%" y="399.50"></text></g><g><title>twounordered::TwoUnorderedVecs&lt;T&gt;::clear (1 samples, 0.13%)</title><rect x="34.3909%" y="373" width="0.1269%" height="15" fill="rgb(205,214,31)"/><text x="34.6409%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::clear (1 samples, 0.13%)</title><rect x="34.3909%" y="357" width="0.1269%" height="15" fill="rgb(224,111,15)"/><text x="34.6409%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::truncate (1 samples, 0.13%)</title><rect x="34.3909%" y="341" width="0.1269%" height="15" fill="rgb(253,21,26)"/><text x="34.6409%" y="351.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.13%)</title><rect x="34.5178%" y="389" width="0.1269%" height="15" fill="rgb(245,139,43)"/><text x="34.7678%" y="399.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFn&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (2 samples, 0.25%)</title><rect x="34.7716%" y="341" width="0.2538%" height="15" fill="rgb(252,170,7)"/><text x="35.0216%" y="351.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut_par::{{closure}} (2 samples, 0.25%)</title><rect x="34.7716%" y="325" width="0.2538%" height="15" fill="rgb(231,118,14)"/><text x="35.0216%" y="335.50"></text></g><g><title>data_gen::colfind::float_vs_integer::handle_bench::{{closure}}::{{closure}} (2 samples, 0.25%)</title><rect x="34.7716%" y="309" width="0.2538%" height="15" fill="rgb(238,83,0)"/><text x="35.0216%" y="319.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (6 samples, 0.76%)</title><rect x="34.7716%" y="357" width="0.7614%" height="15" fill="rgb(221,39,39)"/><text x="35.0216%" y="367.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (4 samples, 0.51%)</title><rect x="35.0254%" y="341" width="0.5076%" height="15" fill="rgb(222,119,46)"/><text x="35.2754%" y="351.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (4 samples, 0.51%)</title><rect x="35.0254%" y="325" width="0.5076%" height="15" fill="rgb(222,165,49)"/><text x="35.2754%" y="335.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (4 samples, 0.51%)</title><rect x="35.0254%" y="309" width="0.5076%" height="15" fill="rgb(219,113,52)"/><text x="35.2754%" y="319.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (7 samples, 0.89%)</title><rect x="34.7716%" y="373" width="0.8883%" height="15" fill="rgb(214,7,15)"/><text x="35.0216%" y="383.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.13%)</title><rect x="35.5330%" y="357" width="0.1269%" height="15" fill="rgb(235,32,4)"/><text x="35.7830%" y="367.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (9 samples, 1.14%)</title><rect x="34.6447%" y="389" width="1.1421%" height="15" fill="rgb(238,90,54)"/><text x="34.8947%" y="399.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.13%)</title><rect x="35.6599%" y="373" width="0.1269%" height="15" fill="rgb(213,208,19)"/><text x="35.9099%" y="383.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (14 samples, 1.78%)</title><rect x="34.2640%" y="421" width="1.7766%" height="15" fill="rgb(233,156,4)"/><text x="34.5140%" y="431.50">b..</text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (13 samples, 1.65%)</title><rect x="34.3909%" y="405" width="1.6497%" height="15" fill="rgb(207,194,5)"/><text x="34.6409%" y="415.50"></text></g><g><title>twounordered::SecondVec&lt;T&gt;::push (2 samples, 0.25%)</title><rect x="35.7868%" y="389" width="0.2538%" height="15" fill="rgb(206,111,30)"/><text x="36.0368%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (2 samples, 0.25%)</title><rect x="35.7868%" y="373" width="0.2538%" height="15" fill="rgb(243,70,54)"/><text x="36.0368%" y="383.50"></text></g><g><title>core::ptr::write (1 samples, 0.13%)</title><rect x="35.9137%" y="357" width="0.1269%" height="15" fill="rgb(242,28,8)"/><text x="36.1637%" y="367.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (16 samples, 2.03%)</title><rect x="34.2640%" y="437" width="2.0305%" height="15" fill="rgb(219,106,18)"/><text x="34.5140%" y="447.50">&lt;..</text></g><g><title>broccoli::query::tools::get_section_mut (2 samples, 0.25%)</title><rect x="36.0406%" y="421" width="0.2538%" height="15" fill="rgb(244,222,10)"/><text x="36.2906%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.13%)</title><rect x="36.1675%" y="405" width="0.1269%" height="15" fill="rgb(236,179,52)"/><text x="36.4175%" y="415.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.13%)</title><rect x="36.1675%" y="389" width="0.1269%" height="15" fill="rgb(213,23,39)"/><text x="36.4175%" y="399.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (3 samples, 0.38%)</title><rect x="36.2944%" y="405" width="0.3807%" height="15" fill="rgb(238,48,10)"/><text x="36.5444%" y="415.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (3 samples, 0.38%)</title><rect x="36.2944%" y="389" width="0.3807%" height="15" fill="rgb(251,196,23)"/><text x="36.5444%" y="399.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (3 samples, 0.38%)</title><rect x="36.2944%" y="373" width="0.3807%" height="15" fill="rgb(250,152,24)"/><text x="36.5444%" y="383.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (1 samples, 0.13%)</title><rect x="36.5482%" y="357" width="0.1269%" height="15" fill="rgb(209,150,17)"/><text x="36.7982%" y="367.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (4 samples, 0.51%)</title><rect x="36.2944%" y="421" width="0.5076%" height="15" fill="rgb(234,202,34)"/><text x="36.5444%" y="431.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (1 samples, 0.13%)</title><rect x="36.6751%" y="405" width="0.1269%" height="15" fill="rgb(253,148,53)"/><text x="36.9251%" y="415.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (1 samples, 0.13%)</title><rect x="36.6751%" y="389" width="0.1269%" height="15" fill="rgb(218,129,16)"/><text x="36.9251%" y="399.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (1 samples, 0.13%)</title><rect x="36.6751%" y="373" width="0.1269%" height="15" fill="rgb(216,85,19)"/><text x="36.9251%" y="383.50"></text></g><g><title>&lt;twounordered::SecondVec&lt;T&gt; as twounordered::RetainMutUnordered&lt;T&gt;&gt;::as_slice_mut (1 samples, 0.13%)</title><rect x="36.6751%" y="357" width="0.1269%" height="15" fill="rgb(235,228,7)"/><text x="36.9251%" y="367.50"></text></g><g><title>twounordered::SecondVec&lt;T&gt;::as_slice_mut (1 samples, 0.13%)</title><rect x="36.6751%" y="341" width="0.1269%" height="15" fill="rgb(245,175,0)"/><text x="36.9251%" y="351.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (1 samples, 0.13%)</title><rect x="36.8020%" y="405" width="0.1269%" height="15" fill="rgb(208,168,36)"/><text x="37.0520%" y="415.50"></text></g><g><title>broccoli::query::tools::get_section_mut (1 samples, 0.13%)</title><rect x="36.8020%" y="389" width="0.1269%" height="15" fill="rgb(246,171,24)"/><text x="37.0520%" y="399.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (2 samples, 0.25%)</title><rect x="36.8020%" y="421" width="0.2538%" height="15" fill="rgb(215,142,24)"/><text x="37.0520%" y="431.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (1 samples, 0.13%)</title><rect x="36.9289%" y="405" width="0.1269%" height="15" fill="rgb(250,187,7)"/><text x="37.1789%" y="415.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (1 samples, 0.13%)</title><rect x="36.9289%" y="389" width="0.1269%" height="15" fill="rgb(228,66,33)"/><text x="37.1789%" y="399.50"></text></g><g><title>twounordered::FirstVec&lt;T&gt;::push (1 samples, 0.13%)</title><rect x="36.9289%" y="373" width="0.1269%" height="15" fill="rgb(234,215,21)"/><text x="37.1789%" y="383.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.13%)</title><rect x="36.9289%" y="357" width="0.1269%" height="15" fill="rgb(222,191,20)"/><text x="37.1789%" y="367.50"></text></g><g><title>core::ptr::swap (1 samples, 0.13%)</title><rect x="36.9289%" y="341" width="0.1269%" height="15" fill="rgb(245,79,54)"/><text x="37.1789%" y="351.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.13%)</title><rect x="36.9289%" y="325" width="0.1269%" height="15" fill="rgb(240,10,37)"/><text x="37.1789%" y="335.50"></text></g><g><title>broccoli::query::colfind::node_handle::DestructuredNodeLeaf&lt;T,AnchorAxis&gt;::new (1 samples, 0.13%)</title><rect x="37.0558%" y="421" width="0.1269%" height="15" fill="rgb(214,192,32)"/><text x="37.3058%" y="431.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (1 samples, 0.13%)</title><rect x="37.0558%" y="405" width="0.1269%" height="15" fill="rgb(209,36,54)"/><text x="37.3058%" y="415.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (4 samples, 0.51%)</title><rect x="37.1827%" y="421" width="0.5076%" height="15" fill="rgb(220,10,11)"/><text x="37.4327%" y="431.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (4 samples, 0.51%)</title><rect x="37.1827%" y="405" width="0.5076%" height="15" fill="rgb(221,106,17)"/><text x="37.4327%" y="415.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (4 samples, 0.51%)</title><rect x="37.1827%" y="389" width="0.5076%" height="15" fill="rgb(251,142,44)"/><text x="37.4327%" y="399.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (3 samples, 0.38%)</title><rect x="37.3096%" y="373" width="0.3807%" height="15" fill="rgb(238,13,15)"/><text x="37.5596%" y="383.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (3 samples, 0.38%)</title><rect x="37.3096%" y="357" width="0.3807%" height="15" fill="rgb(208,107,27)"/><text x="37.5596%" y="367.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.13%)</title><rect x="37.5635%" y="341" width="0.1269%" height="15" fill="rgb(205,136,37)"/><text x="37.8135%" y="351.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (1 samples, 0.13%)</title><rect x="37.5635%" y="325" width="0.1269%" height="15" fill="rgb(250,205,27)"/><text x="37.8135%" y="335.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.13%)</title><rect x="37.5635%" y="309" width="0.1269%" height="15" fill="rgb(210,80,43)"/><text x="37.8135%" y="319.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (2 samples, 0.25%)</title><rect x="37.6904%" y="389" width="0.2538%" height="15" fill="rgb(247,160,36)"/><text x="37.9404%" y="399.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (1 samples, 0.13%)</title><rect x="37.8173%" y="373" width="0.1269%" height="15" fill="rgb(234,13,49)"/><text x="38.0673%" y="383.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.13%)</title><rect x="37.8173%" y="357" width="0.1269%" height="15" fill="rgb(234,122,0)"/><text x="38.0673%" y="367.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (15 samples, 1.90%)</title><rect x="36.2944%" y="437" width="1.9036%" height="15" fill="rgb(207,146,38)"/><text x="36.5444%" y="447.50">b..</text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (4 samples, 0.51%)</title><rect x="37.6904%" y="421" width="0.5076%" height="15" fill="rgb(207,177,25)"/><text x="37.9404%" y="431.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (4 samples, 0.51%)</title><rect x="37.6904%" y="405" width="0.5076%" height="15" fill="rgb(211,178,42)"/><text x="37.9404%" y="415.50"></text></g><g><title>twounordered::SecondVec&lt;T&gt;::push (2 samples, 0.25%)</title><rect x="37.9442%" y="389" width="0.2538%" height="15" fill="rgb(230,69,54)"/><text x="38.1942%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (2 samples, 0.25%)</title><rect x="37.9442%" y="373" width="0.2538%" height="15" fill="rgb(214,135,41)"/><text x="38.1942%" y="383.50"></text></g><g><title>core::ptr::write (1 samples, 0.13%)</title><rect x="38.0711%" y="357" width="0.1269%" height="15" fill="rgb(237,67,25)"/><text x="38.3211%" y="367.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (1 samples, 0.13%)</title><rect x="38.1980%" y="405" width="0.1269%" height="15" fill="rgb(222,189,50)"/><text x="38.4480%" y="415.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (1 samples, 0.13%)</title><rect x="38.1980%" y="389" width="0.1269%" height="15" fill="rgb(245,148,34)"/><text x="38.4480%" y="399.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek::{{closure}} (1 samples, 0.13%)</title><rect x="38.1980%" y="373" width="0.1269%" height="15" fill="rgb(222,29,6)"/><text x="38.4480%" y="383.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.13%)</title><rect x="38.1980%" y="357" width="0.1269%" height="15" fill="rgb(221,189,43)"/><text x="38.4480%" y="367.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.13%)</title><rect x="38.1980%" y="341" width="0.1269%" height="15" fill="rgb(207,36,27)"/><text x="38.4480%" y="351.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.13%)</title><rect x="38.3249%" y="405" width="0.1269%" height="15" fill="rgb(217,90,24)"/><text x="38.5749%" y="415.50"></text></g><g><title>twounordered::FirstVec&lt;T&gt;::push (1 samples, 0.13%)</title><rect x="38.4518%" y="405" width="0.1269%" height="15" fill="rgb(224,66,35)"/><text x="38.7018%" y="415.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.13%)</title><rect x="38.4518%" y="389" width="0.1269%" height="15" fill="rgb(221,13,50)"/><text x="38.7018%" y="399.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (2 samples, 0.25%)</title><rect x="39.0863%" y="373" width="0.2538%" height="15" fill="rgb(236,68,49)"/><text x="39.3363%" y="383.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (9 samples, 1.14%)</title><rect x="38.5787%" y="405" width="1.1421%" height="15" fill="rgb(229,146,28)"/><text x="38.8287%" y="415.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (6 samples, 0.76%)</title><rect x="38.9594%" y="389" width="0.7614%" height="15" fill="rgb(225,31,38)"/><text x="39.2094%" y="399.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (3 samples, 0.38%)</title><rect x="39.3401%" y="373" width="0.3807%" height="15" fill="rgb(250,208,3)"/><text x="39.5901%" y="383.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.13%)</title><rect x="39.5939%" y="357" width="0.1269%" height="15" fill="rgb(246,54,23)"/><text x="39.8439%" y="367.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (1 samples, 0.13%)</title><rect x="39.5939%" y="341" width="0.1269%" height="15" fill="rgb(243,76,11)"/><text x="39.8439%" y="351.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.13%)</title><rect x="39.5939%" y="325" width="0.1269%" height="15" fill="rgb(245,21,50)"/><text x="39.8439%" y="335.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (13 samples, 1.65%)</title><rect x="38.1980%" y="437" width="1.6497%" height="15" fill="rgb(228,9,43)"/><text x="38.4480%" y="447.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (13 samples, 1.65%)</title><rect x="38.1980%" y="421" width="1.6497%" height="15" fill="rgb(208,100,47)"/><text x="38.4480%" y="431.50"></text></g><g><title>twounordered::SecondVec&lt;T&gt;::push (1 samples, 0.13%)</title><rect x="39.7208%" y="405" width="0.1269%" height="15" fill="rgb(232,26,8)"/><text x="39.9708%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.13%)</title><rect x="39.7208%" y="389" width="0.1269%" height="15" fill="rgb(216,166,38)"/><text x="39.9708%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::as_mut_ptr (1 samples, 0.13%)</title><rect x="39.7208%" y="373" width="0.1269%" height="15" fill="rgb(251,202,51)"/><text x="39.9708%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.13%)</title><rect x="39.7208%" y="357" width="0.1269%" height="15" fill="rgb(254,216,34)"/><text x="39.9708%" y="367.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (1 samples, 0.13%)</title><rect x="39.8477%" y="405" width="0.1269%" height="15" fill="rgb(251,32,27)"/><text x="40.0977%" y="415.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (1 samples, 0.13%)</title><rect x="39.8477%" y="389" width="0.1269%" height="15" fill="rgb(208,127,28)"/><text x="40.0977%" y="399.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek::{{closure}} (1 samples, 0.13%)</title><rect x="39.8477%" y="373" width="0.1269%" height="15" fill="rgb(224,137,22)"/><text x="40.0977%" y="383.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.13%)</title><rect x="39.8477%" y="357" width="0.1269%" height="15" fill="rgb(254,70,32)"/><text x="40.0977%" y="367.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.13%)</title><rect x="39.8477%" y="341" width="0.1269%" height="15" fill="rgb(229,75,37)"/><text x="40.0977%" y="351.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.13%)</title><rect x="39.9746%" y="405" width="0.1269%" height="15" fill="rgb(252,64,23)"/><text x="40.2246%" y="415.50"></text></g><g><title>&lt;twounordered::FirstVec&lt;T&gt; as twounordered::RetainMutUnordered&lt;T&gt;&gt;::truncate (1 samples, 0.13%)</title><rect x="40.1015%" y="389" width="0.1269%" height="15" fill="rgb(232,162,48)"/><text x="40.3515%" y="399.50"></text></g><g><title>twounordered::FirstVec&lt;T&gt;::truncate (1 samples, 0.13%)</title><rect x="40.1015%" y="373" width="0.1269%" height="15" fill="rgb(246,160,12)"/><text x="40.3515%" y="383.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.13%)</title><rect x="40.1015%" y="357" width="0.1269%" height="15" fill="rgb(247,166,0)"/><text x="40.3515%" y="367.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.13%)</title><rect x="40.1015%" y="341" width="0.1269%" height="15" fill="rgb(249,219,21)"/><text x="40.3515%" y="351.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (48 samples, 6.09%)</title><rect x="34.2640%" y="453" width="6.0914%" height="15" fill="rgb(205,209,3)"/><text x="34.5140%" y="463.50">broccoli..</text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (4 samples, 0.51%)</title><rect x="39.8477%" y="437" width="0.5076%" height="15" fill="rgb(243,44,1)"/><text x="40.0977%" y="447.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (4 samples, 0.51%)</title><rect x="39.8477%" y="421" width="0.5076%" height="15" fill="rgb(206,159,16)"/><text x="40.0977%" y="431.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (2 samples, 0.25%)</title><rect x="40.1015%" y="405" width="0.2538%" height="15" fill="rgb(244,77,30)"/><text x="40.3515%" y="415.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (1 samples, 0.13%)</title><rect x="40.2284%" y="389" width="0.1269%" height="15" fill="rgb(218,69,12)"/><text x="40.4784%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.13%)</title><rect x="40.3553%" y="421" width="0.1269%" height="15" fill="rgb(212,87,7)"/><text x="40.6053%" y="431.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (1 samples, 0.13%)</title><rect x="41.2437%" y="389" width="0.1269%" height="15" fill="rgb(245,114,25)"/><text x="41.4937%" y="399.50"></text></g><g><title>broccoli::query::colfind::oned::find_2d (13 samples, 1.65%)</title><rect x="40.3553%" y="453" width="1.6497%" height="15" fill="rgb(210,61,42)"/><text x="40.6053%" y="463.50"></text></g><g><title>broccoli::query::colfind::oned::find (13 samples, 1.65%)</title><rect x="40.3553%" y="437" width="1.6497%" height="15" fill="rgb(211,52,33)"/><text x="40.6053%" y="447.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (12 samples, 1.52%)</title><rect x="40.4822%" y="421" width="1.5228%" height="15" fill="rgb(234,58,33)"/><text x="40.7322%" y="431.50"></text></g><g><title>broccoli::query::colfind::oned::find::{{closure}} (6 samples, 0.76%)</title><rect x="41.2437%" y="405" width="0.7614%" height="15" fill="rgb(220,115,36)"/><text x="41.4937%" y="415.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (5 samples, 0.63%)</title><rect x="41.3706%" y="389" width="0.6345%" height="15" fill="rgb(243,153,54)"/><text x="41.6206%" y="399.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFn&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (2 samples, 0.25%)</title><rect x="41.7513%" y="373" width="0.2538%" height="15" fill="rgb(251,47,18)"/><text x="42.0013%" y="383.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut_par::{{closure}} (2 samples, 0.25%)</title><rect x="41.7513%" y="357" width="0.2538%" height="15" fill="rgb(242,102,42)"/><text x="42.0013%" y="367.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (2 samples, 0.25%)</title><rect x="41.7513%" y="341" width="0.2538%" height="15" fill="rgb(234,31,38)"/><text x="42.0013%" y="351.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;[T]&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.13%)</title><rect x="42.0051%" y="421" width="0.1269%" height="15" fill="rgb(221,117,51)"/><text x="42.2551%" y="431.50"></text></g><g><title>broccoli::pmut::PMut&lt;[T]&gt;::iter_mut (1 samples, 0.13%)</title><rect x="42.0051%" y="405" width="0.1269%" height="15" fill="rgb(212,20,18)"/><text x="42.2551%" y="415.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter_mut (1 samples, 0.13%)</title><rect x="42.0051%" y="389" width="0.1269%" height="15" fill="rgb(245,133,36)"/><text x="42.2551%" y="399.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::new (1 samples, 0.13%)</title><rect x="42.0051%" y="373" width="0.1269%" height="15" fill="rgb(212,6,19)"/><text x="42.2551%" y="383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.13%)</title><rect x="42.0051%" y="357" width="0.1269%" height="15" fill="rgb(218,1,36)"/><text x="42.2551%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.13%)</title><rect x="42.0051%" y="341" width="0.1269%" height="15" fill="rgb(246,84,54)"/><text x="42.2551%" y="351.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (1 samples, 0.13%)</title><rect x="42.1320%" y="421" width="0.1269%" height="15" fill="rgb(242,110,6)"/><text x="42.3820%" y="431.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (1 samples, 0.13%)</title><rect x="42.1320%" y="405" width="0.1269%" height="15" fill="rgb(214,47,5)"/><text x="42.3820%" y="415.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.13%)</title><rect x="42.2589%" y="421" width="0.1269%" height="15" fill="rgb(218,159,25)"/><text x="42.5089%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.13%)</title><rect x="42.3858%" y="405" width="0.1269%" height="15" fill="rgb(215,211,28)"/><text x="42.6358%" y="415.50"></text></g><g><title>twounordered::FirstVec&lt;T&gt;::push (2 samples, 0.25%)</title><rect x="42.3858%" y="421" width="0.2538%" height="15" fill="rgb(238,59,32)"/><text x="42.6358%" y="431.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.13%)</title><rect x="42.5127%" y="405" width="0.1269%" height="15" fill="rgb(226,82,3)"/><text x="42.7627%" y="415.50"></text></g><g><title>core::ptr::swap (1 samples, 0.13%)</title><rect x="42.5127%" y="389" width="0.1269%" height="15" fill="rgb(240,164,32)"/><text x="42.7627%" y="399.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.13%)</title><rect x="42.5127%" y="373" width="0.1269%" height="15" fill="rgb(232,46,7)"/><text x="42.7627%" y="383.50"></text></g><g><title>&lt;twounordered::FirstVec&lt;T&gt; as twounordered::RetainMutUnordered&lt;T&gt;&gt;::truncate (1 samples, 0.13%)</title><rect x="43.0203%" y="405" width="0.1269%" height="15" fill="rgb(229,129,53)"/><text x="43.2703%" y="415.50"></text></g><g><title>twounordered::FirstVec&lt;T&gt;::truncate (1 samples, 0.13%)</title><rect x="43.0203%" y="389" width="0.1269%" height="15" fill="rgb(234,188,29)"/><text x="43.2703%" y="399.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.13%)</title><rect x="43.0203%" y="373" width="0.1269%" height="15" fill="rgb(246,141,4)"/><text x="43.2703%" y="383.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.13%)</title><rect x="43.0203%" y="357" width="0.1269%" height="15" fill="rgb(229,23,39)"/><text x="43.2703%" y="367.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (4 samples, 0.51%)</title><rect x="43.2741%" y="389" width="0.5076%" height="15" fill="rgb(206,12,3)"/><text x="43.5241%" y="399.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (3 samples, 0.38%)</title><rect x="43.4010%" y="373" width="0.3807%" height="15" fill="rgb(252,226,20)"/><text x="43.6510%" y="383.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (3 samples, 0.38%)</title><rect x="43.4010%" y="357" width="0.3807%" height="15" fill="rgb(216,123,35)"/><text x="43.6510%" y="367.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (3 samples, 0.38%)</title><rect x="43.4010%" y="341" width="0.3807%" height="15" fill="rgb(212,68,40)"/><text x="43.6510%" y="351.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (16 samples, 2.03%)</title><rect x="42.0051%" y="453" width="2.0305%" height="15" fill="rgb(254,125,32)"/><text x="42.2551%" y="463.50">b..</text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (16 samples, 2.03%)</title><rect x="42.0051%" y="437" width="2.0305%" height="15" fill="rgb(253,97,22)"/><text x="42.2551%" y="447.50">b..</text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (11 samples, 1.40%)</title><rect x="42.6396%" y="421" width="1.3959%" height="15" fill="rgb(241,101,14)"/><text x="42.8896%" y="431.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (7 samples, 0.89%)</title><rect x="43.1472%" y="405" width="0.8883%" height="15" fill="rgb(238,103,29)"/><text x="43.3972%" y="415.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (2 samples, 0.25%)</title><rect x="43.7817%" y="389" width="0.2538%" height="15" fill="rgb(233,195,47)"/><text x="44.0317%" y="399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::lt (3 samples, 0.38%)</title><rect x="44.1624%" y="421" width="0.3807%" height="15" fill="rgb(246,218,30)"/><text x="44.4124%" y="431.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (2 samples, 0.25%)</title><rect x="44.5431%" y="421" width="0.2538%" height="15" fill="rgb(219,145,47)"/><text x="44.7931%" y="431.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (2 samples, 0.25%)</title><rect x="44.5431%" y="405" width="0.2538%" height="15" fill="rgb(243,12,26)"/><text x="44.7931%" y="415.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.13%)</title><rect x="44.7970%" y="421" width="0.1269%" height="15" fill="rgb(214,87,16)"/><text x="45.0470%" y="431.50"></text></g><g><title>&lt;twounordered::FirstVec&lt;T&gt; as twounordered::RetainMutUnordered&lt;T&gt;&gt;::as_slice_mut (1 samples, 0.13%)</title><rect x="45.3046%" y="405" width="0.1269%" height="15" fill="rgb(208,99,42)"/><text x="45.5546%" y="415.50"></text></g><g><title>twounordered::FirstVec&lt;T&gt;::as_slice_mut (1 samples, 0.13%)</title><rect x="45.3046%" y="389" width="0.1269%" height="15" fill="rgb(253,99,2)"/><text x="45.5546%" y="399.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (1 samples, 0.13%)</title><rect x="45.8122%" y="389" width="0.1269%" height="15" fill="rgb(220,168,23)"/><text x="46.0622%" y="399.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (5 samples, 0.63%)</title><rect x="45.9391%" y="389" width="0.6345%" height="15" fill="rgb(242,38,24)"/><text x="46.1891%" y="399.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFn&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (3 samples, 0.38%)</title><rect x="46.1929%" y="373" width="0.3807%" height="15" fill="rgb(225,182,9)"/><text x="46.4429%" y="383.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut_par::{{closure}} (3 samples, 0.38%)</title><rect x="46.1929%" y="357" width="0.3807%" height="15" fill="rgb(243,178,37)"/><text x="46.4429%" y="367.50"></text></g><g><title>data_gen::colfind::float_vs_integer::handle_bench::{{closure}}::{{closure}} (3 samples, 0.38%)</title><rect x="46.1929%" y="341" width="0.3807%" height="15" fill="rgb(232,139,19)"/><text x="46.4429%" y="351.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (10 samples, 1.27%)</title><rect x="45.4315%" y="405" width="1.2690%" height="15" fill="rgb(225,201,24)"/><text x="45.6815%" y="415.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.13%)</title><rect x="46.5736%" y="389" width="0.1269%" height="15" fill="rgb(221,47,46)"/><text x="46.8236%" y="399.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.13%)</title><rect x="46.7005%" y="405" width="0.1269%" height="15" fill="rgb(249,23,13)"/><text x="46.9505%" y="415.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.13%)</title><rect x="46.7005%" y="389" width="0.1269%" height="15" fill="rgb(219,9,5)"/><text x="46.9505%" y="399.50"></text></g><g><title>broccoli::query::colfind::inner::ColFindRecurser&lt;T,K,S&gt;::recurse_seq (310 samples, 39.34%)</title><rect x="7.6142%" y="469" width="39.3401%" height="15" fill="rgb(254,171,16)"/><text x="7.8642%" y="479.50">broccoli::query::colfind::inner::ColFindRecurser&lt;T,K,S&gt;::recurse..</text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (23 samples, 2.92%)</title><rect x="44.0355%" y="453" width="2.9188%" height="15" fill="rgb(230,171,20)"/><text x="44.2855%" y="463.50">br..</text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (22 samples, 2.79%)</title><rect x="44.1624%" y="437" width="2.7919%" height="15" fill="rgb(210,71,41)"/><text x="44.4124%" y="447.50">br..</text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (16 samples, 2.03%)</title><rect x="44.9239%" y="421" width="2.0305%" height="15" fill="rgb(206,173,20)"/><text x="45.1739%" y="431.50">t..</text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.13%)</title><rect x="46.8274%" y="405" width="0.1269%" height="15" fill="rgb(233,88,34)"/><text x="47.0774%" y="415.50"></text></g><g><title>core::ptr::swap (1 samples, 0.13%)</title><rect x="46.8274%" y="389" width="0.1269%" height="15" fill="rgb(223,209,46)"/><text x="47.0774%" y="399.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.13%)</title><rect x="46.8274%" y="373" width="0.1269%" height="15" fill="rgb(250,43,18)"/><text x="47.0774%" y="383.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (1 samples, 0.13%)</title><rect x="46.9543%" y="437" width="0.1269%" height="15" fill="rgb(208,13,10)"/><text x="47.2043%" y="447.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (1 samples, 0.13%)</title><rect x="46.9543%" y="421" width="0.1269%" height="15" fill="rgb(212,200,36)"/><text x="47.2043%" y="431.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (1 samples, 0.13%)</title><rect x="46.9543%" y="405" width="0.1269%" height="15" fill="rgb(225,90,30)"/><text x="47.2043%" y="415.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (1 samples, 0.13%)</title><rect x="46.9543%" y="389" width="0.1269%" height="15" fill="rgb(236,182,39)"/><text x="47.2043%" y="399.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.13%)</title><rect x="46.9543%" y="373" width="0.1269%" height="15" fill="rgb(212,144,35)"/><text x="47.2043%" y="383.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.13%)</title><rect x="46.9543%" y="357" width="0.1269%" height="15" fill="rgb(228,63,44)"/><text x="47.2043%" y="367.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (1 samples, 0.13%)</title><rect x="46.9543%" y="341" width="0.1269%" height="15" fill="rgb(228,109,6)"/><text x="47.2043%" y="351.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.13%)</title><rect x="46.9543%" y="325" width="0.1269%" height="15" fill="rgb(238,117,24)"/><text x="47.2043%" y="335.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (3 samples, 0.38%)</title><rect x="47.0812%" y="405" width="0.3807%" height="15" fill="rgb(242,26,26)"/><text x="47.3312%" y="415.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (3 samples, 0.38%)</title><rect x="47.0812%" y="389" width="0.3807%" height="15" fill="rgb(221,92,48)"/><text x="47.3312%" y="399.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek::{{closure}} (2 samples, 0.25%)</title><rect x="47.2081%" y="373" width="0.2538%" height="15" fill="rgb(209,209,32)"/><text x="47.4581%" y="383.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.25%)</title><rect x="47.2081%" y="357" width="0.2538%" height="15" fill="rgb(221,70,22)"/><text x="47.4581%" y="367.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.25%)</title><rect x="47.2081%" y="341" width="0.2538%" height="15" fill="rgb(248,145,5)"/><text x="47.4581%" y="351.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (2 samples, 0.25%)</title><rect x="47.4619%" y="405" width="0.2538%" height="15" fill="rgb(226,116,26)"/><text x="47.7119%" y="415.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (1 samples, 0.13%)</title><rect x="47.9695%" y="373" width="0.1269%" height="15" fill="rgb(244,5,17)"/><text x="48.2195%" y="383.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (3 samples, 0.38%)</title><rect x="48.0964%" y="373" width="0.3807%" height="15" fill="rgb(252,159,33)"/><text x="48.3464%" y="383.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFn&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.13%)</title><rect x="48.3503%" y="357" width="0.1269%" height="15" fill="rgb(206,71,0)"/><text x="48.6003%" y="367.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut_par::{{closure}} (1 samples, 0.13%)</title><rect x="48.3503%" y="341" width="0.1269%" height="15" fill="rgb(233,118,54)"/><text x="48.6003%" y="351.50"></text></g><g><title>data_gen::colfind::float_vs_integer::handle_bench::{{closure}}::{{closure}} (1 samples, 0.13%)</title><rect x="48.3503%" y="325" width="0.1269%" height="15" fill="rgb(234,83,48)"/><text x="48.6003%" y="335.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (7 samples, 0.89%)</title><rect x="47.7157%" y="405" width="0.8883%" height="15" fill="rgb(228,3,54)"/><text x="47.9657%" y="415.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (5 samples, 0.63%)</title><rect x="47.9695%" y="389" width="0.6345%" height="15" fill="rgb(226,155,13)"/><text x="48.2195%" y="399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.13%)</title><rect x="48.4772%" y="373" width="0.1269%" height="15" fill="rgb(241,28,37)"/><text x="48.7272%" y="383.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (14 samples, 1.78%)</title><rect x="46.9543%" y="453" width="1.7766%" height="15" fill="rgb(233,93,10)"/><text x="47.2043%" y="463.50">&lt;..</text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (13 samples, 1.65%)</title><rect x="47.0812%" y="437" width="1.6497%" height="15" fill="rgb(225,113,19)"/><text x="47.3312%" y="447.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (13 samples, 1.65%)</title><rect x="47.0812%" y="421" width="1.6497%" height="15" fill="rgb(241,2,18)"/><text x="47.3312%" y="431.50"></text></g><g><title>twounordered::SecondVec&lt;T&gt;::push (1 samples, 0.13%)</title><rect x="48.6041%" y="405" width="0.1269%" height="15" fill="rgb(228,207,21)"/><text x="48.8541%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.13%)</title><rect x="48.6041%" y="389" width="0.1269%" height="15" fill="rgb(213,211,35)"/><text x="48.8541%" y="399.50"></text></g><g><title>core::ptr::write (1 samples, 0.13%)</title><rect x="48.6041%" y="373" width="0.1269%" height="15" fill="rgb(209,83,10)"/><text x="48.8541%" y="383.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (1 samples, 0.13%)</title><rect x="48.7310%" y="421" width="0.1269%" height="15" fill="rgb(209,164,1)"/><text x="48.9810%" y="431.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (1 samples, 0.13%)</title><rect x="48.7310%" y="405" width="0.1269%" height="15" fill="rgb(213,184,43)"/><text x="48.9810%" y="415.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (1 samples, 0.13%)</title><rect x="48.7310%" y="389" width="0.1269%" height="15" fill="rgb(231,61,34)"/><text x="48.9810%" y="399.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (1 samples, 0.13%)</title><rect x="48.7310%" y="373" width="0.1269%" height="15" fill="rgb(235,75,3)"/><text x="48.9810%" y="383.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.13%)</title><rect x="48.7310%" y="357" width="0.1269%" height="15" fill="rgb(220,106,47)"/><text x="48.9810%" y="367.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (3 samples, 0.38%)</title><rect x="48.7310%" y="437" width="0.3807%" height="15" fill="rgb(210,196,33)"/><text x="48.9810%" y="447.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (2 samples, 0.25%)</title><rect x="48.8579%" y="421" width="0.2538%" height="15" fill="rgb(229,154,42)"/><text x="49.1079%" y="431.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (2 samples, 0.25%)</title><rect x="48.8579%" y="405" width="0.2538%" height="15" fill="rgb(228,114,26)"/><text x="49.1079%" y="415.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (2 samples, 0.25%)</title><rect x="48.8579%" y="389" width="0.2538%" height="15" fill="rgb(208,144,1)"/><text x="49.1079%" y="399.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (2 samples, 0.25%)</title><rect x="48.8579%" y="373" width="0.2538%" height="15" fill="rgb(239,112,37)"/><text x="49.1079%" y="383.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (1 samples, 0.13%)</title><rect x="48.9848%" y="357" width="0.1269%" height="15" fill="rgb(210,96,50)"/><text x="49.2348%" y="367.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (1 samples, 0.13%)</title><rect x="49.1117%" y="405" width="0.1269%" height="15" fill="rgb(222,178,2)"/><text x="49.3617%" y="415.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (1 samples, 0.13%)</title><rect x="49.1117%" y="389" width="0.1269%" height="15" fill="rgb(226,74,18)"/><text x="49.3617%" y="399.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (1 samples, 0.13%)</title><rect x="49.1117%" y="373" width="0.1269%" height="15" fill="rgb(225,67,54)"/><text x="49.3617%" y="383.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.13%)</title><rect x="49.1117%" y="357" width="0.1269%" height="15" fill="rgb(251,92,32)"/><text x="49.3617%" y="367.50"></text></g><g><title>core::ptr::swap (1 samples, 0.13%)</title><rect x="49.1117%" y="341" width="0.1269%" height="15" fill="rgb(228,149,22)"/><text x="49.3617%" y="351.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.13%)</title><rect x="49.1117%" y="325" width="0.1269%" height="15" fill="rgb(243,54,13)"/><text x="49.3617%" y="335.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (2 samples, 0.25%)</title><rect x="49.1117%" y="421" width="0.2538%" height="15" fill="rgb(243,180,28)"/><text x="49.3617%" y="431.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (1 samples, 0.13%)</title><rect x="49.2386%" y="405" width="0.1269%" height="15" fill="rgb(208,167,24)"/><text x="49.4886%" y="415.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (1 samples, 0.13%)</title><rect x="49.2386%" y="389" width="0.1269%" height="15" fill="rgb(245,73,45)"/><text x="49.4886%" y="399.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (1 samples, 0.13%)</title><rect x="49.2386%" y="373" width="0.1269%" height="15" fill="rgb(237,203,48)"/><text x="49.4886%" y="383.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (4 samples, 0.51%)</title><rect x="49.1117%" y="437" width="0.5076%" height="15" fill="rgb(211,197,16)"/><text x="49.3617%" y="447.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (2 samples, 0.25%)</title><rect x="49.3655%" y="421" width="0.2538%" height="15" fill="rgb(243,99,51)"/><text x="49.6155%" y="431.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (2 samples, 0.25%)</title><rect x="49.3655%" y="405" width="0.2538%" height="15" fill="rgb(215,123,29)"/><text x="49.6155%" y="415.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (2 samples, 0.25%)</title><rect x="49.3655%" y="389" width="0.2538%" height="15" fill="rgb(239,186,37)"/><text x="49.6155%" y="399.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (1 samples, 0.13%)</title><rect x="49.4924%" y="373" width="0.1269%" height="15" fill="rgb(252,136,39)"/><text x="49.7424%" y="383.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.13%)</title><rect x="49.4924%" y="357" width="0.1269%" height="15" fill="rgb(223,213,32)"/><text x="49.7424%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::lt (1 samples, 0.13%)</title><rect x="49.7462%" y="405" width="0.1269%" height="15" fill="rgb(233,115,5)"/><text x="49.9962%" y="415.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (1 samples, 0.13%)</title><rect x="49.8731%" y="405" width="0.1269%" height="15" fill="rgb(207,226,44)"/><text x="50.1231%" y="415.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.13%)</title><rect x="49.8731%" y="389" width="0.1269%" height="15" fill="rgb(208,126,0)"/><text x="50.1231%" y="399.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.13%)</title><rect x="50.0000%" y="405" width="0.1269%" height="15" fill="rgb(244,66,21)"/><text x="50.2500%" y="415.50"></text></g><g><title>twounordered::FirstVec&lt;T&gt;::push (1 samples, 0.13%)</title><rect x="50.1269%" y="405" width="0.1269%" height="15" fill="rgb(222,97,12)"/><text x="50.3769%" y="415.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (1 samples, 0.13%)</title><rect x="50.5076%" y="373" width="0.1269%" height="15" fill="rgb(219,213,19)"/><text x="50.7576%" y="383.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (4 samples, 0.51%)</title><rect x="50.3807%" y="389" width="0.5076%" height="15" fill="rgb(252,169,30)"/><text x="50.6307%" y="399.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (2 samples, 0.25%)</title><rect x="50.6345%" y="373" width="0.2538%" height="15" fill="rgb(206,32,51)"/><text x="50.8845%" y="383.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (11 samples, 1.40%)</title><rect x="49.6193%" y="437" width="1.3959%" height="15" fill="rgb(250,172,42)"/><text x="49.8693%" y="447.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (11 samples, 1.40%)</title><rect x="49.6193%" y="421" width="1.3959%" height="15" fill="rgb(209,34,43)"/><text x="49.8693%" y="431.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (6 samples, 0.76%)</title><rect x="50.2538%" y="405" width="0.7614%" height="15" fill="rgb(223,11,35)"/><text x="50.5038%" y="415.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.13%)</title><rect x="50.8883%" y="389" width="0.1269%" height="15" fill="rgb(251,219,26)"/><text x="51.1383%" y="399.50"></text></g><g><title>core::ptr::swap (1 samples, 0.13%)</title><rect x="50.8883%" y="373" width="0.1269%" height="15" fill="rgb(231,119,3)"/><text x="51.1383%" y="383.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.13%)</title><rect x="50.8883%" y="357" width="0.1269%" height="15" fill="rgb(216,97,11)"/><text x="51.1383%" y="367.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (21 samples, 2.66%)</title><rect x="48.7310%" y="453" width="2.6650%" height="15" fill="rgb(223,59,9)"/><text x="48.9810%" y="463.50">br..</text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (3 samples, 0.38%)</title><rect x="51.0152%" y="437" width="0.3807%" height="15" fill="rgb(233,93,31)"/><text x="51.2652%" y="447.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (3 samples, 0.38%)</title><rect x="51.0152%" y="421" width="0.3807%" height="15" fill="rgb(239,81,33)"/><text x="51.2652%" y="431.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (2 samples, 0.25%)</title><rect x="51.1421%" y="405" width="0.2538%" height="15" fill="rgb(213,120,34)"/><text x="51.3921%" y="415.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (1 samples, 0.13%)</title><rect x="51.2690%" y="389" width="0.1269%" height="15" fill="rgb(243,49,53)"/><text x="51.5190%" y="399.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.13%)</title><rect x="51.2690%" y="373" width="0.1269%" height="15" fill="rgb(247,216,33)"/><text x="51.5190%" y="383.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFn&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.13%)</title><rect x="51.2690%" y="357" width="0.1269%" height="15" fill="rgb(226,26,14)"/><text x="51.5190%" y="367.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut_par::{{closure}} (1 samples, 0.13%)</title><rect x="51.2690%" y="341" width="0.1269%" height="15" fill="rgb(215,49,53)"/><text x="51.5190%" y="351.50"></text></g><g><title>data_gen::colfind::float_vs_integer::handle_bench::{{closure}}::{{closure}} (1 samples, 0.13%)</title><rect x="51.2690%" y="325" width="0.1269%" height="15" fill="rgb(245,162,40)"/><text x="51.5190%" y="335.50"></text></g><g><title>twounordered::FirstVec&lt;T&gt;::push (1 samples, 0.13%)</title><rect x="51.6497%" y="421" width="0.1269%" height="15" fill="rgb(229,68,17)"/><text x="51.8997%" y="431.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.13%)</title><rect x="51.6497%" y="405" width="0.1269%" height="15" fill="rgb(213,182,10)"/><text x="51.8997%" y="415.50"></text></g><g><title>core::ptr::swap (1 samples, 0.13%)</title><rect x="51.6497%" y="389" width="0.1269%" height="15" fill="rgb(245,125,30)"/><text x="51.8997%" y="399.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.13%)</title><rect x="51.6497%" y="373" width="0.1269%" height="15" fill="rgb(232,202,2)"/><text x="51.8997%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1 samples, 0.13%)</title><rect x="52.2843%" y="373" width="0.1269%" height="15" fill="rgb(237,140,51)"/><text x="52.5343%" y="383.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1 samples, 0.13%)</title><rect x="52.2843%" y="357" width="0.1269%" height="15" fill="rgb(236,157,25)"/><text x="52.5343%" y="367.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.13%)</title><rect x="52.2843%" y="341" width="0.1269%" height="15" fill="rgb(219,209,0)"/><text x="52.5343%" y="351.50"></text></g><g><title>&lt;twounordered::FirstVec&lt;T&gt; as twounordered::RetainMutUnordered&lt;T&gt;&gt;::truncate (4 samples, 0.51%)</title><rect x="52.1574%" y="405" width="0.5076%" height="15" fill="rgb(240,116,54)"/><text x="52.4074%" y="415.50"></text></g><g><title>twounordered::FirstVec&lt;T&gt;::truncate (4 samples, 0.51%)</title><rect x="52.1574%" y="389" width="0.5076%" height="15" fill="rgb(216,10,36)"/><text x="52.4074%" y="399.50"></text></g><g><title>core::intrinsics::copy (2 samples, 0.25%)</title><rect x="52.4112%" y="373" width="0.2538%" height="15" fill="rgb(222,72,44)"/><text x="52.6612%" y="383.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.25%)</title><rect x="52.4112%" y="357" width="0.2538%" height="15" fill="rgb(232,159,9)"/><text x="52.6612%" y="367.50"></text></g><g><title>&lt;twounordered::SecondVec&lt;T&gt; as twounordered::RetainMutUnordered&lt;T&gt;&gt;::truncate (1 samples, 0.13%)</title><rect x="52.6650%" y="405" width="0.1269%" height="15" fill="rgb(210,39,32)"/><text x="52.9150%" y="415.50"></text></g><g><title>twounordered::SecondVec&lt;T&gt;::truncate (1 samples, 0.13%)</title><rect x="52.6650%" y="389" width="0.1269%" height="15" fill="rgb(216,194,45)"/><text x="52.9150%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::truncate (1 samples, 0.13%)</title><rect x="52.6650%" y="373" width="0.1269%" height="15" fill="rgb(218,18,35)"/><text x="52.9150%" y="383.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (7 samples, 0.89%)</title><rect x="52.7919%" y="389" width="0.8883%" height="15" fill="rgb(207,83,51)"/><text x="53.0419%" y="399.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (5 samples, 0.63%)</title><rect x="53.0457%" y="373" width="0.6345%" height="15" fill="rgb(225,63,43)"/><text x="53.2957%" y="383.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (5 samples, 0.63%)</title><rect x="53.0457%" y="357" width="0.6345%" height="15" fill="rgb(207,57,36)"/><text x="53.2957%" y="367.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (5 samples, 0.63%)</title><rect x="53.0457%" y="341" width="0.6345%" height="15" fill="rgb(216,99,33)"/><text x="53.2957%" y="351.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (8 samples, 1.02%)</title><rect x="52.7919%" y="405" width="1.0152%" height="15" fill="rgb(225,42,16)"/><text x="53.0419%" y="415.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.13%)</title><rect x="53.6802%" y="389" width="0.1269%" height="15" fill="rgb(220,201,45)"/><text x="53.9302%" y="399.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (18 samples, 2.28%)</title><rect x="51.7766%" y="421" width="2.2843%" height="15" fill="rgb(225,33,4)"/><text x="52.0266%" y="431.50">t..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.25%)</title><rect x="53.8071%" y="405" width="0.2538%" height="15" fill="rgb(224,33,50)"/><text x="54.0571%" y="415.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.13%)</title><rect x="53.9340%" y="389" width="0.1269%" height="15" fill="rgb(246,198,51)"/><text x="54.1840%" y="399.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (23 samples, 2.92%)</title><rect x="51.3959%" y="453" width="2.9188%" height="15" fill="rgb(205,22,4)"/><text x="51.6459%" y="463.50">br..</text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (23 samples, 2.92%)</title><rect x="51.3959%" y="437" width="2.9188%" height="15" fill="rgb(206,3,8)"/><text x="51.6459%" y="447.50">br..</text></g><g><title>twounordered::SecondVec&lt;T&gt;::push (2 samples, 0.25%)</title><rect x="54.0609%" y="421" width="0.2538%" height="15" fill="rgb(251,23,15)"/><text x="54.3109%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (2 samples, 0.25%)</title><rect x="54.0609%" y="405" width="0.2538%" height="15" fill="rgb(252,88,28)"/><text x="54.3109%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::as_mut_ptr (2 samples, 0.25%)</title><rect x="54.0609%" y="389" width="0.2538%" height="15" fill="rgb(212,127,14)"/><text x="54.3109%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (2 samples, 0.25%)</title><rect x="54.0609%" y="373" width="0.2538%" height="15" fill="rgb(247,145,37)"/><text x="54.3109%" y="383.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::lt (1 samples, 0.13%)</title><rect x="54.3147%" y="421" width="0.1269%" height="15" fill="rgb(209,117,53)"/><text x="54.5647%" y="431.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (2 samples, 0.25%)</title><rect x="54.4416%" y="421" width="0.2538%" height="15" fill="rgb(212,90,42)"/><text x="54.6916%" y="431.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (2 samples, 0.25%)</title><rect x="54.4416%" y="405" width="0.2538%" height="15" fill="rgb(218,164,37)"/><text x="54.6916%" y="415.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek::{{closure}} (2 samples, 0.25%)</title><rect x="54.4416%" y="389" width="0.2538%" height="15" fill="rgb(246,65,34)"/><text x="54.6916%" y="399.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.25%)</title><rect x="54.4416%" y="373" width="0.2538%" height="15" fill="rgb(231,100,33)"/><text x="54.6916%" y="383.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.25%)</title><rect x="54.4416%" y="357" width="0.2538%" height="15" fill="rgb(228,126,14)"/><text x="54.6916%" y="367.50"></text></g><g><title>&lt;twounordered::FirstVec&lt;T&gt; as twounordered::RetainMutUnordered&lt;T&gt;&gt;::as_slice_mut (1 samples, 0.13%)</title><rect x="54.8223%" y="405" width="0.1269%" height="15" fill="rgb(215,173,21)"/><text x="55.0723%" y="415.50"></text></g><g><title>twounordered::FirstVec&lt;T&gt;::as_slice_mut (1 samples, 0.13%)</title><rect x="54.8223%" y="389" width="0.1269%" height="15" fill="rgb(210,6,40)"/><text x="55.0723%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1 samples, 0.13%)</title><rect x="54.8223%" y="373" width="0.1269%" height="15" fill="rgb(212,48,18)"/><text x="55.0723%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.13%)</title><rect x="54.8223%" y="357" width="0.1269%" height="15" fill="rgb(230,214,11)"/><text x="55.0723%" y="367.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (4 samples, 0.51%)</title><rect x="54.6954%" y="421" width="0.5076%" height="15" fill="rgb(254,105,39)"/><text x="54.9454%" y="431.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (2 samples, 0.25%)</title><rect x="54.9492%" y="405" width="0.2538%" height="15" fill="rgb(245,158,5)"/><text x="55.1992%" y="415.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (2 samples, 0.25%)</title><rect x="54.9492%" y="389" width="0.2538%" height="15" fill="rgb(249,208,11)"/><text x="55.1992%" y="399.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (66 samples, 8.38%)</title><rect x="46.9543%" y="469" width="8.3756%" height="15" fill="rgb(210,39,28)"/><text x="47.2043%" y="479.50">broccoli::qu..</text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (8 samples, 1.02%)</title><rect x="54.3147%" y="453" width="1.0152%" height="15" fill="rgb(211,56,53)"/><text x="54.5647%" y="463.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (8 samples, 1.02%)</title><rect x="54.3147%" y="437" width="1.0152%" height="15" fill="rgb(226,201,30)"/><text x="54.5647%" y="447.50"></text></g><g><title>twounordered::SecondVec&lt;T&gt;::push (1 samples, 0.13%)</title><rect x="55.2030%" y="421" width="0.1269%" height="15" fill="rgb(239,101,34)"/><text x="55.4530%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.13%)</title><rect x="55.2030%" y="405" width="0.1269%" height="15" fill="rgb(226,209,5)"/><text x="55.4530%" y="415.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.13%)</title><rect x="55.9645%" y="405" width="0.1269%" height="15" fill="rgb(250,105,47)"/><text x="56.2145%" y="415.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFn&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.13%)</title><rect x="55.9645%" y="389" width="0.1269%" height="15" fill="rgb(230,72,3)"/><text x="56.2145%" y="399.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut_par::{{closure}} (1 samples, 0.13%)</title><rect x="55.9645%" y="373" width="0.1269%" height="15" fill="rgb(232,218,39)"/><text x="56.2145%" y="383.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.13%)</title><rect x="55.9645%" y="357" width="0.1269%" height="15" fill="rgb(248,166,6)"/><text x="56.2145%" y="367.50"></text></g><g><title>broccoli::query::colfind::oned::find::{{closure}} (3 samples, 0.38%)</title><rect x="55.8376%" y="421" width="0.3807%" height="15" fill="rgb(247,89,20)"/><text x="56.0876%" y="431.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.13%)</title><rect x="56.0914%" y="405" width="0.1269%" height="15" fill="rgb(248,130,54)"/><text x="56.3414%" y="415.50"></text></g><g><title>broccoli::query::colfind::oned::find_2d (10 samples, 1.27%)</title><rect x="55.3299%" y="469" width="1.2690%" height="15" fill="rgb(234,196,4)"/><text x="55.5799%" y="479.50"></text></g><g><title>broccoli::query::colfind::oned::find (10 samples, 1.27%)</title><rect x="55.3299%" y="453" width="1.2690%" height="15" fill="rgb(250,143,31)"/><text x="55.5799%" y="463.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (10 samples, 1.27%)</title><rect x="55.3299%" y="437" width="1.2690%" height="15" fill="rgb(211,110,34)"/><text x="55.5799%" y="447.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (3 samples, 0.38%)</title><rect x="56.2183%" y="421" width="0.3807%" height="15" fill="rgb(215,124,48)"/><text x="56.4683%" y="431.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (2 samples, 0.25%)</title><rect x="56.3452%" y="405" width="0.2538%" height="15" fill="rgb(216,46,13)"/><text x="56.5952%" y="415.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::lt (1 samples, 0.13%)</title><rect x="56.5990%" y="437" width="0.1269%" height="15" fill="rgb(205,184,25)"/><text x="56.8490%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.13%)</title><rect x="56.7259%" y="421" width="0.1269%" height="15" fill="rgb(228,1,10)"/><text x="56.9759%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::as_mut_ptr (1 samples, 0.13%)</title><rect x="56.7259%" y="405" width="0.1269%" height="15" fill="rgb(213,116,27)"/><text x="56.9759%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.13%)</title><rect x="56.7259%" y="389" width="0.1269%" height="15" fill="rgb(241,95,50)"/><text x="56.9759%" y="399.50"></text></g><g><title>twounordered::FirstVec&lt;T&gt;::push (2 samples, 0.25%)</title><rect x="56.7259%" y="437" width="0.2538%" height="15" fill="rgb(238,48,32)"/><text x="56.9759%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.13%)</title><rect x="56.8528%" y="421" width="0.1269%" height="15" fill="rgb(235,113,49)"/><text x="57.1028%" y="431.50"></text></g><g><title>&lt;twounordered::FirstVec&lt;T&gt; as twounordered::RetainMutUnordered&lt;T&gt;&gt;::as_slice_mut (1 samples, 0.13%)</title><rect x="57.4873%" y="421" width="0.1269%" height="15" fill="rgb(205,127,43)"/><text x="57.7373%" y="431.50"></text></g><g><title>twounordered::FirstVec&lt;T&gt;::as_slice_mut (1 samples, 0.13%)</title><rect x="57.4873%" y="405" width="0.1269%" height="15" fill="rgb(250,162,2)"/><text x="57.7373%" y="415.50"></text></g><g><title>core::cmp::Ord::min (1 samples, 0.13%)</title><rect x="57.6142%" y="389" width="0.1269%" height="15" fill="rgb(220,13,41)"/><text x="57.8642%" y="399.50"></text></g><g><title>core::cmp::min_by (1 samples, 0.13%)</title><rect x="57.6142%" y="373" width="0.1269%" height="15" fill="rgb(249,221,25)"/><text x="57.8642%" y="383.50"></text></g><g><title>&lt;twounordered::FirstVec&lt;T&gt; as twounordered::RetainMutUnordered&lt;T&gt;&gt;::truncate (2 samples, 0.25%)</title><rect x="57.6142%" y="421" width="0.2538%" height="15" fill="rgb(215,208,19)"/><text x="57.8642%" y="431.50"></text></g><g><title>twounordered::FirstVec&lt;T&gt;::truncate (2 samples, 0.25%)</title><rect x="57.6142%" y="405" width="0.2538%" height="15" fill="rgb(236,175,2)"/><text x="57.8642%" y="415.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.13%)</title><rect x="57.7411%" y="389" width="0.1269%" height="15" fill="rgb(241,52,2)"/><text x="57.9911%" y="399.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.13%)</title><rect x="57.7411%" y="373" width="0.1269%" height="15" fill="rgb(248,140,14)"/><text x="57.9911%" y="383.50"></text></g><g><title>&lt;twounordered::SecondVec&lt;T&gt; as twounordered::RetainMutUnordered&lt;T&gt;&gt;::as_slice_mut (1 samples, 0.13%)</title><rect x="57.8680%" y="421" width="0.1269%" height="15" fill="rgb(253,22,42)"/><text x="58.1180%" y="431.50"></text></g><g><title>twounordered::SecondVec&lt;T&gt;::as_slice_mut (1 samples, 0.13%)</title><rect x="57.8680%" y="405" width="0.1269%" height="15" fill="rgb(234,61,47)"/><text x="58.1180%" y="415.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (2 samples, 0.25%)</title><rect x="58.1218%" y="405" width="0.2538%" height="15" fill="rgb(208,226,15)"/><text x="58.3718%" y="415.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.13%)</title><rect x="58.3756%" y="405" width="0.1269%" height="15" fill="rgb(217,221,4)"/><text x="58.6256%" y="415.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (5 samples, 0.63%)</title><rect x="57.9949%" y="421" width="0.6345%" height="15" fill="rgb(212,174,34)"/><text x="58.2449%" y="431.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.13%)</title><rect x="58.5025%" y="405" width="0.1269%" height="15" fill="rgb(253,83,4)"/><text x="58.7525%" y="415.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.13%)</title><rect x="58.6294%" y="421" width="0.1269%" height="15" fill="rgb(250,195,49)"/><text x="58.8794%" y="431.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (15 samples, 1.90%)</title><rect x="56.9797%" y="437" width="1.9036%" height="15" fill="rgb(241,192,25)"/><text x="57.2297%" y="447.50">t..</text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.13%)</title><rect x="58.7563%" y="421" width="0.1269%" height="15" fill="rgb(208,124,10)"/><text x="59.0063%" y="431.50"></text></g><g><title>core::ptr::swap (1 samples, 0.13%)</title><rect x="58.7563%" y="405" width="0.1269%" height="15" fill="rgb(222,33,0)"/><text x="59.0063%" y="415.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.13%)</title><rect x="58.7563%" y="389" width="0.1269%" height="15" fill="rgb(234,209,28)"/><text x="59.0063%" y="399.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (19 samples, 2.41%)</title><rect x="56.5990%" y="469" width="2.4112%" height="15" fill="rgb(224,11,23)"/><text x="56.8490%" y="479.50">br..</text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (19 samples, 2.41%)</title><rect x="56.5990%" y="453" width="2.4112%" height="15" fill="rgb(232,99,1)"/><text x="56.8490%" y="463.50">br..</text></g><g><title>twounordered::SecondVec&lt;T&gt;::push (1 samples, 0.13%)</title><rect x="58.8832%" y="437" width="0.1269%" height="15" fill="rgb(237,95,45)"/><text x="59.1332%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.13%)</title><rect x="58.8832%" y="421" width="0.1269%" height="15" fill="rgb(208,109,11)"/><text x="59.1332%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::as_mut_ptr (1 samples, 0.13%)</title><rect x="58.8832%" y="405" width="0.1269%" height="15" fill="rgb(216,190,48)"/><text x="59.1332%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.13%)</title><rect x="58.8832%" y="389" width="0.1269%" height="15" fill="rgb(251,171,36)"/><text x="59.1332%" y="399.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (3 samples, 0.38%)</title><rect x="59.0102%" y="437" width="0.3807%" height="15" fill="rgb(230,62,22)"/><text x="59.2602%" y="447.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (3 samples, 0.38%)</title><rect x="59.0102%" y="421" width="0.3807%" height="15" fill="rgb(225,114,35)"/><text x="59.2602%" y="431.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek::{{closure}} (2 samples, 0.25%)</title><rect x="59.1371%" y="405" width="0.2538%" height="15" fill="rgb(215,118,42)"/><text x="59.3871%" y="415.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.25%)</title><rect x="59.1371%" y="389" width="0.2538%" height="15" fill="rgb(243,119,21)"/><text x="59.3871%" y="399.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.25%)</title><rect x="59.1371%" y="373" width="0.2538%" height="15" fill="rgb(252,177,53)"/><text x="59.3871%" y="383.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.13%)</title><rect x="59.3909%" y="437" width="0.1269%" height="15" fill="rgb(237,209,29)"/><text x="59.6409%" y="447.50"></text></g><g><title>&lt;twounordered::FirstVec&lt;T&gt; as twounordered::RetainMutUnordered&lt;T&gt;&gt;::as_slice_mut (1 samples, 0.13%)</title><rect x="59.5178%" y="421" width="0.1269%" height="15" fill="rgb(212,65,23)"/><text x="59.7678%" y="431.50"></text></g><g><title>twounordered::FirstVec&lt;T&gt;::as_slice_mut (1 samples, 0.13%)</title><rect x="59.5178%" y="405" width="0.1269%" height="15" fill="rgb(230,222,46)"/><text x="59.7678%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1 samples, 0.13%)</title><rect x="59.5178%" y="389" width="0.1269%" height="15" fill="rgb(215,135,32)"/><text x="59.7678%" y="399.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1 samples, 0.13%)</title><rect x="59.5178%" y="373" width="0.1269%" height="15" fill="rgb(246,101,22)"/><text x="59.7678%" y="383.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.13%)</title><rect x="59.5178%" y="357" width="0.1269%" height="15" fill="rgb(206,107,13)"/><text x="59.7678%" y="367.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.13%)</title><rect x="59.5178%" y="341" width="0.1269%" height="15" fill="rgb(250,100,44)"/><text x="59.7678%" y="351.50"></text></g><g><title>&lt;twounordered::FirstVec&lt;T&gt; as twounordered::RetainMutUnordered&lt;T&gt;&gt;::truncate (2 samples, 0.25%)</title><rect x="59.6447%" y="421" width="0.2538%" height="15" fill="rgb(231,147,38)"/><text x="59.8947%" y="431.50"></text></g><g><title>twounordered::FirstVec&lt;T&gt;::truncate (2 samples, 0.25%)</title><rect x="59.6447%" y="405" width="0.2538%" height="15" fill="rgb(229,8,40)"/><text x="59.8947%" y="415.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (1 samples, 0.13%)</title><rect x="60.0254%" y="405" width="0.1269%" height="15" fill="rgb(221,135,30)"/><text x="60.2754%" y="415.50"></text></g><g><title>broccoli::query::colfind::inner::ColFindRecurser&lt;T,K,S&gt;::recurse_seq (424 samples, 53.81%)</title><rect x="6.5990%" y="485" width="53.8071%" height="15" fill="rgb(249,193,18)"/><text x="6.8490%" y="495.50">broccoli::query::colfind::inner::ColFindRecurser&lt;T,K,S&gt;::recurse_seq</text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (11 samples, 1.40%)</title><rect x="59.0102%" y="469" width="1.3959%" height="15" fill="rgb(209,133,39)"/><text x="59.2602%" y="479.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (11 samples, 1.40%)</title><rect x="59.0102%" y="453" width="1.3959%" height="15" fill="rgb(232,100,14)"/><text x="59.2602%" y="463.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (7 samples, 0.89%)</title><rect x="59.5178%" y="437" width="0.8883%" height="15" fill="rgb(224,185,1)"/><text x="59.7678%" y="447.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (4 samples, 0.51%)</title><rect x="59.8985%" y="421" width="0.5076%" height="15" fill="rgb(223,139,8)"/><text x="60.1485%" y="431.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (2 samples, 0.25%)</title><rect x="60.1523%" y="405" width="0.2538%" height="15" fill="rgb(232,213,38)"/><text x="60.4023%" y="415.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFn&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (2 samples, 0.25%)</title><rect x="60.1523%" y="389" width="0.2538%" height="15" fill="rgb(207,94,22)"/><text x="60.4023%" y="399.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut_par::{{closure}} (2 samples, 0.25%)</title><rect x="60.1523%" y="373" width="0.2538%" height="15" fill="rgb(219,183,54)"/><text x="60.4023%" y="383.50"></text></g><g><title>data_gen::colfind::float_vs_integer::handle_bench::{{closure}}::{{closure}} (2 samples, 0.25%)</title><rect x="60.1523%" y="357" width="0.2538%" height="15" fill="rgb(216,185,54)"/><text x="60.4023%" y="367.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (1 samples, 0.13%)</title><rect x="60.7868%" y="405" width="0.1269%" height="15" fill="rgb(254,217,39)"/><text x="61.0368%" y="415.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.13%)</title><rect x="60.7868%" y="389" width="0.1269%" height="15" fill="rgb(240,178,23)"/><text x="61.0368%" y="399.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFn&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.13%)</title><rect x="60.7868%" y="373" width="0.1269%" height="15" fill="rgb(218,11,47)"/><text x="61.0368%" y="383.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut_par::{{closure}} (1 samples, 0.13%)</title><rect x="60.7868%" y="357" width="0.1269%" height="15" fill="rgb(218,51,51)"/><text x="61.0368%" y="367.50"></text></g><g><title>data_gen::colfind::float_vs_integer::handle_bench::{{closure}}::{{closure}} (1 samples, 0.13%)</title><rect x="60.7868%" y="341" width="0.1269%" height="15" fill="rgb(238,126,27)"/><text x="61.0368%" y="351.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (5 samples, 0.63%)</title><rect x="60.4061%" y="453" width="0.6345%" height="15" fill="rgb(249,202,22)"/><text x="60.6561%" y="463.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (4 samples, 0.51%)</title><rect x="60.5330%" y="437" width="0.5076%" height="15" fill="rgb(254,195,49)"/><text x="60.7830%" y="447.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (4 samples, 0.51%)</title><rect x="60.5330%" y="421" width="0.5076%" height="15" fill="rgb(208,123,14)"/><text x="60.7830%" y="431.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.13%)</title><rect x="60.9137%" y="405" width="0.1269%" height="15" fill="rgb(224,200,8)"/><text x="61.1637%" y="415.50"></text></g><g><title>core::ptr::swap (1 samples, 0.13%)</title><rect x="60.9137%" y="389" width="0.1269%" height="15" fill="rgb(217,61,36)"/><text x="61.1637%" y="399.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.13%)</title><rect x="60.9137%" y="373" width="0.1269%" height="15" fill="rgb(206,35,45)"/><text x="61.1637%" y="383.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (6 samples, 0.76%)</title><rect x="60.4061%" y="469" width="0.7614%" height="15" fill="rgb(217,65,33)"/><text x="60.6561%" y="479.50"></text></g><g><title>broccoli::query::tools::get_section_mut (1 samples, 0.13%)</title><rect x="61.0406%" y="453" width="0.1269%" height="15" fill="rgb(222,158,48)"/><text x="61.2906%" y="463.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (2 samples, 0.25%)</title><rect x="61.1675%" y="405" width="0.2538%" height="15" fill="rgb(254,2,54)"/><text x="61.4175%" y="415.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (3 samples, 0.38%)</title><rect x="61.4213%" y="405" width="0.3807%" height="15" fill="rgb(250,143,38)"/><text x="61.6713%" y="415.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (1 samples, 0.13%)</title><rect x="61.6751%" y="389" width="0.1269%" height="15" fill="rgb(248,25,0)"/><text x="61.9251%" y="399.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.13%)</title><rect x="61.6751%" y="373" width="0.1269%" height="15" fill="rgb(206,152,27)"/><text x="61.9251%" y="383.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (6 samples, 0.76%)</title><rect x="61.1675%" y="437" width="0.7614%" height="15" fill="rgb(240,77,30)"/><text x="61.4175%" y="447.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (6 samples, 0.76%)</title><rect x="61.1675%" y="421" width="0.7614%" height="15" fill="rgb(231,5,3)"/><text x="61.4175%" y="431.50"></text></g><g><title>twounordered::SecondVec&lt;T&gt;::push (1 samples, 0.13%)</title><rect x="61.8020%" y="405" width="0.1269%" height="15" fill="rgb(207,226,32)"/><text x="62.0520%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.13%)</title><rect x="61.8020%" y="389" width="0.1269%" height="15" fill="rgb(222,207,47)"/><text x="62.0520%" y="399.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (8 samples, 1.02%)</title><rect x="61.1675%" y="453" width="1.0152%" height="15" fill="rgb(229,115,45)"/><text x="61.4175%" y="463.50"></text></g><g><title>broccoli::query::tools::get_section_mut (2 samples, 0.25%)</title><rect x="61.9289%" y="437" width="0.2538%" height="15" fill="rgb(224,191,6)"/><text x="62.1789%" y="447.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (1 samples, 0.13%)</title><rect x="62.1827%" y="437" width="0.1269%" height="15" fill="rgb(230,227,24)"/><text x="62.4327%" y="447.50"></text></g><g><title>broccoli::query::tools::get_section_mut (1 samples, 0.13%)</title><rect x="62.1827%" y="421" width="0.1269%" height="15" fill="rgb(228,80,19)"/><text x="62.4327%" y="431.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (1 samples, 0.13%)</title><rect x="62.3096%" y="437" width="0.1269%" height="15" fill="rgb(247,229,0)"/><text x="62.5596%" y="447.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (1 samples, 0.13%)</title><rect x="62.3096%" y="421" width="0.1269%" height="15" fill="rgb(237,194,15)"/><text x="62.5596%" y="431.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (1 samples, 0.13%)</title><rect x="62.3096%" y="405" width="0.1269%" height="15" fill="rgb(219,203,20)"/><text x="62.5596%" y="415.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (1 samples, 0.13%)</title><rect x="62.3096%" y="389" width="0.1269%" height="15" fill="rgb(234,128,8)"/><text x="62.5596%" y="399.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (1 samples, 0.13%)</title><rect x="62.3096%" y="373" width="0.1269%" height="15" fill="rgb(248,202,8)"/><text x="62.5596%" y="383.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (1 samples, 0.13%)</title><rect x="62.3096%" y="357" width="0.1269%" height="15" fill="rgb(206,104,37)"/><text x="62.5596%" y="367.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.13%)</title><rect x="62.3096%" y="341" width="0.1269%" height="15" fill="rgb(223,8,27)"/><text x="62.5596%" y="351.50"></text></g><g><title>twounordered::FirstVec&lt;T&gt;::push (1 samples, 0.13%)</title><rect x="62.4365%" y="405" width="0.1269%" height="15" fill="rgb(216,217,28)"/><text x="62.6865%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.13%)</title><rect x="62.4365%" y="389" width="0.1269%" height="15" fill="rgb(249,199,1)"/><text x="62.6865%" y="399.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (7 samples, 0.89%)</title><rect x="62.1827%" y="453" width="0.8883%" height="15" fill="rgb(240,85,17)"/><text x="62.4327%" y="463.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (5 samples, 0.63%)</title><rect x="62.4365%" y="437" width="0.6345%" height="15" fill="rgb(206,108,45)"/><text x="62.6865%" y="447.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (5 samples, 0.63%)</title><rect x="62.4365%" y="421" width="0.6345%" height="15" fill="rgb(245,210,41)"/><text x="62.6865%" y="431.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (4 samples, 0.51%)</title><rect x="62.5635%" y="405" width="0.5076%" height="15" fill="rgb(206,13,37)"/><text x="62.8135%" y="415.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (3 samples, 0.38%)</title><rect x="62.6904%" y="389" width="0.3807%" height="15" fill="rgb(250,61,18)"/><text x="62.9404%" y="399.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (2 samples, 0.25%)</title><rect x="62.8173%" y="373" width="0.2538%" height="15" fill="rgb(235,172,48)"/><text x="63.0673%" y="383.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (2 samples, 0.25%)</title><rect x="62.8173%" y="357" width="0.2538%" height="15" fill="rgb(249,201,17)"/><text x="63.0673%" y="367.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (2 samples, 0.25%)</title><rect x="62.8173%" y="341" width="0.2538%" height="15" fill="rgb(219,208,6)"/><text x="63.0673%" y="351.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (2 samples, 0.25%)</title><rect x="62.8173%" y="325" width="0.2538%" height="15" fill="rgb(248,31,23)"/><text x="63.0673%" y="335.50"></text></g><g><title>&lt;twounordered::FirstVec&lt;T&gt; as twounordered::RetainMutUnordered&lt;T&gt;&gt;::truncate (2 samples, 0.25%)</title><rect x="63.4518%" y="405" width="0.2538%" height="15" fill="rgb(245,15,42)"/><text x="63.7018%" y="415.50"></text></g><g><title>twounordered::FirstVec&lt;T&gt;::truncate (2 samples, 0.25%)</title><rect x="63.4518%" y="389" width="0.2538%" height="15" fill="rgb(222,217,39)"/><text x="63.7018%" y="399.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.13%)</title><rect x="63.5787%" y="373" width="0.1269%" height="15" fill="rgb(210,219,27)"/><text x="63.8287%" y="383.50"></text></g><g><title>&lt;twounordered::SecondVec&lt;T&gt; as twounordered::RetainMutUnordered&lt;T&gt;&gt;::as_slice_mut (1 samples, 0.13%)</title><rect x="63.7056%" y="405" width="0.1269%" height="15" fill="rgb(252,166,36)"/><text x="63.9556%" y="415.50"></text></g><g><title>twounordered::SecondVec&lt;T&gt;::as_slice_mut (1 samples, 0.13%)</title><rect x="63.7056%" y="389" width="0.1269%" height="15" fill="rgb(245,132,34)"/><text x="63.9556%" y="399.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (1 samples, 0.13%)</title><rect x="63.9594%" y="389" width="0.1269%" height="15" fill="rgb(236,54,3)"/><text x="64.2094%" y="399.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (12 samples, 1.52%)</title><rect x="63.0711%" y="453" width="1.5228%" height="15" fill="rgb(241,173,43)"/><text x="63.3211%" y="463.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (12 samples, 1.52%)</title><rect x="63.0711%" y="437" width="1.5228%" height="15" fill="rgb(215,190,9)"/><text x="63.3211%" y="447.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (11 samples, 1.40%)</title><rect x="63.1980%" y="421" width="1.3959%" height="15" fill="rgb(242,101,16)"/><text x="63.4480%" y="431.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (6 samples, 0.76%)</title><rect x="63.8325%" y="405" width="0.7614%" height="15" fill="rgb(223,190,21)"/><text x="64.0825%" y="415.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (4 samples, 0.51%)</title><rect x="64.0863%" y="389" width="0.5076%" height="15" fill="rgb(215,228,25)"/><text x="64.3363%" y="399.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (3 samples, 0.38%)</title><rect x="64.2132%" y="373" width="0.3807%" height="15" fill="rgb(225,36,22)"/><text x="64.4632%" y="383.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (3 samples, 0.38%)</title><rect x="64.2132%" y="357" width="0.3807%" height="15" fill="rgb(251,106,46)"/><text x="64.4632%" y="367.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (3 samples, 0.38%)</title><rect x="64.2132%" y="341" width="0.3807%" height="15" fill="rgb(208,90,1)"/><text x="64.4632%" y="351.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (28 samples, 3.55%)</title><rect x="61.1675%" y="469" width="3.5533%" height="15" fill="rgb(243,10,4)"/><text x="61.4175%" y="479.50">broc..</text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (1 samples, 0.13%)</title><rect x="64.5939%" y="453" width="0.1269%" height="15" fill="rgb(212,137,27)"/><text x="64.8439%" y="463.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (1 samples, 0.13%)</title><rect x="64.5939%" y="437" width="0.1269%" height="15" fill="rgb(231,220,49)"/><text x="64.8439%" y="447.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (1 samples, 0.13%)</title><rect x="64.5939%" y="421" width="0.1269%" height="15" fill="rgb(237,96,20)"/><text x="64.8439%" y="431.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (1 samples, 0.13%)</title><rect x="64.5939%" y="405" width="0.1269%" height="15" fill="rgb(239,229,30)"/><text x="64.8439%" y="415.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (1 samples, 0.13%)</title><rect x="64.7208%" y="437" width="0.1269%" height="15" fill="rgb(219,65,33)"/><text x="64.9708%" y="447.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (1 samples, 0.13%)</title><rect x="64.7208%" y="421" width="0.1269%" height="15" fill="rgb(243,134,7)"/><text x="64.9708%" y="431.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek::{{closure}} (1 samples, 0.13%)</title><rect x="64.7208%" y="405" width="0.1269%" height="15" fill="rgb(216,177,54)"/><text x="64.9708%" y="415.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.13%)</title><rect x="64.7208%" y="389" width="0.1269%" height="15" fill="rgb(211,160,20)"/><text x="64.9708%" y="399.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.13%)</title><rect x="64.7208%" y="373" width="0.1269%" height="15" fill="rgb(239,85,39)"/><text x="64.9708%" y="383.50"></text></g><g><title>twounordered::FirstVec&lt;T&gt;::push (2 samples, 0.25%)</title><rect x="64.8477%" y="437" width="0.2538%" height="15" fill="rgb(232,125,22)"/><text x="65.0977%" y="447.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.13%)</title><rect x="64.9746%" y="421" width="0.1269%" height="15" fill="rgb(244,57,34)"/><text x="65.2246%" y="431.50"></text></g><g><title>core::ptr::swap (1 samples, 0.13%)</title><rect x="64.9746%" y="405" width="0.1269%" height="15" fill="rgb(214,203,32)"/><text x="65.2246%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.13%)</title><rect x="64.9746%" y="389" width="0.1269%" height="15" fill="rgb(207,58,43)"/><text x="65.2246%" y="399.50"></text></g><g><title>&lt;twounordered::SecondVec&lt;T&gt; as twounordered::RetainMutUnordered&lt;T&gt;&gt;::as_slice_mut (1 samples, 0.13%)</title><rect x="65.3553%" y="421" width="0.1269%" height="15" fill="rgb(215,193,15)"/><text x="65.6053%" y="431.50"></text></g><g><title>twounordered::SecondVec&lt;T&gt;::as_slice_mut (1 samples, 0.13%)</title><rect x="65.3553%" y="405" width="0.1269%" height="15" fill="rgb(232,15,44)"/><text x="65.6053%" y="415.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (1 samples, 0.13%)</title><rect x="65.4822%" y="405" width="0.1269%" height="15" fill="rgb(212,3,48)"/><text x="65.7322%" y="415.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (3 samples, 0.38%)</title><rect x="65.4822%" y="421" width="0.3807%" height="15" fill="rgb(218,128,7)"/><text x="65.7322%" y="431.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (2 samples, 0.25%)</title><rect x="65.6091%" y="405" width="0.2538%" height="15" fill="rgb(226,216,39)"/><text x="65.8591%" y="415.50"></text></g><g><title>axgeom::range::Range&lt;T&gt;::intersects (1 samples, 0.13%)</title><rect x="65.7360%" y="389" width="0.1269%" height="15" fill="rgb(243,47,51)"/><text x="65.9860%" y="399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::le (1 samples, 0.13%)</title><rect x="65.7360%" y="373" width="0.1269%" height="15" fill="rgb(241,183,40)"/><text x="65.9860%" y="383.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (10 samples, 1.27%)</title><rect x="64.7208%" y="469" width="1.2690%" height="15" fill="rgb(231,217,32)"/><text x="64.9708%" y="479.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (10 samples, 1.27%)</title><rect x="64.7208%" y="453" width="1.2690%" height="15" fill="rgb(229,61,38)"/><text x="64.9708%" y="463.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (7 samples, 0.89%)</title><rect x="65.1015%" y="437" width="0.8883%" height="15" fill="rgb(225,210,5)"/><text x="65.3515%" y="447.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.13%)</title><rect x="65.8629%" y="421" width="0.1269%" height="15" fill="rgb(231,79,45)"/><text x="66.1129%" y="431.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.13%)</title><rect x="66.1168%" y="405" width="0.1269%" height="15" fill="rgb(224,100,7)"/><text x="66.3668%" y="415.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (47 samples, 5.96%)</title><rect x="60.4061%" y="485" width="5.9645%" height="15" fill="rgb(241,198,18)"/><text x="60.6561%" y="495.50">broccoli..</text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (3 samples, 0.38%)</title><rect x="65.9898%" y="469" width="0.3807%" height="15" fill="rgb(252,97,53)"/><text x="66.2398%" y="479.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (3 samples, 0.38%)</title><rect x="65.9898%" y="453" width="0.3807%" height="15" fill="rgb(220,88,7)"/><text x="66.2398%" y="463.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (2 samples, 0.25%)</title><rect x="66.1168%" y="437" width="0.2538%" height="15" fill="rgb(213,176,14)"/><text x="66.3668%" y="447.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (2 samples, 0.25%)</title><rect x="66.1168%" y="421" width="0.2538%" height="15" fill="rgb(246,73,7)"/><text x="66.3668%" y="431.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.13%)</title><rect x="66.2437%" y="405" width="0.1269%" height="15" fill="rgb(245,64,36)"/><text x="66.4937%" y="415.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (2 samples, 0.25%)</title><rect x="66.7513%" y="421" width="0.2538%" height="15" fill="rgb(245,80,10)"/><text x="67.0013%" y="431.50"></text></g><g><title>broccoli::query::colfind::oned::find_2d (8 samples, 1.02%)</title><rect x="66.3706%" y="485" width="1.0152%" height="15" fill="rgb(232,107,50)"/><text x="66.6206%" y="495.50"></text></g><g><title>broccoli::query::colfind::oned::find (8 samples, 1.02%)</title><rect x="66.3706%" y="469" width="1.0152%" height="15" fill="rgb(253,3,0)"/><text x="66.6206%" y="479.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (8 samples, 1.02%)</title><rect x="66.3706%" y="453" width="1.0152%" height="15" fill="rgb(212,99,53)"/><text x="66.6206%" y="463.50"></text></g><g><title>broccoli::query::colfind::oned::find::{{closure}} (6 samples, 0.76%)</title><rect x="66.6244%" y="437" width="0.7614%" height="15" fill="rgb(249,111,54)"/><text x="66.8744%" y="447.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (3 samples, 0.38%)</title><rect x="67.0051%" y="421" width="0.3807%" height="15" fill="rgb(249,55,30)"/><text x="67.2551%" y="431.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFn&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.13%)</title><rect x="67.2589%" y="405" width="0.1269%" height="15" fill="rgb(237,47,42)"/><text x="67.5089%" y="415.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut_par::{{closure}} (1 samples, 0.13%)</title><rect x="67.2589%" y="389" width="0.1269%" height="15" fill="rgb(211,20,18)"/><text x="67.5089%" y="399.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.13%)</title><rect x="67.2589%" y="373" width="0.1269%" height="15" fill="rgb(231,203,46)"/><text x="67.5089%" y="383.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (2 samples, 0.25%)</title><rect x="67.3858%" y="485" width="0.2538%" height="15" fill="rgb(237,142,3)"/><text x="67.6358%" y="495.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (2 samples, 0.25%)</title><rect x="67.3858%" y="469" width="0.2538%" height="15" fill="rgb(241,107,1)"/><text x="67.6358%" y="479.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (2 samples, 0.25%)</title><rect x="67.3858%" y="453" width="0.2538%" height="15" fill="rgb(229,83,13)"/><text x="67.6358%" y="463.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (2 samples, 0.25%)</title><rect x="67.3858%" y="437" width="0.2538%" height="15" fill="rgb(241,91,40)"/><text x="67.6358%" y="447.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (2 samples, 0.25%)</title><rect x="67.3858%" y="421" width="0.2538%" height="15" fill="rgb(225,3,45)"/><text x="67.6358%" y="431.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.13%)</title><rect x="67.5127%" y="405" width="0.1269%" height="15" fill="rgb(244,223,14)"/><text x="67.7627%" y="415.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (1 samples, 0.13%)</title><rect x="67.5127%" y="389" width="0.1269%" height="15" fill="rgb(224,124,37)"/><text x="67.7627%" y="399.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.13%)</title><rect x="67.5127%" y="373" width="0.1269%" height="15" fill="rgb(251,171,30)"/><text x="67.7627%" y="383.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (1 samples, 0.13%)</title><rect x="67.6396%" y="453" width="0.1269%" height="15" fill="rgb(236,46,54)"/><text x="67.8896%" y="463.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (1 samples, 0.13%)</title><rect x="67.6396%" y="437" width="0.1269%" height="15" fill="rgb(245,213,5)"/><text x="67.8896%" y="447.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.13%)</title><rect x="67.7665%" y="453" width="0.1269%" height="15" fill="rgb(230,144,27)"/><text x="68.0165%" y="463.50"></text></g><g><title>&lt;twounordered::SecondVec&lt;T&gt; as twounordered::RetainMutUnordered&lt;T&gt;&gt;::truncate (1 samples, 0.13%)</title><rect x="68.0203%" y="437" width="0.1269%" height="15" fill="rgb(220,86,6)"/><text x="68.2703%" y="447.50"></text></g><g><title>twounordered::SecondVec&lt;T&gt;::truncate (1 samples, 0.13%)</title><rect x="68.0203%" y="421" width="0.1269%" height="15" fill="rgb(240,20,13)"/><text x="68.2703%" y="431.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.13%)</title><rect x="68.2741%" y="421" width="0.1269%" height="15" fill="rgb(217,89,34)"/><text x="68.5241%" y="431.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFn&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.13%)</title><rect x="68.2741%" y="405" width="0.1269%" height="15" fill="rgb(229,13,5)"/><text x="68.5241%" y="415.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut_par::{{closure}} (1 samples, 0.13%)</title><rect x="68.2741%" y="389" width="0.1269%" height="15" fill="rgb(244,67,35)"/><text x="68.5241%" y="399.50"></text></g><g><title>data_gen::colfind::float_vs_integer::handle_bench::{{closure}}::{{closure}} (1 samples, 0.13%)</title><rect x="68.2741%" y="373" width="0.1269%" height="15" fill="rgb(221,40,2)"/><text x="68.5241%" y="383.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (5 samples, 0.63%)</title><rect x="67.8934%" y="453" width="0.6345%" height="15" fill="rgb(237,157,21)"/><text x="68.1434%" y="463.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (3 samples, 0.38%)</title><rect x="68.1472%" y="437" width="0.3807%" height="15" fill="rgb(222,94,11)"/><text x="68.3972%" y="447.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.13%)</title><rect x="68.4010%" y="421" width="0.1269%" height="15" fill="rgb(249,113,6)"/><text x="68.6510%" y="431.50"></text></g><g><title>broccoli::query::colfind::inner::ColFindRecurser&lt;T,K,S&gt;::recurse_seq (496 samples, 62.94%)</title><rect x="5.9645%" y="501" width="62.9442%" height="15" fill="rgb(238,137,36)"/><text x="6.2145%" y="511.50">broccoli::query::colfind::inner::ColFindRecurser&lt;T,K,S&gt;::recurse_seq</text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (10 samples, 1.27%)</title><rect x="67.6396%" y="485" width="1.2690%" height="15" fill="rgb(210,102,26)"/><text x="67.8896%" y="495.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (10 samples, 1.27%)</title><rect x="67.6396%" y="469" width="1.2690%" height="15" fill="rgb(218,30,30)"/><text x="67.8896%" y="479.50"></text></g><g><title>twounordered::SecondVec&lt;T&gt;::push (3 samples, 0.38%)</title><rect x="68.5279%" y="453" width="0.3807%" height="15" fill="rgb(214,67,26)"/><text x="68.7779%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (3 samples, 0.38%)</title><rect x="68.5279%" y="437" width="0.3807%" height="15" fill="rgb(251,9,53)"/><text x="68.7779%" y="447.50"></text></g><g><title>core::ptr::write (1 samples, 0.13%)</title><rect x="68.7817%" y="421" width="0.1269%" height="15" fill="rgb(228,204,25)"/><text x="69.0317%" y="431.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (1 samples, 0.13%)</title><rect x="68.9086%" y="469" width="0.1269%" height="15" fill="rgb(207,153,8)"/><text x="69.1586%" y="479.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (1 samples, 0.13%)</title><rect x="68.9086%" y="453" width="0.1269%" height="15" fill="rgb(242,9,16)"/><text x="69.1586%" y="463.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (1 samples, 0.13%)</title><rect x="68.9086%" y="437" width="0.1269%" height="15" fill="rgb(217,211,10)"/><text x="69.1586%" y="447.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (1 samples, 0.13%)</title><rect x="68.9086%" y="421" width="0.1269%" height="15" fill="rgb(219,228,52)"/><text x="69.1586%" y="431.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.13%)</title><rect x="68.9086%" y="405" width="0.1269%" height="15" fill="rgb(231,92,29)"/><text x="69.1586%" y="415.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.13%)</title><rect x="68.9086%" y="389" width="0.1269%" height="15" fill="rgb(232,8,23)"/><text x="69.1586%" y="399.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (1 samples, 0.13%)</title><rect x="68.9086%" y="373" width="0.1269%" height="15" fill="rgb(216,211,34)"/><text x="69.1586%" y="383.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.13%)</title><rect x="68.9086%" y="357" width="0.1269%" height="15" fill="rgb(236,151,0)"/><text x="69.1586%" y="367.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (2 samples, 0.25%)</title><rect x="68.9086%" y="485" width="0.2538%" height="15" fill="rgb(209,168,3)"/><text x="69.1586%" y="495.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (1 samples, 0.13%)</title><rect x="69.0355%" y="469" width="0.1269%" height="15" fill="rgb(208,129,28)"/><text x="69.2855%" y="479.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (1 samples, 0.13%)</title><rect x="69.0355%" y="453" width="0.1269%" height="15" fill="rgb(229,78,22)"/><text x="69.2855%" y="463.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (1 samples, 0.13%)</title><rect x="69.0355%" y="437" width="0.1269%" height="15" fill="rgb(228,187,13)"/><text x="69.2855%" y="447.50"></text></g><g><title>twounordered::FirstVec&lt;T&gt;::push (1 samples, 0.13%)</title><rect x="69.1624%" y="421" width="0.1269%" height="15" fill="rgb(240,119,24)"/><text x="69.4124%" y="431.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.13%)</title><rect x="69.1624%" y="405" width="0.1269%" height="15" fill="rgb(209,194,42)"/><text x="69.4124%" y="415.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (2 samples, 0.25%)</title><rect x="69.1624%" y="469" width="0.2538%" height="15" fill="rgb(247,200,46)"/><text x="69.4124%" y="479.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (2 samples, 0.25%)</title><rect x="69.1624%" y="453" width="0.2538%" height="15" fill="rgb(218,76,16)"/><text x="69.4124%" y="463.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (2 samples, 0.25%)</title><rect x="69.1624%" y="437" width="0.2538%" height="15" fill="rgb(225,21,48)"/><text x="69.4124%" y="447.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (1 samples, 0.13%)</title><rect x="69.2893%" y="421" width="0.1269%" height="15" fill="rgb(239,223,50)"/><text x="69.5393%" y="431.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (1 samples, 0.13%)</title><rect x="69.2893%" y="405" width="0.1269%" height="15" fill="rgb(244,45,21)"/><text x="69.5393%" y="415.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.13%)</title><rect x="69.2893%" y="389" width="0.1269%" height="15" fill="rgb(232,33,43)"/><text x="69.5393%" y="399.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (2 samples, 0.25%)</title><rect x="69.6701%" y="405" width="0.2538%" height="15" fill="rgb(209,8,3)"/><text x="69.9201%" y="415.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (1 samples, 0.13%)</title><rect x="69.7970%" y="389" width="0.1269%" height="15" fill="rgb(214,25,53)"/><text x="70.0470%" y="399.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.13%)</title><rect x="69.7970%" y="373" width="0.1269%" height="15" fill="rgb(254,186,54)"/><text x="70.0470%" y="383.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (5 samples, 0.63%)</title><rect x="69.4162%" y="437" width="0.6345%" height="15" fill="rgb(208,174,49)"/><text x="69.6662%" y="447.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (5 samples, 0.63%)</title><rect x="69.4162%" y="421" width="0.6345%" height="15" fill="rgb(233,191,51)"/><text x="69.6662%" y="431.50"></text></g><g><title>twounordered::SecondVec&lt;T&gt;::push (1 samples, 0.13%)</title><rect x="69.9239%" y="405" width="0.1269%" height="15" fill="rgb(222,134,10)"/><text x="70.1739%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.13%)</title><rect x="69.9239%" y="389" width="0.1269%" height="15" fill="rgb(230,226,20)"/><text x="70.1739%" y="399.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (6 samples, 0.76%)</title><rect x="69.4162%" y="453" width="0.7614%" height="15" fill="rgb(251,111,25)"/><text x="69.6662%" y="463.50"></text></g><g><title>broccoli::query::tools::get_section_mut (1 samples, 0.13%)</title><rect x="70.0508%" y="437" width="0.1269%" height="15" fill="rgb(224,40,46)"/><text x="70.3008%" y="447.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::lt (1 samples, 0.13%)</title><rect x="70.3046%" y="389" width="0.1269%" height="15" fill="rgb(236,108,47)"/><text x="70.5546%" y="399.50"></text></g><g><title>&lt;twounordered::SecondVec&lt;T&gt; as twounordered::RetainMutUnordered&lt;T&gt;&gt;::truncate (1 samples, 0.13%)</title><rect x="70.4315%" y="373" width="0.1269%" height="15" fill="rgb(234,93,0)"/><text x="70.6815%" y="383.50"></text></g><g><title>twounordered::SecondVec&lt;T&gt;::truncate (1 samples, 0.13%)</title><rect x="70.4315%" y="357" width="0.1269%" height="15" fill="rgb(224,213,32)"/><text x="70.6815%" y="367.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (4 samples, 0.51%)</title><rect x="70.1777%" y="437" width="0.5076%" height="15" fill="rgb(251,11,48)"/><text x="70.4277%" y="447.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (4 samples, 0.51%)</title><rect x="70.1777%" y="421" width="0.5076%" height="15" fill="rgb(236,173,5)"/><text x="70.4277%" y="431.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (4 samples, 0.51%)</title><rect x="70.1777%" y="405" width="0.5076%" height="15" fill="rgb(230,95,12)"/><text x="70.4277%" y="415.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (2 samples, 0.25%)</title><rect x="70.4315%" y="389" width="0.2538%" height="15" fill="rgb(232,209,1)"/><text x="70.6815%" y="399.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (1 samples, 0.13%)</title><rect x="70.5584%" y="373" width="0.1269%" height="15" fill="rgb(232,6,1)"/><text x="70.8084%" y="383.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.13%)</title><rect x="70.5584%" y="357" width="0.1269%" height="15" fill="rgb(210,224,50)"/><text x="70.8084%" y="367.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.13%)</title><rect x="70.5584%" y="341" width="0.1269%" height="15" fill="rgb(228,127,35)"/><text x="70.8084%" y="351.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (1 samples, 0.13%)</title><rect x="70.5584%" y="325" width="0.1269%" height="15" fill="rgb(245,102,45)"/><text x="70.8084%" y="335.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.13%)</title><rect x="70.5584%" y="309" width="0.1269%" height="15" fill="rgb(214,1,49)"/><text x="70.8084%" y="319.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (1 samples, 0.13%)</title><rect x="70.6853%" y="437" width="0.1269%" height="15" fill="rgb(226,163,40)"/><text x="70.9353%" y="447.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (1 samples, 0.13%)</title><rect x="70.6853%" y="421" width="0.1269%" height="15" fill="rgb(239,212,28)"/><text x="70.9353%" y="431.50"></text></g><g><title>twounordered::FirstVec&lt;T&gt;::push (1 samples, 0.13%)</title><rect x="70.6853%" y="405" width="0.1269%" height="15" fill="rgb(220,20,13)"/><text x="70.9353%" y="415.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.13%)</title><rect x="70.6853%" y="389" width="0.1269%" height="15" fill="rgb(210,164,35)"/><text x="70.9353%" y="399.50"></text></g><g><title>core::ptr::swap (1 samples, 0.13%)</title><rect x="70.6853%" y="373" width="0.1269%" height="15" fill="rgb(248,109,41)"/><text x="70.9353%" y="383.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.13%)</title><rect x="70.6853%" y="357" width="0.1269%" height="15" fill="rgb(238,23,50)"/><text x="70.9353%" y="367.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (6 samples, 0.76%)</title><rect x="70.1777%" y="453" width="0.7614%" height="15" fill="rgb(211,48,49)"/><text x="70.4277%" y="463.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (1 samples, 0.13%)</title><rect x="70.8122%" y="437" width="0.1269%" height="15" fill="rgb(223,36,21)"/><text x="71.0622%" y="447.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (1 samples, 0.13%)</title><rect x="70.8122%" y="421" width="0.1269%" height="15" fill="rgb(207,123,46)"/><text x="71.0622%" y="431.50"></text></g><g><title>twounordered::SecondVec&lt;T&gt;::push (1 samples, 0.13%)</title><rect x="70.8122%" y="405" width="0.1269%" height="15" fill="rgb(240,218,32)"/><text x="71.0622%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.13%)</title><rect x="70.8122%" y="389" width="0.1269%" height="15" fill="rgb(252,5,43)"/><text x="71.0622%" y="399.50"></text></g><g><title>core::ptr::write (1 samples, 0.13%)</title><rect x="70.8122%" y="373" width="0.1269%" height="15" fill="rgb(252,84,19)"/><text x="71.0622%" y="383.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (2 samples, 0.25%)</title><rect x="70.9391%" y="421" width="0.2538%" height="15" fill="rgb(243,152,39)"/><text x="71.1891%" y="431.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (2 samples, 0.25%)</title><rect x="70.9391%" y="405" width="0.2538%" height="15" fill="rgb(234,160,15)"/><text x="71.1891%" y="415.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek::{{closure}} (2 samples, 0.25%)</title><rect x="70.9391%" y="389" width="0.2538%" height="15" fill="rgb(237,34,20)"/><text x="71.1891%" y="399.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.25%)</title><rect x="70.9391%" y="373" width="0.2538%" height="15" fill="rgb(229,97,13)"/><text x="71.1891%" y="383.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.25%)</title><rect x="70.9391%" y="357" width="0.2538%" height="15" fill="rgb(234,71,50)"/><text x="71.1891%" y="367.50"></text></g><g><title>twounordered::FirstVec&lt;T&gt;::push (1 samples, 0.13%)</title><rect x="71.1929%" y="421" width="0.1269%" height="15" fill="rgb(253,155,4)"/><text x="71.4429%" y="431.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.13%)</title><rect x="71.1929%" y="405" width="0.1269%" height="15" fill="rgb(222,185,37)"/><text x="71.4429%" y="415.50"></text></g><g><title>core::ptr::swap (1 samples, 0.13%)</title><rect x="71.1929%" y="389" width="0.1269%" height="15" fill="rgb(251,177,13)"/><text x="71.4429%" y="399.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.13%)</title><rect x="71.1929%" y="373" width="0.1269%" height="15" fill="rgb(250,179,40)"/><text x="71.4429%" y="383.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (17 samples, 2.16%)</title><rect x="69.4162%" y="469" width="2.1574%" height="15" fill="rgb(242,44,2)"/><text x="69.6662%" y="479.50">b..</text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (5 samples, 0.63%)</title><rect x="70.9391%" y="453" width="0.6345%" height="15" fill="rgb(216,177,13)"/><text x="71.1891%" y="463.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (5 samples, 0.63%)</title><rect x="70.9391%" y="437" width="0.6345%" height="15" fill="rgb(216,106,43)"/><text x="71.1891%" y="447.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (2 samples, 0.25%)</title><rect x="71.3198%" y="421" width="0.2538%" height="15" fill="rgb(216,183,2)"/><text x="71.5698%" y="431.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (2 samples, 0.25%)</title><rect x="71.3198%" y="405" width="0.2538%" height="15" fill="rgb(249,75,3)"/><text x="71.5698%" y="415.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (2 samples, 0.25%)</title><rect x="71.3198%" y="389" width="0.2538%" height="15" fill="rgb(219,67,39)"/><text x="71.5698%" y="399.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (2 samples, 0.25%)</title><rect x="71.3198%" y="373" width="0.2538%" height="15" fill="rgb(253,228,2)"/><text x="71.5698%" y="383.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (2 samples, 0.25%)</title><rect x="71.3198%" y="357" width="0.2538%" height="15" fill="rgb(235,138,27)"/><text x="71.5698%" y="367.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (2 samples, 0.25%)</title><rect x="71.3198%" y="341" width="0.2538%" height="15" fill="rgb(236,97,51)"/><text x="71.5698%" y="351.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.13%)</title><rect x="71.5736%" y="421" width="0.1269%" height="15" fill="rgb(240,80,30)"/><text x="71.8236%" y="431.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (2 samples, 0.25%)</title><rect x="71.5736%" y="437" width="0.2538%" height="15" fill="rgb(230,178,19)"/><text x="71.8236%" y="447.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (1 samples, 0.13%)</title><rect x="71.7005%" y="421" width="0.1269%" height="15" fill="rgb(210,190,27)"/><text x="71.9505%" y="431.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek::{{closure}} (1 samples, 0.13%)</title><rect x="71.7005%" y="405" width="0.1269%" height="15" fill="rgb(222,107,31)"/><text x="71.9505%" y="415.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.13%)</title><rect x="71.7005%" y="389" width="0.1269%" height="15" fill="rgb(216,127,34)"/><text x="71.9505%" y="399.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.13%)</title><rect x="71.7005%" y="373" width="0.1269%" height="15" fill="rgb(234,116,52)"/><text x="71.9505%" y="383.50"></text></g><g><title>twounordered::FirstVec&lt;T&gt;::push (4 samples, 0.51%)</title><rect x="71.8274%" y="437" width="0.5076%" height="15" fill="rgb(222,124,15)"/><text x="72.0774%" y="447.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (3 samples, 0.38%)</title><rect x="71.9543%" y="421" width="0.3807%" height="15" fill="rgb(231,179,28)"/><text x="72.2043%" y="431.50"></text></g><g><title>core::ptr::swap (3 samples, 0.38%)</title><rect x="71.9543%" y="405" width="0.3807%" height="15" fill="rgb(226,93,45)"/><text x="72.2043%" y="415.50"></text></g><g><title>core::intrinsics::copy (3 samples, 0.38%)</title><rect x="71.9543%" y="389" width="0.3807%" height="15" fill="rgb(215,8,51)"/><text x="72.2043%" y="399.50"></text></g><g><title>&lt;twounordered::SecondVec&lt;T&gt; as twounordered::RetainMutUnordered&lt;T&gt;&gt;::as_slice_mut (1 samples, 0.13%)</title><rect x="72.3350%" y="421" width="0.1269%" height="15" fill="rgb(223,106,5)"/><text x="72.5850%" y="431.50"></text></g><g><title>twounordered::SecondVec&lt;T&gt;::as_slice_mut (1 samples, 0.13%)</title><rect x="72.3350%" y="405" width="0.1269%" height="15" fill="rgb(250,191,5)"/><text x="72.5850%" y="415.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (10 samples, 1.27%)</title><rect x="71.5736%" y="469" width="1.2690%" height="15" fill="rgb(242,132,44)"/><text x="71.8236%" y="479.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (10 samples, 1.27%)</title><rect x="71.5736%" y="453" width="1.2690%" height="15" fill="rgb(251,152,29)"/><text x="71.8236%" y="463.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (4 samples, 0.51%)</title><rect x="72.3350%" y="437" width="0.5076%" height="15" fill="rgb(218,179,5)"/><text x="72.5850%" y="447.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (3 samples, 0.38%)</title><rect x="72.4619%" y="421" width="0.3807%" height="15" fill="rgb(227,67,19)"/><text x="72.7119%" y="431.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (2 samples, 0.25%)</title><rect x="72.5888%" y="405" width="0.2538%" height="15" fill="rgb(233,119,31)"/><text x="72.8388%" y="415.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (2 samples, 0.25%)</title><rect x="72.5888%" y="389" width="0.2538%" height="15" fill="rgb(241,120,22)"/><text x="72.8388%" y="399.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (2 samples, 0.25%)</title><rect x="72.5888%" y="373" width="0.2538%" height="15" fill="rgb(224,102,30)"/><text x="72.8388%" y="383.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (2 samples, 0.25%)</title><rect x="72.5888%" y="357" width="0.2538%" height="15" fill="rgb(210,164,37)"/><text x="72.8388%" y="367.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (30 samples, 3.81%)</title><rect x="69.1624%" y="485" width="3.8071%" height="15" fill="rgb(226,191,16)"/><text x="69.4124%" y="495.50">broc..</text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (1 samples, 0.13%)</title><rect x="72.8426%" y="469" width="0.1269%" height="15" fill="rgb(214,40,45)"/><text x="73.0926%" y="479.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (1 samples, 0.13%)</title><rect x="72.8426%" y="453" width="0.1269%" height="15" fill="rgb(244,29,26)"/><text x="73.0926%" y="463.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.13%)</title><rect x="72.9695%" y="405" width="0.1269%" height="15" fill="rgb(216,16,5)"/><text x="73.2195%" y="415.50"></text></g><g><title>twounordered::FirstVec&lt;T&gt;::push (2 samples, 0.25%)</title><rect x="72.9695%" y="453" width="0.2538%" height="15" fill="rgb(249,76,35)"/><text x="73.2195%" y="463.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (2 samples, 0.25%)</title><rect x="72.9695%" y="437" width="0.2538%" height="15" fill="rgb(207,11,44)"/><text x="73.2195%" y="447.50"></text></g><g><title>core::ptr::swap (2 samples, 0.25%)</title><rect x="72.9695%" y="421" width="0.2538%" height="15" fill="rgb(228,190,49)"/><text x="73.2195%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.13%)</title><rect x="73.0964%" y="405" width="0.1269%" height="15" fill="rgb(214,173,12)"/><text x="73.3464%" y="415.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.13%)</title><rect x="73.8579%" y="421" width="0.1269%" height="15" fill="rgb(218,26,35)"/><text x="74.1079%" y="431.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (7 samples, 0.89%)</title><rect x="73.2234%" y="453" width="0.8883%" height="15" fill="rgb(220,200,19)"/><text x="73.4734%" y="463.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (2 samples, 0.25%)</title><rect x="73.8579%" y="437" width="0.2538%" height="15" fill="rgb(239,95,49)"/><text x="74.1079%" y="447.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.13%)</title><rect x="73.9848%" y="421" width="0.1269%" height="15" fill="rgb(235,85,53)"/><text x="74.2348%" y="431.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (10 samples, 1.27%)</title><rect x="72.9695%" y="485" width="1.2690%" height="15" fill="rgb(233,133,31)"/><text x="73.2195%" y="495.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (10 samples, 1.27%)</title><rect x="72.9695%" y="469" width="1.2690%" height="15" fill="rgb(218,25,20)"/><text x="73.2195%" y="479.50"></text></g><g><title>twounordered::SecondVec&lt;T&gt;::push (1 samples, 0.13%)</title><rect x="74.1117%" y="453" width="0.1269%" height="15" fill="rgb(252,210,38)"/><text x="74.3617%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.13%)</title><rect x="74.1117%" y="437" width="0.1269%" height="15" fill="rgb(242,134,21)"/><text x="74.3617%" y="447.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (45 samples, 5.71%)</title><rect x="68.9086%" y="501" width="5.7107%" height="15" fill="rgb(213,28,48)"/><text x="69.1586%" y="511.50">broccol..</text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (3 samples, 0.38%)</title><rect x="74.2386%" y="485" width="0.3807%" height="15" fill="rgb(250,196,2)"/><text x="74.4886%" y="495.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (3 samples, 0.38%)</title><rect x="74.2386%" y="469" width="0.3807%" height="15" fill="rgb(227,5,17)"/><text x="74.4886%" y="479.50"></text></g><g><title>twounordered::SecondVec&lt;T&gt;::push (3 samples, 0.38%)</title><rect x="74.2386%" y="453" width="0.3807%" height="15" fill="rgb(221,226,24)"/><text x="74.4886%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (3 samples, 0.38%)</title><rect x="74.2386%" y="437" width="0.3807%" height="15" fill="rgb(211,5,48)"/><text x="74.4886%" y="447.50"></text></g><g><title>broccoli::query::colfind::oned::find_2d (2 samples, 0.25%)</title><rect x="74.6193%" y="501" width="0.2538%" height="15" fill="rgb(219,150,6)"/><text x="74.8693%" y="511.50"></text></g><g><title>broccoli::query::colfind::oned::find (2 samples, 0.25%)</title><rect x="74.6193%" y="485" width="0.2538%" height="15" fill="rgb(251,46,16)"/><text x="74.8693%" y="495.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (2 samples, 0.25%)</title><rect x="74.6193%" y="469" width="0.2538%" height="15" fill="rgb(220,204,40)"/><text x="74.8693%" y="479.50"></text></g><g><title>broccoli::query::colfind::oned::find::{{closure}} (1 samples, 0.13%)</title><rect x="74.7462%" y="453" width="0.1269%" height="15" fill="rgb(211,85,2)"/><text x="74.9962%" y="463.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (1 samples, 0.13%)</title><rect x="74.7462%" y="437" width="0.1269%" height="15" fill="rgb(229,17,7)"/><text x="74.9962%" y="447.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (2 samples, 0.25%)</title><rect x="74.8731%" y="501" width="0.2538%" height="15" fill="rgb(239,72,28)"/><text x="75.1231%" y="511.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (2 samples, 0.25%)</title><rect x="74.8731%" y="485" width="0.2538%" height="15" fill="rgb(230,47,54)"/><text x="75.1231%" y="495.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (2 samples, 0.25%)</title><rect x="74.8731%" y="469" width="0.2538%" height="15" fill="rgb(214,50,8)"/><text x="75.1231%" y="479.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (2 samples, 0.25%)</title><rect x="74.8731%" y="453" width="0.2538%" height="15" fill="rgb(216,198,43)"/><text x="75.1231%" y="463.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (2 samples, 0.25%)</title><rect x="74.8731%" y="437" width="0.2538%" height="15" fill="rgb(234,20,35)"/><text x="75.1231%" y="447.50"></text></g><g><title>broccoli::util::prevec::PreVecMut&lt;T&gt;::get_empty_vec_mut (1 samples, 0.13%)</title><rect x="75.1269%" y="469" width="0.1269%" height="15" fill="rgb(254,45,19)"/><text x="75.3769%" y="479.50"></text></g><g><title>twounordered::TwoUnorderedVecs&lt;T&gt;::clear (1 samples, 0.13%)</title><rect x="75.1269%" y="453" width="0.1269%" height="15" fill="rgb(219,14,44)"/><text x="75.3769%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::clear (1 samples, 0.13%)</title><rect x="75.1269%" y="437" width="0.1269%" height="15" fill="rgb(217,220,26)"/><text x="75.3769%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::truncate (1 samples, 0.13%)</title><rect x="75.1269%" y="421" width="0.1269%" height="15" fill="rgb(213,158,28)"/><text x="75.3769%" y="431.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut (552 samples, 70.05%)</title><rect x="5.3299%" y="549" width="70.0508%" height="15" fill="rgb(252,51,52)"/><text x="5.5799%" y="559.50">broccoli::query::Queries::find_colliding_pairs_mut</text></g><g><title>broccoli::query::colfind::QueryBuilder&lt;A,T&gt;::query_seq (552 samples, 70.05%)</title><rect x="5.3299%" y="533" width="70.0508%" height="15" fill="rgb(246,89,16)"/><text x="5.5799%" y="543.50">broccoli::query::colfind::QueryBuilder&lt;A,T&gt;::query_seq</text></g><g><title>broccoli::query::colfind::inner::ColFindRecurser&lt;T,K,S&gt;::recurse_seq (552 samples, 70.05%)</title><rect x="5.3299%" y="517" width="70.0508%" height="15" fill="rgb(216,158,49)"/><text x="5.5799%" y="527.50">broccoli::query::colfind::inner::ColFindRecurser&lt;T,K,S&gt;::recurse_seq</text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (2 samples, 0.25%)</title><rect x="75.1269%" y="501" width="0.2538%" height="15" fill="rgb(236,107,19)"/><text x="75.3769%" y="511.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (2 samples, 0.25%)</title><rect x="75.1269%" y="485" width="0.2538%" height="15" fill="rgb(228,185,30)"/><text x="75.3769%" y="495.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::lt (1 samples, 0.13%)</title><rect x="75.2538%" y="469" width="0.1269%" height="15" fill="rgb(246,134,8)"/><text x="75.5038%" y="479.50"></text></g><g><title>broccoli::tree::analyze::builder::NonLeafFinisher&lt;A,T&gt;::finish (1 samples, 0.13%)</title><rect x="75.3807%" y="485" width="0.1269%" height="15" fill="rgb(214,143,50)"/><text x="75.6307%" y="495.50"></text></g><g><title>&lt;broccoli::tree::analyze::DefaultSorter as broccoli::tree::analyze::Sorter&gt;::sort (1 samples, 0.13%)</title><rect x="75.3807%" y="469" width="0.1269%" height="15" fill="rgb(228,75,8)"/><text x="75.6307%" y="479.50"></text></g><g><title>broccoli::util::sweeper_update (1 samples, 0.13%)</title><rect x="75.3807%" y="453" width="0.1269%" height="15" fill="rgb(207,175,4)"/><text x="75.6307%" y="463.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by (1 samples, 0.13%)</title><rect x="75.3807%" y="437" width="0.1269%" height="15" fill="rgb(205,108,24)"/><text x="75.6307%" y="447.50"></text></g><g><title>core::slice::sort::quicksort (1 samples, 0.13%)</title><rect x="75.3807%" y="421" width="0.1269%" height="15" fill="rgb(244,120,49)"/><text x="75.6307%" y="431.50"></text></g><g><title>core::slice::sort::recurse (1 samples, 0.13%)</title><rect x="75.3807%" y="405" width="0.1269%" height="15" fill="rgb(223,47,38)"/><text x="75.6307%" y="415.50"></text></g><g><title>core::slice::sort::recurse (1 samples, 0.13%)</title><rect x="75.3807%" y="389" width="0.1269%" height="15" fill="rgb(229,179,11)"/><text x="75.6307%" y="399.50"></text></g><g><title>core::slice::sort::insertion_sort (1 samples, 0.13%)</title><rect x="75.3807%" y="373" width="0.1269%" height="15" fill="rgb(231,122,1)"/><text x="75.6307%" y="383.50"></text></g><g><title>core::slice::sort::shift_tail (1 samples, 0.13%)</title><rect x="75.3807%" y="357" width="0.1269%" height="15" fill="rgb(245,119,9)"/><text x="75.6307%" y="367.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by::{{closure}} (1 samples, 0.13%)</title><rect x="75.3807%" y="341" width="0.1269%" height="15" fill="rgb(241,163,25)"/><text x="75.6307%" y="351.50"></text></g><g><title>broccoli::util::sweeper_update::{{closure}} (1 samples, 0.13%)</title><rect x="75.3807%" y="325" width="0.1269%" height="15" fill="rgb(217,214,3)"/><text x="75.6307%" y="335.50"></text></g><g><title>broccoli::util::compare_bots (1 samples, 0.13%)</title><rect x="75.3807%" y="309" width="0.1269%" height="15" fill="rgb(240,86,28)"/><text x="75.6307%" y="319.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.13%)</title><rect x="75.3807%" y="293" width="0.1269%" height="15" fill="rgb(215,47,9)"/><text x="75.6307%" y="303.50"></text></g><g><title>axgeom::range::Range&lt;T&gt;::contains_ext (2 samples, 0.25%)</title><rect x="75.5076%" y="437" width="0.2538%" height="15" fill="rgb(252,25,45)"/><text x="75.7576%" y="447.50"></text></g><g><title>broccoli::tree::analyze::oned::bin_middle_left_right (5 samples, 0.63%)</title><rect x="75.5076%" y="453" width="0.6345%" height="15" fill="rgb(251,164,9)"/><text x="75.7576%" y="463.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (3 samples, 0.38%)</title><rect x="75.7614%" y="437" width="0.3807%" height="15" fill="rgb(233,194,0)"/><text x="76.0114%" y="447.50"></text></g><g><title>core::ptr::swap (3 samples, 0.38%)</title><rect x="75.7614%" y="421" width="0.3807%" height="15" fill="rgb(249,111,24)"/><text x="76.0114%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.38%)</title><rect x="75.7614%" y="405" width="0.3807%" height="15" fill="rgb(250,223,3)"/><text x="76.0114%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.51%)</title><rect x="76.5228%" y="373" width="0.5076%" height="15" fill="rgb(236,178,37)"/><text x="76.7728%" y="383.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.25%)</title><rect x="77.0305%" y="373" width="0.2538%" height="15" fill="rgb(241,158,50)"/><text x="77.2805%" y="383.50"></text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::create_non_leaf (15 samples, 1.90%)</title><rect x="75.5076%" y="485" width="1.9036%" height="15" fill="rgb(213,121,41)"/><text x="75.7576%" y="495.50">b..</text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf (15 samples, 1.90%)</title><rect x="75.5076%" y="469" width="1.9036%" height="15" fill="rgb(240,92,3)"/><text x="75.7576%" y="479.50">b..</text></g><g><title>pdqselect::select_by (10 samples, 1.27%)</title><rect x="76.1421%" y="453" width="1.2690%" height="15" fill="rgb(205,123,3)"/><text x="76.3921%" y="463.50"></text></g><g><title>pdqselect::quickselect (10 samples, 1.27%)</title><rect x="76.1421%" y="437" width="1.2690%" height="15" fill="rgb(205,97,47)"/><text x="76.3921%" y="447.50"></text></g><g><title>pdqselect::recurse (10 samples, 1.27%)</title><rect x="76.1421%" y="421" width="1.2690%" height="15" fill="rgb(247,152,14)"/><text x="76.3921%" y="431.50"></text></g><g><title>pdqselect::partition (10 samples, 1.27%)</title><rect x="76.1421%" y="405" width="1.2690%" height="15" fill="rgb(248,195,53)"/><text x="76.3921%" y="415.50"></text></g><g><title>pdqselect::partition_in_blocks (8 samples, 1.02%)</title><rect x="76.3959%" y="389" width="1.0152%" height="15" fill="rgb(226,201,16)"/><text x="76.6459%" y="399.50"></text></g><g><title>pdqselect::select_by::{{closure}} (1 samples, 0.13%)</title><rect x="77.2843%" y="373" width="0.1269%" height="15" fill="rgb(205,98,0)"/><text x="77.5343%" y="383.50"></text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf::{{closure}} (1 samples, 0.13%)</title><rect x="77.2843%" y="357" width="0.1269%" height="15" fill="rgb(214,191,48)"/><text x="77.5343%" y="367.50"></text></g><g><title>broccoli::util::compare_bots (1 samples, 0.13%)</title><rect x="77.2843%" y="341" width="0.1269%" height="15" fill="rgb(237,112,39)"/><text x="77.5343%" y="351.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.13%)</title><rect x="77.2843%" y="325" width="0.1269%" height="15" fill="rgb(247,203,27)"/><text x="77.5343%" y="335.50"></text></g><g><title>broccoli::tree::analyze::builder::NonLeafFinisher&lt;A,T&gt;::finish (1 samples, 0.13%)</title><rect x="77.4112%" y="469" width="0.1269%" height="15" fill="rgb(235,124,28)"/><text x="77.6612%" y="479.50"></text></g><g><title>&lt;broccoli::tree::analyze::DefaultSorter as broccoli::tree::analyze::Sorter&gt;::sort (1 samples, 0.13%)</title><rect x="77.4112%" y="453" width="0.1269%" height="15" fill="rgb(208,207,46)"/><text x="77.6612%" y="463.50"></text></g><g><title>broccoli::util::sweeper_update (1 samples, 0.13%)</title><rect x="77.4112%" y="437" width="0.1269%" height="15" fill="rgb(234,176,4)"/><text x="77.6612%" y="447.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by (1 samples, 0.13%)</title><rect x="77.4112%" y="421" width="0.1269%" height="15" fill="rgb(230,133,28)"/><text x="77.6612%" y="431.50"></text></g><g><title>core::slice::sort::quicksort (1 samples, 0.13%)</title><rect x="77.4112%" y="405" width="0.1269%" height="15" fill="rgb(211,137,40)"/><text x="77.6612%" y="415.50"></text></g><g><title>core::slice::sort::recurse (1 samples, 0.13%)</title><rect x="77.4112%" y="389" width="0.1269%" height="15" fill="rgb(254,35,13)"/><text x="77.6612%" y="399.50"></text></g><g><title>core::slice::sort::recurse (1 samples, 0.13%)</title><rect x="77.4112%" y="373" width="0.1269%" height="15" fill="rgb(225,49,51)"/><text x="77.6612%" y="383.50"></text></g><g><title>core::slice::sort::insertion_sort (1 samples, 0.13%)</title><rect x="77.4112%" y="357" width="0.1269%" height="15" fill="rgb(251,10,15)"/><text x="77.6612%" y="367.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.13%)</title><rect x="77.4112%" y="341" width="0.1269%" height="15" fill="rgb(228,207,15)"/><text x="77.6612%" y="351.50"></text></g><g><title>axgeom::range::Range&lt;T&gt;::contains_ext (1 samples, 0.13%)</title><rect x="77.5381%" y="421" width="0.1269%" height="15" fill="rgb(241,99,19)"/><text x="77.7881%" y="431.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.13%)</title><rect x="77.6650%" y="421" width="0.1269%" height="15" fill="rgb(207,104,49)"/><text x="77.9150%" y="431.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.13%)</title><rect x="77.6650%" y="405" width="0.1269%" height="15" fill="rgb(234,99,18)"/><text x="77.9150%" y="415.50"></text></g><g><title>broccoli::tree::analyze::oned::bin_middle_left_right (4 samples, 0.51%)</title><rect x="77.5381%" y="437" width="0.5076%" height="15" fill="rgb(213,191,49)"/><text x="77.7881%" y="447.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (2 samples, 0.25%)</title><rect x="77.7919%" y="421" width="0.2538%" height="15" fill="rgb(210,226,19)"/><text x="78.0419%" y="431.50"></text></g><g><title>core::ptr::swap (2 samples, 0.25%)</title><rect x="77.7919%" y="405" width="0.2538%" height="15" fill="rgb(229,97,18)"/><text x="78.0419%" y="415.50"></text></g><g><title>core::intrinsics::copy (2 samples, 0.25%)</title><rect x="77.7919%" y="389" width="0.2538%" height="15" fill="rgb(211,167,15)"/><text x="78.0419%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.25%)</title><rect x="78.0457%" y="357" width="0.2538%" height="15" fill="rgb(210,169,34)"/><text x="78.2957%" y="367.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.13%)</title><rect x="78.2995%" y="357" width="0.1269%" height="15" fill="rgb(241,121,31)"/><text x="78.5495%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (2 samples, 0.25%)</title><rect x="78.4264%" y="357" width="0.2538%" height="15" fill="rgb(232,40,11)"/><text x="78.6764%" y="367.50"></text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::create_non_leaf (13 samples, 1.65%)</title><rect x="77.5381%" y="469" width="1.6497%" height="15" fill="rgb(205,86,26)"/><text x="77.7881%" y="479.50"></text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf (13 samples, 1.65%)</title><rect x="77.5381%" y="453" width="1.6497%" height="15" fill="rgb(231,126,28)"/><text x="77.7881%" y="463.50"></text></g><g><title>pdqselect::select_by (9 samples, 1.14%)</title><rect x="78.0457%" y="437" width="1.1421%" height="15" fill="rgb(219,221,18)"/><text x="78.2957%" y="447.50"></text></g><g><title>pdqselect::quickselect (9 samples, 1.14%)</title><rect x="78.0457%" y="421" width="1.1421%" height="15" fill="rgb(211,40,0)"/><text x="78.2957%" y="431.50"></text></g><g><title>pdqselect::recurse (9 samples, 1.14%)</title><rect x="78.0457%" y="405" width="1.1421%" height="15" fill="rgb(239,85,43)"/><text x="78.2957%" y="415.50"></text></g><g><title>pdqselect::partition (9 samples, 1.14%)</title><rect x="78.0457%" y="389" width="1.1421%" height="15" fill="rgb(231,55,21)"/><text x="78.2957%" y="399.50"></text></g><g><title>pdqselect::partition_in_blocks (9 samples, 1.14%)</title><rect x="78.0457%" y="373" width="1.1421%" height="15" fill="rgb(225,184,43)"/><text x="78.2957%" y="383.50"></text></g><g><title>pdqselect::select_by::{{closure}} (4 samples, 0.51%)</title><rect x="78.6802%" y="357" width="0.5076%" height="15" fill="rgb(251,158,41)"/><text x="78.9302%" y="367.50"></text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf::{{closure}} (4 samples, 0.51%)</title><rect x="78.6802%" y="341" width="0.5076%" height="15" fill="rgb(234,159,37)"/><text x="78.9302%" y="351.50"></text></g><g><title>broccoli::util::compare_bots (4 samples, 0.51%)</title><rect x="78.6802%" y="325" width="0.5076%" height="15" fill="rgb(216,204,22)"/><text x="78.9302%" y="335.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (2 samples, 0.25%)</title><rect x="78.9340%" y="309" width="0.2538%" height="15" fill="rgb(214,17,3)"/><text x="79.1840%" y="319.50"></text></g><g><title>core::slice::sort::insertion_sort (1 samples, 0.13%)</title><rect x="79.1878%" y="341" width="0.1269%" height="15" fill="rgb(212,111,17)"/><text x="79.4378%" y="351.50"></text></g><g><title>core::slice::sort::shift_tail (1 samples, 0.13%)</title><rect x="79.1878%" y="325" width="0.1269%" height="15" fill="rgb(221,157,24)"/><text x="79.4378%" y="335.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by::{{closure}} (1 samples, 0.13%)</title><rect x="79.1878%" y="309" width="0.1269%" height="15" fill="rgb(252,16,13)"/><text x="79.4378%" y="319.50"></text></g><g><title>broccoli::util::sweeper_update::{{closure}} (1 samples, 0.13%)</title><rect x="79.1878%" y="293" width="0.1269%" height="15" fill="rgb(221,62,2)"/><text x="79.4378%" y="303.50"></text></g><g><title>broccoli::util::compare_bots (1 samples, 0.13%)</title><rect x="79.1878%" y="277" width="0.1269%" height="15" fill="rgb(247,87,22)"/><text x="79.4378%" y="287.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.13%)</title><rect x="79.1878%" y="261" width="0.1269%" height="15" fill="rgb(215,73,9)"/><text x="79.4378%" y="271.50"></text></g><g><title>broccoli::tree::analyze::builder::NonLeafFinisher&lt;A,T&gt;::finish (2 samples, 0.25%)</title><rect x="79.1878%" y="453" width="0.2538%" height="15" fill="rgb(207,175,33)"/><text x="79.4378%" y="463.50"></text></g><g><title>&lt;broccoli::tree::analyze::DefaultSorter as broccoli::tree::analyze::Sorter&gt;::sort (2 samples, 0.25%)</title><rect x="79.1878%" y="437" width="0.2538%" height="15" fill="rgb(243,129,54)"/><text x="79.4378%" y="447.50"></text></g><g><title>broccoli::util::sweeper_update (2 samples, 0.25%)</title><rect x="79.1878%" y="421" width="0.2538%" height="15" fill="rgb(227,119,45)"/><text x="79.4378%" y="431.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by (2 samples, 0.25%)</title><rect x="79.1878%" y="405" width="0.2538%" height="15" fill="rgb(205,109,36)"/><text x="79.4378%" y="415.50"></text></g><g><title>core::slice::sort::quicksort (2 samples, 0.25%)</title><rect x="79.1878%" y="389" width="0.2538%" height="15" fill="rgb(205,6,39)"/><text x="79.4378%" y="399.50"></text></g><g><title>core::slice::sort::recurse (2 samples, 0.25%)</title><rect x="79.1878%" y="373" width="0.2538%" height="15" fill="rgb(221,32,16)"/><text x="79.4378%" y="383.50"></text></g><g><title>core::slice::sort::recurse (2 samples, 0.25%)</title><rect x="79.1878%" y="357" width="0.2538%" height="15" fill="rgb(228,144,50)"/><text x="79.4378%" y="367.50"></text></g><g><title>core::slice::sort::partition (1 samples, 0.13%)</title><rect x="79.3147%" y="341" width="0.1269%" height="15" fill="rgb(229,201,53)"/><text x="79.5647%" y="351.50"></text></g><g><title>core::slice::sort::partition_in_blocks (1 samples, 0.13%)</title><rect x="79.3147%" y="325" width="0.1269%" height="15" fill="rgb(249,153,27)"/><text x="79.5647%" y="335.50"></text></g><g><title>axgeom::range::Range&lt;T&gt;::contains_ext (1 samples, 0.13%)</title><rect x="79.5685%" y="405" width="0.1269%" height="15" fill="rgb(227,106,25)"/><text x="79.8185%" y="415.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.13%)</title><rect x="79.6954%" y="405" width="0.1269%" height="15" fill="rgb(230,65,29)"/><text x="79.9454%" y="415.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.13%)</title><rect x="79.6954%" y="389" width="0.1269%" height="15" fill="rgb(221,57,46)"/><text x="79.9454%" y="399.50"></text></g><g><title>broccoli::tree::analyze::oned::bin_middle_left_right (5 samples, 0.63%)</title><rect x="79.4416%" y="421" width="0.6345%" height="15" fill="rgb(229,161,17)"/><text x="79.6916%" y="431.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (2 samples, 0.25%)</title><rect x="79.8223%" y="405" width="0.2538%" height="15" fill="rgb(222,213,11)"/><text x="80.0723%" y="415.50"></text></g><g><title>core::ptr::swap (2 samples, 0.25%)</title><rect x="79.8223%" y="389" width="0.2538%" height="15" fill="rgb(235,35,13)"/><text x="80.0723%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.25%)</title><rect x="79.8223%" y="373" width="0.2538%" height="15" fill="rgb(233,158,34)"/><text x="80.0723%" y="383.50"></text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::create_non_leaf (10 samples, 1.27%)</title><rect x="79.4416%" y="453" width="1.2690%" height="15" fill="rgb(215,151,48)"/><text x="79.6916%" y="463.50"></text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf (10 samples, 1.27%)</title><rect x="79.4416%" y="437" width="1.2690%" height="15" fill="rgb(229,84,14)"/><text x="79.6916%" y="447.50"></text></g><g><title>pdqselect::select_by (5 samples, 0.63%)</title><rect x="80.0761%" y="421" width="0.6345%" height="15" fill="rgb(229,68,14)"/><text x="80.3261%" y="431.50"></text></g><g><title>pdqselect::quickselect (5 samples, 0.63%)</title><rect x="80.0761%" y="405" width="0.6345%" height="15" fill="rgb(243,106,26)"/><text x="80.3261%" y="415.50"></text></g><g><title>pdqselect::recurse (5 samples, 0.63%)</title><rect x="80.0761%" y="389" width="0.6345%" height="15" fill="rgb(206,45,38)"/><text x="80.3261%" y="399.50"></text></g><g><title>pdqselect::partition (5 samples, 0.63%)</title><rect x="80.0761%" y="373" width="0.6345%" height="15" fill="rgb(226,6,15)"/><text x="80.3261%" y="383.50"></text></g><g><title>pdqselect::partition_in_blocks (5 samples, 0.63%)</title><rect x="80.0761%" y="357" width="0.6345%" height="15" fill="rgb(232,22,54)"/><text x="80.3261%" y="367.50"></text></g><g><title>pdqselect::select_by::{{closure}} (2 samples, 0.25%)</title><rect x="80.4569%" y="341" width="0.2538%" height="15" fill="rgb(229,222,32)"/><text x="80.7069%" y="351.50"></text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf::{{closure}} (2 samples, 0.25%)</title><rect x="80.4569%" y="325" width="0.2538%" height="15" fill="rgb(228,62,29)"/><text x="80.7069%" y="335.50"></text></g><g><title>broccoli::util::compare_bots (2 samples, 0.25%)</title><rect x="80.4569%" y="309" width="0.2538%" height="15" fill="rgb(251,103,34)"/><text x="80.7069%" y="319.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (2 samples, 0.25%)</title><rect x="80.4569%" y="293" width="0.2538%" height="15" fill="rgb(233,12,30)"/><text x="80.7069%" y="303.50"></text></g><g><title>axgeom::range::Range&lt;T&gt;::contains_ext (2 samples, 0.25%)</title><rect x="80.7107%" y="389" width="0.2538%" height="15" fill="rgb(238,52,0)"/><text x="80.9607%" y="399.50"></text></g><g><title>broccoli::tree::analyze::oned::bin_middle_left_right (3 samples, 0.38%)</title><rect x="80.7107%" y="405" width="0.3807%" height="15" fill="rgb(223,98,5)"/><text x="80.9607%" y="415.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.13%)</title><rect x="80.9645%" y="389" width="0.1269%" height="15" fill="rgb(228,75,37)"/><text x="81.2145%" y="399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.13%)</title><rect x="80.9645%" y="373" width="0.1269%" height="15" fill="rgb(205,115,49)"/><text x="81.2145%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.13%)</title><rect x="81.7259%" y="325" width="0.1269%" height="15" fill="rgb(250,154,43)"/><text x="81.9759%" y="335.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.13%)</title><rect x="81.8528%" y="325" width="0.1269%" height="15" fill="rgb(226,43,29)"/><text x="82.1028%" y="335.50"></text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::create_non_leaf (12 samples, 1.52%)</title><rect x="80.7107%" y="437" width="1.5228%" height="15" fill="rgb(249,228,39)"/><text x="80.9607%" y="447.50"></text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf (12 samples, 1.52%)</title><rect x="80.7107%" y="421" width="1.5228%" height="15" fill="rgb(216,79,43)"/><text x="80.9607%" y="431.50"></text></g><g><title>pdqselect::select_by (9 samples, 1.14%)</title><rect x="81.0914%" y="405" width="1.1421%" height="15" fill="rgb(228,95,12)"/><text x="81.3414%" y="415.50"></text></g><g><title>pdqselect::quickselect (9 samples, 1.14%)</title><rect x="81.0914%" y="389" width="1.1421%" height="15" fill="rgb(249,221,15)"/><text x="81.3414%" y="399.50"></text></g><g><title>pdqselect::recurse (9 samples, 1.14%)</title><rect x="81.0914%" y="373" width="1.1421%" height="15" fill="rgb(233,34,13)"/><text x="81.3414%" y="383.50"></text></g><g><title>pdqselect::partition (9 samples, 1.14%)</title><rect x="81.0914%" y="357" width="1.1421%" height="15" fill="rgb(214,103,39)"/><text x="81.3414%" y="367.50"></text></g><g><title>pdqselect::partition_in_blocks (8 samples, 1.02%)</title><rect x="81.2183%" y="341" width="1.0152%" height="15" fill="rgb(251,126,39)"/><text x="81.4683%" y="351.50"></text></g><g><title>pdqselect::select_by::{{closure}} (2 samples, 0.25%)</title><rect x="81.9797%" y="325" width="0.2538%" height="15" fill="rgb(214,216,36)"/><text x="82.2297%" y="335.50"></text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf::{{closure}} (2 samples, 0.25%)</title><rect x="81.9797%" y="309" width="0.2538%" height="15" fill="rgb(220,221,8)"/><text x="82.2297%" y="319.50"></text></g><g><title>broccoli::util::compare_bots (2 samples, 0.25%)</title><rect x="81.9797%" y="293" width="0.2538%" height="15" fill="rgb(240,216,3)"/><text x="82.2297%" y="303.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.13%)</title><rect x="82.1066%" y="277" width="0.1269%" height="15" fill="rgb(232,218,17)"/><text x="82.3566%" y="287.50"></text></g><g><title>core::slice::sort::choose_pivot (1 samples, 0.13%)</title><rect x="82.2335%" y="325" width="0.1269%" height="15" fill="rgb(229,163,45)"/><text x="82.4835%" y="335.50"></text></g><g><title>core::slice::sort::choose_pivot::{{closure}} (1 samples, 0.13%)</title><rect x="82.2335%" y="309" width="0.1269%" height="15" fill="rgb(231,110,42)"/><text x="82.4835%" y="319.50"></text></g><g><title>core::slice::sort::insertion_sort (1 samples, 0.13%)</title><rect x="82.3604%" y="325" width="0.1269%" height="15" fill="rgb(208,170,48)"/><text x="82.6104%" y="335.50"></text></g><g><title>core::slice::sort::shift_tail (1 samples, 0.13%)</title><rect x="82.3604%" y="309" width="0.1269%" height="15" fill="rgb(239,116,25)"/><text x="82.6104%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.13%)</title><rect x="82.3604%" y="293" width="0.1269%" height="15" fill="rgb(219,200,50)"/><text x="82.6104%" y="303.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by::{{closure}} (1 samples, 0.13%)</title><rect x="82.4873%" y="309" width="0.1269%" height="15" fill="rgb(245,200,0)"/><text x="82.7373%" y="319.50"></text></g><g><title>broccoli::util::sweeper_update::{{closure}} (1 samples, 0.13%)</title><rect x="82.4873%" y="293" width="0.1269%" height="15" fill="rgb(245,119,33)"/><text x="82.7373%" y="303.50"></text></g><g><title>broccoli::util::compare_bots (1 samples, 0.13%)</title><rect x="82.4873%" y="277" width="0.1269%" height="15" fill="rgb(231,125,12)"/><text x="82.7373%" y="287.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.13%)</title><rect x="82.6142%" y="309" width="0.1269%" height="15" fill="rgb(216,96,41)"/><text x="82.8642%" y="319.50"></text></g><g><title>core::ptr::swap (1 samples, 0.13%)</title><rect x="82.6142%" y="293" width="0.1269%" height="15" fill="rgb(248,43,45)"/><text x="82.8642%" y="303.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.13%)</title><rect x="82.6142%" y="277" width="0.1269%" height="15" fill="rgb(217,222,7)"/><text x="82.8642%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.13%)</title><rect x="82.7411%" y="293" width="0.1269%" height="15" fill="rgb(233,28,6)"/><text x="82.9911%" y="303.50"></text></g><g><title>core::slice::sort::partition (4 samples, 0.51%)</title><rect x="82.4873%" y="325" width="0.5076%" height="15" fill="rgb(231,218,15)"/><text x="82.7373%" y="335.50"></text></g><g><title>core::slice::sort::partition_in_blocks (2 samples, 0.25%)</title><rect x="82.7411%" y="309" width="0.2538%" height="15" fill="rgb(226,171,48)"/><text x="82.9911%" y="319.50"></text></g><g><title>core::ptr::swap (1 samples, 0.13%)</title><rect x="82.8680%" y="293" width="0.1269%" height="15" fill="rgb(235,201,9)"/><text x="83.1180%" y="303.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.13%)</title><rect x="82.8680%" y="277" width="0.1269%" height="15" fill="rgb(217,80,15)"/><text x="83.1180%" y="287.50"></text></g><g><title>broccoli::tree::analyze::builder::NonLeafFinisher&lt;A,T&gt;::finish (7 samples, 0.89%)</title><rect x="82.2335%" y="421" width="0.8883%" height="15" fill="rgb(219,152,8)"/><text x="82.4835%" y="431.50"></text></g><g><title>&lt;broccoli::tree::analyze::DefaultSorter as broccoli::tree::analyze::Sorter&gt;::sort (7 samples, 0.89%)</title><rect x="82.2335%" y="405" width="0.8883%" height="15" fill="rgb(243,107,38)"/><text x="82.4835%" y="415.50"></text></g><g><title>broccoli::util::sweeper_update (7 samples, 0.89%)</title><rect x="82.2335%" y="389" width="0.8883%" height="15" fill="rgb(231,17,5)"/><text x="82.4835%" y="399.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by (7 samples, 0.89%)</title><rect x="82.2335%" y="373" width="0.8883%" height="15" fill="rgb(209,25,54)"/><text x="82.4835%" y="383.50"></text></g><g><title>core::slice::sort::quicksort (7 samples, 0.89%)</title><rect x="82.2335%" y="357" width="0.8883%" height="15" fill="rgb(219,0,2)"/><text x="82.4835%" y="367.50"></text></g><g><title>core::slice::sort::recurse (7 samples, 0.89%)</title><rect x="82.2335%" y="341" width="0.8883%" height="15" fill="rgb(246,9,5)"/><text x="82.4835%" y="351.50"></text></g><g><title>core::slice::sort::recurse (1 samples, 0.13%)</title><rect x="82.9949%" y="325" width="0.1269%" height="15" fill="rgb(226,159,4)"/><text x="83.2449%" y="335.50"></text></g><g><title>core::slice::sort::recurse (1 samples, 0.13%)</title><rect x="82.9949%" y="309" width="0.1269%" height="15" fill="rgb(219,175,34)"/><text x="83.2449%" y="319.50"></text></g><g><title>core::slice::sort::insertion_sort (1 samples, 0.13%)</title><rect x="82.9949%" y="293" width="0.1269%" height="15" fill="rgb(236,10,46)"/><text x="83.2449%" y="303.50"></text></g><g><title>core::slice::sort::shift_tail (1 samples, 0.13%)</title><rect x="82.9949%" y="277" width="0.1269%" height="15" fill="rgb(240,211,16)"/><text x="83.2449%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.13%)</title><rect x="82.9949%" y="261" width="0.1269%" height="15" fill="rgb(205,3,43)"/><text x="83.2449%" y="271.50"></text></g><g><title>broccoli::tree::analyze::oned::bin_middle_left_right (3 samples, 0.38%)</title><rect x="83.1218%" y="389" width="0.3807%" height="15" fill="rgb(245,7,22)"/><text x="83.3718%" y="399.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (2 samples, 0.25%)</title><rect x="83.2487%" y="373" width="0.2538%" height="15" fill="rgb(239,132,32)"/><text x="83.4987%" y="383.50"></text></g><g><title>pdqselect::choose_pivot (2 samples, 0.25%)</title><rect x="83.5025%" y="341" width="0.2538%" height="15" fill="rgb(228,202,34)"/><text x="83.7525%" y="351.50"></text></g><g><title>pdqselect::choose_pivot::{{closure}} (2 samples, 0.25%)</title><rect x="83.5025%" y="325" width="0.2538%" height="15" fill="rgb(254,200,22)"/><text x="83.7525%" y="335.50"></text></g><g><title>pdqselect::choose_pivot::{{closure}} (2 samples, 0.25%)</title><rect x="83.5025%" y="309" width="0.2538%" height="15" fill="rgb(219,10,39)"/><text x="83.7525%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.13%)</title><rect x="84.2640%" y="309" width="0.1269%" height="15" fill="rgb(226,210,39)"/><text x="84.5140%" y="319.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.13%)</title><rect x="84.3909%" y="309" width="0.1269%" height="15" fill="rgb(208,219,16)"/><text x="84.6409%" y="319.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (2 samples, 0.25%)</title><rect x="84.5178%" y="309" width="0.2538%" height="15" fill="rgb(216,158,51)"/><text x="84.7678%" y="319.50"></text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::create_non_leaf (14 samples, 1.78%)</title><rect x="83.1218%" y="421" width="1.7766%" height="15" fill="rgb(233,14,44)"/><text x="83.3718%" y="431.50">b..</text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf (14 samples, 1.78%)</title><rect x="83.1218%" y="405" width="1.7766%" height="15" fill="rgb(237,97,39)"/><text x="83.3718%" y="415.50">b..</text></g><g><title>pdqselect::select_by (11 samples, 1.40%)</title><rect x="83.5025%" y="389" width="1.3959%" height="15" fill="rgb(218,198,43)"/><text x="83.7525%" y="399.50"></text></g><g><title>pdqselect::quickselect (11 samples, 1.40%)</title><rect x="83.5025%" y="373" width="1.3959%" height="15" fill="rgb(231,104,20)"/><text x="83.7525%" y="383.50"></text></g><g><title>pdqselect::recurse (11 samples, 1.40%)</title><rect x="83.5025%" y="357" width="1.3959%" height="15" fill="rgb(254,36,13)"/><text x="83.7525%" y="367.50"></text></g><g><title>pdqselect::partition (9 samples, 1.14%)</title><rect x="83.7563%" y="341" width="1.1421%" height="15" fill="rgb(248,14,50)"/><text x="84.0063%" y="351.50"></text></g><g><title>pdqselect::partition_in_blocks (7 samples, 0.89%)</title><rect x="84.0102%" y="325" width="0.8883%" height="15" fill="rgb(217,107,29)"/><text x="84.2602%" y="335.50"></text></g><g><title>pdqselect::select_by::{{closure}} (1 samples, 0.13%)</title><rect x="84.7716%" y="309" width="0.1269%" height="15" fill="rgb(251,169,33)"/><text x="85.0216%" y="319.50"></text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf::{{closure}} (1 samples, 0.13%)</title><rect x="84.7716%" y="293" width="0.1269%" height="15" fill="rgb(217,108,32)"/><text x="85.0216%" y="303.50"></text></g><g><title>broccoli::util::compare_bots (1 samples, 0.13%)</title><rect x="84.7716%" y="277" width="0.1269%" height="15" fill="rgb(219,66,42)"/><text x="85.0216%" y="287.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.13%)</title><rect x="84.7716%" y="261" width="0.1269%" height="15" fill="rgb(206,180,7)"/><text x="85.0216%" y="271.50"></text></g><g><title>core::slice::sort::partition (1 samples, 0.13%)</title><rect x="84.8985%" y="309" width="0.1269%" height="15" fill="rgb(208,226,31)"/><text x="85.1485%" y="319.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.13%)</title><rect x="85.0254%" y="277" width="0.1269%" height="15" fill="rgb(218,26,49)"/><text x="85.2754%" y="287.50"></text></g><g><title>broccoli::tree::analyze::builder::NonLeafFinisher&lt;A,T&gt;::finish (4 samples, 0.51%)</title><rect x="84.8985%" y="405" width="0.5076%" height="15" fill="rgb(233,197,48)"/><text x="85.1485%" y="415.50"></text></g><g><title>&lt;broccoli::tree::analyze::DefaultSorter as broccoli::tree::analyze::Sorter&gt;::sort (4 samples, 0.51%)</title><rect x="84.8985%" y="389" width="0.5076%" height="15" fill="rgb(252,181,51)"/><text x="85.1485%" y="399.50"></text></g><g><title>broccoli::util::sweeper_update (4 samples, 0.51%)</title><rect x="84.8985%" y="373" width="0.5076%" height="15" fill="rgb(253,90,19)"/><text x="85.1485%" y="383.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by (4 samples, 0.51%)</title><rect x="84.8985%" y="357" width="0.5076%" height="15" fill="rgb(215,171,30)"/><text x="85.1485%" y="367.50"></text></g><g><title>core::slice::sort::quicksort (4 samples, 0.51%)</title><rect x="84.8985%" y="341" width="0.5076%" height="15" fill="rgb(214,222,9)"/><text x="85.1485%" y="351.50"></text></g><g><title>core::slice::sort::recurse (4 samples, 0.51%)</title><rect x="84.8985%" y="325" width="0.5076%" height="15" fill="rgb(223,3,22)"/><text x="85.1485%" y="335.50"></text></g><g><title>core::slice::sort::recurse (3 samples, 0.38%)</title><rect x="85.0254%" y="309" width="0.3807%" height="15" fill="rgb(225,196,46)"/><text x="85.2754%" y="319.50"></text></g><g><title>core::slice::sort::insertion_sort (3 samples, 0.38%)</title><rect x="85.0254%" y="293" width="0.3807%" height="15" fill="rgb(209,110,37)"/><text x="85.2754%" y="303.50"></text></g><g><title>core::slice::sort::shift_tail (2 samples, 0.25%)</title><rect x="85.1523%" y="277" width="0.2538%" height="15" fill="rgb(249,89,12)"/><text x="85.4023%" y="287.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by::{{closure}} (1 samples, 0.13%)</title><rect x="85.2792%" y="261" width="0.1269%" height="15" fill="rgb(226,27,33)"/><text x="85.5292%" y="271.50"></text></g><g><title>broccoli::util::sweeper_update::{{closure}} (1 samples, 0.13%)</title><rect x="85.2792%" y="245" width="0.1269%" height="15" fill="rgb(213,82,22)"/><text x="85.5292%" y="255.50"></text></g><g><title>broccoli::util::compare_bots (1 samples, 0.13%)</title><rect x="85.2792%" y="229" width="0.1269%" height="15" fill="rgb(248,140,0)"/><text x="85.5292%" y="239.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.13%)</title><rect x="85.2792%" y="213" width="0.1269%" height="15" fill="rgb(228,106,3)"/><text x="85.5292%" y="223.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.13%)</title><rect x="85.4061%" y="357" width="0.1269%" height="15" fill="rgb(209,23,37)"/><text x="85.6561%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.13%)</title><rect x="85.4061%" y="341" width="0.1269%" height="15" fill="rgb(241,93,50)"/><text x="85.6561%" y="351.50"></text></g><g><title>broccoli::tree::analyze::oned::bin_middle_left_right (2 samples, 0.25%)</title><rect x="85.4061%" y="373" width="0.2538%" height="15" fill="rgb(253,46,43)"/><text x="85.6561%" y="383.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.13%)</title><rect x="85.5330%" y="357" width="0.1269%" height="15" fill="rgb(226,206,43)"/><text x="85.7830%" y="367.50"></text></g><g><title>core::ptr::swap (1 samples, 0.13%)</title><rect x="85.5330%" y="341" width="0.1269%" height="15" fill="rgb(217,54,7)"/><text x="85.7830%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.13%)</title><rect x="85.5330%" y="325" width="0.1269%" height="15" fill="rgb(223,5,52)"/><text x="85.7830%" y="335.50"></text></g><g><title>pdqselect::partial_insertion_sort (1 samples, 0.13%)</title><rect x="85.6599%" y="325" width="0.1269%" height="15" fill="rgb(206,52,46)"/><text x="85.9099%" y="335.50"></text></g><g><title>pdqselect::shift_head (1 samples, 0.13%)</title><rect x="85.6599%" y="309" width="0.1269%" height="15" fill="rgb(253,136,11)"/><text x="85.9099%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.13%)</title><rect x="85.6599%" y="293" width="0.1269%" height="15" fill="rgb(208,106,33)"/><text x="85.9099%" y="303.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.13%)</title><rect x="85.7868%" y="293" width="0.1269%" height="15" fill="rgb(206,54,4)"/><text x="86.0368%" y="303.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.13%)</title><rect x="85.9137%" y="293" width="0.1269%" height="15" fill="rgb(213,3,15)"/><text x="86.1637%" y="303.50"></text></g><g><title>core::ptr::read (1 samples, 0.13%)</title><rect x="86.0406%" y="293" width="0.1269%" height="15" fill="rgb(252,211,39)"/><text x="86.2906%" y="303.50"></text></g><g><title>core::ptr::swap (1 samples, 0.13%)</title><rect x="86.1675%" y="293" width="0.1269%" height="15" fill="rgb(223,6,36)"/><text x="86.4175%" y="303.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.13%)</title><rect x="86.1675%" y="277" width="0.1269%" height="15" fill="rgb(252,169,45)"/><text x="86.4175%" y="287.50"></text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::create_non_leaf (8 samples, 1.02%)</title><rect x="85.4061%" y="405" width="1.0152%" height="15" fill="rgb(212,48,26)"/><text x="85.6561%" y="415.50"></text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf (8 samples, 1.02%)</title><rect x="85.4061%" y="389" width="1.0152%" height="15" fill="rgb(251,102,48)"/><text x="85.6561%" y="399.50"></text></g><g><title>pdqselect::select_by (6 samples, 0.76%)</title><rect x="85.6599%" y="373" width="0.7614%" height="15" fill="rgb(243,208,16)"/><text x="85.9099%" y="383.50"></text></g><g><title>pdqselect::quickselect (6 samples, 0.76%)</title><rect x="85.6599%" y="357" width="0.7614%" height="15" fill="rgb(219,96,24)"/><text x="85.9099%" y="367.50"></text></g><g><title>pdqselect::recurse (6 samples, 0.76%)</title><rect x="85.6599%" y="341" width="0.7614%" height="15" fill="rgb(219,33,29)"/><text x="85.9099%" y="351.50"></text></g><g><title>pdqselect::partition (5 samples, 0.63%)</title><rect x="85.7868%" y="325" width="0.6345%" height="15" fill="rgb(223,176,5)"/><text x="86.0368%" y="335.50"></text></g><g><title>pdqselect::partition_in_blocks (5 samples, 0.63%)</title><rect x="85.7868%" y="309" width="0.6345%" height="15" fill="rgb(228,140,14)"/><text x="86.0368%" y="319.50"></text></g><g><title>pdqselect::select_by::{{closure}} (1 samples, 0.13%)</title><rect x="86.2944%" y="293" width="0.1269%" height="15" fill="rgb(217,179,31)"/><text x="86.5444%" y="303.50"></text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf::{{closure}} (1 samples, 0.13%)</title><rect x="86.2944%" y="277" width="0.1269%" height="15" fill="rgb(230,9,30)"/><text x="86.5444%" y="287.50"></text></g><g><title>broccoli::util::compare_bots (1 samples, 0.13%)</title><rect x="86.2944%" y="261" width="0.1269%" height="15" fill="rgb(230,136,20)"/><text x="86.5444%" y="271.50"></text></g><g><title>core::slice::sort::choose_pivot (1 samples, 0.13%)</title><rect x="86.4213%" y="293" width="0.1269%" height="15" fill="rgb(215,210,22)"/><text x="86.6713%" y="303.50"></text></g><g><title>core::slice::sort::choose_pivot::{{closure}} (1 samples, 0.13%)</title><rect x="86.4213%" y="277" width="0.1269%" height="15" fill="rgb(218,43,5)"/><text x="86.6713%" y="287.50"></text></g><g><title>core::slice::sort::choose_pivot::{{closure}} (1 samples, 0.13%)</title><rect x="86.4213%" y="261" width="0.1269%" height="15" fill="rgb(216,11,5)"/><text x="86.6713%" y="271.50"></text></g><g><title>core::slice::sort::choose_pivot::{{closure}} (1 samples, 0.13%)</title><rect x="86.4213%" y="245" width="0.1269%" height="15" fill="rgb(209,82,29)"/><text x="86.6713%" y="255.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="86.5482%" y="261" width="0.1269%" height="15" fill="rgb(244,115,12)"/><text x="86.7982%" y="271.50"></text></g><g><title>&lt;core::slice::sort::CopyOnDrop&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.13%)</title><rect x="86.5482%" y="245" width="0.1269%" height="15" fill="rgb(222,82,18)"/><text x="86.7982%" y="255.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.13%)</title><rect x="86.5482%" y="229" width="0.1269%" height="15" fill="rgb(249,227,8)"/><text x="86.7982%" y="239.50"></text></g><g><title>core::slice::sort::insertion_sort (2 samples, 0.25%)</title><rect x="86.5482%" y="293" width="0.2538%" height="15" fill="rgb(253,141,45)"/><text x="86.7982%" y="303.50"></text></g><g><title>core::slice::sort::shift_tail (2 samples, 0.25%)</title><rect x="86.5482%" y="277" width="0.2538%" height="15" fill="rgb(234,184,4)"/><text x="86.7982%" y="287.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by::{{closure}} (1 samples, 0.13%)</title><rect x="86.6751%" y="261" width="0.1269%" height="15" fill="rgb(218,194,23)"/><text x="86.9251%" y="271.50"></text></g><g><title>broccoli::util::sweeper_update::{{closure}} (1 samples, 0.13%)</title><rect x="86.6751%" y="245" width="0.1269%" height="15" fill="rgb(235,66,41)"/><text x="86.9251%" y="255.50"></text></g><g><title>broccoli::util::compare_bots (1 samples, 0.13%)</title><rect x="86.6751%" y="229" width="0.1269%" height="15" fill="rgb(245,217,1)"/><text x="86.9251%" y="239.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.13%)</title><rect x="86.6751%" y="213" width="0.1269%" height="15" fill="rgb(229,91,1)"/><text x="86.9251%" y="223.50"></text></g><g><title>broccoli::tree::analyze::builder::NonLeafFinisher&lt;A,T&gt;::finish (4 samples, 0.51%)</title><rect x="86.4213%" y="389" width="0.5076%" height="15" fill="rgb(207,101,30)"/><text x="86.6713%" y="399.50"></text></g><g><title>&lt;broccoli::tree::analyze::DefaultSorter as broccoli::tree::analyze::Sorter&gt;::sort (4 samples, 0.51%)</title><rect x="86.4213%" y="373" width="0.5076%" height="15" fill="rgb(223,82,49)"/><text x="86.6713%" y="383.50"></text></g><g><title>broccoli::util::sweeper_update (4 samples, 0.51%)</title><rect x="86.4213%" y="357" width="0.5076%" height="15" fill="rgb(218,167,17)"/><text x="86.6713%" y="367.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by (4 samples, 0.51%)</title><rect x="86.4213%" y="341" width="0.5076%" height="15" fill="rgb(208,103,14)"/><text x="86.6713%" y="351.50"></text></g><g><title>core::slice::sort::quicksort (4 samples, 0.51%)</title><rect x="86.4213%" y="325" width="0.5076%" height="15" fill="rgb(238,20,8)"/><text x="86.6713%" y="335.50"></text></g><g><title>core::slice::sort::recurse (4 samples, 0.51%)</title><rect x="86.4213%" y="309" width="0.5076%" height="15" fill="rgb(218,80,54)"/><text x="86.6713%" y="319.50"></text></g><g><title>core::slice::sort::recurse (1 samples, 0.13%)</title><rect x="86.8020%" y="293" width="0.1269%" height="15" fill="rgb(240,144,17)"/><text x="87.0520%" y="303.50"></text></g><g><title>core::slice::sort::insertion_sort (1 samples, 0.13%)</title><rect x="86.8020%" y="277" width="0.1269%" height="15" fill="rgb(245,27,50)"/><text x="87.0520%" y="287.50"></text></g><g><title>core::slice::sort::shift_tail (1 samples, 0.13%)</title><rect x="86.8020%" y="261" width="0.1269%" height="15" fill="rgb(251,51,7)"/><text x="87.0520%" y="271.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by::{{closure}} (1 samples, 0.13%)</title><rect x="86.8020%" y="245" width="0.1269%" height="15" fill="rgb(245,217,29)"/><text x="87.0520%" y="255.50"></text></g><g><title>broccoli::util::sweeper_update::{{closure}} (1 samples, 0.13%)</title><rect x="86.8020%" y="229" width="0.1269%" height="15" fill="rgb(221,176,29)"/><text x="87.0520%" y="239.50"></text></g><g><title>broccoli::util::compare_bots (1 samples, 0.13%)</title><rect x="86.8020%" y="213" width="0.1269%" height="15" fill="rgb(212,180,24)"/><text x="87.0520%" y="223.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.13%)</title><rect x="86.8020%" y="197" width="0.1269%" height="15" fill="rgb(254,24,2)"/><text x="87.0520%" y="207.50"></text></g><g><title>axgeom::range::Range&lt;T&gt;::contains_ext (3 samples, 0.38%)</title><rect x="86.9289%" y="341" width="0.3807%" height="15" fill="rgb(230,100,2)"/><text x="87.1789%" y="351.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::lt (2 samples, 0.25%)</title><rect x="87.0558%" y="325" width="0.2538%" height="15" fill="rgb(219,142,25)"/><text x="87.3058%" y="335.50"></text></g><g><title>broccoli::tree::analyze::oned::bin_middle_left_right (5 samples, 0.63%)</title><rect x="86.9289%" y="357" width="0.6345%" height="15" fill="rgb(240,73,43)"/><text x="87.1789%" y="367.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (2 samples, 0.25%)</title><rect x="87.3096%" y="341" width="0.2538%" height="15" fill="rgb(214,114,15)"/><text x="87.5596%" y="351.50"></text></g><g><title>core::ptr::swap (2 samples, 0.25%)</title><rect x="87.3096%" y="325" width="0.2538%" height="15" fill="rgb(207,130,4)"/><text x="87.5596%" y="335.50"></text></g><g><title>core::intrinsics::copy (2 samples, 0.25%)</title><rect x="87.3096%" y="309" width="0.2538%" height="15" fill="rgb(221,25,40)"/><text x="87.5596%" y="319.50"></text></g><g><title>pdqselect::choose_pivot (2 samples, 0.25%)</title><rect x="87.5635%" y="309" width="0.2538%" height="15" fill="rgb(241,184,7)"/><text x="87.8135%" y="319.50"></text></g><g><title>pdqselect::choose_pivot::{{closure}} (1 samples, 0.13%)</title><rect x="87.6904%" y="293" width="0.1269%" height="15" fill="rgb(235,159,4)"/><text x="87.9404%" y="303.50"></text></g><g><title>pdqselect::choose_pivot::{{closure}} (1 samples, 0.13%)</title><rect x="87.6904%" y="277" width="0.1269%" height="15" fill="rgb(214,87,48)"/><text x="87.9404%" y="287.50"></text></g><g><title>pdqselect::choose_pivot::{{closure}} (1 samples, 0.13%)</title><rect x="87.6904%" y="261" width="0.1269%" height="15" fill="rgb(246,198,24)"/><text x="87.9404%" y="271.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1 samples, 0.13%)</title><rect x="87.8173%" y="293" width="0.1269%" height="15" fill="rgb(209,66,40)"/><text x="88.0673%" y="303.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.13%)</title><rect x="87.8173%" y="277" width="0.1269%" height="15" fill="rgb(233,147,39)"/><text x="88.0673%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.38%)</title><rect x="87.9442%" y="277" width="0.3807%" height="15" fill="rgb(231,145,52)"/><text x="88.1942%" y="287.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (2 samples, 0.25%)</title><rect x="88.3249%" y="277" width="0.2538%" height="15" fill="rgb(206,20,26)"/><text x="88.5749%" y="287.50"></text></g><g><title>pdqselect::partition_in_blocks::width (1 samples, 0.13%)</title><rect x="88.5787%" y="277" width="0.1269%" height="15" fill="rgb(238,220,4)"/><text x="88.8287%" y="287.50"></text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::create_non_leaf (16 samples, 2.03%)</title><rect x="86.9289%" y="389" width="2.0305%" height="15" fill="rgb(252,195,42)"/><text x="87.1789%" y="399.50">b..</text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf (16 samples, 2.03%)</title><rect x="86.9289%" y="373" width="2.0305%" height="15" fill="rgb(209,10,6)"/><text x="87.1789%" y="383.50">b..</text></g><g><title>pdqselect::select_by (11 samples, 1.40%)</title><rect x="87.5635%" y="357" width="1.3959%" height="15" fill="rgb(229,3,52)"/><text x="87.8135%" y="367.50"></text></g><g><title>pdqselect::quickselect (11 samples, 1.40%)</title><rect x="87.5635%" y="341" width="1.3959%" height="15" fill="rgb(253,49,37)"/><text x="87.8135%" y="351.50"></text></g><g><title>pdqselect::recurse (11 samples, 1.40%)</title><rect x="87.5635%" y="325" width="1.3959%" height="15" fill="rgb(240,103,49)"/><text x="87.8135%" y="335.50"></text></g><g><title>pdqselect::partition (9 samples, 1.14%)</title><rect x="87.8173%" y="309" width="1.1421%" height="15" fill="rgb(250,182,30)"/><text x="88.0673%" y="319.50"></text></g><g><title>pdqselect::partition_in_blocks (8 samples, 1.02%)</title><rect x="87.9442%" y="293" width="1.0152%" height="15" fill="rgb(248,8,30)"/><text x="88.1942%" y="303.50"></text></g><g><title>pdqselect::select_by::{{closure}} (2 samples, 0.25%)</title><rect x="88.7056%" y="277" width="0.2538%" height="15" fill="rgb(237,120,30)"/><text x="88.9556%" y="287.50"></text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf::{{closure}} (2 samples, 0.25%)</title><rect x="88.7056%" y="261" width="0.2538%" height="15" fill="rgb(221,146,34)"/><text x="88.9556%" y="271.50"></text></g><g><title>broccoli::util::compare_bots (2 samples, 0.25%)</title><rect x="88.7056%" y="245" width="0.2538%" height="15" fill="rgb(242,55,13)"/><text x="88.9556%" y="255.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (2 samples, 0.25%)</title><rect x="88.7056%" y="229" width="0.2538%" height="15" fill="rgb(242,112,31)"/><text x="88.9556%" y="239.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.13%)</title><rect x="89.0863%" y="245" width="0.1269%" height="15" fill="rgb(249,192,27)"/><text x="89.3363%" y="255.50"></text></g><g><title>core::slice::sort::insertion_sort (3 samples, 0.38%)</title><rect x="88.9594%" y="277" width="0.3807%" height="15" fill="rgb(208,204,44)"/><text x="89.2094%" y="287.50"></text></g><g><title>core::slice::sort::shift_tail (3 samples, 0.38%)</title><rect x="88.9594%" y="261" width="0.3807%" height="15" fill="rgb(208,93,54)"/><text x="89.2094%" y="271.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="89.2132%" y="245" width="0.1269%" height="15" fill="rgb(242,1,31)"/><text x="89.4632%" y="255.50"></text></g><g><title>&lt;core::slice::sort::CopyOnDrop&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.13%)</title><rect x="89.2132%" y="229" width="0.1269%" height="15" fill="rgb(241,83,25)"/><text x="89.4632%" y="239.50"></text></g><g><title>broccoli::tree::analyze::builder::NonLeafFinisher&lt;A,T&gt;::finish (4 samples, 0.51%)</title><rect x="88.9594%" y="373" width="0.5076%" height="15" fill="rgb(205,169,50)"/><text x="89.2094%" y="383.50"></text></g><g><title>&lt;broccoli::tree::analyze::DefaultSorter as broccoli::tree::analyze::Sorter&gt;::sort (4 samples, 0.51%)</title><rect x="88.9594%" y="357" width="0.5076%" height="15" fill="rgb(239,186,37)"/><text x="89.2094%" y="367.50"></text></g><g><title>broccoli::util::sweeper_update (4 samples, 0.51%)</title><rect x="88.9594%" y="341" width="0.5076%" height="15" fill="rgb(205,221,10)"/><text x="89.2094%" y="351.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by (4 samples, 0.51%)</title><rect x="88.9594%" y="325" width="0.5076%" height="15" fill="rgb(218,196,15)"/><text x="89.2094%" y="335.50"></text></g><g><title>core::slice::sort::quicksort (4 samples, 0.51%)</title><rect x="88.9594%" y="309" width="0.5076%" height="15" fill="rgb(218,196,35)"/><text x="89.2094%" y="319.50"></text></g><g><title>core::slice::sort::recurse (4 samples, 0.51%)</title><rect x="88.9594%" y="293" width="0.5076%" height="15" fill="rgb(233,63,24)"/><text x="89.2094%" y="303.50"></text></g><g><title>core::slice::sort::recurse (1 samples, 0.13%)</title><rect x="89.3401%" y="277" width="0.1269%" height="15" fill="rgb(225,8,4)"/><text x="89.5901%" y="287.50"></text></g><g><title>core::slice::sort::insertion_sort (1 samples, 0.13%)</title><rect x="89.3401%" y="261" width="0.1269%" height="15" fill="rgb(234,105,35)"/><text x="89.5901%" y="271.50"></text></g><g><title>core::slice::sort::shift_tail (1 samples, 0.13%)</title><rect x="89.3401%" y="245" width="0.1269%" height="15" fill="rgb(236,21,32)"/><text x="89.5901%" y="255.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by::{{closure}} (1 samples, 0.13%)</title><rect x="89.3401%" y="229" width="0.1269%" height="15" fill="rgb(228,109,6)"/><text x="89.5901%" y="239.50"></text></g><g><title>broccoli::util::sweeper_update::{{closure}} (1 samples, 0.13%)</title><rect x="89.3401%" y="213" width="0.1269%" height="15" fill="rgb(229,215,31)"/><text x="89.5901%" y="223.50"></text></g><g><title>broccoli::util::compare_bots (1 samples, 0.13%)</title><rect x="89.3401%" y="197" width="0.1269%" height="15" fill="rgb(221,52,54)"/><text x="89.5901%" y="207.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.13%)</title><rect x="89.3401%" y="181" width="0.1269%" height="15" fill="rgb(252,129,43)"/><text x="89.5901%" y="191.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.13%)</title><rect x="89.5939%" y="293" width="0.1269%" height="15" fill="rgb(248,183,27)"/><text x="89.8439%" y="303.50"></text></g><g><title>broccoli::tree::analyze::oned::bin_middle_left_right (3 samples, 0.38%)</title><rect x="89.4670%" y="341" width="0.3807%" height="15" fill="rgb(250,0,22)"/><text x="89.7170%" y="351.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (2 samples, 0.25%)</title><rect x="89.5939%" y="325" width="0.2538%" height="15" fill="rgb(213,166,10)"/><text x="89.8439%" y="335.50"></text></g><g><title>core::ptr::swap (2 samples, 0.25%)</title><rect x="89.5939%" y="309" width="0.2538%" height="15" fill="rgb(207,163,36)"/><text x="89.8439%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.13%)</title><rect x="89.7208%" y="293" width="0.1269%" height="15" fill="rgb(208,122,22)"/><text x="89.9708%" y="303.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.13%)</title><rect x="89.9746%" y="277" width="0.1269%" height="15" fill="rgb(207,104,49)"/><text x="90.2246%" y="287.50"></text></g><g><title>core::ptr::swap (1 samples, 0.13%)</title><rect x="89.9746%" y="261" width="0.1269%" height="15" fill="rgb(248,211,50)"/><text x="90.2246%" y="271.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.13%)</title><rect x="89.9746%" y="245" width="0.1269%" height="15" fill="rgb(217,13,45)"/><text x="90.2246%" y="255.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.13%)</title><rect x="90.2284%" y="261" width="0.1269%" height="15" fill="rgb(211,216,49)"/><text x="90.4784%" y="271.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.13%)</title><rect x="90.3553%" y="261" width="0.1269%" height="15" fill="rgb(221,58,53)"/><text x="90.6053%" y="271.50"></text></g><g><title>core::ptr::swap (3 samples, 0.38%)</title><rect x="90.4822%" y="261" width="0.3807%" height="15" fill="rgb(220,112,41)"/><text x="90.7322%" y="271.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.38%)</title><rect x="90.4822%" y="245" width="0.3807%" height="15" fill="rgb(236,38,28)"/><text x="90.7322%" y="255.50"></text></g><g><title>pdqselect::partition_in_blocks (7 samples, 0.89%)</title><rect x="90.1015%" y="277" width="0.8883%" height="15" fill="rgb(227,195,22)"/><text x="90.3515%" y="287.50"></text></g><g><title>pdqselect::select_by::{{closure}} (1 samples, 0.13%)</title><rect x="90.8629%" y="261" width="0.1269%" height="15" fill="rgb(214,55,33)"/><text x="91.1129%" y="271.50"></text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf::{{closure}} (1 samples, 0.13%)</title><rect x="90.8629%" y="245" width="0.1269%" height="15" fill="rgb(248,80,13)"/><text x="91.1129%" y="255.50"></text></g><g><title>broccoli::util::compare_bots (1 samples, 0.13%)</title><rect x="90.8629%" y="229" width="0.1269%" height="15" fill="rgb(238,52,6)"/><text x="91.1129%" y="239.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.13%)</title><rect x="90.8629%" y="213" width="0.1269%" height="15" fill="rgb(224,198,47)"/><text x="91.1129%" y="223.50"></text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::create_non_leaf (13 samples, 1.65%)</title><rect x="89.4670%" y="373" width="1.6497%" height="15" fill="rgb(233,171,20)"/><text x="89.7170%" y="383.50"></text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf (13 samples, 1.65%)</title><rect x="89.4670%" y="357" width="1.6497%" height="15" fill="rgb(241,30,25)"/><text x="89.7170%" y="367.50"></text></g><g><title>pdqselect::select_by (10 samples, 1.27%)</title><rect x="89.8477%" y="341" width="1.2690%" height="15" fill="rgb(207,171,38)"/><text x="90.0977%" y="351.50"></text></g><g><title>pdqselect::quickselect (10 samples, 1.27%)</title><rect x="89.8477%" y="325" width="1.2690%" height="15" fill="rgb(234,70,1)"/><text x="90.0977%" y="335.50"></text></g><g><title>pdqselect::recurse (10 samples, 1.27%)</title><rect x="89.8477%" y="309" width="1.2690%" height="15" fill="rgb(232,178,18)"/><text x="90.0977%" y="319.50"></text></g><g><title>pdqselect::partition (10 samples, 1.27%)</title><rect x="89.8477%" y="293" width="1.2690%" height="15" fill="rgb(241,78,40)"/><text x="90.0977%" y="303.50"></text></g><g><title>pdqselect::select_by::{{closure}} (1 samples, 0.13%)</title><rect x="90.9898%" y="277" width="0.1269%" height="15" fill="rgb(222,35,25)"/><text x="91.2398%" y="287.50"></text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf::{{closure}} (1 samples, 0.13%)</title><rect x="90.9898%" y="261" width="0.1269%" height="15" fill="rgb(207,92,16)"/><text x="91.2398%" y="271.50"></text></g><g><title>broccoli::util::compare_bots (1 samples, 0.13%)</title><rect x="90.9898%" y="245" width="0.1269%" height="15" fill="rgb(216,59,51)"/><text x="91.2398%" y="255.50"></text></g><g><title>core::slice::sort::insertion_sort (2 samples, 0.25%)</title><rect x="91.2437%" y="261" width="0.2538%" height="15" fill="rgb(213,80,28)"/><text x="91.4937%" y="271.50"></text></g><g><title>core::slice::sort::shift_tail (2 samples, 0.25%)</title><rect x="91.2437%" y="245" width="0.2538%" height="15" fill="rgb(220,93,7)"/><text x="91.4937%" y="255.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.25%)</title><rect x="91.2437%" y="229" width="0.2538%" height="15" fill="rgb(225,24,44)"/><text x="91.4937%" y="239.50"></text></g><g><title>core::slice::sort::partition (1 samples, 0.13%)</title><rect x="91.4975%" y="261" width="0.1269%" height="15" fill="rgb(243,74,40)"/><text x="91.7475%" y="271.50"></text></g><g><title>core::slice::sort::partition_in_blocks (1 samples, 0.13%)</title><rect x="91.4975%" y="245" width="0.1269%" height="15" fill="rgb(228,39,7)"/><text x="91.7475%" y="255.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.13%)</title><rect x="91.4975%" y="229" width="0.1269%" height="15" fill="rgb(227,79,8)"/><text x="91.7475%" y="239.50"></text></g><g><title>&lt;broccoli::tree::analyze::DefaultSorter as broccoli::tree::analyze::Sorter&gt;::sort (5 samples, 0.63%)</title><rect x="91.1168%" y="341" width="0.6345%" height="15" fill="rgb(236,58,11)"/><text x="91.3668%" y="351.50"></text></g><g><title>broccoli::util::sweeper_update (5 samples, 0.63%)</title><rect x="91.1168%" y="325" width="0.6345%" height="15" fill="rgb(249,63,35)"/><text x="91.3668%" y="335.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by (5 samples, 0.63%)</title><rect x="91.1168%" y="309" width="0.6345%" height="15" fill="rgb(252,114,16)"/><text x="91.3668%" y="319.50"></text></g><g><title>core::slice::sort::quicksort (5 samples, 0.63%)</title><rect x="91.1168%" y="293" width="0.6345%" height="15" fill="rgb(254,151,24)"/><text x="91.3668%" y="303.50"></text></g><g><title>core::slice::sort::recurse (5 samples, 0.63%)</title><rect x="91.1168%" y="277" width="0.6345%" height="15" fill="rgb(253,54,39)"/><text x="91.3668%" y="287.50"></text></g><g><title>core::slice::sort::recurse (1 samples, 0.13%)</title><rect x="91.6244%" y="261" width="0.1269%" height="15" fill="rgb(243,25,45)"/><text x="91.8744%" y="271.50"></text></g><g><title>core::slice::sort::insertion_sort (1 samples, 0.13%)</title><rect x="91.6244%" y="245" width="0.1269%" height="15" fill="rgb(234,134,9)"/><text x="91.8744%" y="255.50"></text></g><g><title>core::slice::sort::shift_tail (1 samples, 0.13%)</title><rect x="91.6244%" y="229" width="0.1269%" height="15" fill="rgb(227,166,31)"/><text x="91.8744%" y="239.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by::{{closure}} (1 samples, 0.13%)</title><rect x="91.6244%" y="213" width="0.1269%" height="15" fill="rgb(245,143,41)"/><text x="91.8744%" y="223.50"></text></g><g><title>broccoli::util::sweeper_update::{{closure}} (1 samples, 0.13%)</title><rect x="91.6244%" y="197" width="0.1269%" height="15" fill="rgb(238,181,32)"/><text x="91.8744%" y="207.50"></text></g><g><title>broccoli::util::compare_bots (1 samples, 0.13%)</title><rect x="91.6244%" y="181" width="0.1269%" height="15" fill="rgb(224,113,18)"/><text x="91.8744%" y="191.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.13%)</title><rect x="91.6244%" y="165" width="0.1269%" height="15" fill="rgb(240,229,28)"/><text x="91.8744%" y="175.50"></text></g><g><title>broccoli::tree::analyze::builder::NonLeafFinisher&lt;A,T&gt;::finish (7 samples, 0.89%)</title><rect x="91.1168%" y="357" width="0.8883%" height="15" fill="rgb(250,185,3)"/><text x="91.3668%" y="367.50"></text></g><g><title>broccoli::tree::analyze::builder::create_cont (2 samples, 0.25%)</title><rect x="91.7513%" y="341" width="0.2538%" height="15" fill="rgb(212,59,25)"/><text x="92.0013%" y="351.50"></text></g><g><title>broccoli::tree::analyze::oned::bin_middle_left_right (4 samples, 0.51%)</title><rect x="92.0051%" y="325" width="0.5076%" height="15" fill="rgb(221,87,20)"/><text x="92.2551%" y="335.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (2 samples, 0.25%)</title><rect x="92.2589%" y="309" width="0.2538%" height="15" fill="rgb(213,74,28)"/><text x="92.5089%" y="319.50"></text></g><g><title>core::ptr::swap (2 samples, 0.25%)</title><rect x="92.2589%" y="293" width="0.2538%" height="15" fill="rgb(224,132,34)"/><text x="92.5089%" y="303.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.25%)</title><rect x="92.2589%" y="277" width="0.2538%" height="15" fill="rgb(222,101,24)"/><text x="92.5089%" y="287.50"></text></g><g><title>pdqselect::choose_pivot (3 samples, 0.38%)</title><rect x="92.5127%" y="277" width="0.3807%" height="15" fill="rgb(254,142,4)"/><text x="92.7627%" y="287.50"></text></g><g><title>pdqselect::choose_pivot::{{closure}} (2 samples, 0.25%)</title><rect x="92.6396%" y="261" width="0.2538%" height="15" fill="rgb(230,229,49)"/><text x="92.8896%" y="271.50"></text></g><g><title>pdqselect::choose_pivot::{{closure}} (2 samples, 0.25%)</title><rect x="92.6396%" y="245" width="0.2538%" height="15" fill="rgb(238,70,47)"/><text x="92.8896%" y="255.50"></text></g><g><title>pdqselect::choose_pivot::{{closure}} (2 samples, 0.25%)</title><rect x="92.6396%" y="229" width="0.2538%" height="15" fill="rgb(231,160,17)"/><text x="92.8896%" y="239.50"></text></g><g><title>pdqselect::select_by::{{closure}} (2 samples, 0.25%)</title><rect x="92.6396%" y="213" width="0.2538%" height="15" fill="rgb(218,68,53)"/><text x="92.8896%" y="223.50"></text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf::{{closure}} (2 samples, 0.25%)</title><rect x="92.6396%" y="197" width="0.2538%" height="15" fill="rgb(236,111,10)"/><text x="92.8896%" y="207.50"></text></g><g><title>broccoli::util::compare_bots (2 samples, 0.25%)</title><rect x="92.6396%" y="181" width="0.2538%" height="15" fill="rgb(224,34,41)"/><text x="92.8896%" y="191.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (2 samples, 0.25%)</title><rect x="92.6396%" y="165" width="0.2538%" height="15" fill="rgb(241,118,19)"/><text x="92.8896%" y="175.50"></text></g><g><title>pdqselect::insertion_sort (1 samples, 0.13%)</title><rect x="92.8934%" y="277" width="0.1269%" height="15" fill="rgb(238,129,25)"/><text x="93.1434%" y="287.50"></text></g><g><title>pdqselect::shift_tail (1 samples, 0.13%)</title><rect x="92.8934%" y="261" width="0.1269%" height="15" fill="rgb(238,22,31)"/><text x="93.1434%" y="271.50"></text></g><g><title>pdqselect::select_by::{{closure}} (1 samples, 0.13%)</title><rect x="92.8934%" y="245" width="0.1269%" height="15" fill="rgb(222,174,48)"/><text x="93.1434%" y="255.50"></text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf::{{closure}} (1 samples, 0.13%)</title><rect x="92.8934%" y="229" width="0.1269%" height="15" fill="rgb(206,152,40)"/><text x="93.1434%" y="239.50"></text></g><g><title>broccoli::util::compare_bots (1 samples, 0.13%)</title><rect x="92.8934%" y="213" width="0.1269%" height="15" fill="rgb(218,99,54)"/><text x="93.1434%" y="223.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.13%)</title><rect x="92.8934%" y="197" width="0.1269%" height="15" fill="rgb(220,174,26)"/><text x="93.1434%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="92.8934%" y="181" width="0.1269%" height="15" fill="rgb(245,116,9)"/><text x="93.1434%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="92.8934%" y="165" width="0.1269%" height="15" fill="rgb(209,72,35)"/><text x="93.1434%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="92.8934%" y="149" width="0.1269%" height="15" fill="rgb(226,126,21)"/><text x="93.1434%" y="159.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="92.8934%" y="133" width="0.1269%" height="15" fill="rgb(227,192,1)"/><text x="93.1434%" y="143.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="92.8934%" y="117" width="0.1269%" height="15" fill="rgb(237,180,29)"/><text x="93.1434%" y="127.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="92.8934%" y="101" width="0.1269%" height="15" fill="rgb(230,197,35)"/><text x="93.1434%" y="111.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="92.8934%" y="85" width="0.1269%" height="15" fill="rgb(246,193,31)"/><text x="93.1434%" y="95.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="92.8934%" y="69" width="0.1269%" height="15" fill="rgb(241,36,4)"/><text x="93.1434%" y="79.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="92.8934%" y="53" width="0.1269%" height="15" fill="rgb(241,130,17)"/><text x="93.1434%" y="63.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="92.8934%" y="37" width="0.1269%" height="15" fill="rgb(206,137,32)"/><text x="93.1434%" y="47.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.13%)</title><rect x="93.4010%" y="245" width="0.1269%" height="15" fill="rgb(237,228,51)"/><text x="93.6510%" y="255.50"></text></g><g><title>core::ptr::swap (3 samples, 0.38%)</title><rect x="93.5279%" y="245" width="0.3807%" height="15" fill="rgb(243,6,42)"/><text x="93.7779%" y="255.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.38%)</title><rect x="93.5279%" y="229" width="0.3807%" height="15" fill="rgb(251,74,28)"/><text x="93.7779%" y="239.50"></text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::create_non_leaf (16 samples, 2.03%)</title><rect x="92.0051%" y="357" width="2.0305%" height="15" fill="rgb(218,20,49)"/><text x="92.2551%" y="367.50">b..</text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf (16 samples, 2.03%)</title><rect x="92.0051%" y="341" width="2.0305%" height="15" fill="rgb(238,28,14)"/><text x="92.2551%" y="351.50">b..</text></g><g><title>pdqselect::select_by (12 samples, 1.52%)</title><rect x="92.5127%" y="325" width="1.5228%" height="15" fill="rgb(229,40,46)"/><text x="92.7627%" y="335.50"></text></g><g><title>pdqselect::quickselect (12 samples, 1.52%)</title><rect x="92.5127%" y="309" width="1.5228%" height="15" fill="rgb(244,195,20)"/><text x="92.7627%" y="319.50"></text></g><g><title>pdqselect::recurse (12 samples, 1.52%)</title><rect x="92.5127%" y="293" width="1.5228%" height="15" fill="rgb(253,56,35)"/><text x="92.7627%" y="303.50"></text></g><g><title>pdqselect::partition (8 samples, 1.02%)</title><rect x="93.0203%" y="277" width="1.0152%" height="15" fill="rgb(210,149,44)"/><text x="93.2703%" y="287.50"></text></g><g><title>pdqselect::partition_in_blocks (7 samples, 0.89%)</title><rect x="93.1472%" y="261" width="0.8883%" height="15" fill="rgb(240,135,12)"/><text x="93.3972%" y="271.50"></text></g><g><title>pdqselect::select_by::{{closure}} (1 samples, 0.13%)</title><rect x="93.9086%" y="245" width="0.1269%" height="15" fill="rgb(251,24,50)"/><text x="94.1586%" y="255.50"></text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf::{{closure}} (1 samples, 0.13%)</title><rect x="93.9086%" y="229" width="0.1269%" height="15" fill="rgb(243,200,47)"/><text x="94.1586%" y="239.50"></text></g><g><title>broccoli::util::compare_bots (1 samples, 0.13%)</title><rect x="93.9086%" y="213" width="0.1269%" height="15" fill="rgb(224,166,26)"/><text x="94.1586%" y="223.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.13%)</title><rect x="93.9086%" y="197" width="0.1269%" height="15" fill="rgb(233,0,47)"/><text x="94.1586%" y="207.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.13%)</title><rect x="94.0355%" y="229" width="0.1269%" height="15" fill="rgb(253,80,5)"/><text x="94.2855%" y="239.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.38%)</title><rect x="94.1624%" y="213" width="0.3807%" height="15" fill="rgb(214,133,25)"/><text x="94.4124%" y="223.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="94.5431%" y="213" width="0.1269%" height="15" fill="rgb(209,27,14)"/><text x="94.7931%" y="223.50"></text></g><g><title>&lt;core::slice::sort::CopyOnDrop&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.13%)</title><rect x="94.5431%" y="197" width="0.1269%" height="15" fill="rgb(219,102,51)"/><text x="94.7931%" y="207.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.13%)</title><rect x="94.5431%" y="181" width="0.1269%" height="15" fill="rgb(237,18,16)"/><text x="94.7931%" y="191.50"></text></g><g><title>&lt;broccoli::tree::analyze::DefaultSorter as broccoli::tree::analyze::Sorter&gt;::sort (6 samples, 0.76%)</title><rect x="94.0355%" y="325" width="0.7614%" height="15" fill="rgb(241,85,17)"/><text x="94.2855%" y="335.50"></text></g><g><title>broccoli::util::sweeper_update (6 samples, 0.76%)</title><rect x="94.0355%" y="309" width="0.7614%" height="15" fill="rgb(236,90,42)"/><text x="94.2855%" y="319.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by (6 samples, 0.76%)</title><rect x="94.0355%" y="293" width="0.7614%" height="15" fill="rgb(249,57,21)"/><text x="94.2855%" y="303.50"></text></g><g><title>core::slice::sort::quicksort (6 samples, 0.76%)</title><rect x="94.0355%" y="277" width="0.7614%" height="15" fill="rgb(243,12,36)"/><text x="94.2855%" y="287.50"></text></g><g><title>core::slice::sort::recurse (6 samples, 0.76%)</title><rect x="94.0355%" y="261" width="0.7614%" height="15" fill="rgb(253,128,47)"/><text x="94.2855%" y="271.50"></text></g><g><title>core::slice::sort::insertion_sort (6 samples, 0.76%)</title><rect x="94.0355%" y="245" width="0.7614%" height="15" fill="rgb(207,33,20)"/><text x="94.2855%" y="255.50"></text></g><g><title>core::slice::sort::shift_tail (5 samples, 0.63%)</title><rect x="94.1624%" y="229" width="0.6345%" height="15" fill="rgb(233,215,35)"/><text x="94.4124%" y="239.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by::{{closure}} (1 samples, 0.13%)</title><rect x="94.6701%" y="213" width="0.1269%" height="15" fill="rgb(249,188,52)"/><text x="94.9201%" y="223.50"></text></g><g><title>broccoli::util::sweeper_update::{{closure}} (1 samples, 0.13%)</title><rect x="94.6701%" y="197" width="0.1269%" height="15" fill="rgb(225,12,32)"/><text x="94.9201%" y="207.50"></text></g><g><title>broccoli::util::compare_bots (1 samples, 0.13%)</title><rect x="94.6701%" y="181" width="0.1269%" height="15" fill="rgb(247,98,14)"/><text x="94.9201%" y="191.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.13%)</title><rect x="94.6701%" y="165" width="0.1269%" height="15" fill="rgb(247,219,48)"/><text x="94.9201%" y="175.50"></text></g><g><title>broccoli::tree::analyze::builder::NonLeafFinisher&lt;A,T&gt;::finish (8 samples, 1.02%)</title><rect x="94.0355%" y="341" width="1.0152%" height="15" fill="rgb(253,60,48)"/><text x="94.2855%" y="351.50"></text></g><g><title>broccoli::tree::analyze::builder::create_cont (2 samples, 0.25%)</title><rect x="94.7970%" y="325" width="0.2538%" height="15" fill="rgb(245,15,52)"/><text x="95.0470%" y="335.50"></text></g><g><title>broccoli::tree::analyze::oned::bin_middle_left_right (4 samples, 0.51%)</title><rect x="95.0508%" y="309" width="0.5076%" height="15" fill="rgb(220,133,28)"/><text x="95.3008%" y="319.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (3 samples, 0.38%)</title><rect x="95.1777%" y="293" width="0.3807%" height="15" fill="rgb(217,180,4)"/><text x="95.4277%" y="303.50"></text></g><g><title>core::ptr::swap (3 samples, 0.38%)</title><rect x="95.1777%" y="277" width="0.3807%" height="15" fill="rgb(251,24,1)"/><text x="95.4277%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.38%)</title><rect x="95.1777%" y="261" width="0.3807%" height="15" fill="rgb(212,185,49)"/><text x="95.4277%" y="271.50"></text></g><g><title>pdqselect::choose_pivot (2 samples, 0.25%)</title><rect x="95.5584%" y="261" width="0.2538%" height="15" fill="rgb(215,175,22)"/><text x="95.8084%" y="271.50"></text></g><g><title>pdqselect::choose_pivot::{{closure}} (2 samples, 0.25%)</title><rect x="95.5584%" y="245" width="0.2538%" height="15" fill="rgb(250,205,14)"/><text x="95.8084%" y="255.50"></text></g><g><title>pdqselect::choose_pivot::{{closure}} (1 samples, 0.13%)</title><rect x="95.6853%" y="229" width="0.1269%" height="15" fill="rgb(225,211,22)"/><text x="95.9353%" y="239.50"></text></g><g><title>pdqselect::choose_pivot::{{closure}} (1 samples, 0.13%)</title><rect x="95.6853%" y="213" width="0.1269%" height="15" fill="rgb(251,179,42)"/><text x="95.9353%" y="223.50"></text></g><g><title>pdqselect::select_by::{{closure}} (1 samples, 0.13%)</title><rect x="95.6853%" y="197" width="0.1269%" height="15" fill="rgb(208,216,51)"/><text x="95.9353%" y="207.50"></text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf::{{closure}} (1 samples, 0.13%)</title><rect x="95.6853%" y="181" width="0.1269%" height="15" fill="rgb(235,36,11)"/><text x="95.9353%" y="191.50"></text></g><g><title>broccoli::util::compare_bots (1 samples, 0.13%)</title><rect x="95.6853%" y="165" width="0.1269%" height="15" fill="rgb(213,189,28)"/><text x="95.9353%" y="175.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.13%)</title><rect x="95.8122%" y="229" width="0.1269%" height="15" fill="rgb(227,203,42)"/><text x="96.0622%" y="239.50"></text></g><g><title>core::ptr::read (1 samples, 0.13%)</title><rect x="95.9391%" y="229" width="0.1269%" height="15" fill="rgb(244,72,36)"/><text x="96.1891%" y="239.50"></text></g><g><title>pdqselect::insertion_sort (3 samples, 0.38%)</title><rect x="95.8122%" y="261" width="0.3807%" height="15" fill="rgb(213,53,17)"/><text x="96.0622%" y="271.50"></text></g><g><title>pdqselect::shift_tail (3 samples, 0.38%)</title><rect x="95.8122%" y="245" width="0.3807%" height="15" fill="rgb(207,167,3)"/><text x="96.0622%" y="255.50"></text></g><g><title>pdqselect::select_by::{{closure}} (1 samples, 0.13%)</title><rect x="96.0660%" y="229" width="0.1269%" height="15" fill="rgb(216,98,30)"/><text x="96.3160%" y="239.50"></text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf::{{closure}} (1 samples, 0.13%)</title><rect x="96.0660%" y="213" width="0.1269%" height="15" fill="rgb(236,123,15)"/><text x="96.3160%" y="223.50"></text></g><g><title>broccoli::util::compare_bots (1 samples, 0.13%)</title><rect x="96.0660%" y="197" width="0.1269%" height="15" fill="rgb(248,81,50)"/><text x="96.3160%" y="207.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.13%)</title><rect x="96.0660%" y="181" width="0.1269%" height="15" fill="rgb(214,120,4)"/><text x="96.3160%" y="191.50"></text></g><g><title>pdqselect::partition_in_blocks (3 samples, 0.38%)</title><rect x="96.4467%" y="245" width="0.3807%" height="15" fill="rgb(208,179,34)"/><text x="96.6967%" y="255.50"></text></g><g><title>pdqselect::select_by::{{closure}} (3 samples, 0.38%)</title><rect x="96.4467%" y="229" width="0.3807%" height="15" fill="rgb(227,140,7)"/><text x="96.6967%" y="239.50"></text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf::{{closure}} (3 samples, 0.38%)</title><rect x="96.4467%" y="213" width="0.3807%" height="15" fill="rgb(214,22,6)"/><text x="96.6967%" y="223.50"></text></g><g><title>broccoli::util::compare_bots (3 samples, 0.38%)</title><rect x="96.4467%" y="197" width="0.3807%" height="15" fill="rgb(207,137,27)"/><text x="96.6967%" y="207.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (3 samples, 0.38%)</title><rect x="96.4467%" y="181" width="0.3807%" height="15" fill="rgb(210,8,46)"/><text x="96.6967%" y="191.50"></text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::create_non_leaf (15 samples, 1.90%)</title><rect x="95.0508%" y="341" width="1.9036%" height="15" fill="rgb(240,16,54)"/><text x="95.3008%" y="351.50">b..</text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf (15 samples, 1.90%)</title><rect x="95.0508%" y="325" width="1.9036%" height="15" fill="rgb(211,209,29)"/><text x="95.3008%" y="335.50">b..</text></g><g><title>pdqselect::select_by (11 samples, 1.40%)</title><rect x="95.5584%" y="309" width="1.3959%" height="15" fill="rgb(226,228,24)"/><text x="95.8084%" y="319.50"></text></g><g><title>pdqselect::quickselect (11 samples, 1.40%)</title><rect x="95.5584%" y="293" width="1.3959%" height="15" fill="rgb(222,84,9)"/><text x="95.8084%" y="303.50"></text></g><g><title>pdqselect::recurse (11 samples, 1.40%)</title><rect x="95.5584%" y="277" width="1.3959%" height="15" fill="rgb(234,203,30)"/><text x="95.8084%" y="287.50"></text></g><g><title>pdqselect::partition (6 samples, 0.76%)</title><rect x="96.1929%" y="261" width="0.7614%" height="15" fill="rgb(238,109,14)"/><text x="96.4429%" y="271.50"></text></g><g><title>pdqselect::select_by::{{closure}} (1 samples, 0.13%)</title><rect x="96.8274%" y="245" width="0.1269%" height="15" fill="rgb(233,206,34)"/><text x="97.0774%" y="255.50"></text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf::{{closure}} (1 samples, 0.13%)</title><rect x="96.8274%" y="229" width="0.1269%" height="15" fill="rgb(220,167,47)"/><text x="97.0774%" y="239.50"></text></g><g><title>broccoli::util::compare_bots (1 samples, 0.13%)</title><rect x="96.8274%" y="213" width="0.1269%" height="15" fill="rgb(238,105,10)"/><text x="97.0774%" y="223.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.13%)</title><rect x="96.8274%" y="197" width="0.1269%" height="15" fill="rgb(213,227,17)"/><text x="97.0774%" y="207.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.25%)</title><rect x="97.2081%" y="197" width="0.2538%" height="15" fill="rgb(217,132,38)"/><text x="97.4581%" y="207.50"></text></g><g><title>core::slice::sort::insertion_sort (7 samples, 0.89%)</title><rect x="97.0812%" y="229" width="0.8883%" height="15" fill="rgb(242,146,4)"/><text x="97.3312%" y="239.50"></text></g><g><title>core::slice::sort::shift_tail (7 samples, 0.89%)</title><rect x="97.0812%" y="213" width="0.8883%" height="15" fill="rgb(212,61,9)"/><text x="97.3312%" y="223.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by::{{closure}} (4 samples, 0.51%)</title><rect x="97.4619%" y="197" width="0.5076%" height="15" fill="rgb(247,126,22)"/><text x="97.7119%" y="207.50"></text></g><g><title>broccoli::util::sweeper_update::{{closure}} (4 samples, 0.51%)</title><rect x="97.4619%" y="181" width="0.5076%" height="15" fill="rgb(220,196,2)"/><text x="97.7119%" y="191.50"></text></g><g><title>broccoli::util::compare_bots (4 samples, 0.51%)</title><rect x="97.4619%" y="165" width="0.5076%" height="15" fill="rgb(208,46,4)"/><text x="97.7119%" y="175.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (4 samples, 0.51%)</title><rect x="97.4619%" y="149" width="0.5076%" height="15" fill="rgb(252,104,46)"/><text x="97.7119%" y="159.50"></text></g><g><title>core::slice::sort::partition (4 samples, 0.51%)</title><rect x="97.9695%" y="229" width="0.5076%" height="15" fill="rgb(237,152,48)"/><text x="98.2195%" y="239.50"></text></g><g><title>core::slice::sort::partition_in_blocks (3 samples, 0.38%)</title><rect x="98.0964%" y="213" width="0.3807%" height="15" fill="rgb(221,59,37)"/><text x="98.3464%" y="223.50"></text></g><g><title>&lt;broccoli::tree::analyze::DefaultSorter as broccoli::tree::analyze::Sorter&gt;::sort (12 samples, 1.52%)</title><rect x="97.0812%" y="309" width="1.5228%" height="15" fill="rgb(209,202,51)"/><text x="97.3312%" y="319.50"></text></g><g><title>broccoli::util::sweeper_update (12 samples, 1.52%)</title><rect x="97.0812%" y="293" width="1.5228%" height="15" fill="rgb(228,81,30)"/><text x="97.3312%" y="303.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by (12 samples, 1.52%)</title><rect x="97.0812%" y="277" width="1.5228%" height="15" fill="rgb(227,42,39)"/><text x="97.3312%" y="287.50"></text></g><g><title>core::slice::sort::quicksort (12 samples, 1.52%)</title><rect x="97.0812%" y="261" width="1.5228%" height="15" fill="rgb(221,26,2)"/><text x="97.3312%" y="271.50"></text></g><g><title>core::slice::sort::recurse (12 samples, 1.52%)</title><rect x="97.0812%" y="245" width="1.5228%" height="15" fill="rgb(254,61,31)"/><text x="97.3312%" y="255.50"></text></g><g><title>core::slice::sort::recurse (1 samples, 0.13%)</title><rect x="98.4772%" y="229" width="0.1269%" height="15" fill="rgb(222,173,38)"/><text x="98.7272%" y="239.50"></text></g><g><title>core::slice::sort::insertion_sort (1 samples, 0.13%)</title><rect x="98.4772%" y="213" width="0.1269%" height="15" fill="rgb(218,50,12)"/><text x="98.7272%" y="223.50"></text></g><g><title>core::slice::sort::shift_tail (1 samples, 0.13%)</title><rect x="98.4772%" y="197" width="0.1269%" height="15" fill="rgb(223,88,40)"/><text x="98.7272%" y="207.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.13%)</title><rect x="98.4772%" y="181" width="0.1269%" height="15" fill="rgb(237,54,19)"/><text x="98.7272%" y="191.50"></text></g><g><title>data_gen::support::bench_closure (737 samples, 93.53%)</title><rect x="5.3299%" y="597" width="93.5279%" height="15" fill="rgb(251,129,25)"/><text x="5.5799%" y="607.50">data_gen::support::bench_closure</text></g><g><title>data_gen::support::bench_closure_ret (737 samples, 93.53%)</title><rect x="5.3299%" y="581" width="93.5279%" height="15" fill="rgb(238,97,19)"/><text x="5.5799%" y="591.50">data_gen::support::bench_closure_ret</text></g><g><title>data_gen::main::{{closure}} (737 samples, 93.53%)</title><rect x="5.3299%" y="565" width="93.5279%" height="15" fill="rgb(240,169,18)"/><text x="5.5799%" y="575.50">data_gen::main::{{closure}}</text></g><g><title>broccoli::tree::new (185 samples, 23.48%)</title><rect x="75.3807%" y="549" width="23.4772%" height="15" fill="rgb(230,187,49)"/><text x="75.6307%" y="559.50">broccoli::tree::new</text></g><g><title>broccoli::tree::analyze::builder::TreeBuilder&lt;A,T&gt;::build_seq (185 samples, 23.48%)</title><rect x="75.3807%" y="533" width="23.4772%" height="15" fill="rgb(209,44,26)"/><text x="75.6307%" y="543.50">broccoli::tree::analyze::builder::Tre..</text></g><g><title>broccoli::tree::analyze::builder::create_tree_seq (185 samples, 23.48%)</title><rect x="75.3807%" y="517" width="23.4772%" height="15" fill="rgb(244,0,6)"/><text x="75.6307%" y="527.50">broccoli::tree::analyze::builder::cre..</text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::recurse_preorder_seq (185 samples, 23.48%)</title><rect x="75.3807%" y="501" width="23.4772%" height="15" fill="rgb(248,18,21)"/><text x="75.6307%" y="511.50">broccoli::tree::analyze::builder::Rec..</text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::recurse_preorder_seq (169 samples, 21.45%)</title><rect x="77.4112%" y="485" width="21.4467%" height="15" fill="rgb(245,180,19)"/><text x="77.6612%" y="495.50">broccoli::tree::analyze::builder::..</text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::recurse_preorder_seq (155 samples, 19.67%)</title><rect x="79.1878%" y="469" width="19.6701%" height="15" fill="rgb(252,118,36)"/><text x="79.4378%" y="479.50">broccoli::tree::analyze::builde..</text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::recurse_preorder_seq (143 samples, 18.15%)</title><rect x="80.7107%" y="453" width="18.1472%" height="15" fill="rgb(210,224,19)"/><text x="80.9607%" y="463.50">broccoli::tree::analyze::bui..</text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::recurse_preorder_seq (131 samples, 16.62%)</title><rect x="82.2335%" y="437" width="16.6244%" height="15" fill="rgb(218,30,24)"/><text x="82.4835%" y="447.50">broccoli::tree::analyze::b..</text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::recurse_preorder_seq (110 samples, 13.96%)</title><rect x="84.8985%" y="421" width="13.9594%" height="15" fill="rgb(219,75,50)"/><text x="85.1485%" y="431.50">broccoli::tree::analy..</text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::recurse_preorder_seq (98 samples, 12.44%)</title><rect x="86.4213%" y="405" width="12.4365%" height="15" fill="rgb(234,72,50)"/><text x="86.6713%" y="415.50">broccoli::tree::ana..</text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::recurse_preorder_seq (78 samples, 9.90%)</title><rect x="88.9594%" y="389" width="9.8985%" height="15" fill="rgb(219,100,48)"/><text x="89.2094%" y="399.50">broccoli::tree..</text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::recurse_preorder_seq (61 samples, 7.74%)</title><rect x="91.1168%" y="373" width="7.7411%" height="15" fill="rgb(253,5,41)"/><text x="91.3668%" y="383.50">broccoli::t..</text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::recurse_preorder_seq (38 samples, 4.82%)</title><rect x="94.0355%" y="357" width="4.8223%" height="15" fill="rgb(247,181,11)"/><text x="94.2855%" y="367.50">brocco..</text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::recurse_preorder_seq (15 samples, 1.90%)</title><rect x="96.9543%" y="341" width="1.9036%" height="15" fill="rgb(222,223,25)"/><text x="97.2043%" y="351.50">b..</text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::create_leaf (14 samples, 1.78%)</title><rect x="97.0812%" y="325" width="1.7766%" height="15" fill="rgb(214,198,28)"/><text x="97.3312%" y="335.50">b..</text></g><g><title>broccoli::tree::analyze::builder::create_cont (2 samples, 0.25%)</title><rect x="98.6041%" y="309" width="0.2538%" height="15" fill="rgb(230,46,43)"/><text x="98.8541%" y="319.50"></text></g><g><title>data_gen::support::distribute (1 samples, 0.13%)</title><rect x="98.8579%" y="597" width="0.1269%" height="15" fill="rgb(233,65,53)"/><text x="99.1079%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.13%)</title><rect x="98.8579%" y="581" width="0.1269%" height="15" fill="rgb(221,121,27)"/><text x="99.1079%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.13%)</title><rect x="98.8579%" y="565" width="0.1269%" height="15" fill="rgb(247,70,47)"/><text x="99.1079%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.13%)</title><rect x="98.8579%" y="549" width="0.1269%" height="15" fill="rgb(228,85,35)"/><text x="99.1079%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.13%)</title><rect x="98.8579%" y="533" width="0.1269%" height="15" fill="rgb(209,50,18)"/><text x="99.1079%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.13%)</title><rect x="98.8579%" y="517" width="0.1269%" height="15" fill="rgb(250,19,35)"/><text x="99.1079%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.13%)</title><rect x="98.8579%" y="501" width="0.1269%" height="15" fill="rgb(253,107,29)"/><text x="99.1079%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.13%)</title><rect x="98.8579%" y="485" width="0.1269%" height="15" fill="rgb(252,179,29)"/><text x="99.1079%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.13%)</title><rect x="98.8579%" y="469" width="0.1269%" height="15" fill="rgb(238,194,6)"/><text x="99.1079%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.13%)</title><rect x="98.8579%" y="453" width="0.1269%" height="15" fill="rgb(238,164,29)"/><text x="99.1079%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.13%)</title><rect x="98.8579%" y="437" width="0.1269%" height="15" fill="rgb(224,25,9)"/><text x="99.1079%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.13%)</title><rect x="98.8579%" y="421" width="0.1269%" height="15" fill="rgb(244,153,23)"/><text x="99.1079%" y="431.50"></text></g><g><title>&lt;core::iter::sources::RepeatWith&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.13%)</title><rect x="98.8579%" y="405" width="0.1269%" height="15" fill="rgb(212,203,14)"/><text x="99.1079%" y="415.50"></text></g><g><title>dists::spiral_iter::{{closure}} (1 samples, 0.13%)</title><rect x="98.8579%" y="389" width="0.1269%" height="15" fill="rgb(220,164,20)"/><text x="99.1079%" y="399.50"></text></g><g><title>num_cpus::get_physical (1 samples, 0.13%)</title><rect x="98.9848%" y="597" width="0.1269%" height="15" fill="rgb(222,203,48)"/><text x="99.2348%" y="607.50"></text></g><g><title>num_cpus::linux::get_num_physical_cpus (1 samples, 0.13%)</title><rect x="98.9848%" y="581" width="0.1269%" height="15" fill="rgb(215,159,22)"/><text x="99.2348%" y="591.50"></text></g><g><title>std::io::buffered::BufReader&lt;R&gt;::new (1 samples, 0.13%)</title><rect x="98.9848%" y="565" width="0.1269%" height="15" fill="rgb(216,183,47)"/><text x="99.2348%" y="575.50"></text></g><g><title>std::io::buffered::BufReader&lt;R&gt;::with_capacity (1 samples, 0.13%)</title><rect x="98.9848%" y="549" width="0.1269%" height="15" fill="rgb(229,195,25)"/><text x="99.2348%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.13%)</title><rect x="98.9848%" y="533" width="0.1269%" height="15" fill="rgb(224,132,51)"/><text x="99.2348%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.13%)</title><rect x="98.9848%" y="517" width="0.1269%" height="15" fill="rgb(240,63,7)"/><text x="99.2348%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.13%)</title><rect x="98.9848%" y="501" width="0.1269%" height="15" fill="rgb(249,182,41)"/><text x="99.2348%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.13%)</title><rect x="98.9848%" y="485" width="0.1269%" height="15" fill="rgb(243,47,26)"/><text x="99.2348%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.13%)</title><rect x="98.9848%" y="469" width="0.1269%" height="15" fill="rgb(233,48,2)"/><text x="99.2348%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.13%)</title><rect x="98.9848%" y="453" width="0.1269%" height="15" fill="rgb(244,165,34)"/><text x="99.2348%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.13%)</title><rect x="98.9848%" y="437" width="0.1269%" height="15" fill="rgb(207,89,7)"/><text x="99.2348%" y="447.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.13%)</title><rect x="98.9848%" y="421" width="0.1269%" height="15" fill="rgb(244,117,36)"/><text x="99.2348%" y="431.50"></text></g><g><title>_int_malloc (1 samples, 0.13%)</title><rect x="98.9848%" y="405" width="0.1269%" height="15" fill="rgb(226,144,34)"/><text x="99.2348%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="98.9848%" y="389" width="0.1269%" height="15" fill="rgb(213,23,19)"/><text x="99.2348%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="98.9848%" y="373" width="0.1269%" height="15" fill="rgb(217,75,12)"/><text x="99.2348%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="98.9848%" y="357" width="0.1269%" height="15" fill="rgb(224,159,17)"/><text x="99.2348%" y="367.50"></text></g><g><title>data_gen (782 samples, 99.24%)</title><rect x="0.0000%" y="805" width="99.2386%" height="15" fill="rgb(217,118,1)"/><text x="0.2500%" y="815.50">data_gen</text></g><g><title>_start (741 samples, 94.04%)</title><rect x="5.2030%" y="789" width="94.0355%" height="15" fill="rgb(232,180,48)"/><text x="5.4530%" y="799.50">_start</text></g><g><title>__libc_start_main (741 samples, 94.04%)</title><rect x="5.2030%" y="773" width="94.0355%" height="15" fill="rgb(230,27,33)"/><text x="5.4530%" y="783.50">__libc_start_main</text></g><g><title>main (741 samples, 94.04%)</title><rect x="5.2030%" y="757" width="94.0355%" height="15" fill="rgb(205,31,21)"/><text x="5.4530%" y="767.50">main</text></g><g><title>std::rt::lang_start_internal (741 samples, 94.04%)</title><rect x="5.2030%" y="741" width="94.0355%" height="15" fill="rgb(253,59,4)"/><text x="5.4530%" y="751.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (741 samples, 94.04%)</title><rect x="5.2030%" y="725" width="94.0355%" height="15" fill="rgb(224,201,9)"/><text x="5.4530%" y="735.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (741 samples, 94.04%)</title><rect x="5.2030%" y="709" width="94.0355%" height="15" fill="rgb(229,206,30)"/><text x="5.4530%" y="719.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (741 samples, 94.04%)</title><rect x="5.2030%" y="693" width="94.0355%" height="15" fill="rgb(212,67,47)"/><text x="5.4530%" y="703.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (741 samples, 94.04%)</title><rect x="5.2030%" y="677" width="94.0355%" height="15" fill="rgb(211,96,50)"/><text x="5.4530%" y="687.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (741 samples, 94.04%)</title><rect x="5.2030%" y="661" width="94.0355%" height="15" fill="rgb(252,114,18)"/><text x="5.4530%" y="671.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (741 samples, 94.04%)</title><rect x="5.2030%" y="645" width="94.0355%" height="15" fill="rgb(223,58,37)"/><text x="5.4530%" y="655.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (741 samples, 94.04%)</title><rect x="5.2030%" y="629" width="94.0355%" height="15" fill="rgb(237,70,4)"/><text x="5.4530%" y="639.50">core::ops::function::FnOnce::call_once</text></g><g><title>data_gen::main (741 samples, 94.04%)</title><rect x="5.2030%" y="613" width="94.0355%" height="15" fill="rgb(244,85,46)"/><text x="5.4530%" y="623.50">data_gen::main</text></g><g><title>std::io::stdio::_eprint (1 samples, 0.13%)</title><rect x="99.1117%" y="597" width="0.1269%" height="15" fill="rgb(223,39,52)"/><text x="99.3617%" y="607.50"></text></g><g><title>std::io::stdio::print_to (1 samples, 0.13%)</title><rect x="99.1117%" y="581" width="0.1269%" height="15" fill="rgb(218,200,14)"/><text x="99.3617%" y="591.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (1 samples, 0.13%)</title><rect x="99.1117%" y="565" width="0.1269%" height="15" fill="rgb(208,171,16)"/><text x="99.3617%" y="575.50"></text></g><g><title>std::io::stdio::print_to::{{closure}} (1 samples, 0.13%)</title><rect x="99.1117%" y="549" width="0.1269%" height="15" fill="rgb(234,200,18)"/><text x="99.3617%" y="559.50"></text></g><g><title>&lt;std::io::stdio::Stderr as std::io::Write&gt;::write_fmt (1 samples, 0.13%)</title><rect x="99.1117%" y="533" width="0.1269%" height="15" fill="rgb(228,45,11)"/><text x="99.3617%" y="543.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stderr as std::io::Write&gt;::write_fmt (1 samples, 0.13%)</title><rect x="99.1117%" y="517" width="0.1269%" height="15" fill="rgb(237,182,11)"/><text x="99.3617%" y="527.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.13%)</title><rect x="99.1117%" y="501" width="0.1269%" height="15" fill="rgb(241,175,49)"/><text x="99.3617%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.13%)</title><rect x="99.1117%" y="485" width="0.1269%" height="15" fill="rgb(247,38,35)"/><text x="99.3617%" y="495.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adaptor&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.13%)</title><rect x="99.1117%" y="469" width="0.1269%" height="15" fill="rgb(228,39,49)"/><text x="99.3617%" y="479.50"></text></g><g><title>&lt;std::io::stdio::StderrLock as std::io::Write&gt;::write_all (1 samples, 0.13%)</title><rect x="99.1117%" y="453" width="0.1269%" height="15" fill="rgb(226,101,26)"/><text x="99.3617%" y="463.50"></text></g><g><title>&lt;std::io::stdio::StderrRaw as std::io::Write&gt;::write_all (1 samples, 0.13%)</title><rect x="99.1117%" y="437" width="0.1269%" height="15" fill="rgb(206,141,19)"/><text x="99.3617%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.13%)</title><rect x="99.1117%" y="421" width="0.1269%" height="15" fill="rgb(211,200,13)"/><text x="99.3617%" y="431.50"></text></g><g><title>&lt;std::sys::unix::stdio::Stderr as std::io::Write&gt;::write (1 samples, 0.13%)</title><rect x="99.1117%" y="405" width="0.1269%" height="15" fill="rgb(241,121,6)"/><text x="99.3617%" y="415.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (1 samples, 0.13%)</title><rect x="99.1117%" y="389" width="0.1269%" height="15" fill="rgb(234,221,29)"/><text x="99.3617%" y="399.50"></text></g><g><title>__GI___libc_write (1 samples, 0.13%)</title><rect x="99.1117%" y="373" width="0.1269%" height="15" fill="rgb(229,136,5)"/><text x="99.3617%" y="383.50"></text></g><g><title>__GI___libc_write (1 samples, 0.13%)</title><rect x="99.1117%" y="357" width="0.1269%" height="15" fill="rgb(238,36,11)"/><text x="99.3617%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="99.1117%" y="341" width="0.1269%" height="15" fill="rgb(251,55,41)"/><text x="99.3617%" y="351.50"></text></g><g><title>all (788 samples, 100%)</title><rect x="0.0000%" y="821" width="100.0000%" height="15" fill="rgb(242,34,40)"/><text x="0.2500%" y="831.50"></text></g><g><title>perf (6 samples, 0.76%)</title><rect x="99.2386%" y="805" width="0.7614%" height="15" fill="rgb(215,42,17)"/><text x="99.4886%" y="815.50"></text></g><g><title>[unknown] (6 samples, 0.76%)</title><rect x="99.2386%" y="789" width="0.7614%" height="15" fill="rgb(207,44,46)"/><text x="99.4886%" y="799.50"></text></g><g><title>[unknown] (6 samples, 0.76%)</title><rect x="99.2386%" y="773" width="0.7614%" height="15" fill="rgb(211,206,28)"/><text x="99.4886%" y="783.50"></text></g><g><title>[unknown] (6 samples, 0.76%)</title><rect x="99.2386%" y="757" width="0.7614%" height="15" fill="rgb(237,167,16)"/><text x="99.4886%" y="767.50"></text></g><g><title>[unknown] (6 samples, 0.76%)</title><rect x="99.2386%" y="741" width="0.7614%" height="15" fill="rgb(233,66,6)"/><text x="99.4886%" y="751.50"></text></g><g><title>[unknown] (6 samples, 0.76%)</title><rect x="99.2386%" y="725" width="0.7614%" height="15" fill="rgb(246,123,29)"/><text x="99.4886%" y="735.50"></text></g><g><title>[unknown] (6 samples, 0.76%)</title><rect x="99.2386%" y="709" width="0.7614%" height="15" fill="rgb(209,62,40)"/><text x="99.4886%" y="719.50"></text></g><g><title>[unknown] (6 samples, 0.76%)</title><rect x="99.2386%" y="693" width="0.7614%" height="15" fill="rgb(218,4,25)"/><text x="99.4886%" y="703.50"></text></g><g><title>[unknown] (6 samples, 0.76%)</title><rect x="99.2386%" y="677" width="0.7614%" height="15" fill="rgb(253,91,49)"/><text x="99.4886%" y="687.50"></text></g><g><title>[unknown] (6 samples, 0.76%)</title><rect x="99.2386%" y="661" width="0.7614%" height="15" fill="rgb(228,155,29)"/><text x="99.4886%" y="671.50"></text></g><g><title>[unknown] (5 samples, 0.63%)</title><rect x="99.3655%" y="645" width="0.6345%" height="15" fill="rgb(243,57,37)"/><text x="99.6155%" y="655.50"></text></g><g><title>[unknown] (5 samples, 0.63%)</title><rect x="99.3655%" y="629" width="0.6345%" height="15" fill="rgb(244,167,17)"/><text x="99.6155%" y="639.50"></text></g><g><title>[unknown] (5 samples, 0.63%)</title><rect x="99.3655%" y="613" width="0.6345%" height="15" fill="rgb(207,181,38)"/><text x="99.6155%" y="623.50"></text></g><g><title>[unknown] (5 samples, 0.63%)</title><rect x="99.3655%" y="597" width="0.6345%" height="15" fill="rgb(211,8,23)"/><text x="99.6155%" y="607.50"></text></g></svg></svg>