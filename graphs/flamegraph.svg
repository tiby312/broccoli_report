<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1110" onload="init(evt)" viewBox="0 0 1200 1110" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1110" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1093.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1093.00"> </text><svg id="frames" x="10" width="1180"><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (6 samples, 0.74%)</title><rect x="0.0000%" y="1029" width="0.7407%" height="15" fill="rgb(227,0,7)"/><text x="0.2500%" y="1039.50"></text></g><g><title>[[heap]] (4 samples, 0.49%)</title><rect x="0.7407%" y="1029" width="0.4938%" height="15" fill="rgb(217,0,24)"/><text x="0.9907%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (4 samples, 0.49%)</title><rect x="0.7407%" y="1013" width="0.4938%" height="15" fill="rgb(221,193,54)"/><text x="0.9907%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.12%)</title><rect x="1.2346%" y="1013" width="0.1235%" height="15" fill="rgb(248,212,6)"/><text x="1.4846%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (4 samples, 0.49%)</title><rect x="1.3580%" y="1013" width="0.4938%" height="15" fill="rgb(208,68,35)"/><text x="1.6080%" y="1023.50"></text></g><g><title>_int_free (3 samples, 0.37%)</title><rect x="1.8519%" y="1013" width="0.3704%" height="15" fill="rgb(232,128,0)"/><text x="2.1019%" y="1023.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (1 samples, 0.12%)</title><rect x="2.2222%" y="1013" width="0.1235%" height="15" fill="rgb(207,160,47)"/><text x="2.4722%" y="1023.50"></text></g><g><title>[[stack]] (14 samples, 1.73%)</title><rect x="1.2346%" y="1029" width="1.7284%" height="15" fill="rgb(228,23,34)"/><text x="1.4846%" y="1039.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (5 samples, 0.62%)</title><rect x="2.3457%" y="1013" width="0.6173%" height="15" fill="rgb(218,30,26)"/><text x="2.5957%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (2 samples, 0.25%)</title><rect x="2.9630%" y="1013" width="0.2469%" height="15" fill="rgb(220,122,19)"/><text x="3.2130%" y="1023.50"></text></g><g><title>[anon] (3 samples, 0.37%)</title><rect x="2.9630%" y="1029" width="0.3704%" height="15" fill="rgb(250,228,42)"/><text x="3.2130%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.12%)</title><rect x="3.2099%" y="1013" width="0.1235%" height="15" fill="rgb(240,193,28)"/><text x="3.4599%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (1 samples, 0.12%)</title><rect x="3.2099%" y="997" width="0.1235%" height="15" fill="rgb(216,20,37)"/><text x="3.4599%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.12%)</title><rect x="3.2099%" y="981" width="0.1235%" height="15" fill="rgb(206,188,39)"/><text x="3.4599%" y="991.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.12%)</title><rect x="3.2099%" y="965" width="0.1235%" height="15" fill="rgb(217,207,13)"/><text x="3.4599%" y="975.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.12%)</title><rect x="3.3333%" y="1029" width="0.1235%" height="15" fill="rgb(231,73,38)"/><text x="3.5833%" y="1039.50"></text></g><g><title>broccoli::query::colfind::oned::get_section_mut (1 samples, 0.12%)</title><rect x="3.3333%" y="1013" width="0.1235%" height="15" fill="rgb(225,20,46)"/><text x="3.5833%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (6 samples, 0.74%)</title><rect x="3.4568%" y="1013" width="0.7407%" height="15" fill="rgb(210,31,41)"/><text x="3.7068%" y="1023.50"></text></g><g><title>[unknown] (3 samples, 0.37%)</title><rect x="4.1975%" y="1013" width="0.3704%" height="15" fill="rgb(221,200,47)"/><text x="4.4475%" y="1023.50"></text></g><g><title>[unknown] (3 samples, 0.37%)</title><rect x="4.1975%" y="997" width="0.3704%" height="15" fill="rgb(226,26,5)"/><text x="4.4475%" y="1007.50"></text></g><g><title>[unknown] (3 samples, 0.37%)</title><rect x="4.1975%" y="981" width="0.3704%" height="15" fill="rgb(249,33,26)"/><text x="4.4475%" y="991.50"></text></g><g><title>[unknown] (3 samples, 0.37%)</title><rect x="4.1975%" y="965" width="0.3704%" height="15" fill="rgb(235,183,28)"/><text x="4.4475%" y="975.50"></text></g><g><title>[unknown] (3 samples, 0.37%)</title><rect x="4.1975%" y="949" width="0.3704%" height="15" fill="rgb(221,5,38)"/><text x="4.4475%" y="959.50"></text></g><g><title>[unknown] (3 samples, 0.37%)</title><rect x="4.1975%" y="933" width="0.3704%" height="15" fill="rgb(247,18,42)"/><text x="4.4475%" y="943.50"></text></g><g><title>[unknown] (3 samples, 0.37%)</title><rect x="4.1975%" y="917" width="0.3704%" height="15" fill="rgb(241,131,45)"/><text x="4.4475%" y="927.50"></text></g><g><title>[unknown] (3 samples, 0.37%)</title><rect x="4.1975%" y="901" width="0.3704%" height="15" fill="rgb(249,31,29)"/><text x="4.4475%" y="911.50"></text></g><g><title>[unknown] (3 samples, 0.37%)</title><rect x="4.1975%" y="885" width="0.3704%" height="15" fill="rgb(225,111,53)"/><text x="4.4475%" y="895.50"></text></g><g><title>[unknown] (2 samples, 0.25%)</title><rect x="4.3210%" y="869" width="0.2469%" height="15" fill="rgb(238,160,17)"/><text x="4.5710%" y="879.50"></text></g><g><title>[unknown] (2 samples, 0.25%)</title><rect x="4.3210%" y="853" width="0.2469%" height="15" fill="rgb(214,148,48)"/><text x="4.5710%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="4.4444%" y="837" width="0.1235%" height="15" fill="rgb(232,36,49)"/><text x="4.6944%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="4.4444%" y="821" width="0.1235%" height="15" fill="rgb(209,103,24)"/><text x="4.6944%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="4.4444%" y="805" width="0.1235%" height="15" fill="rgb(229,88,8)"/><text x="4.6944%" y="815.50"></text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::recurse_preorder_seq (1 samples, 0.12%)</title><rect x="4.5679%" y="1013" width="0.1235%" height="15" fill="rgb(213,181,19)"/><text x="4.8179%" y="1023.50"></text></g><g><title>core::slice::sort::partial_insertion_sort (2 samples, 0.25%)</title><rect x="4.6914%" y="1013" width="0.2469%" height="15" fill="rgb(254,191,54)"/><text x="4.9414%" y="1023.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.12%)</title><rect x="4.8148%" y="997" width="0.1235%" height="15" fill="rgb(241,83,37)"/><text x="5.0648%" y="1007.50"></text></g><g><title>[unknown] (14 samples, 1.73%)</title><rect x="3.4568%" y="1029" width="1.7284%" height="15" fill="rgb(233,36,39)"/><text x="3.7068%" y="1039.50"></text></g><g><title>core::slice::sort::recurse (2 samples, 0.25%)</title><rect x="4.9383%" y="1013" width="0.2469%" height="15" fill="rgb(226,3,54)"/><text x="5.1883%" y="1023.50"></text></g><g><title>[unknown] (12 samples, 1.48%)</title><rect x="5.1852%" y="1013" width="1.4815%" height="15" fill="rgb(245,192,40)"/><text x="5.4352%" y="1023.50"></text></g><g><title>[unknown] (12 samples, 1.48%)</title><rect x="5.1852%" y="997" width="1.4815%" height="15" fill="rgb(238,167,29)"/><text x="5.4352%" y="1007.50"></text></g><g><title>[unknown] (12 samples, 1.48%)</title><rect x="5.1852%" y="981" width="1.4815%" height="15" fill="rgb(232,182,51)"/><text x="5.4352%" y="991.50"></text></g><g><title>[unknown] (12 samples, 1.48%)</title><rect x="5.1852%" y="965" width="1.4815%" height="15" fill="rgb(231,60,39)"/><text x="5.4352%" y="975.50"></text></g><g><title>[unknown] (10 samples, 1.23%)</title><rect x="5.4321%" y="949" width="1.2346%" height="15" fill="rgb(208,69,12)"/><text x="5.6821%" y="959.50"></text></g><g><title>[unknown] (10 samples, 1.23%)</title><rect x="5.4321%" y="933" width="1.2346%" height="15" fill="rgb(235,93,37)"/><text x="5.6821%" y="943.50"></text></g><g><title>[unknown] (10 samples, 1.23%)</title><rect x="5.4321%" y="917" width="1.2346%" height="15" fill="rgb(213,116,39)"/><text x="5.6821%" y="927.50"></text></g><g><title>[unknown] (10 samples, 1.23%)</title><rect x="5.4321%" y="901" width="1.2346%" height="15" fill="rgb(222,207,29)"/><text x="5.6821%" y="911.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (6 samples, 0.74%)</title><rect x="6.6667%" y="741" width="0.7407%" height="15" fill="rgb(206,96,30)"/><text x="6.9167%" y="751.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold::{{closure}} (6 samples, 0.74%)</title><rect x="6.6667%" y="725" width="0.7407%" height="15" fill="rgb(218,138,4)"/><text x="6.9167%" y="735.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal (6 samples, 0.74%)</title><rect x="6.6667%" y="709" width="0.7407%" height="15" fill="rgb(250,191,14)"/><text x="6.9167%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (6 samples, 0.74%)</title><rect x="6.6667%" y="693" width="0.7407%" height="15" fill="rgb(239,60,40)"/><text x="6.9167%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (6 samples, 0.74%)</title><rect x="6.6667%" y="677" width="0.7407%" height="15" fill="rgb(206,27,48)"/><text x="6.9167%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (6 samples, 0.74%)</title><rect x="6.6667%" y="661" width="0.7407%" height="15" fill="rgb(225,35,8)"/><text x="6.9167%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (6 samples, 0.74%)</title><rect x="6.6667%" y="645" width="0.7407%" height="15" fill="rgb(250,213,24)"/><text x="6.9167%" y="655.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (6 samples, 0.74%)</title><rect x="6.6667%" y="629" width="0.7407%" height="15" fill="rgb(247,123,22)"/><text x="6.9167%" y="639.50"></text></g><g><title>core::iter::adapters::filter_try_fold::{{closure}} (6 samples, 0.74%)</title><rect x="6.6667%" y="613" width="0.7407%" height="15" fill="rgb(231,138,38)"/><text x="6.9167%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (6 samples, 0.74%)</title><rect x="6.6667%" y="597" width="0.7407%" height="15" fill="rgb(231,145,46)"/><text x="6.9167%" y="607.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal::{{closure}} (6 samples, 0.74%)</title><rect x="6.6667%" y="581" width="0.7407%" height="15" fill="rgb(251,118,11)"/><text x="6.9167%" y="591.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (6 samples, 0.74%)</title><rect x="6.6667%" y="565" width="0.7407%" height="15" fill="rgb(217,147,25)"/><text x="6.9167%" y="575.50"></text></g><g><title>crossbeam_epoch::default::is_pinned (6 samples, 0.74%)</title><rect x="6.6667%" y="549" width="0.7407%" height="15" fill="rgb(247,81,37)"/><text x="6.9167%" y="559.50"></text></g><g><title>crossbeam_epoch::default::with_handle (6 samples, 0.74%)</title><rect x="6.6667%" y="533" width="0.7407%" height="15" fill="rgb(209,12,38)"/><text x="6.9167%" y="543.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (6 samples, 0.74%)</title><rect x="6.6667%" y="517" width="0.7407%" height="15" fill="rgb(227,1,9)"/><text x="6.9167%" y="527.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::try_initialize (6 samples, 0.74%)</title><rect x="6.6667%" y="501" width="0.7407%" height="15" fill="rgb(248,47,43)"/><text x="6.9167%" y="511.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::initialize (6 samples, 0.74%)</title><rect x="6.6667%" y="485" width="0.7407%" height="15" fill="rgb(221,10,30)"/><text x="6.9167%" y="495.50"></text></g><g><title>core::ops::function::FnOnce::call_once (6 samples, 0.74%)</title><rect x="6.6667%" y="469" width="0.7407%" height="15" fill="rgb(210,229,1)"/><text x="6.9167%" y="479.50"></text></g><g><title>crossbeam_epoch::default::HANDLE::__init (6 samples, 0.74%)</title><rect x="6.6667%" y="453" width="0.7407%" height="15" fill="rgb(222,148,37)"/><text x="6.9167%" y="463.50"></text></g><g><title>crossbeam_epoch::collector::Collector::register (6 samples, 0.74%)</title><rect x="6.6667%" y="437" width="0.7407%" height="15" fill="rgb(234,67,33)"/><text x="6.9167%" y="447.50"></text></g><g><title>crossbeam_epoch::internal::Local::register (6 samples, 0.74%)</title><rect x="6.6667%" y="421" width="0.7407%" height="15" fill="rgb(247,98,35)"/><text x="6.9167%" y="431.50"></text></g><g><title>crossbeam_epoch::atomic::Owned&lt;T&gt;::new (6 samples, 0.74%)</title><rect x="6.6667%" y="405" width="0.7407%" height="15" fill="rgb(247,138,52)"/><text x="6.9167%" y="415.50"></text></g><g><title>crossbeam_epoch::atomic::Owned&lt;T&gt;::init (6 samples, 0.74%)</title><rect x="6.6667%" y="389" width="0.7407%" height="15" fill="rgb(213,79,30)"/><text x="6.9167%" y="399.50"></text></g><g><title>&lt;T as crossbeam_epoch::atomic::Pointable&gt;::init (6 samples, 0.74%)</title><rect x="6.6667%" y="373" width="0.7407%" height="15" fill="rgb(246,177,23)"/><text x="6.9167%" y="383.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (6 samples, 0.74%)</title><rect x="6.6667%" y="357" width="0.7407%" height="15" fill="rgb(230,62,27)"/><text x="6.9167%" y="367.50"></text></g><g><title>alloc::alloc::exchange_malloc (6 samples, 0.74%)</title><rect x="6.6667%" y="341" width="0.7407%" height="15" fill="rgb(216,154,8)"/><text x="6.9167%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (6 samples, 0.74%)</title><rect x="6.6667%" y="325" width="0.7407%" height="15" fill="rgb(244,35,45)"/><text x="6.9167%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.74%)</title><rect x="6.6667%" y="309" width="0.7407%" height="15" fill="rgb(251,115,12)"/><text x="6.9167%" y="319.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.74%)</title><rect x="6.6667%" y="293" width="0.7407%" height="15" fill="rgb(240,54,50)"/><text x="6.9167%" y="303.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.74%)</title><rect x="6.6667%" y="277" width="0.7407%" height="15" fill="rgb(233,84,52)"/><text x="6.9167%" y="287.50"></text></g><g><title>_int_malloc (6 samples, 0.74%)</title><rect x="6.6667%" y="261" width="0.7407%" height="15" fill="rgb(207,117,47)"/><text x="6.9167%" y="271.50"></text></g><g><title>[unknown] (6 samples, 0.74%)</title><rect x="6.6667%" y="245" width="0.7407%" height="15" fill="rgb(249,43,39)"/><text x="6.9167%" y="255.50"></text></g><g><title>[unknown] (6 samples, 0.74%)</title><rect x="6.6667%" y="229" width="0.7407%" height="15" fill="rgb(209,38,44)"/><text x="6.9167%" y="239.50"></text></g><g><title>[unknown] (6 samples, 0.74%)</title><rect x="6.6667%" y="213" width="0.7407%" height="15" fill="rgb(236,212,23)"/><text x="6.9167%" y="223.50"></text></g><g><title>[unknown] (6 samples, 0.74%)</title><rect x="6.6667%" y="197" width="0.7407%" height="15" fill="rgb(242,79,21)"/><text x="6.9167%" y="207.50"></text></g><g><title>[unknown] (6 samples, 0.74%)</title><rect x="6.6667%" y="181" width="0.7407%" height="15" fill="rgb(211,96,35)"/><text x="6.9167%" y="191.50"></text></g><g><title>[unknown] (6 samples, 0.74%)</title><rect x="6.6667%" y="165" width="0.7407%" height="15" fill="rgb(253,215,40)"/><text x="6.9167%" y="175.50"></text></g><g><title>[unknown] (6 samples, 0.74%)</title><rect x="6.6667%" y="149" width="0.7407%" height="15" fill="rgb(211,81,21)"/><text x="6.9167%" y="159.50"></text></g><g><title>[unknown] (6 samples, 0.74%)</title><rect x="6.6667%" y="133" width="0.7407%" height="15" fill="rgb(208,190,38)"/><text x="6.9167%" y="143.50"></text></g><g><title>[unknown] (6 samples, 0.74%)</title><rect x="6.6667%" y="117" width="0.7407%" height="15" fill="rgb(235,213,38)"/><text x="6.9167%" y="127.50"></text></g><g><title>[unknown] (6 samples, 0.74%)</title><rect x="6.6667%" y="101" width="0.7407%" height="15" fill="rgb(237,122,38)"/><text x="6.9167%" y="111.50"></text></g><g><title>[unknown] (6 samples, 0.74%)</title><rect x="6.6667%" y="85" width="0.7407%" height="15" fill="rgb(244,218,35)"/><text x="6.9167%" y="95.50"></text></g><g><title>[unknown] (6 samples, 0.74%)</title><rect x="6.6667%" y="69" width="0.7407%" height="15" fill="rgb(240,68,47)"/><text x="6.9167%" y="79.50"></text></g><g><title>[unknown] (5 samples, 0.62%)</title><rect x="6.7901%" y="53" width="0.6173%" height="15" fill="rgb(210,16,53)"/><text x="7.0401%" y="63.50"></text></g><g><title>[unknown] (5 samples, 0.62%)</title><rect x="6.7901%" y="37" width="0.6173%" height="15" fill="rgb(235,124,12)"/><text x="7.0401%" y="47.50"></text></g><g><title>std::panic::catch_unwind (13 samples, 1.60%)</title><rect x="6.6667%" y="917" width="1.6049%" height="15" fill="rgb(224,169,11)"/><text x="6.9167%" y="927.50"></text></g><g><title>std::panicking::try (13 samples, 1.60%)</title><rect x="6.6667%" y="901" width="1.6049%" height="15" fill="rgb(250,166,2)"/><text x="6.9167%" y="911.50"></text></g><g><title>std::panicking::try::do_call (13 samples, 1.60%)</title><rect x="6.6667%" y="885" width="1.6049%" height="15" fill="rgb(242,216,29)"/><text x="6.9167%" y="895.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (13 samples, 1.60%)</title><rect x="6.6667%" y="869" width="1.6049%" height="15" fill="rgb(230,116,27)"/><text x="6.9167%" y="879.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (13 samples, 1.60%)</title><rect x="6.6667%" y="853" width="1.6049%" height="15" fill="rgb(228,99,48)"/><text x="6.9167%" y="863.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (13 samples, 1.60%)</title><rect x="6.6667%" y="837" width="1.6049%" height="15" fill="rgb(253,11,6)"/><text x="6.9167%" y="847.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (13 samples, 1.60%)</title><rect x="6.6667%" y="821" width="1.6049%" height="15" fill="rgb(247,143,39)"/><text x="6.9167%" y="831.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (13 samples, 1.60%)</title><rect x="6.6667%" y="805" width="1.6049%" height="15" fill="rgb(236,97,10)"/><text x="6.9167%" y="815.50"></text></g><g><title>rayon_core::registry::main_loop (13 samples, 1.60%)</title><rect x="6.6667%" y="789" width="1.6049%" height="15" fill="rgb(233,208,19)"/><text x="6.9167%" y="799.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (13 samples, 1.60%)</title><rect x="6.6667%" y="773" width="1.6049%" height="15" fill="rgb(216,164,2)"/><text x="6.9167%" y="783.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (13 samples, 1.60%)</title><rect x="6.6667%" y="757" width="1.6049%" height="15" fill="rgb(220,129,5)"/><text x="6.9167%" y="767.50"></text></g><g><title>rayon_core::sleep::Sleep::no_work_found (7 samples, 0.86%)</title><rect x="7.4074%" y="741" width="0.8642%" height="15" fill="rgb(242,17,10)"/><text x="7.6574%" y="751.50"></text></g><g><title>__GI___sched_yield (7 samples, 0.86%)</title><rect x="7.4074%" y="725" width="0.8642%" height="15" fill="rgb(242,107,0)"/><text x="7.6574%" y="735.50"></text></g><g><title>[unknown] (7 samples, 0.86%)</title><rect x="7.4074%" y="709" width="0.8642%" height="15" fill="rgb(251,28,31)"/><text x="7.6574%" y="719.50"></text></g><g><title>[unknown] (7 samples, 0.86%)</title><rect x="7.4074%" y="693" width="0.8642%" height="15" fill="rgb(233,223,10)"/><text x="7.6574%" y="703.50"></text></g><g><title>[unknown] (6 samples, 0.74%)</title><rect x="7.5309%" y="677" width="0.7407%" height="15" fill="rgb(215,21,27)"/><text x="7.7809%" y="687.50"></text></g><g><title>[unknown] (6 samples, 0.74%)</title><rect x="7.5309%" y="661" width="0.7407%" height="15" fill="rgb(232,23,21)"/><text x="7.7809%" y="671.50"></text></g><g><title>[unknown] (6 samples, 0.74%)</title><rect x="7.5309%" y="645" width="0.7407%" height="15" fill="rgb(244,5,23)"/><text x="7.7809%" y="655.50"></text></g><g><title>[unknown] (6 samples, 0.74%)</title><rect x="7.5309%" y="629" width="0.7407%" height="15" fill="rgb(226,81,46)"/><text x="7.7809%" y="639.50"></text></g><g><title>[unknown] (6 samples, 0.74%)</title><rect x="7.5309%" y="613" width="0.7407%" height="15" fill="rgb(247,70,30)"/><text x="7.7809%" y="623.50"></text></g><g><title>[unknown] (6 samples, 0.74%)</title><rect x="7.5309%" y="597" width="0.7407%" height="15" fill="rgb(212,68,19)"/><text x="7.7809%" y="607.50"></text></g><g><title>[unknown] (6 samples, 0.74%)</title><rect x="7.5309%" y="581" width="0.7407%" height="15" fill="rgb(240,187,13)"/><text x="7.7809%" y="591.50"></text></g><g><title>[unknown] (6 samples, 0.74%)</title><rect x="7.5309%" y="565" width="0.7407%" height="15" fill="rgb(223,113,26)"/><text x="7.7809%" y="575.50"></text></g><g><title>[unknown] (6 samples, 0.74%)</title><rect x="7.5309%" y="549" width="0.7407%" height="15" fill="rgb(206,192,2)"/><text x="7.7809%" y="559.50"></text></g><g><title>[unknown] (6 samples, 0.74%)</title><rect x="7.5309%" y="533" width="0.7407%" height="15" fill="rgb(241,108,4)"/><text x="7.7809%" y="543.50"></text></g><g><title>[unknown] (6 samples, 0.74%)</title><rect x="7.5309%" y="517" width="0.7407%" height="15" fill="rgb(247,173,49)"/><text x="7.7809%" y="527.50"></text></g><g><title>[unknown] (6 samples, 0.74%)</title><rect x="7.5309%" y="501" width="0.7407%" height="15" fill="rgb(224,114,35)"/><text x="7.7809%" y="511.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (21 samples, 2.59%)</title><rect x="6.6667%" y="981" width="2.5926%" height="15" fill="rgb(245,159,27)"/><text x="6.9167%" y="991.50">&lt;a..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (21 samples, 2.59%)</title><rect x="6.6667%" y="965" width="2.5926%" height="15" fill="rgb(245,172,44)"/><text x="6.9167%" y="975.50">&lt;a..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (21 samples, 2.59%)</title><rect x="6.6667%" y="949" width="2.5926%" height="15" fill="rgb(236,23,11)"/><text x="6.9167%" y="959.50">co..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (21 samples, 2.59%)</title><rect x="6.6667%" y="933" width="2.5926%" height="15" fill="rgb(205,117,38)"/><text x="6.9167%" y="943.50">st..</text></g><g><title>std::sys::unix::thread::guard::current (8 samples, 0.99%)</title><rect x="8.2716%" y="917" width="0.9877%" height="15" fill="rgb(237,72,25)"/><text x="8.5216%" y="927.50"></text></g><g><title>pthread_getattr_np (8 samples, 0.99%)</title><rect x="8.2716%" y="901" width="0.9877%" height="15" fill="rgb(244,70,9)"/><text x="8.5216%" y="911.50"></text></g><g><title>__GI___libc_malloc (8 samples, 0.99%)</title><rect x="8.2716%" y="885" width="0.9877%" height="15" fill="rgb(217,125,39)"/><text x="8.5216%" y="895.50"></text></g><g><title>tcache_init (8 samples, 0.99%)</title><rect x="8.2716%" y="869" width="0.9877%" height="15" fill="rgb(235,36,10)"/><text x="8.5216%" y="879.50"></text></g><g><title>tcache_init (8 samples, 0.99%)</title><rect x="8.2716%" y="853" width="0.9877%" height="15" fill="rgb(251,123,47)"/><text x="8.5216%" y="863.50"></text></g><g><title>arena_get2 (8 samples, 0.99%)</title><rect x="8.2716%" y="837" width="0.9877%" height="15" fill="rgb(221,13,13)"/><text x="8.5216%" y="847.50"></text></g><g><title>arena_get2 (8 samples, 0.99%)</title><rect x="8.2716%" y="821" width="0.9877%" height="15" fill="rgb(238,131,9)"/><text x="8.5216%" y="831.50"></text></g><g><title>_int_new_arena (8 samples, 0.99%)</title><rect x="8.2716%" y="805" width="0.9877%" height="15" fill="rgb(211,50,8)"/><text x="8.5216%" y="815.50"></text></g><g><title>new_heap (8 samples, 0.99%)</title><rect x="8.2716%" y="789" width="0.9877%" height="15" fill="rgb(245,182,24)"/><text x="8.5216%" y="799.50"></text></g><g><title>__GI___mmap64 (8 samples, 0.99%)</title><rect x="8.2716%" y="773" width="0.9877%" height="15" fill="rgb(242,14,37)"/><text x="8.5216%" y="783.50"></text></g><g><title>__GI___mmap64 (8 samples, 0.99%)</title><rect x="8.2716%" y="757" width="0.9877%" height="15" fill="rgb(246,228,12)"/><text x="8.5216%" y="767.50"></text></g><g><title>[unknown] (8 samples, 0.99%)</title><rect x="8.2716%" y="741" width="0.9877%" height="15" fill="rgb(213,55,15)"/><text x="8.5216%" y="751.50"></text></g><g><title>[unknown] (8 samples, 0.99%)</title><rect x="8.2716%" y="725" width="0.9877%" height="15" fill="rgb(209,9,3)"/><text x="8.5216%" y="735.50"></text></g><g><title>[unknown] (8 samples, 0.99%)</title><rect x="8.2716%" y="709" width="0.9877%" height="15" fill="rgb(230,59,30)"/><text x="8.5216%" y="719.50"></text></g><g><title>[unknown] (8 samples, 0.99%)</title><rect x="8.2716%" y="693" width="0.9877%" height="15" fill="rgb(209,121,21)"/><text x="8.5216%" y="703.50"></text></g><g><title>[unknown] (8 samples, 0.99%)</title><rect x="8.2716%" y="677" width="0.9877%" height="15" fill="rgb(220,109,13)"/><text x="8.5216%" y="687.50"></text></g><g><title>[unknown] (8 samples, 0.99%)</title><rect x="8.2716%" y="661" width="0.9877%" height="15" fill="rgb(232,18,1)"/><text x="8.5216%" y="671.50"></text></g><g><title>[unknown] (8 samples, 0.99%)</title><rect x="8.2716%" y="645" width="0.9877%" height="15" fill="rgb(215,41,42)"/><text x="8.5216%" y="655.50"></text></g><g><title>[unknown] (8 samples, 0.99%)</title><rect x="8.2716%" y="629" width="0.9877%" height="15" fill="rgb(224,123,36)"/><text x="8.5216%" y="639.50"></text></g><g><title>[unknown] (8 samples, 0.99%)</title><rect x="8.2716%" y="613" width="0.9877%" height="15" fill="rgb(240,125,3)"/><text x="8.5216%" y="623.50"></text></g><g><title>[unknown] (7 samples, 0.86%)</title><rect x="8.3951%" y="597" width="0.8642%" height="15" fill="rgb(205,98,50)"/><text x="8.6451%" y="607.50"></text></g><g><title>[unknown] (7 samples, 0.86%)</title><rect x="8.3951%" y="581" width="0.8642%" height="15" fill="rgb(205,185,37)"/><text x="8.6451%" y="591.50"></text></g><g><title>[unknown] (6 samples, 0.74%)</title><rect x="8.5185%" y="565" width="0.7407%" height="15" fill="rgb(238,207,15)"/><text x="8.7685%" y="575.50"></text></g><g><title>[unknown] (6 samples, 0.74%)</title><rect x="8.5185%" y="549" width="0.7407%" height="15" fill="rgb(213,199,42)"/><text x="8.7685%" y="559.50"></text></g><g><title>[unknown] (5 samples, 0.62%)</title><rect x="8.6420%" y="533" width="0.6173%" height="15" fill="rgb(235,201,11)"/><text x="8.8920%" y="543.50"></text></g><g><title>[unknown] (5 samples, 0.62%)</title><rect x="8.6420%" y="517" width="0.6173%" height="15" fill="rgb(207,46,11)"/><text x="8.8920%" y="527.50"></text></g><g><title>__GI___clone (34 samples, 4.20%)</title><rect x="5.1852%" y="1029" width="4.1975%" height="15" fill="rgb(241,35,35)"/><text x="5.4352%" y="1039.50">__GI_..</text></g><g><title>start_thread (22 samples, 2.72%)</title><rect x="6.6667%" y="1013" width="2.7160%" height="15" fill="rgb(243,32,47)"/><text x="6.9167%" y="1023.50">st..</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (22 samples, 2.72%)</title><rect x="6.6667%" y="997" width="2.7160%" height="15" fill="rgb(247,202,23)"/><text x="6.9167%" y="1007.50">st..</text></g><g><title>std::sys::unix::stack_overflow::Handler::new (1 samples, 0.12%)</title><rect x="9.2593%" y="981" width="0.1235%" height="15" fill="rgb(219,102,11)"/><text x="9.5093%" y="991.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (1 samples, 0.12%)</title><rect x="9.2593%" y="965" width="0.1235%" height="15" fill="rgb(243,110,44)"/><text x="9.5093%" y="975.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (1 samples, 0.12%)</title><rect x="9.2593%" y="949" width="0.1235%" height="15" fill="rgb(222,74,54)"/><text x="9.5093%" y="959.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (1 samples, 0.12%)</title><rect x="9.2593%" y="933" width="0.1235%" height="15" fill="rgb(216,99,12)"/><text x="9.5093%" y="943.50"></text></g><g><title>__GI___mmap64 (1 samples, 0.12%)</title><rect x="9.2593%" y="917" width="0.1235%" height="15" fill="rgb(226,22,26)"/><text x="9.5093%" y="927.50"></text></g><g><title>__GI___mmap64 (1 samples, 0.12%)</title><rect x="9.2593%" y="901" width="0.1235%" height="15" fill="rgb(217,163,10)"/><text x="9.5093%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="9.2593%" y="885" width="0.1235%" height="15" fill="rgb(213,25,53)"/><text x="9.5093%" y="895.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="9.2593%" y="869" width="0.1235%" height="15" fill="rgb(252,105,26)"/><text x="9.5093%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="9.2593%" y="853" width="0.1235%" height="15" fill="rgb(220,39,43)"/><text x="9.5093%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="9.2593%" y="837" width="0.1235%" height="15" fill="rgb(229,68,48)"/><text x="9.5093%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="9.2593%" y="821" width="0.1235%" height="15" fill="rgb(252,8,32)"/><text x="9.5093%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="9.2593%" y="805" width="0.1235%" height="15" fill="rgb(223,20,43)"/><text x="9.5093%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="9.2593%" y="789" width="0.1235%" height="15" fill="rgb(229,81,49)"/><text x="9.5093%" y="799.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="9.2593%" y="773" width="0.1235%" height="15" fill="rgb(236,28,36)"/><text x="9.5093%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="9.2593%" y="757" width="0.1235%" height="15" fill="rgb(249,185,26)"/><text x="9.5093%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="9.2593%" y="741" width="0.1235%" height="15" fill="rgb(249,174,33)"/><text x="9.5093%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (1 samples, 0.12%)</title><rect x="9.3827%" y="757" width="0.1235%" height="15" fill="rgb(233,201,37)"/><text x="9.6327%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.12%)</title><rect x="9.3827%" y="741" width="0.1235%" height="15" fill="rgb(221,78,26)"/><text x="9.6327%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (1 samples, 0.12%)</title><rect x="9.3827%" y="725" width="0.1235%" height="15" fill="rgb(250,127,30)"/><text x="9.6327%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.12%)</title><rect x="9.3827%" y="709" width="0.1235%" height="15" fill="rgb(230,49,44)"/><text x="9.6327%" y="719.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.12%)</title><rect x="9.3827%" y="693" width="0.1235%" height="15" fill="rgb(229,67,23)"/><text x="9.6327%" y="703.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.12%)</title><rect x="9.3827%" y="677" width="0.1235%" height="15" fill="rgb(249,83,47)"/><text x="9.6327%" y="687.50"></text></g><g><title>_int_malloc (1 samples, 0.12%)</title><rect x="9.3827%" y="661" width="0.1235%" height="15" fill="rgb(215,43,3)"/><text x="9.6327%" y="671.50"></text></g><g><title>sysmalloc (1 samples, 0.12%)</title><rect x="9.3827%" y="645" width="0.1235%" height="15" fill="rgb(238,154,13)"/><text x="9.6327%" y="655.50"></text></g><g><title>__GI___mmap64 (1 samples, 0.12%)</title><rect x="9.3827%" y="629" width="0.1235%" height="15" fill="rgb(219,56,2)"/><text x="9.6327%" y="639.50"></text></g><g><title>__GI___mmap64 (1 samples, 0.12%)</title><rect x="9.3827%" y="613" width="0.1235%" height="15" fill="rgb(233,0,4)"/><text x="9.6327%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="9.3827%" y="597" width="0.1235%" height="15" fill="rgb(235,30,7)"/><text x="9.6327%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="9.3827%" y="581" width="0.1235%" height="15" fill="rgb(250,79,13)"/><text x="9.6327%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="9.3827%" y="565" width="0.1235%" height="15" fill="rgb(211,146,34)"/><text x="9.6327%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="9.3827%" y="549" width="0.1235%" height="15" fill="rgb(228,22,38)"/><text x="9.6327%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="9.3827%" y="533" width="0.1235%" height="15" fill="rgb(235,168,5)"/><text x="9.6327%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="9.3827%" y="517" width="0.1235%" height="15" fill="rgb(221,155,16)"/><text x="9.6327%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.25%)</title><rect x="9.3827%" y="837" width="0.2469%" height="15" fill="rgb(215,215,53)"/><text x="9.6327%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.25%)</title><rect x="9.3827%" y="821" width="0.2469%" height="15" fill="rgb(223,4,10)"/><text x="9.6327%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.25%)</title><rect x="9.3827%" y="805" width="0.2469%" height="15" fill="rgb(234,103,6)"/><text x="9.6327%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.25%)</title><rect x="9.3827%" y="789" width="0.2469%" height="15" fill="rgb(227,97,0)"/><text x="9.6327%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.25%)</title><rect x="9.3827%" y="773" width="0.2469%" height="15" fill="rgb(234,150,53)"/><text x="9.6327%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.12%)</title><rect x="9.5062%" y="757" width="0.1235%" height="15" fill="rgb(228,201,54)"/><text x="9.7562%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.12%)</title><rect x="9.5062%" y="741" width="0.1235%" height="15" fill="rgb(222,22,37)"/><text x="9.7562%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.12%)</title><rect x="9.5062%" y="725" width="0.1235%" height="15" fill="rgb(237,53,32)"/><text x="9.7562%" y="735.50"></text></g><g><title>core::iter::adapters::map_fold::{{closure}} (1 samples, 0.12%)</title><rect x="9.5062%" y="709" width="0.1235%" height="15" fill="rgb(233,25,53)"/><text x="9.7562%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.12%)</title><rect x="9.5062%" y="693" width="0.1235%" height="15" fill="rgb(210,40,34)"/><text x="9.7562%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend::{{closure}} (1 samples, 0.12%)</title><rect x="9.5062%" y="677" width="0.1235%" height="15" fill="rgb(241,220,44)"/><text x="9.7562%" y="687.50"></text></g><g><title>core::ptr::write (1 samples, 0.12%)</title><rect x="9.5062%" y="661" width="0.1235%" height="15" fill="rgb(235,28,35)"/><text x="9.7562%" y="671.50"></text></g><g><title>__memset_avx2_erms (1 samples, 0.12%)</title><rect x="9.5062%" y="645" width="0.1235%" height="15" fill="rgb(210,56,17)"/><text x="9.7562%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="9.5062%" y="629" width="0.1235%" height="15" fill="rgb(224,130,29)"/><text x="9.7562%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="9.5062%" y="613" width="0.1235%" height="15" fill="rgb(235,212,8)"/><text x="9.7562%" y="623.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_node (1 samples, 0.12%)</title><rect x="9.6296%" y="741" width="0.1235%" height="15" fill="rgb(223,33,50)"/><text x="9.8796%" y="751.50"></text></g><g><title>broccoli::query::colfind::oned::find_2d (1 samples, 0.12%)</title><rect x="9.6296%" y="725" width="0.1235%" height="15" fill="rgb(219,149,13)"/><text x="9.8796%" y="735.50"></text></g><g><title>broccoli::query::colfind::oned::find (1 samples, 0.12%)</title><rect x="9.6296%" y="709" width="0.1235%" height="15" fill="rgb(250,156,29)"/><text x="9.8796%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (1 samples, 0.12%)</title><rect x="9.6296%" y="693" width="0.1235%" height="15" fill="rgb(216,193,19)"/><text x="9.8796%" y="703.50"></text></g><g><title>broccoli::query::colfind::oned::find::{{closure}} (1 samples, 0.12%)</title><rect x="9.6296%" y="677" width="0.1235%" height="15" fill="rgb(216,135,14)"/><text x="9.8796%" y="687.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.12%)</title><rect x="9.6296%" y="661" width="0.1235%" height="15" fill="rgb(241,47,5)"/><text x="9.8796%" y="671.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.12%)</title><rect x="9.6296%" y="645" width="0.1235%" height="15" fill="rgb(233,42,35)"/><text x="9.8796%" y="655.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (1 samples, 0.12%)</title><rect x="9.6296%" y="629" width="0.1235%" height="15" fill="rgb(231,13,6)"/><text x="9.8796%" y="639.50"></text></g><g><title>data_gen::main::{{closure}}::{{closure}} (1 samples, 0.12%)</title><rect x="9.6296%" y="613" width="0.1235%" height="15" fill="rgb(207,181,40)"/><text x="9.8796%" y="623.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_node (2 samples, 0.25%)</title><rect x="9.7531%" y="725" width="0.2469%" height="15" fill="rgb(254,173,49)"/><text x="10.0031%" y="735.50"></text></g><g><title>broccoli::query::colfind::oned::find_2d (2 samples, 0.25%)</title><rect x="9.7531%" y="709" width="0.2469%" height="15" fill="rgb(221,1,38)"/><text x="10.0031%" y="719.50"></text></g><g><title>broccoli::query::colfind::oned::find (2 samples, 0.25%)</title><rect x="9.7531%" y="693" width="0.2469%" height="15" fill="rgb(206,124,46)"/><text x="10.0031%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (2 samples, 0.25%)</title><rect x="9.7531%" y="677" width="0.2469%" height="15" fill="rgb(249,21,11)"/><text x="10.0031%" y="687.50"></text></g><g><title>broccoli::query::colfind::oned::find::{{closure}} (2 samples, 0.25%)</title><rect x="9.7531%" y="661" width="0.2469%" height="15" fill="rgb(222,201,40)"/><text x="10.0031%" y="671.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (2 samples, 0.25%)</title><rect x="9.7531%" y="645" width="0.2469%" height="15" fill="rgb(235,61,29)"/><text x="10.0031%" y="655.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.12%)</title><rect x="9.8765%" y="629" width="0.1235%" height="15" fill="rgb(219,207,3)"/><text x="10.1265%" y="639.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (1 samples, 0.12%)</title><rect x="9.8765%" y="613" width="0.1235%" height="15" fill="rgb(222,56,46)"/><text x="10.1265%" y="623.50"></text></g><g><title>data_gen::main::{{closure}}::{{closure}} (1 samples, 0.12%)</title><rect x="9.8765%" y="597" width="0.1235%" height="15" fill="rgb(239,76,54)"/><text x="10.1265%" y="607.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_node (4 samples, 0.49%)</title><rect x="10.0000%" y="709" width="0.4938%" height="15" fill="rgb(231,124,27)"/><text x="10.2500%" y="719.50"></text></g><g><title>broccoli::query::colfind::oned::find_2d (4 samples, 0.49%)</title><rect x="10.0000%" y="693" width="0.4938%" height="15" fill="rgb(249,195,6)"/><text x="10.2500%" y="703.50"></text></g><g><title>broccoli::query::colfind::oned::find (4 samples, 0.49%)</title><rect x="10.0000%" y="677" width="0.4938%" height="15" fill="rgb(237,174,47)"/><text x="10.2500%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (4 samples, 0.49%)</title><rect x="10.0000%" y="661" width="0.4938%" height="15" fill="rgb(206,201,31)"/><text x="10.2500%" y="671.50"></text></g><g><title>broccoli::query::colfind::oned::find::{{closure}} (3 samples, 0.37%)</title><rect x="10.1235%" y="645" width="0.3704%" height="15" fill="rgb(231,57,52)"/><text x="10.3735%" y="655.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (2 samples, 0.25%)</title><rect x="10.2469%" y="629" width="0.2469%" height="15" fill="rgb(248,177,22)"/><text x="10.4969%" y="639.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (2 samples, 0.25%)</title><rect x="10.2469%" y="613" width="0.2469%" height="15" fill="rgb(215,211,37)"/><text x="10.4969%" y="623.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (2 samples, 0.25%)</title><rect x="10.2469%" y="597" width="0.2469%" height="15" fill="rgb(241,128,51)"/><text x="10.4969%" y="607.50"></text></g><g><title>data_gen::main::{{closure}}::{{closure}} (2 samples, 0.25%)</title><rect x="10.2469%" y="581" width="0.2469%" height="15" fill="rgb(227,165,31)"/><text x="10.4969%" y="591.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_node (2 samples, 0.25%)</title><rect x="10.4938%" y="693" width="0.2469%" height="15" fill="rgb(228,167,24)"/><text x="10.7438%" y="703.50"></text></g><g><title>broccoli::query::colfind::oned::find_2d (2 samples, 0.25%)</title><rect x="10.4938%" y="677" width="0.2469%" height="15" fill="rgb(228,143,12)"/><text x="10.7438%" y="687.50"></text></g><g><title>broccoli::query::colfind::oned::find (2 samples, 0.25%)</title><rect x="10.4938%" y="661" width="0.2469%" height="15" fill="rgb(249,149,8)"/><text x="10.7438%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (2 samples, 0.25%)</title><rect x="10.4938%" y="645" width="0.2469%" height="15" fill="rgb(243,35,44)"/><text x="10.7438%" y="655.50"></text></g><g><title>broccoli::query::colfind::oned::find::{{closure}} (1 samples, 0.12%)</title><rect x="10.6173%" y="629" width="0.1235%" height="15" fill="rgb(246,89,9)"/><text x="10.8673%" y="639.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.12%)</title><rect x="10.6173%" y="613" width="0.1235%" height="15" fill="rgb(233,213,13)"/><text x="10.8673%" y="623.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.12%)</title><rect x="10.6173%" y="597" width="0.1235%" height="15" fill="rgb(233,141,41)"/><text x="10.8673%" y="607.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (1 samples, 0.12%)</title><rect x="10.6173%" y="581" width="0.1235%" height="15" fill="rgb(239,167,4)"/><text x="10.8673%" y="591.50"></text></g><g><title>data_gen::main::{{closure}}::{{closure}} (1 samples, 0.12%)</title><rect x="10.6173%" y="565" width="0.1235%" height="15" fill="rgb(209,217,16)"/><text x="10.8673%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (3 samples, 0.37%)</title><rect x="10.7407%" y="629" width="0.3704%" height="15" fill="rgb(219,88,35)"/><text x="10.9907%" y="639.50"></text></g><g><title>broccoli::query::colfind::oned::find::{{closure}} (2 samples, 0.25%)</title><rect x="10.8642%" y="613" width="0.2469%" height="15" fill="rgb(220,193,23)"/><text x="11.1142%" y="623.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.12%)</title><rect x="10.9877%" y="597" width="0.1235%" height="15" fill="rgb(230,90,52)"/><text x="11.2377%" y="607.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.12%)</title><rect x="10.9877%" y="581" width="0.1235%" height="15" fill="rgb(252,106,19)"/><text x="11.2377%" y="591.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (1 samples, 0.12%)</title><rect x="10.9877%" y="565" width="0.1235%" height="15" fill="rgb(206,74,20)"/><text x="11.2377%" y="575.50"></text></g><g><title>data_gen::main::{{closure}}::{{closure}} (1 samples, 0.12%)</title><rect x="10.9877%" y="549" width="0.1235%" height="15" fill="rgb(230,138,44)"/><text x="11.2377%" y="559.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_node (5 samples, 0.62%)</title><rect x="10.7407%" y="677" width="0.6173%" height="15" fill="rgb(235,182,43)"/><text x="10.9907%" y="687.50"></text></g><g><title>broccoli::query::colfind::oned::find_2d (5 samples, 0.62%)</title><rect x="10.7407%" y="661" width="0.6173%" height="15" fill="rgb(242,16,51)"/><text x="10.9907%" y="671.50"></text></g><g><title>broccoli::query::colfind::oned::find (5 samples, 0.62%)</title><rect x="10.7407%" y="645" width="0.6173%" height="15" fill="rgb(248,9,4)"/><text x="10.9907%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (2 samples, 0.25%)</title><rect x="11.1111%" y="629" width="0.2469%" height="15" fill="rgb(210,31,22)"/><text x="11.3611%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (1 samples, 0.12%)</title><rect x="11.2346%" y="613" width="0.1235%" height="15" fill="rgb(239,54,39)"/><text x="11.4846%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.12%)</title><rect x="11.2346%" y="597" width="0.1235%" height="15" fill="rgb(230,99,41)"/><text x="11.4846%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (1 samples, 0.12%)</title><rect x="11.2346%" y="581" width="0.1235%" height="15" fill="rgb(253,106,12)"/><text x="11.4846%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.12%)</title><rect x="11.2346%" y="565" width="0.1235%" height="15" fill="rgb(213,46,41)"/><text x="11.4846%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.12%)</title><rect x="11.2346%" y="549" width="0.1235%" height="15" fill="rgb(215,133,35)"/><text x="11.4846%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::grow (1 samples, 0.12%)</title><rect x="11.2346%" y="533" width="0.1235%" height="15" fill="rgb(213,28,5)"/><text x="11.4846%" y="543.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.12%)</title><rect x="11.2346%" y="517" width="0.1235%" height="15" fill="rgb(215,77,49)"/><text x="11.4846%" y="527.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.12%)</title><rect x="11.2346%" y="501" width="0.1235%" height="15" fill="rgb(248,100,22)"/><text x="11.4846%" y="511.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.12%)</title><rect x="11.2346%" y="485" width="0.1235%" height="15" fill="rgb(208,67,9)"/><text x="11.4846%" y="495.50"></text></g><g><title>_int_realloc (1 samples, 0.12%)</title><rect x="11.2346%" y="469" width="0.1235%" height="15" fill="rgb(219,133,21)"/><text x="11.4846%" y="479.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.12%)</title><rect x="11.2346%" y="453" width="0.1235%" height="15" fill="rgb(246,46,29)"/><text x="11.4846%" y="463.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_node (1 samples, 0.12%)</title><rect x="11.3580%" y="661" width="0.1235%" height="15" fill="rgb(246,185,52)"/><text x="11.6080%" y="671.50"></text></g><g><title>broccoli::query::colfind::oned::find_2d (1 samples, 0.12%)</title><rect x="11.3580%" y="645" width="0.1235%" height="15" fill="rgb(252,136,11)"/><text x="11.6080%" y="655.50"></text></g><g><title>broccoli::query::colfind::oned::find (1 samples, 0.12%)</title><rect x="11.3580%" y="629" width="0.1235%" height="15" fill="rgb(219,138,53)"/><text x="11.6080%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.12%)</title><rect x="11.3580%" y="613" width="0.1235%" height="15" fill="rgb(211,51,23)"/><text x="11.6080%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (1 samples, 0.12%)</title><rect x="11.3580%" y="597" width="0.1235%" height="15" fill="rgb(247,221,28)"/><text x="11.6080%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.12%)</title><rect x="11.3580%" y="581" width="0.1235%" height="15" fill="rgb(251,222,45)"/><text x="11.6080%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (1 samples, 0.12%)</title><rect x="11.3580%" y="565" width="0.1235%" height="15" fill="rgb(217,162,53)"/><text x="11.6080%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.12%)</title><rect x="11.3580%" y="549" width="0.1235%" height="15" fill="rgb(229,93,14)"/><text x="11.6080%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.12%)</title><rect x="11.3580%" y="533" width="0.1235%" height="15" fill="rgb(209,67,49)"/><text x="11.6080%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::grow (1 samples, 0.12%)</title><rect x="11.3580%" y="517" width="0.1235%" height="15" fill="rgb(213,87,29)"/><text x="11.6080%" y="527.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.12%)</title><rect x="11.3580%" y="501" width="0.1235%" height="15" fill="rgb(205,151,52)"/><text x="11.6080%" y="511.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.12%)</title><rect x="11.3580%" y="485" width="0.1235%" height="15" fill="rgb(253,215,39)"/><text x="11.6080%" y="495.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.12%)</title><rect x="11.3580%" y="469" width="0.1235%" height="15" fill="rgb(221,220,41)"/><text x="11.6080%" y="479.50"></text></g><g><title>_int_realloc (1 samples, 0.12%)</title><rect x="11.3580%" y="453" width="0.1235%" height="15" fill="rgb(218,133,21)"/><text x="11.6080%" y="463.50"></text></g><g><title>_int_malloc (1 samples, 0.12%)</title><rect x="11.3580%" y="437" width="0.1235%" height="15" fill="rgb(221,193,43)"/><text x="11.6080%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (7 samples, 0.86%)</title><rect x="11.4815%" y="597" width="0.8642%" height="15" fill="rgb(240,128,52)"/><text x="11.7315%" y="607.50"></text></g><g><title>broccoli::query::colfind::oned::find::{{closure}} (7 samples, 0.86%)</title><rect x="11.4815%" y="581" width="0.8642%" height="15" fill="rgb(253,114,12)"/><text x="11.7315%" y="591.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (5 samples, 0.62%)</title><rect x="11.7284%" y="565" width="0.6173%" height="15" fill="rgb(215,223,47)"/><text x="11.9784%" y="575.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (4 samples, 0.49%)</title><rect x="11.8519%" y="549" width="0.4938%" height="15" fill="rgb(248,225,23)"/><text x="12.1019%" y="559.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (4 samples, 0.49%)</title><rect x="11.8519%" y="533" width="0.4938%" height="15" fill="rgb(250,108,0)"/><text x="12.1019%" y="543.50"></text></g><g><title>data_gen::main::{{closure}}::{{closure}} (4 samples, 0.49%)</title><rect x="11.8519%" y="517" width="0.4938%" height="15" fill="rgb(228,208,7)"/><text x="12.1019%" y="527.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_node (8 samples, 0.99%)</title><rect x="11.4815%" y="645" width="0.9877%" height="15" fill="rgb(244,45,10)"/><text x="11.7315%" y="655.50"></text></g><g><title>broccoli::query::colfind::oned::find_2d (8 samples, 0.99%)</title><rect x="11.4815%" y="629" width="0.9877%" height="15" fill="rgb(207,125,25)"/><text x="11.7315%" y="639.50"></text></g><g><title>broccoli::query::colfind::oned::find (8 samples, 0.99%)</title><rect x="11.4815%" y="613" width="0.9877%" height="15" fill="rgb(210,195,18)"/><text x="11.7315%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.12%)</title><rect x="12.3457%" y="597" width="0.1235%" height="15" fill="rgb(249,80,12)"/><text x="12.5957%" y="607.50"></text></g><g><title>core::ptr::write (1 samples, 0.12%)</title><rect x="12.3457%" y="581" width="0.1235%" height="15" fill="rgb(221,65,9)"/><text x="12.5957%" y="591.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (1 samples, 0.12%)</title><rect x="12.9630%" y="549" width="0.1235%" height="15" fill="rgb(235,49,36)"/><text x="13.2130%" y="559.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.12%)</title><rect x="13.0864%" y="533" width="0.1235%" height="15" fill="rgb(225,32,20)"/><text x="13.3364%" y="543.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (1 samples, 0.12%)</title><rect x="13.0864%" y="517" width="0.1235%" height="15" fill="rgb(215,141,46)"/><text x="13.3364%" y="527.50"></text></g><g><title>data_gen::main::{{closure}}::{{closure}} (1 samples, 0.12%)</title><rect x="13.0864%" y="501" width="0.1235%" height="15" fill="rgb(250,160,47)"/><text x="13.3364%" y="511.50"></text></g><g><title>broccoli::query::colfind::oned::find::{{closure}} (3 samples, 0.37%)</title><rect x="12.9630%" y="565" width="0.3704%" height="15" fill="rgb(216,222,40)"/><text x="13.2130%" y="575.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (2 samples, 0.25%)</title><rect x="13.0864%" y="549" width="0.2469%" height="15" fill="rgb(234,217,39)"/><text x="13.3364%" y="559.50"></text></g><g><title>axgeom::range::Range&lt;T&gt;::intersects (1 samples, 0.12%)</title><rect x="13.2099%" y="533" width="0.1235%" height="15" fill="rgb(207,178,40)"/><text x="13.4599%" y="543.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::le (1 samples, 0.12%)</title><rect x="13.2099%" y="517" width="0.1235%" height="15" fill="rgb(221,136,13)"/><text x="13.4599%" y="527.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_node (8 samples, 0.99%)</title><rect x="12.4691%" y="629" width="0.9877%" height="15" fill="rgb(249,199,10)"/><text x="12.7191%" y="639.50"></text></g><g><title>broccoli::query::colfind::oned::find_2d (8 samples, 0.99%)</title><rect x="12.4691%" y="613" width="0.9877%" height="15" fill="rgb(249,222,13)"/><text x="12.7191%" y="623.50"></text></g><g><title>broccoli::query::colfind::oned::find (8 samples, 0.99%)</title><rect x="12.4691%" y="597" width="0.9877%" height="15" fill="rgb(244,185,38)"/><text x="12.7191%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (8 samples, 0.99%)</title><rect x="12.4691%" y="581" width="0.9877%" height="15" fill="rgb(236,202,9)"/><text x="12.7191%" y="591.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.12%)</title><rect x="13.3333%" y="565" width="0.1235%" height="15" fill="rgb(250,229,37)"/><text x="13.5833%" y="575.50"></text></g><g><title>core::ptr::swap (1 samples, 0.12%)</title><rect x="13.3333%" y="549" width="0.1235%" height="15" fill="rgb(206,174,23)"/><text x="13.5833%" y="559.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.12%)</title><rect x="13.3333%" y="533" width="0.1235%" height="15" fill="rgb(211,33,43)"/><text x="13.5833%" y="543.50"></text></g><g><title>broccoli::query::colfind::oned::find::{{closure}} (3 samples, 0.37%)</title><rect x="13.5802%" y="549" width="0.3704%" height="15" fill="rgb(245,58,50)"/><text x="13.8302%" y="559.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (3 samples, 0.37%)</title><rect x="13.5802%" y="533" width="0.3704%" height="15" fill="rgb(244,68,36)"/><text x="13.8302%" y="543.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (2 samples, 0.25%)</title><rect x="13.7037%" y="517" width="0.2469%" height="15" fill="rgb(232,229,15)"/><text x="13.9537%" y="527.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (2 samples, 0.25%)</title><rect x="13.7037%" y="501" width="0.2469%" height="15" fill="rgb(254,30,23)"/><text x="13.9537%" y="511.50"></text></g><g><title>data_gen::main::{{closure}}::{{closure}} (2 samples, 0.25%)</title><rect x="13.7037%" y="485" width="0.2469%" height="15" fill="rgb(235,160,14)"/><text x="13.9537%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (5 samples, 0.62%)</title><rect x="13.4568%" y="565" width="0.6173%" height="15" fill="rgb(212,155,44)"/><text x="13.7068%" y="575.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.12%)</title><rect x="13.9506%" y="549" width="0.1235%" height="15" fill="rgb(226,2,50)"/><text x="14.2006%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (2 samples, 0.25%)</title><rect x="14.0741%" y="549" width="0.2469%" height="15" fill="rgb(234,177,6)"/><text x="14.3241%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.25%)</title><rect x="14.0741%" y="533" width="0.2469%" height="15" fill="rgb(217,24,9)"/><text x="14.3241%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (2 samples, 0.25%)</title><rect x="14.0741%" y="517" width="0.2469%" height="15" fill="rgb(220,13,46)"/><text x="14.3241%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.25%)</title><rect x="14.0741%" y="501" width="0.2469%" height="15" fill="rgb(239,221,27)"/><text x="14.3241%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.25%)</title><rect x="14.0741%" y="485" width="0.2469%" height="15" fill="rgb(222,198,25)"/><text x="14.3241%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::grow (2 samples, 0.25%)</title><rect x="14.0741%" y="469" width="0.2469%" height="15" fill="rgb(211,99,13)"/><text x="14.3241%" y="479.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.25%)</title><rect x="14.0741%" y="453" width="0.2469%" height="15" fill="rgb(232,111,31)"/><text x="14.3241%" y="463.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.25%)</title><rect x="14.0741%" y="437" width="0.2469%" height="15" fill="rgb(245,82,37)"/><text x="14.3241%" y="447.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.25%)</title><rect x="14.0741%" y="421" width="0.2469%" height="15" fill="rgb(227,149,46)"/><text x="14.3241%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (4 samples, 0.49%)</title><rect x="14.0741%" y="565" width="0.4938%" height="15" fill="rgb(218,36,50)"/><text x="14.3241%" y="575.50"></text></g><g><title>core::ptr::write (2 samples, 0.25%)</title><rect x="14.3210%" y="549" width="0.2469%" height="15" fill="rgb(226,80,48)"/><text x="14.5710%" y="559.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_node (10 samples, 1.23%)</title><rect x="13.4568%" y="613" width="1.2346%" height="15" fill="rgb(238,224,15)"/><text x="13.7068%" y="623.50"></text></g><g><title>broccoli::query::colfind::oned::find_2d (10 samples, 1.23%)</title><rect x="13.4568%" y="597" width="1.2346%" height="15" fill="rgb(241,136,10)"/><text x="13.7068%" y="607.50"></text></g><g><title>broccoli::query::colfind::oned::find (10 samples, 1.23%)</title><rect x="13.4568%" y="581" width="1.2346%" height="15" fill="rgb(208,32,45)"/><text x="13.7068%" y="591.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.12%)</title><rect x="14.5679%" y="565" width="0.1235%" height="15" fill="rgb(207,135,9)"/><text x="14.8179%" y="575.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.12%)</title><rect x="14.5679%" y="549" width="0.1235%" height="15" fill="rgb(206,86,44)"/><text x="14.8179%" y="559.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.12%)</title><rect x="14.5679%" y="533" width="0.1235%" height="15" fill="rgb(245,177,15)"/><text x="14.8179%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::dealloc (1 samples, 0.12%)</title><rect x="14.5679%" y="517" width="0.1235%" height="15" fill="rgb(206,64,50)"/><text x="14.8179%" y="527.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.12%)</title><rect x="14.5679%" y="501" width="0.1235%" height="15" fill="rgb(234,36,40)"/><text x="14.8179%" y="511.50"></text></g><g><title>__GI___libc_free (1 samples, 0.12%)</title><rect x="14.5679%" y="485" width="0.1235%" height="15" fill="rgb(213,64,8)"/><text x="14.8179%" y="495.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (2 samples, 0.25%)</title><rect x="14.9383%" y="517" width="0.2469%" height="15" fill="rgb(210,75,36)"/><text x="15.1883%" y="527.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.12%)</title><rect x="15.0617%" y="501" width="0.1235%" height="15" fill="rgb(229,88,21)"/><text x="15.3117%" y="511.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (1 samples, 0.12%)</title><rect x="15.0617%" y="485" width="0.1235%" height="15" fill="rgb(252,204,47)"/><text x="15.3117%" y="495.50"></text></g><g><title>data_gen::main::{{closure}}::{{closure}} (1 samples, 0.12%)</title><rect x="15.0617%" y="469" width="0.1235%" height="15" fill="rgb(208,77,27)"/><text x="15.3117%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (5 samples, 0.62%)</title><rect x="14.6914%" y="549" width="0.6173%" height="15" fill="rgb(221,76,26)"/><text x="14.9414%" y="559.50"></text></g><g><title>broccoli::query::colfind::oned::find::{{closure}} (4 samples, 0.49%)</title><rect x="14.8148%" y="533" width="0.4938%" height="15" fill="rgb(225,139,18)"/><text x="15.0648%" y="543.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.12%)</title><rect x="15.1852%" y="517" width="0.1235%" height="15" fill="rgb(230,137,11)"/><text x="15.4352%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.12%)</title><rect x="15.3086%" y="549" width="0.1235%" height="15" fill="rgb(212,28,1)"/><text x="15.5586%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (1 samples, 0.12%)</title><rect x="15.3086%" y="533" width="0.1235%" height="15" fill="rgb(248,164,17)"/><text x="15.5586%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.12%)</title><rect x="15.3086%" y="517" width="0.1235%" height="15" fill="rgb(222,171,42)"/><text x="15.5586%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (1 samples, 0.12%)</title><rect x="15.3086%" y="501" width="0.1235%" height="15" fill="rgb(243,84,45)"/><text x="15.5586%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.12%)</title><rect x="15.3086%" y="485" width="0.1235%" height="15" fill="rgb(252,49,23)"/><text x="15.5586%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.12%)</title><rect x="15.3086%" y="469" width="0.1235%" height="15" fill="rgb(215,19,7)"/><text x="15.5586%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::grow (1 samples, 0.12%)</title><rect x="15.3086%" y="453" width="0.1235%" height="15" fill="rgb(238,81,41)"/><text x="15.5586%" y="463.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.12%)</title><rect x="15.3086%" y="437" width="0.1235%" height="15" fill="rgb(210,199,37)"/><text x="15.5586%" y="447.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.12%)</title><rect x="15.3086%" y="421" width="0.1235%" height="15" fill="rgb(244,192,49)"/><text x="15.5586%" y="431.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.12%)</title><rect x="15.3086%" y="405" width="0.1235%" height="15" fill="rgb(226,211,11)"/><text x="15.5586%" y="415.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_node (7 samples, 0.86%)</title><rect x="14.6914%" y="597" width="0.8642%" height="15" fill="rgb(236,162,54)"/><text x="14.9414%" y="607.50"></text></g><g><title>broccoli::query::colfind::oned::find_2d (7 samples, 0.86%)</title><rect x="14.6914%" y="581" width="0.8642%" height="15" fill="rgb(220,229,9)"/><text x="14.9414%" y="591.50"></text></g><g><title>broccoli::query::colfind::oned::find (7 samples, 0.86%)</title><rect x="14.6914%" y="565" width="0.8642%" height="15" fill="rgb(250,87,22)"/><text x="14.9414%" y="575.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.12%)</title><rect x="15.4321%" y="549" width="0.1235%" height="15" fill="rgb(239,43,17)"/><text x="15.6821%" y="559.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.12%)</title><rect x="15.4321%" y="533" width="0.1235%" height="15" fill="rgb(231,177,25)"/><text x="15.6821%" y="543.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.12%)</title><rect x="15.4321%" y="517" width="0.1235%" height="15" fill="rgb(219,179,1)"/><text x="15.6821%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::dealloc (1 samples, 0.12%)</title><rect x="15.4321%" y="501" width="0.1235%" height="15" fill="rgb(238,219,53)"/><text x="15.6821%" y="511.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.12%)</title><rect x="15.4321%" y="485" width="0.1235%" height="15" fill="rgb(232,167,36)"/><text x="15.6821%" y="495.50"></text></g><g><title>_int_free (1 samples, 0.12%)</title><rect x="15.4321%" y="469" width="0.1235%" height="15" fill="rgb(244,19,51)"/><text x="15.6821%" y="479.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (5 samples, 0.62%)</title><rect x="18.2716%" y="501" width="0.6173%" height="15" fill="rgb(224,6,22)"/><text x="18.5216%" y="511.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (24 samples, 2.96%)</title><rect x="18.8889%" y="501" width="2.9630%" height="15" fill="rgb(224,145,5)"/><text x="19.1389%" y="511.50">&lt;br..</text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (11 samples, 1.36%)</title><rect x="20.4938%" y="485" width="1.3580%" height="15" fill="rgb(234,130,49)"/><text x="20.7438%" y="495.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (11 samples, 1.36%)</title><rect x="20.4938%" y="469" width="1.3580%" height="15" fill="rgb(254,6,2)"/><text x="20.7438%" y="479.50"></text></g><g><title>data_gen::main::{{closure}}::{{closure}} (11 samples, 1.36%)</title><rect x="20.4938%" y="453" width="1.3580%" height="15" fill="rgb(208,96,46)"/><text x="20.7438%" y="463.50"></text></g><g><title>broccoli::query::colfind::oned::find::{{closure}} (36 samples, 4.44%)</title><rect x="17.5309%" y="517" width="4.4444%" height="15" fill="rgb(239,3,39)"/><text x="17.7809%" y="527.50">brocc..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.12%)</title><rect x="21.8519%" y="501" width="0.1235%" height="15" fill="rgb(233,210,1)"/><text x="22.1019%" y="511.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.25%)</title><rect x="21.9753%" y="517" width="0.2469%" height="15" fill="rgb(244,137,37)"/><text x="22.2253%" y="527.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.12%)</title><rect x="22.0988%" y="501" width="0.1235%" height="15" fill="rgb(240,136,2)"/><text x="22.3488%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (58 samples, 7.16%)</title><rect x="15.5556%" y="533" width="7.1605%" height="15" fill="rgb(239,18,37)"/><text x="15.8056%" y="543.50">&lt;alloc::ve..</text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (4 samples, 0.49%)</title><rect x="22.2222%" y="517" width="0.4938%" height="15" fill="rgb(218,185,22)"/><text x="22.4722%" y="527.50"></text></g><g><title>core::ptr::swap (4 samples, 0.49%)</title><rect x="22.2222%" y="501" width="0.4938%" height="15" fill="rgb(225,218,4)"/><text x="22.4722%" y="511.50"></text></g><g><title>core::intrinsics::copy (4 samples, 0.49%)</title><rect x="22.2222%" y="485" width="0.4938%" height="15" fill="rgb(230,182,32)"/><text x="22.4722%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.12%)</title><rect x="22.8395%" y="453" width="0.1235%" height="15" fill="rgb(242,56,43)"/><text x="23.0895%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::grow (1 samples, 0.12%)</title><rect x="22.8395%" y="437" width="0.1235%" height="15" fill="rgb(233,99,24)"/><text x="23.0895%" y="447.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.12%)</title><rect x="22.8395%" y="421" width="0.1235%" height="15" fill="rgb(234,209,42)"/><text x="23.0895%" y="431.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.12%)</title><rect x="22.8395%" y="405" width="0.1235%" height="15" fill="rgb(227,7,12)"/><text x="23.0895%" y="415.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.12%)</title><rect x="22.8395%" y="389" width="0.1235%" height="15" fill="rgb(245,203,43)"/><text x="23.0895%" y="399.50"></text></g><g><title>_int_realloc (1 samples, 0.12%)</title><rect x="22.8395%" y="373" width="0.1235%" height="15" fill="rgb(238,205,33)"/><text x="23.0895%" y="383.50"></text></g><g><title>_int_malloc (1 samples, 0.12%)</title><rect x="22.8395%" y="357" width="0.1235%" height="15" fill="rgb(231,56,7)"/><text x="23.0895%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (2 samples, 0.25%)</title><rect x="22.8395%" y="517" width="0.2469%" height="15" fill="rgb(244,186,29)"/><text x="23.0895%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.25%)</title><rect x="22.8395%" y="501" width="0.2469%" height="15" fill="rgb(234,111,31)"/><text x="23.0895%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (2 samples, 0.25%)</title><rect x="22.8395%" y="485" width="0.2469%" height="15" fill="rgb(241,149,10)"/><text x="23.0895%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.25%)</title><rect x="22.8395%" y="469" width="0.2469%" height="15" fill="rgb(249,206,44)"/><text x="23.0895%" y="479.50"></text></g><g><title>core::cmp::max (1 samples, 0.12%)</title><rect x="22.9630%" y="453" width="0.1235%" height="15" fill="rgb(251,153,30)"/><text x="23.2130%" y="463.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.12%)</title><rect x="22.9630%" y="437" width="0.1235%" height="15" fill="rgb(239,152,38)"/><text x="23.2130%" y="447.50"></text></g><g><title>core::cmp::max_by (1 samples, 0.12%)</title><rect x="22.9630%" y="421" width="0.1235%" height="15" fill="rgb(249,139,47)"/><text x="23.2130%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="22.9630%" y="405" width="0.1235%" height="15" fill="rgb(244,64,35)"/><text x="23.2130%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="22.9630%" y="389" width="0.1235%" height="15" fill="rgb(216,46,15)"/><text x="23.2130%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="22.9630%" y="373" width="0.1235%" height="15" fill="rgb(250,74,19)"/><text x="23.2130%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="22.9630%" y="357" width="0.1235%" height="15" fill="rgb(249,42,33)"/><text x="23.2130%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="22.9630%" y="341" width="0.1235%" height="15" fill="rgb(242,149,17)"/><text x="23.2130%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="22.9630%" y="325" width="0.1235%" height="15" fill="rgb(244,29,21)"/><text x="23.2130%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="22.9630%" y="309" width="0.1235%" height="15" fill="rgb(220,130,37)"/><text x="23.2130%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="22.9630%" y="293" width="0.1235%" height="15" fill="rgb(211,67,2)"/><text x="23.2130%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (4 samples, 0.49%)</title><rect x="22.7160%" y="533" width="0.4938%" height="15" fill="rgb(235,68,52)"/><text x="22.9660%" y="543.50"></text></g><g><title>core::ptr::write (1 samples, 0.12%)</title><rect x="23.0864%" y="517" width="0.1235%" height="15" fill="rgb(246,142,3)"/><text x="23.3364%" y="527.50"></text></g><g><title>broccoli::query::colfind::inner::ColFindRecurser&lt;T,K,S&gt;::recurse_seq (66 samples, 8.15%)</title><rect x="15.5556%" y="597" width="8.1481%" height="15" fill="rgb(241,25,7)"/><text x="15.8056%" y="607.50">broccoli::q..</text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_node (66 samples, 8.15%)</title><rect x="15.5556%" y="581" width="8.1481%" height="15" fill="rgb(242,119,39)"/><text x="15.8056%" y="591.50">&lt;broccoli::..</text></g><g><title>broccoli::query::colfind::oned::find_2d (66 samples, 8.15%)</title><rect x="15.5556%" y="565" width="8.1481%" height="15" fill="rgb(241,98,45)"/><text x="15.8056%" y="575.50">broccoli::q..</text></g><g><title>broccoli::query::colfind::oned::find (66 samples, 8.15%)</title><rect x="15.5556%" y="549" width="8.1481%" height="15" fill="rgb(254,28,30)"/><text x="15.8056%" y="559.50">broccoli::q..</text></g><g><title>core::ptr::drop_in_place (4 samples, 0.49%)</title><rect x="23.2099%" y="533" width="0.4938%" height="15" fill="rgb(241,142,54)"/><text x="23.4599%" y="543.50"></text></g><g><title>core::ptr::drop_in_place (4 samples, 0.49%)</title><rect x="23.2099%" y="517" width="0.4938%" height="15" fill="rgb(222,85,15)"/><text x="23.4599%" y="527.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.49%)</title><rect x="23.2099%" y="501" width="0.4938%" height="15" fill="rgb(210,85,47)"/><text x="23.4599%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::dealloc (4 samples, 0.49%)</title><rect x="23.2099%" y="485" width="0.4938%" height="15" fill="rgb(224,206,25)"/><text x="23.4599%" y="495.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.49%)</title><rect x="23.2099%" y="469" width="0.4938%" height="15" fill="rgb(243,201,19)"/><text x="23.4599%" y="479.50"></text></g><g><title>_int_free (4 samples, 0.49%)</title><rect x="23.2099%" y="453" width="0.4938%" height="15" fill="rgb(236,59,4)"/><text x="23.4599%" y="463.50"></text></g><g><title>broccoli::pmut::PMut&lt;[T]&gt;::iter_mut (1 samples, 0.12%)</title><rect x="23.7037%" y="549" width="0.1235%" height="15" fill="rgb(254,179,45)"/><text x="23.9537%" y="559.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter_mut (1 samples, 0.12%)</title><rect x="23.7037%" y="533" width="0.1235%" height="15" fill="rgb(226,14,10)"/><text x="23.9537%" y="543.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::new (1 samples, 0.12%)</title><rect x="23.7037%" y="517" width="0.1235%" height="15" fill="rgb(244,27,41)"/><text x="23.9537%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.12%)</title><rect x="23.7037%" y="501" width="0.1235%" height="15" fill="rgb(235,35,32)"/><text x="23.9537%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.12%)</title><rect x="23.7037%" y="485" width="0.1235%" height="15" fill="rgb(218,68,31)"/><text x="23.9537%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::truncate (1 samples, 0.12%)</title><rect x="26.1728%" y="517" width="0.1235%" height="15" fill="rgb(207,120,37)"/><text x="26.4228%" y="527.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (4 samples, 0.49%)</title><rect x="26.9136%" y="501" width="0.4938%" height="15" fill="rgb(227,98,0)"/><text x="27.1636%" y="511.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (6 samples, 0.74%)</title><rect x="28.0247%" y="485" width="0.7407%" height="15" fill="rgb(207,7,3)"/><text x="28.2747%" y="495.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (6 samples, 0.74%)</title><rect x="28.0247%" y="469" width="0.7407%" height="15" fill="rgb(206,98,19)"/><text x="28.2747%" y="479.50"></text></g><g><title>data_gen::main::{{closure}}::{{closure}} (6 samples, 0.74%)</title><rect x="28.0247%" y="453" width="0.7407%" height="15" fill="rgb(217,5,26)"/><text x="28.2747%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (34 samples, 4.20%)</title><rect x="24.6914%" y="533" width="4.1975%" height="15" fill="rgb(235,190,38)"/><text x="24.9414%" y="543.50">&lt;allo..</text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (21 samples, 2.59%)</title><rect x="26.2963%" y="517" width="2.5926%" height="15" fill="rgb(247,86,24)"/><text x="26.5463%" y="527.50">br..</text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (12 samples, 1.48%)</title><rect x="27.4074%" y="501" width="1.4815%" height="15" fill="rgb(205,101,16)"/><text x="27.6574%" y="511.50"></text></g><g><title>axgeom::range::Range&lt;T&gt;::intersects (1 samples, 0.12%)</title><rect x="28.7654%" y="485" width="0.1235%" height="15" fill="rgb(246,168,33)"/><text x="29.0154%" y="495.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::le (1 samples, 0.12%)</title><rect x="28.7654%" y="469" width="0.1235%" height="15" fill="rgb(231,114,1)"/><text x="29.0154%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (2 samples, 0.25%)</title><rect x="28.8889%" y="533" width="0.2469%" height="15" fill="rgb(207,184,53)"/><text x="29.1389%" y="543.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (45 samples, 5.56%)</title><rect x="23.8272%" y="549" width="5.5556%" height="15" fill="rgb(224,95,51)"/><text x="24.0772%" y="559.50">broccol..</text></g><g><title>core::option::Option&lt;T&gt;::unwrap (2 samples, 0.25%)</title><rect x="29.1358%" y="533" width="0.2469%" height="15" fill="rgb(212,188,45)"/><text x="29.3858%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.12%)</title><rect x="29.3827%" y="549" width="0.1235%" height="15" fill="rgb(223,154,38)"/><text x="29.6327%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.12%)</title><rect x="29.3827%" y="533" width="0.1235%" height="15" fill="rgb(251,22,52)"/><text x="29.6327%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.12%)</title><rect x="29.3827%" y="517" width="0.1235%" height="15" fill="rgb(229,209,22)"/><text x="29.6327%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.12%)</title><rect x="29.3827%" y="501" width="0.1235%" height="15" fill="rgb(234,138,34)"/><text x="29.6327%" y="511.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.25%)</title><rect x="29.5062%" y="549" width="0.2469%" height="15" fill="rgb(212,95,11)"/><text x="29.7562%" y="559.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.25%)</title><rect x="29.5062%" y="533" width="0.2469%" height="15" fill="rgb(240,179,47)"/><text x="29.7562%" y="543.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.25%)</title><rect x="29.5062%" y="517" width="0.2469%" height="15" fill="rgb(240,163,11)"/><text x="29.7562%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::dealloc (2 samples, 0.25%)</title><rect x="29.5062%" y="501" width="0.2469%" height="15" fill="rgb(236,37,12)"/><text x="29.7562%" y="511.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.12%)</title><rect x="29.6296%" y="485" width="0.1235%" height="15" fill="rgb(232,164,16)"/><text x="29.8796%" y="495.50"></text></g><g><title>__GI___libc_free (1 samples, 0.12%)</title><rect x="29.6296%" y="469" width="0.1235%" height="15" fill="rgb(244,205,15)"/><text x="29.8796%" y="479.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.12%)</title><rect x="29.8765%" y="469" width="0.1235%" height="15" fill="rgb(223,117,47)"/><text x="30.1265%" y="479.50"></text></g><g><title>&lt;core::slice::sort::CopyOnDrop&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.12%)</title><rect x="29.8765%" y="453" width="0.1235%" height="15" fill="rgb(244,107,35)"/><text x="30.1265%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.12%)</title><rect x="29.8765%" y="437" width="0.1235%" height="15" fill="rgb(205,140,8)"/><text x="30.1265%" y="447.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (57 samples, 7.04%)</title><rect x="23.7037%" y="565" width="7.0370%" height="15" fill="rgb(228,84,46)"/><text x="23.9537%" y="575.50">broccoli:..</text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by (8 samples, 0.99%)</title><rect x="29.7531%" y="549" width="0.9877%" height="15" fill="rgb(254,188,9)"/><text x="30.0031%" y="559.50"></text></g><g><title>core::slice::sort::quicksort (8 samples, 0.99%)</title><rect x="29.7531%" y="533" width="0.9877%" height="15" fill="rgb(206,112,54)"/><text x="30.0031%" y="543.50"></text></g><g><title>core::slice::sort::recurse (8 samples, 0.99%)</title><rect x="29.7531%" y="517" width="0.9877%" height="15" fill="rgb(216,84,49)"/><text x="30.0031%" y="527.50"></text></g><g><title>core::slice::sort::insertion_sort (8 samples, 0.99%)</title><rect x="29.7531%" y="501" width="0.9877%" height="15" fill="rgb(214,194,35)"/><text x="30.0031%" y="511.50"></text></g><g><title>core::slice::sort::shift_tail (8 samples, 0.99%)</title><rect x="29.7531%" y="485" width="0.9877%" height="15" fill="rgb(249,28,3)"/><text x="30.0031%" y="495.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by::{{closure}} (6 samples, 0.74%)</title><rect x="30.0000%" y="469" width="0.7407%" height="15" fill="rgb(222,56,52)"/><text x="30.2500%" y="479.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1::{{closure}} (6 samples, 0.74%)</title><rect x="30.0000%" y="453" width="0.7407%" height="15" fill="rgb(245,217,50)"/><text x="30.2500%" y="463.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1::compare_bots (6 samples, 0.74%)</title><rect x="30.0000%" y="437" width="0.7407%" height="15" fill="rgb(213,201,24)"/><text x="30.2500%" y="447.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (4 samples, 0.49%)</title><rect x="30.2469%" y="421" width="0.4938%" height="15" fill="rgb(248,116,28)"/><text x="30.4969%" y="431.50"></text></g><g><title>broccoli::query::colfind::inner::ColFindRecurser&lt;T,K,S&gt;::recurse_seq (131 samples, 16.17%)</title><rect x="14.6914%" y="613" width="16.1728%" height="15" fill="rgb(219,72,43)"/><text x="14.9414%" y="623.50">broccoli::query::colfind:..</text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (58 samples, 7.16%)</title><rect x="23.7037%" y="597" width="7.1605%" height="15" fill="rgb(209,138,14)"/><text x="23.9537%" y="607.50">broccoli::..</text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (58 samples, 7.16%)</title><rect x="23.7037%" y="581" width="7.1605%" height="15" fill="rgb(222,18,33)"/><text x="23.9537%" y="591.50">&lt;broccoli:..</text></g><g><title>broccoli::query::colfind::oned::get_section_mut (1 samples, 0.12%)</title><rect x="30.7407%" y="565" width="0.1235%" height="15" fill="rgb(213,199,7)"/><text x="30.9907%" y="575.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (5 samples, 0.62%)</title><rect x="33.3333%" y="517" width="0.6173%" height="15" fill="rgb(250,110,10)"/><text x="33.5833%" y="527.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (8 samples, 0.99%)</title><rect x="34.6914%" y="501" width="0.9877%" height="15" fill="rgb(248,123,6)"/><text x="34.9414%" y="511.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (8 samples, 0.99%)</title><rect x="34.6914%" y="485" width="0.9877%" height="15" fill="rgb(206,91,31)"/><text x="34.9414%" y="495.50"></text></g><g><title>data_gen::main::{{closure}}::{{closure}} (8 samples, 0.99%)</title><rect x="34.6914%" y="469" width="0.9877%" height="15" fill="rgb(211,154,13)"/><text x="34.9414%" y="479.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (17 samples, 2.10%)</title><rect x="33.9506%" y="517" width="2.0988%" height="15" fill="rgb(225,148,7)"/><text x="34.2006%" y="527.50">&lt;..</text></g><g><title>axgeom::range::Range&lt;T&gt;::intersects (3 samples, 0.37%)</title><rect x="35.6790%" y="501" width="0.3704%" height="15" fill="rgb(220,160,43)"/><text x="35.9290%" y="511.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::le (3 samples, 0.37%)</title><rect x="35.6790%" y="485" width="0.3704%" height="15" fill="rgb(213,52,39)"/><text x="35.9290%" y="495.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (36 samples, 4.44%)</title><rect x="32.7160%" y="533" width="4.4444%" height="15" fill="rgb(243,137,7)"/><text x="32.9660%" y="543.50">brocc..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (9 samples, 1.11%)</title><rect x="36.0494%" y="517" width="1.1111%" height="15" fill="rgb(230,79,13)"/><text x="36.2994%" y="527.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.12%)</title><rect x="37.1605%" y="533" width="0.1235%" height="15" fill="rgb(247,105,23)"/><text x="37.4105%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (50 samples, 6.17%)</title><rect x="31.2346%" y="549" width="6.1728%" height="15" fill="rgb(223,179,41)"/><text x="31.4846%" y="559.50">&lt;alloc::..</text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.12%)</title><rect x="37.2840%" y="533" width="0.1235%" height="15" fill="rgb(218,9,34)"/><text x="37.5340%" y="543.50"></text></g><g><title>core::ptr::swap (1 samples, 0.12%)</title><rect x="37.2840%" y="517" width="0.1235%" height="15" fill="rgb(222,106,8)"/><text x="37.5340%" y="527.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.12%)</title><rect x="37.2840%" y="501" width="0.1235%" height="15" fill="rgb(211,220,0)"/><text x="37.5340%" y="511.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (3 samples, 0.37%)</title><rect x="37.4074%" y="549" width="0.3704%" height="15" fill="rgb(229,52,16)"/><text x="37.6574%" y="559.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (3 samples, 0.37%)</title><rect x="37.4074%" y="533" width="0.3704%" height="15" fill="rgb(212,155,18)"/><text x="37.6574%" y="543.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek::{{closure}} (2 samples, 0.25%)</title><rect x="37.5309%" y="517" width="0.2469%" height="15" fill="rgb(242,21,14)"/><text x="37.7809%" y="527.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.25%)</title><rect x="37.5309%" y="501" width="0.2469%" height="15" fill="rgb(222,19,48)"/><text x="37.7809%" y="511.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.25%)</title><rect x="37.5309%" y="485" width="0.2469%" height="15" fill="rgb(232,45,27)"/><text x="37.7809%" y="495.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (59 samples, 7.28%)</title><rect x="30.8642%" y="581" width="7.2840%" height="15" fill="rgb(249,103,42)"/><text x="31.1142%" y="591.50">broccoli::..</text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (59 samples, 7.28%)</title><rect x="30.8642%" y="565" width="7.2840%" height="15" fill="rgb(246,81,33)"/><text x="31.1142%" y="575.50">broccoli::..</text></g><g><title>core::option::Option&lt;T&gt;::unwrap (3 samples, 0.37%)</title><rect x="37.7778%" y="549" width="0.3704%" height="15" fill="rgb(252,33,42)"/><text x="38.0278%" y="559.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (2 samples, 0.25%)</title><rect x="38.8889%" y="517" width="0.2469%" height="15" fill="rgb(209,212,41)"/><text x="39.1389%" y="527.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.12%)</title><rect x="39.0123%" y="501" width="0.1235%" height="15" fill="rgb(207,154,6)"/><text x="39.2623%" y="511.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (1 samples, 0.12%)</title><rect x="39.0123%" y="485" width="0.1235%" height="15" fill="rgb(223,64,47)"/><text x="39.2623%" y="495.50"></text></g><g><title>data_gen::main::{{closure}}::{{closure}} (1 samples, 0.12%)</title><rect x="39.0123%" y="469" width="0.1235%" height="15" fill="rgb(211,161,38)"/><text x="39.2623%" y="479.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (3 samples, 0.37%)</title><rect x="38.8889%" y="533" width="0.3704%" height="15" fill="rgb(219,138,40)"/><text x="39.1389%" y="543.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.12%)</title><rect x="39.1358%" y="517" width="0.1235%" height="15" fill="rgb(241,228,46)"/><text x="39.3858%" y="527.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (10 samples, 1.23%)</title><rect x="38.1481%" y="565" width="1.2346%" height="15" fill="rgb(223,209,38)"/><text x="38.3981%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (6 samples, 0.74%)</title><rect x="38.6420%" y="549" width="0.7407%" height="15" fill="rgb(236,164,45)"/><text x="38.8920%" y="559.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.12%)</title><rect x="39.2593%" y="533" width="0.1235%" height="15" fill="rgb(231,15,5)"/><text x="39.5093%" y="543.50"></text></g><g><title>core::ptr::swap (1 samples, 0.12%)</title><rect x="39.2593%" y="517" width="0.1235%" height="15" fill="rgb(252,35,15)"/><text x="39.5093%" y="527.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.12%)</title><rect x="39.2593%" y="501" width="0.1235%" height="15" fill="rgb(248,181,18)"/><text x="39.5093%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.12%)</title><rect x="39.3827%" y="565" width="0.1235%" height="15" fill="rgb(233,39,42)"/><text x="39.6327%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.12%)</title><rect x="39.3827%" y="549" width="0.1235%" height="15" fill="rgb(238,110,33)"/><text x="39.6327%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.12%)</title><rect x="39.3827%" y="533" width="0.1235%" height="15" fill="rgb(233,195,10)"/><text x="39.6327%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.12%)</title><rect x="39.3827%" y="517" width="0.1235%" height="15" fill="rgb(254,105,3)"/><text x="39.6327%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.12%)</title><rect x="39.3827%" y="501" width="0.1235%" height="15" fill="rgb(221,225,9)"/><text x="39.6327%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_desugared (1 samples, 0.12%)</title><rect x="39.3827%" y="485" width="0.1235%" height="15" fill="rgb(224,227,45)"/><text x="39.6327%" y="495.50"></text></g><g><title>core::ptr::write (1 samples, 0.12%)</title><rect x="39.3827%" y="469" width="0.1235%" height="15" fill="rgb(229,198,43)"/><text x="39.6327%" y="479.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.12%)</title><rect x="39.5062%" y="501" width="0.1235%" height="15" fill="rgb(206,209,35)"/><text x="39.7562%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.25%)</title><rect x="39.6296%" y="485" width="0.2469%" height="15" fill="rgb(245,195,53)"/><text x="39.8796%" y="495.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (15 samples, 1.85%)</title><rect x="38.1481%" y="581" width="1.8519%" height="15" fill="rgb(240,92,26)"/><text x="38.3981%" y="591.50">b..</text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by (4 samples, 0.49%)</title><rect x="39.5062%" y="565" width="0.4938%" height="15" fill="rgb(207,40,23)"/><text x="39.7562%" y="575.50"></text></g><g><title>core::slice::sort::quicksort (4 samples, 0.49%)</title><rect x="39.5062%" y="549" width="0.4938%" height="15" fill="rgb(223,111,35)"/><text x="39.7562%" y="559.50"></text></g><g><title>core::slice::sort::recurse (4 samples, 0.49%)</title><rect x="39.5062%" y="533" width="0.4938%" height="15" fill="rgb(229,147,28)"/><text x="39.7562%" y="543.50"></text></g><g><title>core::slice::sort::insertion_sort (4 samples, 0.49%)</title><rect x="39.5062%" y="517" width="0.4938%" height="15" fill="rgb(211,29,28)"/><text x="39.7562%" y="527.50"></text></g><g><title>core::slice::sort::shift_tail (3 samples, 0.37%)</title><rect x="39.6296%" y="501" width="0.3704%" height="15" fill="rgb(228,72,33)"/><text x="39.8796%" y="511.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by::{{closure}} (1 samples, 0.12%)</title><rect x="39.8765%" y="485" width="0.1235%" height="15" fill="rgb(205,214,31)"/><text x="40.1265%" y="495.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1::{{closure}} (1 samples, 0.12%)</title><rect x="39.8765%" y="469" width="0.1235%" height="15" fill="rgb(224,111,15)"/><text x="40.1265%" y="479.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1::compare_bots (1 samples, 0.12%)</title><rect x="39.8765%" y="453" width="0.1235%" height="15" fill="rgb(253,21,26)"/><text x="40.1265%" y="463.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.12%)</title><rect x="39.8765%" y="437" width="0.1235%" height="15" fill="rgb(245,139,43)"/><text x="40.1265%" y="447.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (75 samples, 9.26%)</title><rect x="30.8642%" y="597" width="9.2593%" height="15" fill="rgb(252,170,7)"/><text x="31.1142%" y="607.50">&lt;broccoli::qu..</text></g><g><title>broccoli::query::colfind::oned::get_section_mut (1 samples, 0.12%)</title><rect x="40.0000%" y="581" width="0.1235%" height="15" fill="rgb(231,118,14)"/><text x="40.2500%" y="591.50"></text></g><g><title>broccoli::pmut::PMut&lt;[T]&gt;::truncate_from (1 samples, 0.12%)</title><rect x="40.0000%" y="565" width="0.1235%" height="15" fill="rgb(238,83,0)"/><text x="40.2500%" y="575.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1 samples, 0.12%)</title><rect x="40.0000%" y="549" width="0.1235%" height="15" fill="rgb(221,39,39)"/><text x="40.2500%" y="559.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.12%)</title><rect x="40.0000%" y="533" width="0.1235%" height="15" fill="rgb(222,119,46)"/><text x="40.2500%" y="543.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (5 samples, 0.62%)</title><rect x="42.2222%" y="485" width="0.6173%" height="15" fill="rgb(222,165,49)"/><text x="42.4722%" y="495.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (5 samples, 0.62%)</title><rect x="42.2222%" y="469" width="0.6173%" height="15" fill="rgb(219,113,52)"/><text x="42.4722%" y="479.50"></text></g><g><title>data_gen::main::{{closure}}::{{closure}} (5 samples, 0.62%)</title><rect x="42.2222%" y="453" width="0.6173%" height="15" fill="rgb(214,7,15)"/><text x="42.4722%" y="463.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (9 samples, 1.11%)</title><rect x="41.8519%" y="501" width="1.1111%" height="15" fill="rgb(235,32,4)"/><text x="42.1019%" y="511.50"></text></g><g><title>axgeom::range::Range&lt;T&gt;::intersects (1 samples, 0.12%)</title><rect x="42.8395%" y="485" width="0.1235%" height="15" fill="rgb(238,90,54)"/><text x="43.0895%" y="495.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::le (1 samples, 0.12%)</title><rect x="42.8395%" y="469" width="0.1235%" height="15" fill="rgb(213,208,19)"/><text x="43.0895%" y="479.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (14 samples, 1.73%)</title><rect x="41.6049%" y="517" width="1.7284%" height="15" fill="rgb(233,156,4)"/><text x="41.8549%" y="527.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (3 samples, 0.37%)</title><rect x="42.9630%" y="501" width="0.3704%" height="15" fill="rgb(207,194,5)"/><text x="43.2130%" y="511.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.12%)</title><rect x="43.3333%" y="517" width="0.1235%" height="15" fill="rgb(206,111,30)"/><text x="43.5833%" y="527.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.12%)</title><rect x="43.3333%" y="501" width="0.1235%" height="15" fill="rgb(243,70,54)"/><text x="43.5833%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (26 samples, 3.21%)</title><rect x="40.3704%" y="533" width="3.2099%" height="15" fill="rgb(242,28,8)"/><text x="40.6204%" y="543.50">&lt;al..</text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.12%)</title><rect x="43.4568%" y="517" width="0.1235%" height="15" fill="rgb(219,106,18)"/><text x="43.7068%" y="527.50"></text></g><g><title>core::ptr::swap (1 samples, 0.12%)</title><rect x="43.4568%" y="501" width="0.1235%" height="15" fill="rgb(244,222,10)"/><text x="43.7068%" y="511.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.12%)</title><rect x="43.4568%" y="485" width="0.1235%" height="15" fill="rgb(236,179,52)"/><text x="43.7068%" y="495.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (2 samples, 0.25%)</title><rect x="43.5802%" y="533" width="0.2469%" height="15" fill="rgb(213,23,39)"/><text x="43.8302%" y="543.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (2 samples, 0.25%)</title><rect x="43.5802%" y="517" width="0.2469%" height="15" fill="rgb(238,48,10)"/><text x="43.8302%" y="527.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek::{{closure}} (2 samples, 0.25%)</title><rect x="43.5802%" y="501" width="0.2469%" height="15" fill="rgb(251,196,23)"/><text x="43.8302%" y="511.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.25%)</title><rect x="43.5802%" y="485" width="0.2469%" height="15" fill="rgb(250,152,24)"/><text x="43.8302%" y="495.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.25%)</title><rect x="43.5802%" y="469" width="0.2469%" height="15" fill="rgb(209,150,17)"/><text x="43.8302%" y="479.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (32 samples, 3.95%)</title><rect x="40.1235%" y="581" width="3.9506%" height="15" fill="rgb(234,202,34)"/><text x="40.3735%" y="591.50">&lt;bro..</text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (32 samples, 3.95%)</title><rect x="40.1235%" y="565" width="3.9506%" height="15" fill="rgb(253,148,53)"/><text x="40.3735%" y="575.50">broc..</text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (32 samples, 3.95%)</title><rect x="40.1235%" y="549" width="3.9506%" height="15" fill="rgb(218,129,16)"/><text x="40.3735%" y="559.50">broc..</text></g><g><title>core::option::Option&lt;T&gt;::unwrap (2 samples, 0.25%)</title><rect x="43.8272%" y="533" width="0.2469%" height="15" fill="rgb(216,85,19)"/><text x="44.0772%" y="543.50"></text></g><g><title>broccoli::query::colfind::inner::ColFindRecurser&lt;T,K,S&gt;::recurse_seq (249 samples, 30.74%)</title><rect x="13.4568%" y="629" width="30.7407%" height="15" fill="rgb(235,228,7)"/><text x="13.7068%" y="639.50">broccoli::query::colfind::inner::ColFindRecurser&lt;T..</text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (108 samples, 13.33%)</title><rect x="30.8642%" y="613" width="13.3333%" height="15" fill="rgb(245,175,0)"/><text x="31.1142%" y="623.50">broccoli::query::col..</text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (33 samples, 4.07%)</title><rect x="40.1235%" y="597" width="4.0741%" height="15" fill="rgb(208,168,36)"/><text x="40.3735%" y="607.50">broc..</text></g><g><title>broccoli::query::colfind::node_handle::DestructuredNodeLeaf&lt;T,AnchorAxis&gt;::new (1 samples, 0.12%)</title><rect x="44.0741%" y="581" width="0.1235%" height="15" fill="rgb(246,171,24)"/><text x="44.3241%" y="591.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (1 samples, 0.12%)</title><rect x="44.0741%" y="565" width="0.1235%" height="15" fill="rgb(215,142,24)"/><text x="44.3241%" y="575.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (1 samples, 0.12%)</title><rect x="45.1852%" y="533" width="0.1235%" height="15" fill="rgb(250,187,7)"/><text x="45.4352%" y="543.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (2 samples, 0.25%)</title><rect x="45.3086%" y="517" width="0.2469%" height="15" fill="rgb(228,66,33)"/><text x="45.5586%" y="527.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (2 samples, 0.25%)</title><rect x="45.3086%" y="501" width="0.2469%" height="15" fill="rgb(234,215,21)"/><text x="45.5586%" y="511.50"></text></g><g><title>data_gen::main::{{closure}}::{{closure}} (2 samples, 0.25%)</title><rect x="45.3086%" y="485" width="0.2469%" height="15" fill="rgb(222,191,20)"/><text x="45.5586%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (8 samples, 0.99%)</title><rect x="44.6914%" y="565" width="0.9877%" height="15" fill="rgb(245,79,54)"/><text x="44.9414%" y="575.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (5 samples, 0.62%)</title><rect x="45.0617%" y="549" width="0.6173%" height="15" fill="rgb(240,10,37)"/><text x="45.3117%" y="559.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (3 samples, 0.37%)</title><rect x="45.3086%" y="533" width="0.3704%" height="15" fill="rgb(214,192,32)"/><text x="45.5586%" y="543.50"></text></g><g><title>axgeom::range::Range&lt;T&gt;::intersects (1 samples, 0.12%)</title><rect x="45.5556%" y="517" width="0.1235%" height="15" fill="rgb(209,36,54)"/><text x="45.8056%" y="527.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::le (1 samples, 0.12%)</title><rect x="45.5556%" y="501" width="0.1235%" height="15" fill="rgb(220,10,11)"/><text x="45.8056%" y="511.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (13 samples, 1.60%)</title><rect x="44.1975%" y="581" width="1.6049%" height="15" fill="rgb(221,106,17)"/><text x="44.4475%" y="591.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.12%)</title><rect x="45.6790%" y="565" width="0.1235%" height="15" fill="rgb(251,142,44)"/><text x="45.9290%" y="575.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (14 samples, 1.73%)</title><rect x="44.1975%" y="613" width="1.7284%" height="15" fill="rgb(238,13,15)"/><text x="44.4475%" y="623.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (14 samples, 1.73%)</title><rect x="44.1975%" y="597" width="1.7284%" height="15" fill="rgb(208,107,27)"/><text x="44.4475%" y="607.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by (1 samples, 0.12%)</title><rect x="45.8025%" y="581" width="0.1235%" height="15" fill="rgb(205,136,37)"/><text x="46.0525%" y="591.50"></text></g><g><title>core::slice::sort::quicksort (1 samples, 0.12%)</title><rect x="45.8025%" y="565" width="0.1235%" height="15" fill="rgb(250,205,27)"/><text x="46.0525%" y="575.50"></text></g><g><title>core::slice::sort::recurse (1 samples, 0.12%)</title><rect x="45.8025%" y="549" width="0.1235%" height="15" fill="rgb(210,80,43)"/><text x="46.0525%" y="559.50"></text></g><g><title>core::slice::sort::insertion_sort (1 samples, 0.12%)</title><rect x="45.8025%" y="533" width="0.1235%" height="15" fill="rgb(247,160,36)"/><text x="46.0525%" y="543.50"></text></g><g><title>core::slice::sort::shift_tail (1 samples, 0.12%)</title><rect x="45.8025%" y="517" width="0.1235%" height="15" fill="rgb(234,13,49)"/><text x="46.0525%" y="527.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by::{{closure}} (1 samples, 0.12%)</title><rect x="45.8025%" y="501" width="0.1235%" height="15" fill="rgb(234,122,0)"/><text x="46.0525%" y="511.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1::{{closure}} (1 samples, 0.12%)</title><rect x="45.8025%" y="485" width="0.1235%" height="15" fill="rgb(207,146,38)"/><text x="46.0525%" y="495.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1::compare_bots (1 samples, 0.12%)</title><rect x="45.8025%" y="469" width="0.1235%" height="15" fill="rgb(207,177,25)"/><text x="46.0525%" y="479.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.12%)</title><rect x="45.8025%" y="453" width="0.1235%" height="15" fill="rgb(211,178,42)"/><text x="46.0525%" y="463.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (7 samples, 0.86%)</title><rect x="46.2963%" y="533" width="0.8642%" height="15" fill="rgb(230,69,54)"/><text x="46.5463%" y="543.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (5 samples, 0.62%)</title><rect x="46.5432%" y="517" width="0.6173%" height="15" fill="rgb(214,135,41)"/><text x="46.7932%" y="527.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (4 samples, 0.49%)</title><rect x="46.6667%" y="501" width="0.4938%" height="15" fill="rgb(237,67,25)"/><text x="46.9167%" y="511.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (4 samples, 0.49%)</title><rect x="46.6667%" y="485" width="0.4938%" height="15" fill="rgb(222,189,50)"/><text x="46.9167%" y="495.50"></text></g><g><title>data_gen::main::{{closure}}::{{closure}} (4 samples, 0.49%)</title><rect x="46.6667%" y="469" width="0.4938%" height="15" fill="rgb(245,148,34)"/><text x="46.9167%" y="479.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.25%)</title><rect x="47.1605%" y="533" width="0.2469%" height="15" fill="rgb(222,29,6)"/><text x="47.4105%" y="543.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.12%)</title><rect x="47.2840%" y="517" width="0.1235%" height="15" fill="rgb(221,189,43)"/><text x="47.5340%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (12 samples, 1.48%)</title><rect x="46.0494%" y="549" width="1.4815%" height="15" fill="rgb(207,36,27)"/><text x="46.2994%" y="559.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.12%)</title><rect x="47.4074%" y="533" width="0.1235%" height="15" fill="rgb(217,90,24)"/><text x="47.6574%" y="543.50"></text></g><g><title>core::ptr::swap (1 samples, 0.12%)</title><rect x="47.4074%" y="517" width="0.1235%" height="15" fill="rgb(224,66,35)"/><text x="47.6574%" y="527.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.12%)</title><rect x="47.4074%" y="501" width="0.1235%" height="15" fill="rgb(221,13,50)"/><text x="47.6574%" y="511.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (13 samples, 1.60%)</title><rect x="46.0494%" y="597" width="1.6049%" height="15" fill="rgb(236,68,49)"/><text x="46.2994%" y="607.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (13 samples, 1.60%)</title><rect x="46.0494%" y="581" width="1.6049%" height="15" fill="rgb(229,146,28)"/><text x="46.2994%" y="591.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (13 samples, 1.60%)</title><rect x="46.0494%" y="565" width="1.6049%" height="15" fill="rgb(225,31,38)"/><text x="46.2994%" y="575.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.12%)</title><rect x="47.5309%" y="549" width="0.1235%" height="15" fill="rgb(250,208,3)"/><text x="47.7809%" y="559.50"></text></g><g><title>broccoli::query::colfind::inner::ColFindRecurser&lt;T,K,S&gt;::recurse_seq (287 samples, 35.43%)</title><rect x="12.4691%" y="645" width="35.4321%" height="15" fill="rgb(246,54,23)"/><text x="12.7191%" y="655.50">broccoli::query::colfind::inner::ColFindRecurser&lt;T,K,S&gt;::r..</text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (30 samples, 3.70%)</title><rect x="44.1975%" y="629" width="3.7037%" height="15" fill="rgb(243,76,11)"/><text x="44.4475%" y="639.50">broc..</text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (16 samples, 1.98%)</title><rect x="45.9259%" y="613" width="1.9753%" height="15" fill="rgb(245,21,50)"/><text x="46.1759%" y="623.50">b..</text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (2 samples, 0.25%)</title><rect x="47.6543%" y="597" width="0.2469%" height="15" fill="rgb(228,9,43)"/><text x="47.9043%" y="607.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (2 samples, 0.25%)</title><rect x="47.6543%" y="581" width="0.2469%" height="15" fill="rgb(208,100,47)"/><text x="47.9043%" y="591.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (2 samples, 0.25%)</title><rect x="47.6543%" y="565" width="0.2469%" height="15" fill="rgb(232,26,8)"/><text x="47.9043%" y="575.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (2 samples, 0.25%)</title><rect x="47.6543%" y="549" width="0.2469%" height="15" fill="rgb(216,166,38)"/><text x="47.9043%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (1 samples, 0.12%)</title><rect x="47.7778%" y="533" width="0.1235%" height="15" fill="rgb(251,202,51)"/><text x="48.0278%" y="543.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (1 samples, 0.12%)</title><rect x="47.7778%" y="517" width="0.1235%" height="15" fill="rgb(254,216,34)"/><text x="48.0278%" y="527.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (3 samples, 0.37%)</title><rect x="47.9012%" y="629" width="0.3704%" height="15" fill="rgb(251,32,27)"/><text x="48.1512%" y="639.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (3 samples, 0.37%)</title><rect x="47.9012%" y="613" width="0.3704%" height="15" fill="rgb(208,127,28)"/><text x="48.1512%" y="623.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (3 samples, 0.37%)</title><rect x="47.9012%" y="597" width="0.3704%" height="15" fill="rgb(224,137,22)"/><text x="48.1512%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (3 samples, 0.37%)</title><rect x="47.9012%" y="581" width="0.3704%" height="15" fill="rgb(254,70,32)"/><text x="48.1512%" y="591.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (1 samples, 0.12%)</title><rect x="48.1481%" y="565" width="0.1235%" height="15" fill="rgb(229,75,37)"/><text x="48.3981%" y="575.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.12%)</title><rect x="48.1481%" y="549" width="0.1235%" height="15" fill="rgb(252,64,23)"/><text x="48.3981%" y="559.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.12%)</title><rect x="48.1481%" y="533" width="0.1235%" height="15" fill="rgb(232,162,48)"/><text x="48.3981%" y="543.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (1 samples, 0.12%)</title><rect x="48.1481%" y="517" width="0.1235%" height="15" fill="rgb(246,160,12)"/><text x="48.3981%" y="527.50"></text></g><g><title>data_gen::main::{{closure}}::{{closure}} (1 samples, 0.12%)</title><rect x="48.1481%" y="501" width="0.1235%" height="15" fill="rgb(247,166,0)"/><text x="48.3981%" y="511.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (1 samples, 0.12%)</title><rect x="49.7531%" y="533" width="0.1235%" height="15" fill="rgb(249,219,21)"/><text x="50.0031%" y="543.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (4 samples, 0.49%)</title><rect x="49.8765%" y="533" width="0.4938%" height="15" fill="rgb(205,209,3)"/><text x="50.1265%" y="543.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (2 samples, 0.25%)</title><rect x="50.1235%" y="517" width="0.2469%" height="15" fill="rgb(243,44,1)"/><text x="50.3735%" y="527.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (2 samples, 0.25%)</title><rect x="50.1235%" y="501" width="0.2469%" height="15" fill="rgb(206,159,16)"/><text x="50.3735%" y="511.50"></text></g><g><title>data_gen::main::{{closure}}::{{closure}} (2 samples, 0.25%)</title><rect x="50.1235%" y="485" width="0.2469%" height="15" fill="rgb(244,77,30)"/><text x="50.3735%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (13 samples, 1.60%)</title><rect x="48.8889%" y="565" width="1.6049%" height="15" fill="rgb(218,69,12)"/><text x="49.1389%" y="575.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (7 samples, 0.86%)</title><rect x="49.6296%" y="549" width="0.8642%" height="15" fill="rgb(212,87,7)"/><text x="49.8796%" y="559.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.12%)</title><rect x="50.3704%" y="533" width="0.1235%" height="15" fill="rgb(245,114,25)"/><text x="50.6204%" y="543.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (21 samples, 2.59%)</title><rect x="48.2716%" y="597" width="2.5926%" height="15" fill="rgb(210,61,42)"/><text x="48.5216%" y="607.50">br..</text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (21 samples, 2.59%)</title><rect x="48.2716%" y="581" width="2.5926%" height="15" fill="rgb(211,52,33)"/><text x="48.5216%" y="591.50">br..</text></g><g><title>core::option::Option&lt;T&gt;::unwrap (3 samples, 0.37%)</title><rect x="50.4938%" y="565" width="0.3704%" height="15" fill="rgb(234,58,33)"/><text x="50.7438%" y="575.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (2 samples, 0.25%)</title><rect x="50.8642%" y="581" width="0.2469%" height="15" fill="rgb(220,115,36)"/><text x="51.1142%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (2 samples, 0.25%)</title><rect x="50.8642%" y="565" width="0.2469%" height="15" fill="rgb(243,153,54)"/><text x="51.1142%" y="575.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (2 samples, 0.25%)</title><rect x="50.8642%" y="549" width="0.2469%" height="15" fill="rgb(251,47,18)"/><text x="51.1142%" y="559.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (2 samples, 0.25%)</title><rect x="50.8642%" y="533" width="0.2469%" height="15" fill="rgb(242,102,42)"/><text x="51.1142%" y="543.50"></text></g><g><title>axgeom::range::Range&lt;T&gt;::intersects (1 samples, 0.12%)</title><rect x="50.9877%" y="517" width="0.1235%" height="15" fill="rgb(234,31,38)"/><text x="51.2377%" y="527.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::le (1 samples, 0.12%)</title><rect x="50.9877%" y="501" width="0.1235%" height="15" fill="rgb(221,117,51)"/><text x="51.2377%" y="511.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (24 samples, 2.96%)</title><rect x="48.2716%" y="613" width="2.9630%" height="15" fill="rgb(212,20,18)"/><text x="48.5216%" y="623.50">&lt;br..</text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (3 samples, 0.37%)</title><rect x="50.8642%" y="597" width="0.3704%" height="15" fill="rgb(245,133,36)"/><text x="51.1142%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.12%)</title><rect x="51.1111%" y="581" width="0.1235%" height="15" fill="rgb(212,6,19)"/><text x="51.3611%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.12%)</title><rect x="51.1111%" y="565" width="0.1235%" height="15" fill="rgb(218,1,36)"/><text x="51.3611%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.12%)</title><rect x="51.1111%" y="549" width="0.1235%" height="15" fill="rgb(246,84,54)"/><text x="51.3611%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.12%)</title><rect x="51.1111%" y="533" width="0.1235%" height="15" fill="rgb(242,110,6)"/><text x="51.3611%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.12%)</title><rect x="51.1111%" y="517" width="0.1235%" height="15" fill="rgb(214,47,5)"/><text x="51.3611%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.12%)</title><rect x="51.1111%" y="501" width="0.1235%" height="15" fill="rgb(218,159,25)"/><text x="51.3611%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.12%)</title><rect x="51.1111%" y="485" width="0.1235%" height="15" fill="rgb(215,211,28)"/><text x="51.3611%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.12%)</title><rect x="51.1111%" y="469" width="0.1235%" height="15" fill="rgb(238,59,32)"/><text x="51.3611%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.12%)</title><rect x="51.1111%" y="453" width="0.1235%" height="15" fill="rgb(226,82,3)"/><text x="51.3611%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.12%)</title><rect x="51.1111%" y="437" width="0.1235%" height="15" fill="rgb(240,164,32)"/><text x="51.3611%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.12%)</title><rect x="51.1111%" y="421" width="0.1235%" height="15" fill="rgb(232,46,7)"/><text x="51.3611%" y="431.50"></text></g><g><title>__rdl_alloc (1 samples, 0.12%)</title><rect x="51.1111%" y="405" width="0.1235%" height="15" fill="rgb(229,129,53)"/><text x="51.3611%" y="415.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.12%)</title><rect x="51.1111%" y="389" width="0.1235%" height="15" fill="rgb(234,188,29)"/><text x="51.3611%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::truncate (1 samples, 0.12%)</title><rect x="51.7284%" y="533" width="0.1235%" height="15" fill="rgb(246,141,4)"/><text x="51.9784%" y="543.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (4 samples, 0.49%)</title><rect x="52.3457%" y="517" width="0.4938%" height="15" fill="rgb(229,23,39)"/><text x="52.5957%" y="527.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.12%)</title><rect x="53.0864%" y="501" width="0.1235%" height="15" fill="rgb(206,12,3)"/><text x="53.3364%" y="511.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (1 samples, 0.12%)</title><rect x="53.0864%" y="485" width="0.1235%" height="15" fill="rgb(252,226,20)"/><text x="53.3364%" y="495.50"></text></g><g><title>data_gen::main::{{closure}}::{{closure}} (1 samples, 0.12%)</title><rect x="53.0864%" y="469" width="0.1235%" height="15" fill="rgb(216,123,35)"/><text x="53.3364%" y="479.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (12 samples, 1.48%)</title><rect x="51.8519%" y="533" width="1.4815%" height="15" fill="rgb(212,68,40)"/><text x="52.1019%" y="543.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (4 samples, 0.49%)</title><rect x="52.8395%" y="517" width="0.4938%" height="15" fill="rgb(254,125,32)"/><text x="53.0895%" y="527.50"></text></g><g><title>axgeom::range::Range&lt;T&gt;::intersects (1 samples, 0.12%)</title><rect x="53.2099%" y="501" width="0.1235%" height="15" fill="rgb(253,97,22)"/><text x="53.4599%" y="511.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::le (1 samples, 0.12%)</title><rect x="53.2099%" y="485" width="0.1235%" height="15" fill="rgb(241,101,14)"/><text x="53.4599%" y="495.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.12%)</title><rect x="53.3333%" y="533" width="0.1235%" height="15" fill="rgb(238,103,29)"/><text x="53.5833%" y="543.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (19 samples, 2.35%)</title><rect x="51.2346%" y="581" width="2.3457%" height="15" fill="rgb(233,195,47)"/><text x="51.4846%" y="591.50">b..</text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (19 samples, 2.35%)</title><rect x="51.2346%" y="565" width="2.3457%" height="15" fill="rgb(246,218,30)"/><text x="51.4846%" y="575.50">b..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (15 samples, 1.85%)</title><rect x="51.7284%" y="549" width="1.8519%" height="15" fill="rgb(219,145,47)"/><text x="51.9784%" y="559.50">&lt;..</text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.12%)</title><rect x="53.4568%" y="533" width="0.1235%" height="15" fill="rgb(243,12,26)"/><text x="53.7068%" y="543.50"></text></g><g><title>core::ptr::swap (1 samples, 0.12%)</title><rect x="53.4568%" y="517" width="0.1235%" height="15" fill="rgb(214,87,16)"/><text x="53.7068%" y="527.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.12%)</title><rect x="53.4568%" y="501" width="0.1235%" height="15" fill="rgb(208,99,42)"/><text x="53.7068%" y="511.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (2 samples, 0.25%)</title><rect x="53.5802%" y="565" width="0.2469%" height="15" fill="rgb(253,99,2)"/><text x="53.8302%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (1 samples, 0.12%)</title><rect x="53.7037%" y="549" width="0.1235%" height="15" fill="rgb(220,168,23)"/><text x="53.9537%" y="559.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (1 samples, 0.12%)</title><rect x="53.7037%" y="533" width="0.1235%" height="15" fill="rgb(242,38,24)"/><text x="53.9537%" y="543.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.12%)</title><rect x="53.7037%" y="517" width="0.1235%" height="15" fill="rgb(225,182,9)"/><text x="53.9537%" y="527.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.12%)</title><rect x="53.7037%" y="501" width="0.1235%" height="15" fill="rgb(243,178,37)"/><text x="53.9537%" y="511.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (1 samples, 0.12%)</title><rect x="53.7037%" y="485" width="0.1235%" height="15" fill="rgb(232,139,19)"/><text x="53.9537%" y="495.50"></text></g><g><title>data_gen::main::{{closure}}::{{closure}} (1 samples, 0.12%)</title><rect x="53.7037%" y="469" width="0.1235%" height="15" fill="rgb(225,201,24)"/><text x="53.9537%" y="479.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (3 samples, 0.37%)</title><rect x="53.5802%" y="581" width="0.3704%" height="15" fill="rgb(221,47,46)"/><text x="53.8302%" y="591.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.12%)</title><rect x="53.8272%" y="565" width="0.1235%" height="15" fill="rgb(249,23,13)"/><text x="54.0772%" y="575.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.12%)</title><rect x="53.8272%" y="549" width="0.1235%" height="15" fill="rgb(219,9,5)"/><text x="54.0772%" y="559.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.12%)</title><rect x="53.8272%" y="533" width="0.1235%" height="15" fill="rgb(254,171,16)"/><text x="54.0772%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::dealloc (1 samples, 0.12%)</title><rect x="53.8272%" y="517" width="0.1235%" height="15" fill="rgb(230,171,20)"/><text x="54.0772%" y="527.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.12%)</title><rect x="53.8272%" y="501" width="0.1235%" height="15" fill="rgb(210,71,41)"/><text x="54.0772%" y="511.50"></text></g><g><title>__GI___libc_free (1 samples, 0.12%)</title><rect x="53.8272%" y="485" width="0.1235%" height="15" fill="rgb(206,173,20)"/><text x="54.0772%" y="495.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (23 samples, 2.84%)</title><rect x="51.2346%" y="597" width="2.8395%" height="15" fill="rgb(233,88,34)"/><text x="51.4846%" y="607.50">&lt;b..</text></g><g><title>broccoli::query::colfind::oned::get_section_mut (1 samples, 0.12%)</title><rect x="53.9506%" y="581" width="0.1235%" height="15" fill="rgb(223,209,46)"/><text x="54.2006%" y="591.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (2 samples, 0.25%)</title><rect x="54.6914%" y="501" width="0.2469%" height="15" fill="rgb(250,43,18)"/><text x="54.9414%" y="511.50"></text></g><g><title>broccoli::query::colfind::inner::ColFindRecurser&lt;T,K,S&gt;::recurse_seq (353 samples, 43.58%)</title><rect x="11.4815%" y="661" width="43.5802%" height="15" fill="rgb(208,13,10)"/><text x="11.7315%" y="671.50">broccoli::query::colfind::inner::ColFindRecurser&lt;T,K,S&gt;::recurse_seq</text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (58 samples, 7.16%)</title><rect x="47.9012%" y="645" width="7.1605%" height="15" fill="rgb(212,200,36)"/><text x="48.1512%" y="655.50">broccoli::..</text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (55 samples, 6.79%)</title><rect x="48.2716%" y="629" width="6.7901%" height="15" fill="rgb(225,90,30)"/><text x="48.5216%" y="639.50">broccoli:..</text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (31 samples, 3.83%)</title><rect x="51.2346%" y="613" width="3.8272%" height="15" fill="rgb(236,182,39)"/><text x="51.4846%" y="623.50">broc..</text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (8 samples, 0.99%)</title><rect x="54.0741%" y="597" width="0.9877%" height="15" fill="rgb(212,144,35)"/><text x="54.3241%" y="607.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (8 samples, 0.99%)</title><rect x="54.0741%" y="581" width="0.9877%" height="15" fill="rgb(228,63,44)"/><text x="54.3241%" y="591.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (8 samples, 0.99%)</title><rect x="54.0741%" y="565" width="0.9877%" height="15" fill="rgb(228,109,6)"/><text x="54.3241%" y="575.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (8 samples, 0.99%)</title><rect x="54.0741%" y="549" width="0.9877%" height="15" fill="rgb(238,117,24)"/><text x="54.3241%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (6 samples, 0.74%)</title><rect x="54.3210%" y="533" width="0.7407%" height="15" fill="rgb(242,26,26)"/><text x="54.5710%" y="543.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (4 samples, 0.49%)</title><rect x="54.5679%" y="517" width="0.4938%" height="15" fill="rgb(221,92,48)"/><text x="54.8179%" y="527.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.12%)</title><rect x="54.9383%" y="501" width="0.1235%" height="15" fill="rgb(209,209,32)"/><text x="55.1883%" y="511.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (3 samples, 0.37%)</title><rect x="55.0617%" y="629" width="0.3704%" height="15" fill="rgb(221,70,22)"/><text x="55.3117%" y="639.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (3 samples, 0.37%)</title><rect x="55.0617%" y="613" width="0.3704%" height="15" fill="rgb(248,145,5)"/><text x="55.3117%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (2 samples, 0.25%)</title><rect x="55.1852%" y="597" width="0.2469%" height="15" fill="rgb(226,116,26)"/><text x="55.4352%" y="607.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (1 samples, 0.12%)</title><rect x="55.3086%" y="581" width="0.1235%" height="15" fill="rgb(244,5,17)"/><text x="55.5586%" y="591.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (5 samples, 0.62%)</title><rect x="55.0617%" y="645" width="0.6173%" height="15" fill="rgb(252,159,33)"/><text x="55.3117%" y="655.50"></text></g><g><title>broccoli::query::colfind::oned::get_section_mut (2 samples, 0.25%)</title><rect x="55.4321%" y="629" width="0.2469%" height="15" fill="rgb(206,71,0)"/><text x="55.6821%" y="639.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (1 samples, 0.12%)</title><rect x="55.6790%" y="613" width="0.1235%" height="15" fill="rgb(233,118,54)"/><text x="55.9290%" y="623.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (1 samples, 0.12%)</title><rect x="55.6790%" y="597" width="0.1235%" height="15" fill="rgb(234,83,48)"/><text x="55.9290%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (1 samples, 0.12%)</title><rect x="55.6790%" y="581" width="0.1235%" height="15" fill="rgb(228,3,54)"/><text x="55.9290%" y="591.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (1 samples, 0.12%)</title><rect x="55.6790%" y="565" width="0.1235%" height="15" fill="rgb(226,155,13)"/><text x="55.9290%" y="575.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.12%)</title><rect x="55.6790%" y="549" width="0.1235%" height="15" fill="rgb(241,28,37)"/><text x="55.9290%" y="559.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.12%)</title><rect x="55.6790%" y="533" width="0.1235%" height="15" fill="rgb(233,93,10)"/><text x="55.9290%" y="543.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (1 samples, 0.12%)</title><rect x="55.6790%" y="517" width="0.1235%" height="15" fill="rgb(225,113,19)"/><text x="55.9290%" y="527.50"></text></g><g><title>data_gen::main::{{closure}}::{{closure}} (1 samples, 0.12%)</title><rect x="55.6790%" y="501" width="0.1235%" height="15" fill="rgb(241,2,18)"/><text x="55.9290%" y="511.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (2 samples, 0.25%)</title><rect x="55.6790%" y="629" width="0.2469%" height="15" fill="rgb(228,207,21)"/><text x="55.9290%" y="639.50"></text></g><g><title>broccoli::query::colfind::oned::get_section_mut (1 samples, 0.12%)</title><rect x="55.8025%" y="613" width="0.1235%" height="15" fill="rgb(213,211,35)"/><text x="56.0525%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (2 samples, 0.25%)</title><rect x="56.0494%" y="565" width="0.2469%" height="15" fill="rgb(209,83,10)"/><text x="56.2994%" y="575.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (2 samples, 0.25%)</title><rect x="56.0494%" y="549" width="0.2469%" height="15" fill="rgb(209,164,1)"/><text x="56.2994%" y="559.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.12%)</title><rect x="56.1728%" y="533" width="0.1235%" height="15" fill="rgb(213,184,43)"/><text x="56.4228%" y="543.50"></text></g><g><title>axgeom::range::Range&lt;T&gt;::intersects (1 samples, 0.12%)</title><rect x="56.1728%" y="517" width="0.1235%" height="15" fill="rgb(231,61,34)"/><text x="56.4228%" y="527.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::le (1 samples, 0.12%)</title><rect x="56.1728%" y="501" width="0.1235%" height="15" fill="rgb(235,75,3)"/><text x="56.4228%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.12%)</title><rect x="56.2963%" y="565" width="0.1235%" height="15" fill="rgb(220,106,47)"/><text x="56.5463%" y="575.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (5 samples, 0.62%)</title><rect x="55.9259%" y="581" width="0.6173%" height="15" fill="rgb(210,196,33)"/><text x="56.1759%" y="591.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (1 samples, 0.12%)</title><rect x="56.4198%" y="565" width="0.1235%" height="15" fill="rgb(229,154,42)"/><text x="56.6698%" y="575.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (1 samples, 0.12%)</title><rect x="56.4198%" y="549" width="0.1235%" height="15" fill="rgb(228,114,26)"/><text x="56.6698%" y="559.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek::{{closure}} (1 samples, 0.12%)</title><rect x="56.4198%" y="533" width="0.1235%" height="15" fill="rgb(208,144,1)"/><text x="56.6698%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.12%)</title><rect x="56.4198%" y="517" width="0.1235%" height="15" fill="rgb(239,112,37)"/><text x="56.6698%" y="527.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.12%)</title><rect x="56.4198%" y="501" width="0.1235%" height="15" fill="rgb(210,96,50)"/><text x="56.6698%" y="511.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.12%)</title><rect x="56.5432%" y="581" width="0.1235%" height="15" fill="rgb(222,178,2)"/><text x="56.7932%" y="591.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.12%)</title><rect x="56.5432%" y="565" width="0.1235%" height="15" fill="rgb(226,74,18)"/><text x="56.7932%" y="575.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.12%)</title><rect x="56.5432%" y="549" width="0.1235%" height="15" fill="rgb(225,67,54)"/><text x="56.7932%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::dealloc (1 samples, 0.12%)</title><rect x="56.5432%" y="533" width="0.1235%" height="15" fill="rgb(251,92,32)"/><text x="56.7932%" y="543.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.12%)</title><rect x="56.5432%" y="517" width="0.1235%" height="15" fill="rgb(228,149,22)"/><text x="56.7932%" y="527.50"></text></g><g><title>_int_free (1 samples, 0.12%)</title><rect x="56.5432%" y="501" width="0.1235%" height="15" fill="rgb(243,54,13)"/><text x="56.7932%" y="511.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (7 samples, 0.86%)</title><rect x="55.9259%" y="613" width="0.8642%" height="15" fill="rgb(243,180,28)"/><text x="56.1759%" y="623.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (7 samples, 0.86%)</title><rect x="55.9259%" y="597" width="0.8642%" height="15" fill="rgb(208,167,24)"/><text x="56.1759%" y="607.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by (1 samples, 0.12%)</title><rect x="56.6667%" y="581" width="0.1235%" height="15" fill="rgb(245,73,45)"/><text x="56.9167%" y="591.50"></text></g><g><title>core::slice::sort::quicksort (1 samples, 0.12%)</title><rect x="56.6667%" y="565" width="0.1235%" height="15" fill="rgb(237,203,48)"/><text x="56.9167%" y="575.50"></text></g><g><title>core::slice::sort::recurse (1 samples, 0.12%)</title><rect x="56.6667%" y="549" width="0.1235%" height="15" fill="rgb(211,197,16)"/><text x="56.9167%" y="559.50"></text></g><g><title>core::slice::sort::insertion_sort (1 samples, 0.12%)</title><rect x="56.6667%" y="533" width="0.1235%" height="15" fill="rgb(243,99,51)"/><text x="56.9167%" y="543.50"></text></g><g><title>core::slice::sort::shift_tail (1 samples, 0.12%)</title><rect x="56.6667%" y="517" width="0.1235%" height="15" fill="rgb(215,123,29)"/><text x="56.9167%" y="527.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (4 samples, 0.49%)</title><rect x="57.2840%" y="517" width="0.4938%" height="15" fill="rgb(239,186,37)"/><text x="57.5340%" y="527.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (3 samples, 0.37%)</title><rect x="57.4074%" y="501" width="0.3704%" height="15" fill="rgb(252,136,39)"/><text x="57.6574%" y="511.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (3 samples, 0.37%)</title><rect x="57.4074%" y="485" width="0.3704%" height="15" fill="rgb(223,213,32)"/><text x="57.6574%" y="495.50"></text></g><g><title>data_gen::main::{{closure}}::{{closure}} (3 samples, 0.37%)</title><rect x="57.4074%" y="469" width="0.3704%" height="15" fill="rgb(233,115,5)"/><text x="57.6574%" y="479.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (9 samples, 1.11%)</title><rect x="56.7901%" y="565" width="1.1111%" height="15" fill="rgb(207,226,44)"/><text x="57.0401%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (8 samples, 0.99%)</title><rect x="56.9136%" y="549" width="0.9877%" height="15" fill="rgb(208,126,0)"/><text x="57.1636%" y="559.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (6 samples, 0.74%)</title><rect x="57.1605%" y="533" width="0.7407%" height="15" fill="rgb(244,66,21)"/><text x="57.4105%" y="543.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.12%)</title><rect x="57.7778%" y="517" width="0.1235%" height="15" fill="rgb(222,97,12)"/><text x="58.0278%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.12%)</title><rect x="57.9012%" y="565" width="0.1235%" height="15" fill="rgb(219,213,19)"/><text x="58.1512%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.12%)</title><rect x="57.9012%" y="549" width="0.1235%" height="15" fill="rgb(252,169,30)"/><text x="58.1512%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.12%)</title><rect x="57.9012%" y="533" width="0.1235%" height="15" fill="rgb(206,32,51)"/><text x="58.1512%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.12%)</title><rect x="57.9012%" y="517" width="0.1235%" height="15" fill="rgb(250,172,42)"/><text x="58.1512%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.12%)</title><rect x="57.9012%" y="501" width="0.1235%" height="15" fill="rgb(209,34,43)"/><text x="58.1512%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.12%)</title><rect x="57.9012%" y="485" width="0.1235%" height="15" fill="rgb(223,11,35)"/><text x="58.1512%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.12%)</title><rect x="57.9012%" y="469" width="0.1235%" height="15" fill="rgb(251,219,26)"/><text x="58.1512%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.12%)</title><rect x="57.9012%" y="453" width="0.1235%" height="15" fill="rgb(231,119,3)"/><text x="58.1512%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.12%)</title><rect x="57.9012%" y="437" width="0.1235%" height="15" fill="rgb(216,97,11)"/><text x="58.1512%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.12%)</title><rect x="57.9012%" y="421" width="0.1235%" height="15" fill="rgb(223,59,9)"/><text x="58.1512%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.12%)</title><rect x="57.9012%" y="405" width="0.1235%" height="15" fill="rgb(233,93,31)"/><text x="58.1512%" y="415.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.12%)</title><rect x="57.9012%" y="389" width="0.1235%" height="15" fill="rgb(239,81,33)"/><text x="58.1512%" y="399.50"></text></g><g><title>tcache_get (1 samples, 0.12%)</title><rect x="57.9012%" y="373" width="0.1235%" height="15" fill="rgb(213,120,34)"/><text x="58.1512%" y="383.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (11 samples, 1.36%)</title><rect x="56.7901%" y="597" width="1.3580%" height="15" fill="rgb(243,49,53)"/><text x="57.0401%" y="607.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (11 samples, 1.36%)</title><rect x="56.7901%" y="581" width="1.3580%" height="15" fill="rgb(247,216,33)"/><text x="57.0401%" y="591.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by (1 samples, 0.12%)</title><rect x="58.0247%" y="565" width="0.1235%" height="15" fill="rgb(226,26,14)"/><text x="58.2747%" y="575.50"></text></g><g><title>core::slice::sort::quicksort (1 samples, 0.12%)</title><rect x="58.0247%" y="549" width="0.1235%" height="15" fill="rgb(215,49,53)"/><text x="58.2747%" y="559.50"></text></g><g><title>core::slice::sort::recurse (1 samples, 0.12%)</title><rect x="58.0247%" y="533" width="0.1235%" height="15" fill="rgb(245,162,40)"/><text x="58.2747%" y="543.50"></text></g><g><title>core::slice::sort::insertion_sort (1 samples, 0.12%)</title><rect x="58.0247%" y="517" width="0.1235%" height="15" fill="rgb(229,68,17)"/><text x="58.2747%" y="527.50"></text></g><g><title>core::slice::sort::shift_tail (1 samples, 0.12%)</title><rect x="58.0247%" y="501" width="0.1235%" height="15" fill="rgb(213,182,10)"/><text x="58.2747%" y="511.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.12%)</title><rect x="58.0247%" y="485" width="0.1235%" height="15" fill="rgb(245,125,30)"/><text x="58.2747%" y="495.50"></text></g><g><title>&lt;core::slice::sort::CopyOnDrop&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.12%)</title><rect x="58.0247%" y="469" width="0.1235%" height="15" fill="rgb(232,202,2)"/><text x="58.2747%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.12%)</title><rect x="58.0247%" y="453" width="0.1235%" height="15" fill="rgb(237,140,51)"/><text x="58.2747%" y="463.50"></text></g><g><title>broccoli::query::colfind::inner::ColFindRecurser&lt;T,K,S&gt;::recurse_seq (380 samples, 46.91%)</title><rect x="11.3580%" y="677" width="46.9136%" height="15" fill="rgb(236,157,25)"/><text x="11.6080%" y="687.50">broccoli::query::colfind::inner::ColFindRecurser&lt;T,K,S&gt;::recurse_seq</text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (26 samples, 3.21%)</title><rect x="55.0617%" y="661" width="3.2099%" height="15" fill="rgb(219,209,0)"/><text x="55.3117%" y="671.50">bro..</text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (21 samples, 2.59%)</title><rect x="55.6790%" y="645" width="2.5926%" height="15" fill="rgb(240,116,54)"/><text x="55.9290%" y="655.50">br..</text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (19 samples, 2.35%)</title><rect x="55.9259%" y="629" width="2.3457%" height="15" fill="rgb(216,10,36)"/><text x="56.1759%" y="639.50">b..</text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (12 samples, 1.48%)</title><rect x="56.7901%" y="613" width="1.4815%" height="15" fill="rgb(222,72,44)"/><text x="57.0401%" y="623.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (1 samples, 0.12%)</title><rect x="58.1481%" y="597" width="0.1235%" height="15" fill="rgb(232,159,9)"/><text x="58.3981%" y="607.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (1 samples, 0.12%)</title><rect x="58.1481%" y="581" width="0.1235%" height="15" fill="rgb(210,39,32)"/><text x="58.3981%" y="591.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (1 samples, 0.12%)</title><rect x="58.1481%" y="565" width="0.1235%" height="15" fill="rgb(216,194,45)"/><text x="58.3981%" y="575.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (1 samples, 0.12%)</title><rect x="58.1481%" y="549" width="0.1235%" height="15" fill="rgb(218,18,35)"/><text x="58.3981%" y="559.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (1 samples, 0.12%)</title><rect x="58.2716%" y="661" width="0.1235%" height="15" fill="rgb(207,83,51)"/><text x="58.5216%" y="671.50"></text></g><g><title>broccoli::query::colfind::oned::get_section_mut (1 samples, 0.12%)</title><rect x="58.2716%" y="645" width="0.1235%" height="15" fill="rgb(225,63,43)"/><text x="58.5216%" y="655.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.12%)</title><rect x="58.3951%" y="565" width="0.1235%" height="15" fill="rgb(207,57,36)"/><text x="58.6451%" y="575.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.12%)</title><rect x="58.3951%" y="549" width="0.1235%" height="15" fill="rgb(216,99,33)"/><text x="58.6451%" y="559.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (1 samples, 0.12%)</title><rect x="58.3951%" y="533" width="0.1235%" height="15" fill="rgb(225,42,16)"/><text x="58.6451%" y="543.50"></text></g><g><title>data_gen::main::{{closure}}::{{closure}} (1 samples, 0.12%)</title><rect x="58.3951%" y="517" width="0.1235%" height="15" fill="rgb(220,201,45)"/><text x="58.6451%" y="527.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (2 samples, 0.25%)</title><rect x="58.3951%" y="645" width="0.2469%" height="15" fill="rgb(225,33,4)"/><text x="58.6451%" y="655.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (2 samples, 0.25%)</title><rect x="58.3951%" y="629" width="0.2469%" height="15" fill="rgb(224,33,50)"/><text x="58.6451%" y="639.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (2 samples, 0.25%)</title><rect x="58.3951%" y="613" width="0.2469%" height="15" fill="rgb(246,198,51)"/><text x="58.6451%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (2 samples, 0.25%)</title><rect x="58.3951%" y="597" width="0.2469%" height="15" fill="rgb(205,22,4)"/><text x="58.6451%" y="607.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (2 samples, 0.25%)</title><rect x="58.3951%" y="581" width="0.2469%" height="15" fill="rgb(206,3,8)"/><text x="58.6451%" y="591.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.12%)</title><rect x="58.5185%" y="565" width="0.1235%" height="15" fill="rgb(251,23,15)"/><text x="58.7685%" y="575.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (1 samples, 0.12%)</title><rect x="58.7654%" y="549" width="0.1235%" height="15" fill="rgb(252,88,28)"/><text x="59.0154%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (4 samples, 0.49%)</title><rect x="58.7654%" y="581" width="0.4938%" height="15" fill="rgb(212,127,14)"/><text x="59.0154%" y="591.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (4 samples, 0.49%)</title><rect x="58.7654%" y="565" width="0.4938%" height="15" fill="rgb(247,145,37)"/><text x="59.0154%" y="575.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (3 samples, 0.37%)</title><rect x="58.8889%" y="549" width="0.3704%" height="15" fill="rgb(209,117,53)"/><text x="59.1389%" y="559.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (3 samples, 0.37%)</title><rect x="58.8889%" y="533" width="0.3704%" height="15" fill="rgb(212,90,42)"/><text x="59.1389%" y="543.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (3 samples, 0.37%)</title><rect x="58.8889%" y="517" width="0.3704%" height="15" fill="rgb(218,164,37)"/><text x="59.1389%" y="527.50"></text></g><g><title>data_gen::main::{{closure}}::{{closure}} (3 samples, 0.37%)</title><rect x="58.8889%" y="501" width="0.3704%" height="15" fill="rgb(246,65,34)"/><text x="59.1389%" y="511.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (1 samples, 0.12%)</title><rect x="59.2593%" y="581" width="0.1235%" height="15" fill="rgb(231,100,33)"/><text x="59.5093%" y="591.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (1 samples, 0.12%)</title><rect x="59.2593%" y="565" width="0.1235%" height="15" fill="rgb(228,126,14)"/><text x="59.5093%" y="575.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek::{{closure}} (1 samples, 0.12%)</title><rect x="59.2593%" y="549" width="0.1235%" height="15" fill="rgb(215,173,21)"/><text x="59.5093%" y="559.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.12%)</title><rect x="59.2593%" y="533" width="0.1235%" height="15" fill="rgb(210,6,40)"/><text x="59.5093%" y="543.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.12%)</title><rect x="59.2593%" y="517" width="0.1235%" height="15" fill="rgb(212,48,18)"/><text x="59.5093%" y="527.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (7 samples, 0.86%)</title><rect x="58.6420%" y="613" width="0.8642%" height="15" fill="rgb(230,214,11)"/><text x="58.8920%" y="623.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (7 samples, 0.86%)</title><rect x="58.6420%" y="597" width="0.8642%" height="15" fill="rgb(254,105,39)"/><text x="58.8920%" y="607.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.12%)</title><rect x="59.3827%" y="581" width="0.1235%" height="15" fill="rgb(245,158,5)"/><text x="59.6327%" y="591.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (1 samples, 0.12%)</title><rect x="59.7531%" y="549" width="0.1235%" height="15" fill="rgb(249,208,11)"/><text x="60.0031%" y="559.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (4 samples, 0.49%)</title><rect x="59.5062%" y="597" width="0.4938%" height="15" fill="rgb(210,39,28)"/><text x="59.7562%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (2 samples, 0.25%)</title><rect x="59.7531%" y="581" width="0.2469%" height="15" fill="rgb(211,56,53)"/><text x="60.0031%" y="591.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (2 samples, 0.25%)</title><rect x="59.7531%" y="565" width="0.2469%" height="15" fill="rgb(226,201,30)"/><text x="60.0031%" y="575.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.12%)</title><rect x="59.8765%" y="549" width="0.1235%" height="15" fill="rgb(239,101,34)"/><text x="60.1265%" y="559.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.12%)</title><rect x="59.8765%" y="533" width="0.1235%" height="15" fill="rgb(226,209,5)"/><text x="60.1265%" y="543.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (1 samples, 0.12%)</title><rect x="59.8765%" y="517" width="0.1235%" height="15" fill="rgb(250,105,47)"/><text x="60.1265%" y="527.50"></text></g><g><title>data_gen::main::{{closure}}::{{closure}} (1 samples, 0.12%)</title><rect x="59.8765%" y="501" width="0.1235%" height="15" fill="rgb(230,72,3)"/><text x="60.1265%" y="511.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (5 samples, 0.62%)</title><rect x="59.5062%" y="613" width="0.6173%" height="15" fill="rgb(232,218,39)"/><text x="59.7562%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.12%)</title><rect x="60.0000%" y="597" width="0.1235%" height="15" fill="rgb(248,166,6)"/><text x="60.2500%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.12%)</title><rect x="60.0000%" y="581" width="0.1235%" height="15" fill="rgb(247,89,20)"/><text x="60.2500%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.12%)</title><rect x="60.0000%" y="565" width="0.1235%" height="15" fill="rgb(248,130,54)"/><text x="60.2500%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.12%)</title><rect x="60.0000%" y="549" width="0.1235%" height="15" fill="rgb(234,196,4)"/><text x="60.2500%" y="559.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.12%)</title><rect x="60.0000%" y="533" width="0.1235%" height="15" fill="rgb(250,143,31)"/><text x="60.2500%" y="543.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.12%)</title><rect x="60.0000%" y="517" width="0.1235%" height="15" fill="rgb(211,110,34)"/><text x="60.2500%" y="527.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (13 samples, 1.60%)</title><rect x="58.6420%" y="629" width="1.6049%" height="15" fill="rgb(215,124,48)"/><text x="58.8920%" y="639.50"></text></g><g><title>broccoli::query::colfind::oned::get_section_mut (1 samples, 0.12%)</title><rect x="60.1235%" y="613" width="0.1235%" height="15" fill="rgb(216,46,13)"/><text x="60.3735%" y="623.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.12%)</title><rect x="60.1235%" y="597" width="0.1235%" height="15" fill="rgb(205,184,25)"/><text x="60.3735%" y="607.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (2 samples, 0.25%)</title><rect x="61.2346%" y="533" width="0.2469%" height="15" fill="rgb(228,1,10)"/><text x="61.4846%" y="543.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (15 samples, 1.85%)</title><rect x="60.2469%" y="597" width="1.8519%" height="15" fill="rgb(213,116,27)"/><text x="60.4969%" y="607.50">b..</text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (15 samples, 1.85%)</title><rect x="60.2469%" y="581" width="1.8519%" height="15" fill="rgb(241,95,50)"/><text x="60.4969%" y="591.50">b..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (13 samples, 1.60%)</title><rect x="60.4938%" y="565" width="1.6049%" height="15" fill="rgb(238,48,32)"/><text x="60.7438%" y="575.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (8 samples, 0.99%)</title><rect x="61.1111%" y="549" width="0.9877%" height="15" fill="rgb(235,113,49)"/><text x="61.3611%" y="559.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (5 samples, 0.62%)</title><rect x="61.4815%" y="533" width="0.6173%" height="15" fill="rgb(205,127,43)"/><text x="61.7315%" y="543.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (2 samples, 0.25%)</title><rect x="61.8519%" y="517" width="0.2469%" height="15" fill="rgb(250,162,2)"/><text x="62.1019%" y="527.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (2 samples, 0.25%)</title><rect x="61.8519%" y="501" width="0.2469%" height="15" fill="rgb(220,13,41)"/><text x="62.1019%" y="511.50"></text></g><g><title>data_gen::main::{{closure}}::{{closure}} (2 samples, 0.25%)</title><rect x="61.8519%" y="485" width="0.2469%" height="15" fill="rgb(249,221,25)"/><text x="62.1019%" y="495.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (2 samples, 0.25%)</title><rect x="62.0988%" y="581" width="0.2469%" height="15" fill="rgb(215,208,19)"/><text x="62.3488%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (2 samples, 0.25%)</title><rect x="62.0988%" y="565" width="0.2469%" height="15" fill="rgb(236,175,2)"/><text x="62.3488%" y="575.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (2 samples, 0.25%)</title><rect x="62.0988%" y="549" width="0.2469%" height="15" fill="rgb(241,52,2)"/><text x="62.3488%" y="559.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (2 samples, 0.25%)</title><rect x="62.0988%" y="533" width="0.2469%" height="15" fill="rgb(248,140,14)"/><text x="62.3488%" y="543.50"></text></g><g><title>axgeom::range::Range&lt;T&gt;::intersects (1 samples, 0.12%)</title><rect x="62.2222%" y="517" width="0.1235%" height="15" fill="rgb(253,22,42)"/><text x="62.4722%" y="527.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::le (1 samples, 0.12%)</title><rect x="62.2222%" y="501" width="0.1235%" height="15" fill="rgb(234,61,47)"/><text x="62.4722%" y="511.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (18 samples, 2.22%)</title><rect x="60.2469%" y="613" width="2.2222%" height="15" fill="rgb(208,226,15)"/><text x="60.4969%" y="623.50">&lt;..</text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (3 samples, 0.37%)</title><rect x="62.0988%" y="597" width="0.3704%" height="15" fill="rgb(217,221,4)"/><text x="62.3488%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.12%)</title><rect x="62.3457%" y="581" width="0.1235%" height="15" fill="rgb(212,174,34)"/><text x="62.5957%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.12%)</title><rect x="62.3457%" y="565" width="0.1235%" height="15" fill="rgb(253,83,4)"/><text x="62.5957%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.12%)</title><rect x="62.3457%" y="549" width="0.1235%" height="15" fill="rgb(250,195,49)"/><text x="62.5957%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.12%)</title><rect x="62.3457%" y="533" width="0.1235%" height="15" fill="rgb(241,192,25)"/><text x="62.5957%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.12%)</title><rect x="62.3457%" y="517" width="0.1235%" height="15" fill="rgb(208,124,10)"/><text x="62.5957%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.12%)</title><rect x="62.3457%" y="501" width="0.1235%" height="15" fill="rgb(222,33,0)"/><text x="62.5957%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.12%)</title><rect x="62.3457%" y="485" width="0.1235%" height="15" fill="rgb(234,209,28)"/><text x="62.5957%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.12%)</title><rect x="62.3457%" y="469" width="0.1235%" height="15" fill="rgb(224,11,23)"/><text x="62.5957%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.12%)</title><rect x="62.3457%" y="453" width="0.1235%" height="15" fill="rgb(232,99,1)"/><text x="62.5957%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.12%)</title><rect x="62.3457%" y="437" width="0.1235%" height="15" fill="rgb(237,95,45)"/><text x="62.5957%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.12%)</title><rect x="62.3457%" y="421" width="0.1235%" height="15" fill="rgb(208,109,11)"/><text x="62.5957%" y="431.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.12%)</title><rect x="62.3457%" y="405" width="0.1235%" height="15" fill="rgb(216,190,48)"/><text x="62.5957%" y="415.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (2 samples, 0.25%)</title><rect x="63.3333%" y="517" width="0.2469%" height="15" fill="rgb(251,171,36)"/><text x="63.5833%" y="527.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (5 samples, 0.62%)</title><rect x="63.0864%" y="533" width="0.6173%" height="15" fill="rgb(230,62,22)"/><text x="63.3364%" y="543.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.12%)</title><rect x="63.5802%" y="517" width="0.1235%" height="15" fill="rgb(225,114,35)"/><text x="63.8302%" y="527.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.12%)</title><rect x="63.7037%" y="533" width="0.1235%" height="15" fill="rgb(215,118,42)"/><text x="63.9537%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (11 samples, 1.36%)</title><rect x="62.5926%" y="549" width="1.3580%" height="15" fill="rgb(243,119,21)"/><text x="62.8426%" y="559.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.12%)</title><rect x="63.8272%" y="533" width="0.1235%" height="15" fill="rgb(252,177,53)"/><text x="64.0772%" y="543.50"></text></g><g><title>core::ptr::swap (1 samples, 0.12%)</title><rect x="63.8272%" y="517" width="0.1235%" height="15" fill="rgb(237,209,29)"/><text x="64.0772%" y="527.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.12%)</title><rect x="63.8272%" y="501" width="0.1235%" height="15" fill="rgb(212,65,23)"/><text x="64.0772%" y="511.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (13 samples, 1.60%)</title><rect x="62.4691%" y="581" width="1.6049%" height="15" fill="rgb(230,222,46)"/><text x="62.7191%" y="591.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (13 samples, 1.60%)</title><rect x="62.4691%" y="565" width="1.6049%" height="15" fill="rgb(215,135,32)"/><text x="62.7191%" y="575.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (1 samples, 0.12%)</title><rect x="63.9506%" y="549" width="0.1235%" height="15" fill="rgb(246,101,22)"/><text x="64.2006%" y="559.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (1 samples, 0.12%)</title><rect x="63.9506%" y="533" width="0.1235%" height="15" fill="rgb(206,107,13)"/><text x="64.2006%" y="543.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (1 samples, 0.12%)</title><rect x="64.0741%" y="533" width="0.1235%" height="15" fill="rgb(250,100,44)"/><text x="64.3241%" y="543.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.12%)</title><rect x="64.0741%" y="517" width="0.1235%" height="15" fill="rgb(231,147,38)"/><text x="64.3241%" y="527.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (15 samples, 1.85%)</title><rect x="62.4691%" y="597" width="1.8519%" height="15" fill="rgb(229,8,40)"/><text x="62.7191%" y="607.50">&lt;..</text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (2 samples, 0.25%)</title><rect x="64.0741%" y="581" width="0.2469%" height="15" fill="rgb(221,135,30)"/><text x="64.3241%" y="591.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (2 samples, 0.25%)</title><rect x="64.0741%" y="565" width="0.2469%" height="15" fill="rgb(249,193,18)"/><text x="64.3241%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (2 samples, 0.25%)</title><rect x="64.0741%" y="549" width="0.2469%" height="15" fill="rgb(209,133,39)"/><text x="64.3241%" y="559.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.12%)</title><rect x="64.1975%" y="533" width="0.1235%" height="15" fill="rgb(232,100,14)"/><text x="64.4475%" y="543.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.12%)</title><rect x="64.1975%" y="517" width="0.1235%" height="15" fill="rgb(224,185,1)"/><text x="64.4475%" y="527.50"></text></g><g><title>broccoli::query::colfind::inner::ColFindRecurser&lt;T,K,S&gt;::recurse_seq (438 samples, 54.07%)</title><rect x="10.7407%" y="693" width="54.0741%" height="15" fill="rgb(223,139,8)"/><text x="10.9907%" y="703.50">broccoli::query::colfind::inner::ColFindRecurser&lt;T,K,S&gt;::recurse_seq</text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (53 samples, 6.54%)</title><rect x="58.2716%" y="677" width="6.5432%" height="15" fill="rgb(232,213,38)"/><text x="58.5216%" y="687.50">broccoli:..</text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (52 samples, 6.42%)</title><rect x="58.3951%" y="661" width="6.4198%" height="15" fill="rgb(207,94,22)"/><text x="58.6451%" y="671.50">broccoli..</text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (50 samples, 6.17%)</title><rect x="58.6420%" y="645" width="6.1728%" height="15" fill="rgb(219,183,54)"/><text x="58.8920%" y="655.50">broccoli..</text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (37 samples, 4.57%)</title><rect x="60.2469%" y="629" width="4.5679%" height="15" fill="rgb(216,185,54)"/><text x="60.4969%" y="639.50">brocc..</text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (19 samples, 2.35%)</title><rect x="62.4691%" y="613" width="2.3457%" height="15" fill="rgb(254,217,39)"/><text x="62.7191%" y="623.50">b..</text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (4 samples, 0.49%)</title><rect x="64.3210%" y="597" width="0.4938%" height="15" fill="rgb(240,178,23)"/><text x="64.5710%" y="607.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (4 samples, 0.49%)</title><rect x="64.3210%" y="581" width="0.4938%" height="15" fill="rgb(218,11,47)"/><text x="64.5710%" y="591.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (4 samples, 0.49%)</title><rect x="64.3210%" y="565" width="0.4938%" height="15" fill="rgb(218,51,51)"/><text x="64.5710%" y="575.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (4 samples, 0.49%)</title><rect x="64.3210%" y="549" width="0.4938%" height="15" fill="rgb(238,126,27)"/><text x="64.5710%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (4 samples, 0.49%)</title><rect x="64.3210%" y="533" width="0.4938%" height="15" fill="rgb(249,202,22)"/><text x="64.5710%" y="543.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (1 samples, 0.12%)</title><rect x="64.6914%" y="517" width="0.1235%" height="15" fill="rgb(254,195,49)"/><text x="64.9414%" y="527.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.12%)</title><rect x="64.6914%" y="501" width="0.1235%" height="15" fill="rgb(208,123,14)"/><text x="64.9414%" y="511.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (1 samples, 0.12%)</title><rect x="64.8148%" y="661" width="0.1235%" height="15" fill="rgb(224,200,8)"/><text x="65.0648%" y="671.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (1 samples, 0.12%)</title><rect x="64.8148%" y="645" width="0.1235%" height="15" fill="rgb(217,61,36)"/><text x="65.0648%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (1 samples, 0.12%)</title><rect x="64.8148%" y="629" width="0.1235%" height="15" fill="rgb(206,35,45)"/><text x="65.0648%" y="639.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (2 samples, 0.25%)</title><rect x="64.8148%" y="677" width="0.2469%" height="15" fill="rgb(217,65,33)"/><text x="65.0648%" y="687.50"></text></g><g><title>broccoli::query::colfind::oned::get_section_mut (1 samples, 0.12%)</title><rect x="64.9383%" y="661" width="0.1235%" height="15" fill="rgb(222,158,48)"/><text x="65.1883%" y="671.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (2 samples, 0.25%)</title><rect x="65.0617%" y="661" width="0.2469%" height="15" fill="rgb(254,2,54)"/><text x="65.3117%" y="671.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (2 samples, 0.25%)</title><rect x="65.0617%" y="645" width="0.2469%" height="15" fill="rgb(250,143,38)"/><text x="65.3117%" y="655.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (2 samples, 0.25%)</title><rect x="65.0617%" y="629" width="0.2469%" height="15" fill="rgb(248,25,0)"/><text x="65.3117%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (1 samples, 0.12%)</title><rect x="65.1852%" y="613" width="0.1235%" height="15" fill="rgb(206,152,27)"/><text x="65.4352%" y="623.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (1 samples, 0.12%)</title><rect x="65.1852%" y="597" width="0.1235%" height="15" fill="rgb(240,77,30)"/><text x="65.4352%" y="607.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.12%)</title><rect x="65.1852%" y="581" width="0.1235%" height="15" fill="rgb(231,5,3)"/><text x="65.4352%" y="591.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (1 samples, 0.12%)</title><rect x="65.3086%" y="613" width="0.1235%" height="15" fill="rgb(207,226,32)"/><text x="65.5586%" y="623.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (1 samples, 0.12%)</title><rect x="65.3086%" y="597" width="0.1235%" height="15" fill="rgb(222,207,47)"/><text x="65.5586%" y="607.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (1 samples, 0.12%)</title><rect x="65.3086%" y="581" width="0.1235%" height="15" fill="rgb(229,115,45)"/><text x="65.5586%" y="591.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (1 samples, 0.12%)</title><rect x="65.3086%" y="565" width="0.1235%" height="15" fill="rgb(224,191,6)"/><text x="65.5586%" y="575.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek::{{closure}} (1 samples, 0.12%)</title><rect x="65.3086%" y="549" width="0.1235%" height="15" fill="rgb(230,227,24)"/><text x="65.5586%" y="559.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.12%)</title><rect x="65.3086%" y="533" width="0.1235%" height="15" fill="rgb(228,80,19)"/><text x="65.5586%" y="543.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.12%)</title><rect x="65.3086%" y="517" width="0.1235%" height="15" fill="rgb(247,229,0)"/><text x="65.5586%" y="527.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (2 samples, 0.25%)</title><rect x="65.3086%" y="629" width="0.2469%" height="15" fill="rgb(237,194,15)"/><text x="65.5586%" y="639.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (1 samples, 0.12%)</title><rect x="65.4321%" y="613" width="0.1235%" height="15" fill="rgb(219,203,20)"/><text x="65.6821%" y="623.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (1 samples, 0.12%)</title><rect x="65.4321%" y="597" width="0.1235%" height="15" fill="rgb(234,128,8)"/><text x="65.6821%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (3 samples, 0.37%)</title><rect x="65.5556%" y="565" width="0.3704%" height="15" fill="rgb(248,202,8)"/><text x="65.8056%" y="575.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (2 samples, 0.25%)</title><rect x="65.6790%" y="549" width="0.2469%" height="15" fill="rgb(206,104,37)"/><text x="65.9290%" y="559.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.12%)</title><rect x="65.8025%" y="533" width="0.1235%" height="15" fill="rgb(223,8,27)"/><text x="66.0525%" y="543.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.12%)</title><rect x="65.8025%" y="517" width="0.1235%" height="15" fill="rgb(216,217,28)"/><text x="66.0525%" y="527.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (1 samples, 0.12%)</title><rect x="65.8025%" y="501" width="0.1235%" height="15" fill="rgb(249,199,1)"/><text x="66.0525%" y="511.50"></text></g><g><title>data_gen::main::{{closure}}::{{closure}} (1 samples, 0.12%)</title><rect x="65.8025%" y="485" width="0.1235%" height="15" fill="rgb(240,85,17)"/><text x="66.0525%" y="495.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::lt (1 samples, 0.12%)</title><rect x="65.9259%" y="565" width="0.1235%" height="15" fill="rgb(206,108,45)"/><text x="66.1759%" y="575.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (5 samples, 0.62%)</title><rect x="65.5556%" y="581" width="0.6173%" height="15" fill="rgb(245,210,41)"/><text x="65.8056%" y="591.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (1 samples, 0.12%)</title><rect x="66.0494%" y="565" width="0.1235%" height="15" fill="rgb(206,13,37)"/><text x="66.2994%" y="575.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (1 samples, 0.12%)</title><rect x="66.0494%" y="549" width="0.1235%" height="15" fill="rgb(250,61,18)"/><text x="66.2994%" y="559.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (6 samples, 0.74%)</title><rect x="65.5556%" y="597" width="0.7407%" height="15" fill="rgb(235,172,48)"/><text x="65.8056%" y="607.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by (1 samples, 0.12%)</title><rect x="66.1728%" y="581" width="0.1235%" height="15" fill="rgb(249,201,17)"/><text x="66.4228%" y="591.50"></text></g><g><title>core::slice::sort::quicksort (1 samples, 0.12%)</title><rect x="66.1728%" y="565" width="0.1235%" height="15" fill="rgb(219,208,6)"/><text x="66.4228%" y="575.50"></text></g><g><title>core::slice::sort::recurse (1 samples, 0.12%)</title><rect x="66.1728%" y="549" width="0.1235%" height="15" fill="rgb(248,31,23)"/><text x="66.4228%" y="559.50"></text></g><g><title>core::slice::sort::insertion_sort (1 samples, 0.12%)</title><rect x="66.1728%" y="533" width="0.1235%" height="15" fill="rgb(245,15,42)"/><text x="66.4228%" y="543.50"></text></g><g><title>core::slice::sort::shift_tail (1 samples, 0.12%)</title><rect x="66.1728%" y="517" width="0.1235%" height="15" fill="rgb(222,217,39)"/><text x="66.4228%" y="527.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (7 samples, 0.86%)</title><rect x="65.5556%" y="613" width="0.8642%" height="15" fill="rgb(210,219,27)"/><text x="65.8056%" y="623.50"></text></g><g><title>broccoli::query::colfind::oned::get_section_mut (1 samples, 0.12%)</title><rect x="66.2963%" y="597" width="0.1235%" height="15" fill="rgb(252,166,36)"/><text x="66.5463%" y="607.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (2 samples, 0.25%)</title><rect x="66.4198%" y="565" width="0.2469%" height="15" fill="rgb(245,132,34)"/><text x="66.6698%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (1 samples, 0.12%)</title><rect x="66.5432%" y="549" width="0.1235%" height="15" fill="rgb(236,54,3)"/><text x="66.7932%" y="559.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (1 samples, 0.12%)</title><rect x="66.5432%" y="533" width="0.1235%" height="15" fill="rgb(241,173,43)"/><text x="66.7932%" y="543.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.12%)</title><rect x="66.5432%" y="517" width="0.1235%" height="15" fill="rgb(215,190,9)"/><text x="66.7932%" y="527.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (3 samples, 0.37%)</title><rect x="66.4198%" y="597" width="0.3704%" height="15" fill="rgb(242,101,16)"/><text x="66.6698%" y="607.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (3 samples, 0.37%)</title><rect x="66.4198%" y="581" width="0.3704%" height="15" fill="rgb(223,190,21)"/><text x="66.6698%" y="591.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by (1 samples, 0.12%)</title><rect x="66.6667%" y="565" width="0.1235%" height="15" fill="rgb(215,228,25)"/><text x="66.9167%" y="575.50"></text></g><g><title>core::slice::sort::quicksort (1 samples, 0.12%)</title><rect x="66.6667%" y="549" width="0.1235%" height="15" fill="rgb(225,36,22)"/><text x="66.9167%" y="559.50"></text></g><g><title>core::slice::sort::recurse (1 samples, 0.12%)</title><rect x="66.6667%" y="533" width="0.1235%" height="15" fill="rgb(251,106,46)"/><text x="66.9167%" y="543.50"></text></g><g><title>core::slice::sort::partition (1 samples, 0.12%)</title><rect x="66.6667%" y="517" width="0.1235%" height="15" fill="rgb(208,90,1)"/><text x="66.9167%" y="527.50"></text></g><g><title>core::slice::sort::partition_in_blocks (1 samples, 0.12%)</title><rect x="66.6667%" y="501" width="0.1235%" height="15" fill="rgb(243,10,4)"/><text x="66.9167%" y="511.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.12%)</title><rect x="66.6667%" y="485" width="0.1235%" height="15" fill="rgb(212,137,27)"/><text x="66.9167%" y="495.50"></text></g><g><title>broccoli::query::colfind::inner::ColFindRecurser&lt;T,K,S&gt;::recurse_seq (458 samples, 56.54%)</title><rect x="10.4938%" y="709" width="56.5432%" height="15" fill="rgb(231,220,49)"/><text x="10.7438%" y="719.50">broccoli::query::colfind::inner::ColFindRecurser&lt;T,K,S&gt;::recurse_seq</text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (18 samples, 2.22%)</title><rect x="64.8148%" y="693" width="2.2222%" height="15" fill="rgb(237,96,20)"/><text x="65.0648%" y="703.50">b..</text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (16 samples, 1.98%)</title><rect x="65.0617%" y="677" width="1.9753%" height="15" fill="rgb(239,229,30)"/><text x="65.3117%" y="687.50">b..</text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (14 samples, 1.73%)</title><rect x="65.3086%" y="661" width="1.7284%" height="15" fill="rgb(219,65,33)"/><text x="65.5586%" y="671.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (14 samples, 1.73%)</title><rect x="65.3086%" y="645" width="1.7284%" height="15" fill="rgb(243,134,7)"/><text x="65.5586%" y="655.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (12 samples, 1.48%)</title><rect x="65.5556%" y="629" width="1.4815%" height="15" fill="rgb(216,177,54)"/><text x="65.8056%" y="639.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (5 samples, 0.62%)</title><rect x="66.4198%" y="613" width="0.6173%" height="15" fill="rgb(211,160,20)"/><text x="66.6698%" y="623.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (2 samples, 0.25%)</title><rect x="66.7901%" y="597" width="0.2469%" height="15" fill="rgb(239,85,39)"/><text x="67.0401%" y="607.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (2 samples, 0.25%)</title><rect x="66.7901%" y="581" width="0.2469%" height="15" fill="rgb(232,125,22)"/><text x="67.0401%" y="591.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (2 samples, 0.25%)</title><rect x="66.7901%" y="565" width="0.2469%" height="15" fill="rgb(244,57,34)"/><text x="67.0401%" y="575.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (2 samples, 0.25%)</title><rect x="66.7901%" y="549" width="0.2469%" height="15" fill="rgb(214,203,32)"/><text x="67.0401%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (1 samples, 0.12%)</title><rect x="66.9136%" y="533" width="0.1235%" height="15" fill="rgb(207,58,43)"/><text x="67.1636%" y="543.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (1 samples, 0.12%)</title><rect x="66.9136%" y="517" width="0.1235%" height="15" fill="rgb(215,193,15)"/><text x="67.1636%" y="527.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.12%)</title><rect x="66.9136%" y="501" width="0.1235%" height="15" fill="rgb(232,15,44)"/><text x="67.1636%" y="511.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.12%)</title><rect x="66.9136%" y="485" width="0.1235%" height="15" fill="rgb(212,3,48)"/><text x="67.1636%" y="495.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (1 samples, 0.12%)</title><rect x="66.9136%" y="469" width="0.1235%" height="15" fill="rgb(218,128,7)"/><text x="67.1636%" y="479.50"></text></g><g><title>data_gen::main::{{closure}}::{{closure}} (1 samples, 0.12%)</title><rect x="66.9136%" y="453" width="0.1235%" height="15" fill="rgb(226,216,39)"/><text x="67.1636%" y="463.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (1 samples, 0.12%)</title><rect x="67.1605%" y="645" width="0.1235%" height="15" fill="rgb(243,47,51)"/><text x="67.4105%" y="655.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (1 samples, 0.12%)</title><rect x="67.1605%" y="629" width="0.1235%" height="15" fill="rgb(241,183,40)"/><text x="67.4105%" y="639.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (1 samples, 0.12%)</title><rect x="67.1605%" y="613" width="0.1235%" height="15" fill="rgb(231,217,32)"/><text x="67.4105%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (1 samples, 0.12%)</title><rect x="67.1605%" y="597" width="0.1235%" height="15" fill="rgb(229,61,38)"/><text x="67.4105%" y="607.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (1 samples, 0.12%)</title><rect x="67.5309%" y="565" width="0.1235%" height="15" fill="rgb(225,210,5)"/><text x="67.7809%" y="575.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.12%)</title><rect x="67.5309%" y="549" width="0.1235%" height="15" fill="rgb(231,79,45)"/><text x="67.7809%" y="559.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.12%)</title><rect x="67.5309%" y="533" width="0.1235%" height="15" fill="rgb(224,100,7)"/><text x="67.7809%" y="543.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (1 samples, 0.12%)</title><rect x="67.5309%" y="517" width="0.1235%" height="15" fill="rgb(241,198,18)"/><text x="67.7809%" y="527.50"></text></g><g><title>data_gen::main::{{closure}}::{{closure}} (1 samples, 0.12%)</title><rect x="67.5309%" y="501" width="0.1235%" height="15" fill="rgb(252,97,53)"/><text x="67.7809%" y="511.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (4 samples, 0.49%)</title><rect x="67.2840%" y="613" width="0.4938%" height="15" fill="rgb(220,88,7)"/><text x="67.5340%" y="623.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (4 samples, 0.49%)</title><rect x="67.2840%" y="597" width="0.4938%" height="15" fill="rgb(213,176,14)"/><text x="67.5340%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (3 samples, 0.37%)</title><rect x="67.4074%" y="581" width="0.3704%" height="15" fill="rgb(246,73,7)"/><text x="67.6574%" y="591.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.12%)</title><rect x="67.6543%" y="565" width="0.1235%" height="15" fill="rgb(245,64,36)"/><text x="67.9043%" y="575.50"></text></g><g><title>core::ptr::swap (1 samples, 0.12%)</title><rect x="67.6543%" y="549" width="0.1235%" height="15" fill="rgb(245,80,10)"/><text x="67.9043%" y="559.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.12%)</title><rect x="67.6543%" y="533" width="0.1235%" height="15" fill="rgb(232,107,50)"/><text x="67.9043%" y="543.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (5 samples, 0.62%)</title><rect x="67.2840%" y="629" width="0.6173%" height="15" fill="rgb(253,3,0)"/><text x="67.5340%" y="639.50"></text></g><g><title>broccoli::query::colfind::oned::get_section_mut (1 samples, 0.12%)</title><rect x="67.7778%" y="613" width="0.1235%" height="15" fill="rgb(212,99,53)"/><text x="68.0278%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::truncate (1 samples, 0.12%)</title><rect x="68.0247%" y="549" width="0.1235%" height="15" fill="rgb(249,111,54)"/><text x="68.2747%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (3 samples, 0.37%)</title><rect x="68.0247%" y="565" width="0.3704%" height="15" fill="rgb(249,55,30)"/><text x="68.2747%" y="575.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (2 samples, 0.25%)</title><rect x="68.1481%" y="549" width="0.2469%" height="15" fill="rgb(237,47,42)"/><text x="68.3981%" y="559.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (2 samples, 0.25%)</title><rect x="68.1481%" y="533" width="0.2469%" height="15" fill="rgb(211,20,18)"/><text x="68.3981%" y="543.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.12%)</title><rect x="68.2716%" y="517" width="0.1235%" height="15" fill="rgb(231,203,46)"/><text x="68.5216%" y="527.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (1 samples, 0.12%)</title><rect x="68.2716%" y="501" width="0.1235%" height="15" fill="rgb(237,142,3)"/><text x="68.5216%" y="511.50"></text></g><g><title>data_gen::main::{{closure}}::{{closure}} (1 samples, 0.12%)</title><rect x="68.2716%" y="485" width="0.1235%" height="15" fill="rgb(241,107,1)"/><text x="68.5216%" y="495.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (5 samples, 0.62%)</title><rect x="67.9012%" y="597" width="0.6173%" height="15" fill="rgb(229,83,13)"/><text x="68.1512%" y="607.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (5 samples, 0.62%)</title><rect x="67.9012%" y="581" width="0.6173%" height="15" fill="rgb(241,91,40)"/><text x="68.1512%" y="591.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (1 samples, 0.12%)</title><rect x="68.3951%" y="565" width="0.1235%" height="15" fill="rgb(225,3,45)"/><text x="68.6451%" y="575.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (1 samples, 0.12%)</title><rect x="68.3951%" y="549" width="0.1235%" height="15" fill="rgb(244,223,14)"/><text x="68.6451%" y="559.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek::{{closure}} (1 samples, 0.12%)</title><rect x="68.3951%" y="533" width="0.1235%" height="15" fill="rgb(224,124,37)"/><text x="68.6451%" y="543.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.12%)</title><rect x="68.3951%" y="517" width="0.1235%" height="15" fill="rgb(251,171,30)"/><text x="68.6451%" y="527.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.12%)</title><rect x="68.3951%" y="501" width="0.1235%" height="15" fill="rgb(236,46,54)"/><text x="68.6451%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (1 samples, 0.12%)</title><rect x="68.5185%" y="565" width="0.1235%" height="15" fill="rgb(245,213,5)"/><text x="68.7685%" y="575.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (1 samples, 0.12%)</title><rect x="68.5185%" y="549" width="0.1235%" height="15" fill="rgb(230,144,27)"/><text x="68.7685%" y="559.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.12%)</title><rect x="68.5185%" y="533" width="0.1235%" height="15" fill="rgb(220,86,6)"/><text x="68.7685%" y="543.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (7 samples, 0.86%)</title><rect x="67.9012%" y="613" width="0.8642%" height="15" fill="rgb(240,20,13)"/><text x="68.1512%" y="623.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (2 samples, 0.25%)</title><rect x="68.5185%" y="597" width="0.2469%" height="15" fill="rgb(217,89,34)"/><text x="68.7685%" y="607.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (2 samples, 0.25%)</title><rect x="68.5185%" y="581" width="0.2469%" height="15" fill="rgb(229,13,5)"/><text x="68.7685%" y="591.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (1 samples, 0.12%)</title><rect x="68.6420%" y="565" width="0.1235%" height="15" fill="rgb(244,67,35)"/><text x="68.8920%" y="575.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (1 samples, 0.12%)</title><rect x="68.6420%" y="549" width="0.1235%" height="15" fill="rgb(221,40,2)"/><text x="68.8920%" y="559.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek::{{closure}} (1 samples, 0.12%)</title><rect x="68.6420%" y="533" width="0.1235%" height="15" fill="rgb(237,157,21)"/><text x="68.8920%" y="543.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.12%)</title><rect x="68.6420%" y="517" width="0.1235%" height="15" fill="rgb(222,94,11)"/><text x="68.8920%" y="527.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.12%)</title><rect x="68.6420%" y="501" width="0.1235%" height="15" fill="rgb(249,113,6)"/><text x="68.8920%" y="511.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (3 samples, 0.37%)</title><rect x="68.7654%" y="581" width="0.3704%" height="15" fill="rgb(238,137,36)"/><text x="69.0154%" y="591.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (3 samples, 0.37%)</title><rect x="68.7654%" y="565" width="0.3704%" height="15" fill="rgb(210,102,26)"/><text x="69.0154%" y="575.50"></text></g><g><title>broccoli::query::colfind::inner::ColFindRecurser&lt;T,K,S&gt;::recurse_seq (480 samples, 59.26%)</title><rect x="10.0000%" y="725" width="59.2593%" height="15" fill="rgb(218,30,30)"/><text x="10.2500%" y="735.50">broccoli::query::colfind::inner::ColFindRecurser&lt;T,K,S&gt;::recurse_seq</text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (18 samples, 2.22%)</title><rect x="67.0370%" y="709" width="2.2222%" height="15" fill="rgb(214,67,26)"/><text x="67.2870%" y="719.50">b..</text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (18 samples, 2.22%)</title><rect x="67.0370%" y="693" width="2.2222%" height="15" fill="rgb(251,9,53)"/><text x="67.2870%" y="703.50">b..</text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (18 samples, 2.22%)</title><rect x="67.0370%" y="677" width="2.2222%" height="15" fill="rgb(228,204,25)"/><text x="67.2870%" y="687.50">b..</text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (18 samples, 2.22%)</title><rect x="67.0370%" y="661" width="2.2222%" height="15" fill="rgb(207,153,8)"/><text x="67.2870%" y="671.50">b..</text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (16 samples, 1.98%)</title><rect x="67.2840%" y="645" width="1.9753%" height="15" fill="rgb(242,9,16)"/><text x="67.5340%" y="655.50">b..</text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (11 samples, 1.36%)</title><rect x="67.9012%" y="629" width="1.3580%" height="15" fill="rgb(217,211,10)"/><text x="68.1512%" y="639.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (4 samples, 0.49%)</title><rect x="68.7654%" y="613" width="0.4938%" height="15" fill="rgb(219,228,52)"/><text x="69.0154%" y="623.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (4 samples, 0.49%)</title><rect x="68.7654%" y="597" width="0.4938%" height="15" fill="rgb(231,92,29)"/><text x="69.0154%" y="607.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (1 samples, 0.12%)</title><rect x="69.1358%" y="581" width="0.1235%" height="15" fill="rgb(232,8,23)"/><text x="69.3858%" y="591.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (1 samples, 0.12%)</title><rect x="69.1358%" y="565" width="0.1235%" height="15" fill="rgb(216,211,34)"/><text x="69.3858%" y="575.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (1 samples, 0.12%)</title><rect x="69.2593%" y="693" width="0.1235%" height="15" fill="rgb(236,151,0)"/><text x="69.5093%" y="703.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (1 samples, 0.12%)</title><rect x="69.2593%" y="677" width="0.1235%" height="15" fill="rgb(209,168,3)"/><text x="69.5093%" y="687.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (1 samples, 0.12%)</title><rect x="69.2593%" y="661" width="0.1235%" height="15" fill="rgb(208,129,28)"/><text x="69.5093%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (1 samples, 0.12%)</title><rect x="69.2593%" y="645" width="0.1235%" height="15" fill="rgb(229,78,22)"/><text x="69.5093%" y="655.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (1 samples, 0.12%)</title><rect x="69.2593%" y="629" width="0.1235%" height="15" fill="rgb(228,187,13)"/><text x="69.5093%" y="639.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.12%)</title><rect x="69.2593%" y="613" width="0.1235%" height="15" fill="rgb(240,119,24)"/><text x="69.5093%" y="623.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.12%)</title><rect x="69.2593%" y="597" width="0.1235%" height="15" fill="rgb(209,194,42)"/><text x="69.5093%" y="607.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (1 samples, 0.12%)</title><rect x="69.2593%" y="581" width="0.1235%" height="15" fill="rgb(247,200,46)"/><text x="69.5093%" y="591.50"></text></g><g><title>data_gen::main::{{closure}}::{{closure}} (1 samples, 0.12%)</title><rect x="69.2593%" y="565" width="0.1235%" height="15" fill="rgb(218,76,16)"/><text x="69.5093%" y="575.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (1 samples, 0.12%)</title><rect x="69.3827%" y="661" width="0.1235%" height="15" fill="rgb(225,21,48)"/><text x="69.6327%" y="671.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (1 samples, 0.12%)</title><rect x="69.3827%" y="645" width="0.1235%" height="15" fill="rgb(239,223,50)"/><text x="69.6327%" y="655.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (1 samples, 0.12%)</title><rect x="69.3827%" y="629" width="0.1235%" height="15" fill="rgb(244,45,21)"/><text x="69.6327%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (1 samples, 0.12%)</title><rect x="69.3827%" y="613" width="0.1235%" height="15" fill="rgb(232,33,43)"/><text x="69.6327%" y="623.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (1 samples, 0.12%)</title><rect x="69.3827%" y="597" width="0.1235%" height="15" fill="rgb(209,8,3)"/><text x="69.6327%" y="607.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.12%)</title><rect x="69.3827%" y="581" width="0.1235%" height="15" fill="rgb(214,25,53)"/><text x="69.6327%" y="591.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (1 samples, 0.12%)</title><rect x="69.5062%" y="645" width="0.1235%" height="15" fill="rgb(254,186,54)"/><text x="69.7562%" y="655.50"></text></g><g><title>broccoli::query::colfind::oned::get_section_mut (1 samples, 0.12%)</title><rect x="69.5062%" y="629" width="0.1235%" height="15" fill="rgb(208,174,49)"/><text x="69.7562%" y="639.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (1 samples, 0.12%)</title><rect x="69.6296%" y="613" width="0.1235%" height="15" fill="rgb(233,191,51)"/><text x="69.8796%" y="623.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (1 samples, 0.12%)</title><rect x="69.6296%" y="597" width="0.1235%" height="15" fill="rgb(222,134,10)"/><text x="69.8796%" y="607.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (5 samples, 0.62%)</title><rect x="69.6296%" y="629" width="0.6173%" height="15" fill="rgb(230,226,20)"/><text x="69.8796%" y="639.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (4 samples, 0.49%)</title><rect x="69.7531%" y="613" width="0.4938%" height="15" fill="rgb(251,111,25)"/><text x="70.0031%" y="623.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (4 samples, 0.49%)</title><rect x="69.7531%" y="597" width="0.4938%" height="15" fill="rgb(224,40,46)"/><text x="70.0031%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (3 samples, 0.37%)</title><rect x="69.8765%" y="581" width="0.3704%" height="15" fill="rgb(236,108,47)"/><text x="70.1265%" y="591.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (3 samples, 0.37%)</title><rect x="69.8765%" y="565" width="0.3704%" height="15" fill="rgb(234,93,0)"/><text x="70.1265%" y="575.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (2 samples, 0.25%)</title><rect x="70.0000%" y="549" width="0.2469%" height="15" fill="rgb(224,213,32)"/><text x="70.2500%" y="559.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.12%)</title><rect x="70.1235%" y="533" width="0.1235%" height="15" fill="rgb(251,11,48)"/><text x="70.3735%" y="543.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (1 samples, 0.12%)</title><rect x="70.1235%" y="517" width="0.1235%" height="15" fill="rgb(236,173,5)"/><text x="70.3735%" y="527.50"></text></g><g><title>data_gen::main::{{closure}}::{{closure}} (1 samples, 0.12%)</title><rect x="70.1235%" y="501" width="0.1235%" height="15" fill="rgb(230,95,12)"/><text x="70.3735%" y="511.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (1 samples, 0.12%)</title><rect x="70.2469%" y="613" width="0.1235%" height="15" fill="rgb(232,209,1)"/><text x="70.4969%" y="623.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (1 samples, 0.12%)</title><rect x="70.2469%" y="597" width="0.1235%" height="15" fill="rgb(232,6,1)"/><text x="70.4969%" y="607.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (1 samples, 0.12%)</title><rect x="70.2469%" y="581" width="0.1235%" height="15" fill="rgb(210,224,50)"/><text x="70.4969%" y="591.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (1 samples, 0.12%)</title><rect x="70.2469%" y="565" width="0.1235%" height="15" fill="rgb(228,127,35)"/><text x="70.4969%" y="575.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (1 samples, 0.12%)</title><rect x="70.2469%" y="549" width="0.1235%" height="15" fill="rgb(245,102,45)"/><text x="70.4969%" y="559.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek::{{closure}} (1 samples, 0.12%)</title><rect x="70.2469%" y="533" width="0.1235%" height="15" fill="rgb(214,1,49)"/><text x="70.4969%" y="543.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.12%)</title><rect x="70.2469%" y="517" width="0.1235%" height="15" fill="rgb(226,163,40)"/><text x="70.4969%" y="527.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.12%)</title><rect x="70.2469%" y="501" width="0.1235%" height="15" fill="rgb(239,212,28)"/><text x="70.4969%" y="511.50"></text></g><g><title>broccoli::query::colfind::inner::ColFindRecurser&lt;T,K,S&gt;::recurse_seq (492 samples, 60.74%)</title><rect x="9.7531%" y="741" width="60.7407%" height="15" fill="rgb(220,20,13)"/><text x="10.0031%" y="751.50">broccoli::query::colfind::inner::ColFindRecurser&lt;T,K,S&gt;::recurse_seq</text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (10 samples, 1.23%)</title><rect x="69.2593%" y="725" width="1.2346%" height="15" fill="rgb(210,164,35)"/><text x="69.5093%" y="735.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (10 samples, 1.23%)</title><rect x="69.2593%" y="709" width="1.2346%" height="15" fill="rgb(248,109,41)"/><text x="69.5093%" y="719.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (9 samples, 1.11%)</title><rect x="69.3827%" y="693" width="1.1111%" height="15" fill="rgb(238,23,50)"/><text x="69.6327%" y="703.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (9 samples, 1.11%)</title><rect x="69.3827%" y="677" width="1.1111%" height="15" fill="rgb(211,48,49)"/><text x="69.6327%" y="687.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (8 samples, 0.99%)</title><rect x="69.5062%" y="661" width="0.9877%" height="15" fill="rgb(223,36,21)"/><text x="69.7562%" y="671.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (7 samples, 0.86%)</title><rect x="69.6296%" y="645" width="0.8642%" height="15" fill="rgb(207,123,46)"/><text x="69.8796%" y="655.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (2 samples, 0.25%)</title><rect x="70.2469%" y="629" width="0.2469%" height="15" fill="rgb(240,218,32)"/><text x="70.4969%" y="639.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (1 samples, 0.12%)</title><rect x="70.3704%" y="613" width="0.1235%" height="15" fill="rgb(252,5,43)"/><text x="70.6204%" y="623.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (1 samples, 0.12%)</title><rect x="70.3704%" y="597" width="0.1235%" height="15" fill="rgb(252,84,19)"/><text x="70.6204%" y="607.50"></text></g><g><title>broccoli::query::colfind::oned::get_section_mut (1 samples, 0.12%)</title><rect x="70.3704%" y="581" width="0.1235%" height="15" fill="rgb(243,152,39)"/><text x="70.6204%" y="591.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (1 samples, 0.12%)</title><rect x="70.4938%" y="661" width="0.1235%" height="15" fill="rgb(234,160,15)"/><text x="70.7438%" y="671.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (1 samples, 0.12%)</title><rect x="70.4938%" y="645" width="0.1235%" height="15" fill="rgb(237,34,20)"/><text x="70.7438%" y="655.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (1 samples, 0.12%)</title><rect x="70.4938%" y="629" width="0.1235%" height="15" fill="rgb(229,97,13)"/><text x="70.7438%" y="639.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (3 samples, 0.37%)</title><rect x="70.6173%" y="645" width="0.3704%" height="15" fill="rgb(234,71,50)"/><text x="70.8673%" y="655.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (3 samples, 0.37%)</title><rect x="70.6173%" y="629" width="0.3704%" height="15" fill="rgb(253,155,4)"/><text x="70.8673%" y="639.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (3 samples, 0.37%)</title><rect x="70.6173%" y="613" width="0.3704%" height="15" fill="rgb(222,185,37)"/><text x="70.8673%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (1 samples, 0.12%)</title><rect x="70.8642%" y="597" width="0.1235%" height="15" fill="rgb(251,177,13)"/><text x="71.1142%" y="607.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (1 samples, 0.12%)</title><rect x="70.8642%" y="581" width="0.1235%" height="15" fill="rgb(250,179,40)"/><text x="71.1142%" y="591.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.12%)</title><rect x="70.8642%" y="565" width="0.1235%" height="15" fill="rgb(242,44,2)"/><text x="71.1142%" y="575.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.12%)</title><rect x="70.8642%" y="549" width="0.1235%" height="15" fill="rgb(216,177,13)"/><text x="71.1142%" y="559.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (1 samples, 0.12%)</title><rect x="70.8642%" y="533" width="0.1235%" height="15" fill="rgb(216,106,43)"/><text x="71.1142%" y="543.50"></text></g><g><title>data_gen::main::{{closure}}::{{closure}} (1 samples, 0.12%)</title><rect x="70.8642%" y="517" width="0.1235%" height="15" fill="rgb(216,183,2)"/><text x="71.1142%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (1 samples, 0.12%)</title><rect x="71.1111%" y="581" width="0.1235%" height="15" fill="rgb(249,75,3)"/><text x="71.3611%" y="591.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (1 samples, 0.12%)</title><rect x="71.1111%" y="565" width="0.1235%" height="15" fill="rgb(219,67,39)"/><text x="71.3611%" y="575.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (1 samples, 0.12%)</title><rect x="71.1111%" y="549" width="0.1235%" height="15" fill="rgb(253,228,2)"/><text x="71.3611%" y="559.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (3 samples, 0.37%)</title><rect x="70.9877%" y="613" width="0.3704%" height="15" fill="rgb(235,138,27)"/><text x="71.2377%" y="623.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (3 samples, 0.37%)</title><rect x="70.9877%" y="597" width="0.3704%" height="15" fill="rgb(236,97,51)"/><text x="71.2377%" y="607.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.12%)</title><rect x="71.2346%" y="581" width="0.1235%" height="15" fill="rgb(240,80,30)"/><text x="71.4846%" y="591.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (4 samples, 0.49%)</title><rect x="70.9877%" y="629" width="0.4938%" height="15" fill="rgb(230,178,19)"/><text x="71.2377%" y="639.50"></text></g><g><title>broccoli::query::colfind::oned::get_section_mut (1 samples, 0.12%)</title><rect x="71.3580%" y="613" width="0.1235%" height="15" fill="rgb(210,190,27)"/><text x="71.6080%" y="623.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (1 samples, 0.12%)</title><rect x="71.4815%" y="613" width="0.1235%" height="15" fill="rgb(222,107,31)"/><text x="71.7315%" y="623.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (1 samples, 0.12%)</title><rect x="71.4815%" y="597" width="0.1235%" height="15" fill="rgb(216,127,34)"/><text x="71.7315%" y="607.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (1 samples, 0.12%)</title><rect x="71.4815%" y="581" width="0.1235%" height="15" fill="rgb(234,116,52)"/><text x="71.7315%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (1 samples, 0.12%)</title><rect x="71.4815%" y="565" width="0.1235%" height="15" fill="rgb(222,124,15)"/><text x="71.7315%" y="575.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (1 samples, 0.12%)</title><rect x="71.4815%" y="549" width="0.1235%" height="15" fill="rgb(231,179,28)"/><text x="71.7315%" y="559.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (4 samples, 0.49%)</title><rect x="71.6049%" y="597" width="0.4938%" height="15" fill="rgb(226,93,45)"/><text x="71.8549%" y="607.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (4 samples, 0.49%)</title><rect x="71.6049%" y="581" width="0.4938%" height="15" fill="rgb(215,8,51)"/><text x="71.8549%" y="591.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (4 samples, 0.49%)</title><rect x="71.6049%" y="565" width="0.4938%" height="15" fill="rgb(223,106,5)"/><text x="71.8549%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (2 samples, 0.25%)</title><rect x="71.8519%" y="549" width="0.2469%" height="15" fill="rgb(250,191,5)"/><text x="72.1019%" y="559.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (2 samples, 0.25%)</title><rect x="71.8519%" y="533" width="0.2469%" height="15" fill="rgb(242,132,44)"/><text x="72.1019%" y="543.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.12%)</title><rect x="71.9753%" y="517" width="0.1235%" height="15" fill="rgb(251,152,29)"/><text x="72.2253%" y="527.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.12%)</title><rect x="71.9753%" y="501" width="0.1235%" height="15" fill="rgb(218,179,5)"/><text x="72.2253%" y="511.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (1 samples, 0.12%)</title><rect x="71.9753%" y="485" width="0.1235%" height="15" fill="rgb(227,67,19)"/><text x="72.2253%" y="495.50"></text></g><g><title>data_gen::main::{{closure}}::{{closure}} (1 samples, 0.12%)</title><rect x="71.9753%" y="469" width="0.1235%" height="15" fill="rgb(233,119,31)"/><text x="72.2253%" y="479.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut (507 samples, 62.59%)</title><rect x="9.6296%" y="789" width="62.5926%" height="15" fill="rgb(241,120,22)"/><text x="9.8796%" y="799.50">broccoli::query::Queries::find_colliding_pairs_mut</text></g><g><title>broccoli::query::colfind::QueryBuilder&lt;A,T&gt;::query_seq (507 samples, 62.59%)</title><rect x="9.6296%" y="773" width="62.5926%" height="15" fill="rgb(224,102,30)"/><text x="9.8796%" y="783.50">broccoli::query::colfind::QueryBuilder&lt;A,T&gt;::query_seq</text></g><g><title>broccoli::query::colfind::inner::ColFindRecurser&lt;T,K,S&gt;::recurse_seq (507 samples, 62.59%)</title><rect x="9.6296%" y="757" width="62.5926%" height="15" fill="rgb(210,164,37)"/><text x="9.8796%" y="767.50">broccoli::query::colfind::inner::ColFindRecurser&lt;T,K,S&gt;::recurse_seq</text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (14 samples, 1.73%)</title><rect x="70.4938%" y="741" width="1.7284%" height="15" fill="rgb(226,191,16)"/><text x="70.7438%" y="751.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (14 samples, 1.73%)</title><rect x="70.4938%" y="725" width="1.7284%" height="15" fill="rgb(214,40,45)"/><text x="70.7438%" y="735.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (14 samples, 1.73%)</title><rect x="70.4938%" y="709" width="1.7284%" height="15" fill="rgb(244,29,26)"/><text x="70.7438%" y="719.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (14 samples, 1.73%)</title><rect x="70.4938%" y="693" width="1.7284%" height="15" fill="rgb(216,16,5)"/><text x="70.7438%" y="703.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (14 samples, 1.73%)</title><rect x="70.4938%" y="677" width="1.7284%" height="15" fill="rgb(249,76,35)"/><text x="70.7438%" y="687.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (13 samples, 1.60%)</title><rect x="70.6173%" y="661" width="1.6049%" height="15" fill="rgb(207,11,44)"/><text x="70.8673%" y="671.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (10 samples, 1.23%)</title><rect x="70.9877%" y="645" width="1.2346%" height="15" fill="rgb(228,190,49)"/><text x="71.2377%" y="655.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (6 samples, 0.74%)</title><rect x="71.4815%" y="629" width="0.7407%" height="15" fill="rgb(214,173,12)"/><text x="71.7315%" y="639.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (5 samples, 0.62%)</title><rect x="71.6049%" y="613" width="0.6173%" height="15" fill="rgb(218,26,35)"/><text x="71.8549%" y="623.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (1 samples, 0.12%)</title><rect x="72.0988%" y="597" width="0.1235%" height="15" fill="rgb(220,200,19)"/><text x="72.3488%" y="607.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (1 samples, 0.12%)</title><rect x="72.0988%" y="581" width="0.1235%" height="15" fill="rgb(239,95,49)"/><text x="72.3488%" y="591.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (1 samples, 0.12%)</title><rect x="72.0988%" y="565" width="0.1235%" height="15" fill="rgb(235,85,53)"/><text x="72.3488%" y="575.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (1 samples, 0.12%)</title><rect x="72.0988%" y="549" width="0.1235%" height="15" fill="rgb(233,133,31)"/><text x="72.3488%" y="559.50"></text></g><g><title>axgeom::range::Range&lt;T&gt;::contains_ext (4 samples, 0.49%)</title><rect x="72.2222%" y="677" width="0.4938%" height="15" fill="rgb(218,25,20)"/><text x="72.4722%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="72.5926%" y="661" width="0.1235%" height="15" fill="rgb(252,210,38)"/><text x="72.8426%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="72.5926%" y="645" width="0.1235%" height="15" fill="rgb(242,134,21)"/><text x="72.8426%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="72.5926%" y="629" width="0.1235%" height="15" fill="rgb(213,28,48)"/><text x="72.8426%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="72.5926%" y="613" width="0.1235%" height="15" fill="rgb(250,196,2)"/><text x="72.8426%" y="623.50"></text></g><g><title>broccoli::tree::analyze::oned::bin_middle_left_right (5 samples, 0.62%)</title><rect x="72.2222%" y="693" width="0.6173%" height="15" fill="rgb(227,5,17)"/><text x="72.4722%" y="703.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.12%)</title><rect x="72.7160%" y="677" width="0.1235%" height="15" fill="rgb(221,226,24)"/><text x="72.9660%" y="687.50"></text></g><g><title>core::ptr::swap (1 samples, 0.12%)</title><rect x="72.7160%" y="661" width="0.1235%" height="15" fill="rgb(211,5,48)"/><text x="72.9660%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.12%)</title><rect x="72.7160%" y="645" width="0.1235%" height="15" fill="rgb(219,150,6)"/><text x="72.9660%" y="655.50"></text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::create_non_leaf (16 samples, 1.98%)</title><rect x="72.2222%" y="725" width="1.9753%" height="15" fill="rgb(251,46,16)"/><text x="72.4722%" y="735.50">b..</text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf (16 samples, 1.98%)</title><rect x="72.2222%" y="709" width="1.9753%" height="15" fill="rgb(220,204,40)"/><text x="72.4722%" y="719.50">b..</text></g><g><title>pdqselect::select_by (11 samples, 1.36%)</title><rect x="72.8395%" y="693" width="1.3580%" height="15" fill="rgb(211,85,2)"/><text x="73.0895%" y="703.50"></text></g><g><title>pdqselect::quickselect (11 samples, 1.36%)</title><rect x="72.8395%" y="677" width="1.3580%" height="15" fill="rgb(229,17,7)"/><text x="73.0895%" y="687.50"></text></g><g><title>pdqselect::recurse (11 samples, 1.36%)</title><rect x="72.8395%" y="661" width="1.3580%" height="15" fill="rgb(239,72,28)"/><text x="73.0895%" y="671.50"></text></g><g><title>pdqselect::partition (11 samples, 1.36%)</title><rect x="72.8395%" y="645" width="1.3580%" height="15" fill="rgb(230,47,54)"/><text x="73.0895%" y="655.50"></text></g><g><title>pdqselect::partition_in_blocks (6 samples, 0.74%)</title><rect x="73.4568%" y="629" width="0.7407%" height="15" fill="rgb(214,50,8)"/><text x="73.7068%" y="639.50"></text></g><g><title>pdqselect::select_by::{{closure}} (3 samples, 0.37%)</title><rect x="73.8272%" y="613" width="0.3704%" height="15" fill="rgb(216,198,43)"/><text x="74.0772%" y="623.50"></text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf::{{closure}} (3 samples, 0.37%)</title><rect x="73.8272%" y="597" width="0.3704%" height="15" fill="rgb(234,20,35)"/><text x="74.0772%" y="607.50"></text></g><g><title>broccoli::tree::analyze::oned::compare_bots (3 samples, 0.37%)</title><rect x="73.8272%" y="581" width="0.3704%" height="15" fill="rgb(254,45,19)"/><text x="74.0772%" y="591.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (3 samples, 0.37%)</title><rect x="73.8272%" y="565" width="0.3704%" height="15" fill="rgb(219,14,44)"/><text x="74.0772%" y="575.50"></text></g><g><title>broccoli::tree::analyze::builder::NonLeafFinisher&lt;A,T&gt;::finish (1 samples, 0.12%)</title><rect x="74.1975%" y="709" width="0.1235%" height="15" fill="rgb(217,220,26)"/><text x="74.4475%" y="719.50"></text></g><g><title>&lt;broccoli::tree::analyze::DefaultSorter as broccoli::tree::analyze::Sorter&gt;::sort (1 samples, 0.12%)</title><rect x="74.1975%" y="693" width="0.1235%" height="15" fill="rgb(213,158,28)"/><text x="74.4475%" y="703.50"></text></g><g><title>broccoli::tree::analyze::oned::sweeper_update (1 samples, 0.12%)</title><rect x="74.1975%" y="677" width="0.1235%" height="15" fill="rgb(252,51,52)"/><text x="74.4475%" y="687.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by (1 samples, 0.12%)</title><rect x="74.1975%" y="661" width="0.1235%" height="15" fill="rgb(246,89,16)"/><text x="74.4475%" y="671.50"></text></g><g><title>core::slice::sort::quicksort (1 samples, 0.12%)</title><rect x="74.1975%" y="645" width="0.1235%" height="15" fill="rgb(216,158,49)"/><text x="74.4475%" y="655.50"></text></g><g><title>core::slice::sort::recurse (1 samples, 0.12%)</title><rect x="74.1975%" y="629" width="0.1235%" height="15" fill="rgb(236,107,19)"/><text x="74.4475%" y="639.50"></text></g><g><title>core::slice::sort::recurse (1 samples, 0.12%)</title><rect x="74.1975%" y="613" width="0.1235%" height="15" fill="rgb(228,185,30)"/><text x="74.4475%" y="623.50"></text></g><g><title>core::slice::sort::insertion_sort (1 samples, 0.12%)</title><rect x="74.1975%" y="597" width="0.1235%" height="15" fill="rgb(246,134,8)"/><text x="74.4475%" y="607.50"></text></g><g><title>core::slice::sort::shift_tail (1 samples, 0.12%)</title><rect x="74.1975%" y="581" width="0.1235%" height="15" fill="rgb(214,143,50)"/><text x="74.4475%" y="591.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.12%)</title><rect x="74.1975%" y="565" width="0.1235%" height="15" fill="rgb(228,75,8)"/><text x="74.4475%" y="575.50"></text></g><g><title>axgeom::range::Range&lt;T&gt;::contains_ext (1 samples, 0.12%)</title><rect x="74.4444%" y="661" width="0.1235%" height="15" fill="rgb(207,175,4)"/><text x="74.6944%" y="671.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.12%)</title><rect x="74.5679%" y="629" width="0.1235%" height="15" fill="rgb(205,108,24)"/><text x="74.8179%" y="639.50"></text></g><g><title>broccoli::tree::analyze::oned::bin_middle_left_right (4 samples, 0.49%)</title><rect x="74.3210%" y="677" width="0.4938%" height="15" fill="rgb(244,120,49)"/><text x="74.5710%" y="687.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (2 samples, 0.25%)</title><rect x="74.5679%" y="661" width="0.2469%" height="15" fill="rgb(223,47,38)"/><text x="74.8179%" y="671.50"></text></g><g><title>core::ptr::swap (2 samples, 0.25%)</title><rect x="74.5679%" y="645" width="0.2469%" height="15" fill="rgb(229,179,11)"/><text x="74.8179%" y="655.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.12%)</title><rect x="74.6914%" y="629" width="0.1235%" height="15" fill="rgb(231,122,1)"/><text x="74.9414%" y="639.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.12%)</title><rect x="75.3086%" y="597" width="0.1235%" height="15" fill="rgb(245,119,9)"/><text x="75.5586%" y="607.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.12%)</title><rect x="75.4321%" y="597" width="0.1235%" height="15" fill="rgb(241,163,25)"/><text x="75.6821%" y="607.50"></text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::create_non_leaf (14 samples, 1.73%)</title><rect x="74.3210%" y="709" width="1.7284%" height="15" fill="rgb(217,214,3)"/><text x="74.5710%" y="719.50"></text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf (14 samples, 1.73%)</title><rect x="74.3210%" y="693" width="1.7284%" height="15" fill="rgb(240,86,28)"/><text x="74.5710%" y="703.50"></text></g><g><title>pdqselect::select_by (10 samples, 1.23%)</title><rect x="74.8148%" y="677" width="1.2346%" height="15" fill="rgb(215,47,9)"/><text x="75.0648%" y="687.50"></text></g><g><title>pdqselect::quickselect (10 samples, 1.23%)</title><rect x="74.8148%" y="661" width="1.2346%" height="15" fill="rgb(252,25,45)"/><text x="75.0648%" y="671.50"></text></g><g><title>pdqselect::recurse (10 samples, 1.23%)</title><rect x="74.8148%" y="645" width="1.2346%" height="15" fill="rgb(251,164,9)"/><text x="75.0648%" y="655.50"></text></g><g><title>pdqselect::partition (10 samples, 1.23%)</title><rect x="74.8148%" y="629" width="1.2346%" height="15" fill="rgb(233,194,0)"/><text x="75.0648%" y="639.50"></text></g><g><title>pdqselect::partition_in_blocks (9 samples, 1.11%)</title><rect x="74.9383%" y="613" width="1.1111%" height="15" fill="rgb(249,111,24)"/><text x="75.1883%" y="623.50"></text></g><g><title>pdqselect::select_by::{{closure}} (4 samples, 0.49%)</title><rect x="75.5556%" y="597" width="0.4938%" height="15" fill="rgb(250,223,3)"/><text x="75.8056%" y="607.50"></text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf::{{closure}} (4 samples, 0.49%)</title><rect x="75.5556%" y="581" width="0.4938%" height="15" fill="rgb(236,178,37)"/><text x="75.8056%" y="591.50"></text></g><g><title>broccoli::tree::analyze::oned::compare_bots (4 samples, 0.49%)</title><rect x="75.5556%" y="565" width="0.4938%" height="15" fill="rgb(241,158,50)"/><text x="75.8056%" y="575.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (2 samples, 0.25%)</title><rect x="75.8025%" y="549" width="0.2469%" height="15" fill="rgb(213,121,41)"/><text x="76.0525%" y="559.50"></text></g><g><title>axgeom::range::Range&lt;T&gt;::contains_ext (1 samples, 0.12%)</title><rect x="76.4198%" y="645" width="0.1235%" height="15" fill="rgb(240,92,3)"/><text x="76.6698%" y="655.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.12%)</title><rect x="76.5432%" y="645" width="0.1235%" height="15" fill="rgb(205,123,3)"/><text x="76.7932%" y="655.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.12%)</title><rect x="76.5432%" y="629" width="0.1235%" height="15" fill="rgb(205,97,47)"/><text x="76.7932%" y="639.50"></text></g><g><title>broccoli::tree::analyze::oned::bin_middle_left_right (10 samples, 1.23%)</title><rect x="76.0494%" y="661" width="1.2346%" height="15" fill="rgb(247,152,14)"/><text x="76.2994%" y="671.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (5 samples, 0.62%)</title><rect x="76.6667%" y="645" width="0.6173%" height="15" fill="rgb(248,195,53)"/><text x="76.9167%" y="655.50"></text></g><g><title>core::ptr::swap (5 samples, 0.62%)</title><rect x="76.6667%" y="629" width="0.6173%" height="15" fill="rgb(226,201,16)"/><text x="76.9167%" y="639.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5 samples, 0.62%)</title><rect x="76.6667%" y="613" width="0.6173%" height="15" fill="rgb(205,98,0)"/><text x="76.9167%" y="623.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (2 samples, 0.25%)</title><rect x="77.9012%" y="581" width="0.2469%" height="15" fill="rgb(214,191,48)"/><text x="78.1512%" y="591.50"></text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::create_non_leaf (20 samples, 2.47%)</title><rect x="76.0494%" y="693" width="2.4691%" height="15" fill="rgb(237,112,39)"/><text x="76.2994%" y="703.50">br..</text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf (20 samples, 2.47%)</title><rect x="76.0494%" y="677" width="2.4691%" height="15" fill="rgb(247,203,27)"/><text x="76.2994%" y="687.50">br..</text></g><g><title>pdqselect::select_by (10 samples, 1.23%)</title><rect x="77.2840%" y="661" width="1.2346%" height="15" fill="rgb(235,124,28)"/><text x="77.5340%" y="671.50"></text></g><g><title>pdqselect::quickselect (10 samples, 1.23%)</title><rect x="77.2840%" y="645" width="1.2346%" height="15" fill="rgb(208,207,46)"/><text x="77.5340%" y="655.50"></text></g><g><title>pdqselect::recurse (10 samples, 1.23%)</title><rect x="77.2840%" y="629" width="1.2346%" height="15" fill="rgb(234,176,4)"/><text x="77.5340%" y="639.50"></text></g><g><title>pdqselect::partition (10 samples, 1.23%)</title><rect x="77.2840%" y="613" width="1.2346%" height="15" fill="rgb(230,133,28)"/><text x="77.5340%" y="623.50"></text></g><g><title>pdqselect::partition_in_blocks (9 samples, 1.11%)</title><rect x="77.4074%" y="597" width="1.1111%" height="15" fill="rgb(211,137,40)"/><text x="77.6574%" y="607.50"></text></g><g><title>pdqselect::select_by::{{closure}} (3 samples, 0.37%)</title><rect x="78.1481%" y="581" width="0.3704%" height="15" fill="rgb(254,35,13)"/><text x="78.3981%" y="591.50"></text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf::{{closure}} (3 samples, 0.37%)</title><rect x="78.1481%" y="565" width="0.3704%" height="15" fill="rgb(225,49,51)"/><text x="78.3981%" y="575.50"></text></g><g><title>broccoli::tree::analyze::oned::compare_bots (3 samples, 0.37%)</title><rect x="78.1481%" y="549" width="0.3704%" height="15" fill="rgb(251,10,15)"/><text x="78.3981%" y="559.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (3 samples, 0.37%)</title><rect x="78.1481%" y="533" width="0.3704%" height="15" fill="rgb(228,207,15)"/><text x="78.3981%" y="543.50"></text></g><g><title>core::slice::sort::choose_pivot (1 samples, 0.12%)</title><rect x="78.5185%" y="581" width="0.1235%" height="15" fill="rgb(241,99,19)"/><text x="78.7685%" y="591.50"></text></g><g><title>core::slice::sort::choose_pivot::{{closure}} (1 samples, 0.12%)</title><rect x="78.5185%" y="565" width="0.1235%" height="15" fill="rgb(207,104,49)"/><text x="78.7685%" y="575.50"></text></g><g><title>core::slice::sort::choose_pivot::{{closure}} (1 samples, 0.12%)</title><rect x="78.5185%" y="549" width="0.1235%" height="15" fill="rgb(234,99,18)"/><text x="78.7685%" y="559.50"></text></g><g><title>core::slice::sort::choose_pivot::{{closure}} (1 samples, 0.12%)</title><rect x="78.5185%" y="533" width="0.1235%" height="15" fill="rgb(213,191,49)"/><text x="78.7685%" y="543.50"></text></g><g><title>broccoli::tree::analyze::builder::NonLeafFinisher&lt;A,T&gt;::finish (2 samples, 0.25%)</title><rect x="78.5185%" y="677" width="0.2469%" height="15" fill="rgb(210,226,19)"/><text x="78.7685%" y="687.50"></text></g><g><title>&lt;broccoli::tree::analyze::DefaultSorter as broccoli::tree::analyze::Sorter&gt;::sort (2 samples, 0.25%)</title><rect x="78.5185%" y="661" width="0.2469%" height="15" fill="rgb(229,97,18)"/><text x="78.7685%" y="671.50"></text></g><g><title>broccoli::tree::analyze::oned::sweeper_update (2 samples, 0.25%)</title><rect x="78.5185%" y="645" width="0.2469%" height="15" fill="rgb(211,167,15)"/><text x="78.7685%" y="655.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by (2 samples, 0.25%)</title><rect x="78.5185%" y="629" width="0.2469%" height="15" fill="rgb(210,169,34)"/><text x="78.7685%" y="639.50"></text></g><g><title>core::slice::sort::quicksort (2 samples, 0.25%)</title><rect x="78.5185%" y="613" width="0.2469%" height="15" fill="rgb(241,121,31)"/><text x="78.7685%" y="623.50"></text></g><g><title>core::slice::sort::recurse (2 samples, 0.25%)</title><rect x="78.5185%" y="597" width="0.2469%" height="15" fill="rgb(232,40,11)"/><text x="78.7685%" y="607.50"></text></g><g><title>core::slice::sort::recurse (1 samples, 0.12%)</title><rect x="78.6420%" y="581" width="0.1235%" height="15" fill="rgb(205,86,26)"/><text x="78.8920%" y="591.50"></text></g><g><title>core::slice::sort::insertion_sort (1 samples, 0.12%)</title><rect x="78.6420%" y="565" width="0.1235%" height="15" fill="rgb(231,126,28)"/><text x="78.8920%" y="575.50"></text></g><g><title>core::slice::sort::shift_tail (1 samples, 0.12%)</title><rect x="78.6420%" y="549" width="0.1235%" height="15" fill="rgb(219,221,18)"/><text x="78.8920%" y="559.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.12%)</title><rect x="78.6420%" y="533" width="0.1235%" height="15" fill="rgb(211,40,0)"/><text x="78.8920%" y="543.50"></text></g><g><title>&lt;core::slice::sort::CopyOnDrop&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.12%)</title><rect x="78.6420%" y="517" width="0.1235%" height="15" fill="rgb(239,85,43)"/><text x="78.8920%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.12%)</title><rect x="78.6420%" y="501" width="0.1235%" height="15" fill="rgb(231,55,21)"/><text x="78.8920%" y="511.50"></text></g><g><title>axgeom::range::Range&lt;T&gt;::contains_ext (1 samples, 0.12%)</title><rect x="78.7654%" y="629" width="0.1235%" height="15" fill="rgb(225,184,43)"/><text x="79.0154%" y="639.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.12%)</title><rect x="78.8889%" y="629" width="0.1235%" height="15" fill="rgb(251,158,41)"/><text x="79.1389%" y="639.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.12%)</title><rect x="78.8889%" y="613" width="0.1235%" height="15" fill="rgb(234,159,37)"/><text x="79.1389%" y="623.50"></text></g><g><title>broccoli::tree::analyze::oned::bin_middle_left_right (3 samples, 0.37%)</title><rect x="78.7654%" y="645" width="0.3704%" height="15" fill="rgb(216,204,22)"/><text x="79.0154%" y="655.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.12%)</title><rect x="79.0123%" y="629" width="0.1235%" height="15" fill="rgb(214,17,3)"/><text x="79.2623%" y="639.50"></text></g><g><title>core::ptr::swap (1 samples, 0.12%)</title><rect x="79.0123%" y="613" width="0.1235%" height="15" fill="rgb(212,111,17)"/><text x="79.2623%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.12%)</title><rect x="79.0123%" y="597" width="0.1235%" height="15" fill="rgb(221,157,24)"/><text x="79.2623%" y="607.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.49%)</title><rect x="79.2593%" y="565" width="0.4938%" height="15" fill="rgb(252,16,13)"/><text x="79.5093%" y="575.50"></text></g><g><title>core::ptr::swap (1 samples, 0.12%)</title><rect x="79.7531%" y="565" width="0.1235%" height="15" fill="rgb(221,62,2)"/><text x="80.0031%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.12%)</title><rect x="79.7531%" y="549" width="0.1235%" height="15" fill="rgb(247,87,22)"/><text x="80.0031%" y="559.50"></text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::create_non_leaf (12 samples, 1.48%)</title><rect x="78.7654%" y="677" width="1.4815%" height="15" fill="rgb(215,73,9)"/><text x="79.0154%" y="687.50"></text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf (12 samples, 1.48%)</title><rect x="78.7654%" y="661" width="1.4815%" height="15" fill="rgb(207,175,33)"/><text x="79.0154%" y="671.50"></text></g><g><title>pdqselect::select_by (9 samples, 1.11%)</title><rect x="79.1358%" y="645" width="1.1111%" height="15" fill="rgb(243,129,54)"/><text x="79.3858%" y="655.50"></text></g><g><title>pdqselect::quickselect (9 samples, 1.11%)</title><rect x="79.1358%" y="629" width="1.1111%" height="15" fill="rgb(227,119,45)"/><text x="79.3858%" y="639.50"></text></g><g><title>pdqselect::recurse (9 samples, 1.11%)</title><rect x="79.1358%" y="613" width="1.1111%" height="15" fill="rgb(205,109,36)"/><text x="79.3858%" y="623.50"></text></g><g><title>pdqselect::partition (9 samples, 1.11%)</title><rect x="79.1358%" y="597" width="1.1111%" height="15" fill="rgb(205,6,39)"/><text x="79.3858%" y="607.50"></text></g><g><title>pdqselect::partition_in_blocks (9 samples, 1.11%)</title><rect x="79.1358%" y="581" width="1.1111%" height="15" fill="rgb(221,32,16)"/><text x="79.3858%" y="591.50"></text></g><g><title>pdqselect::select_by::{{closure}} (3 samples, 0.37%)</title><rect x="79.8765%" y="565" width="0.3704%" height="15" fill="rgb(228,144,50)"/><text x="80.1265%" y="575.50"></text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf::{{closure}} (3 samples, 0.37%)</title><rect x="79.8765%" y="549" width="0.3704%" height="15" fill="rgb(229,201,53)"/><text x="80.1265%" y="559.50"></text></g><g><title>broccoli::tree::analyze::oned::compare_bots (3 samples, 0.37%)</title><rect x="79.8765%" y="533" width="0.3704%" height="15" fill="rgb(249,153,27)"/><text x="80.1265%" y="543.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.12%)</title><rect x="80.1235%" y="517" width="0.1235%" height="15" fill="rgb(227,106,25)"/><text x="80.3735%" y="527.50"></text></g><g><title>core::slice::sort::partition (1 samples, 0.12%)</title><rect x="80.2469%" y="565" width="0.1235%" height="15" fill="rgb(230,65,29)"/><text x="80.4969%" y="575.50"></text></g><g><title>core::slice::sort::partition_in_blocks (1 samples, 0.12%)</title><rect x="80.2469%" y="549" width="0.1235%" height="15" fill="rgb(221,57,46)"/><text x="80.4969%" y="559.50"></text></g><g><title>core::slice::sort::partition_in_blocks::width (1 samples, 0.12%)</title><rect x="80.2469%" y="533" width="0.1235%" height="15" fill="rgb(229,161,17)"/><text x="80.4969%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.12%)</title><rect x="80.3704%" y="517" width="0.1235%" height="15" fill="rgb(222,213,11)"/><text x="80.6204%" y="527.50"></text></g><g><title>core::slice::sort::insertion_sort (2 samples, 0.25%)</title><rect x="80.3704%" y="549" width="0.2469%" height="15" fill="rgb(235,35,13)"/><text x="80.6204%" y="559.50"></text></g><g><title>core::slice::sort::shift_tail (2 samples, 0.25%)</title><rect x="80.3704%" y="533" width="0.2469%" height="15" fill="rgb(233,158,34)"/><text x="80.6204%" y="543.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by::{{closure}} (1 samples, 0.12%)</title><rect x="80.4938%" y="517" width="0.1235%" height="15" fill="rgb(215,151,48)"/><text x="80.7438%" y="527.50"></text></g><g><title>broccoli::tree::analyze::oned::sweeper_update::{{closure}} (1 samples, 0.12%)</title><rect x="80.4938%" y="501" width="0.1235%" height="15" fill="rgb(229,84,14)"/><text x="80.7438%" y="511.50"></text></g><g><title>broccoli::tree::analyze::oned::compare_bots (1 samples, 0.12%)</title><rect x="80.4938%" y="485" width="0.1235%" height="15" fill="rgb(229,68,14)"/><text x="80.7438%" y="495.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.12%)</title><rect x="80.4938%" y="469" width="0.1235%" height="15" fill="rgb(243,106,26)"/><text x="80.7438%" y="479.50"></text></g><g><title>broccoli::tree::analyze::builder::NonLeafFinisher&lt;A,T&gt;::finish (4 samples, 0.49%)</title><rect x="80.2469%" y="661" width="0.4938%" height="15" fill="rgb(206,45,38)"/><text x="80.4969%" y="671.50"></text></g><g><title>&lt;broccoli::tree::analyze::DefaultSorter as broccoli::tree::analyze::Sorter&gt;::sort (4 samples, 0.49%)</title><rect x="80.2469%" y="645" width="0.4938%" height="15" fill="rgb(226,6,15)"/><text x="80.4969%" y="655.50"></text></g><g><title>broccoli::tree::analyze::oned::sweeper_update (4 samples, 0.49%)</title><rect x="80.2469%" y="629" width="0.4938%" height="15" fill="rgb(232,22,54)"/><text x="80.4969%" y="639.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by (4 samples, 0.49%)</title><rect x="80.2469%" y="613" width="0.4938%" height="15" fill="rgb(229,222,32)"/><text x="80.4969%" y="623.50"></text></g><g><title>core::slice::sort::quicksort (4 samples, 0.49%)</title><rect x="80.2469%" y="597" width="0.4938%" height="15" fill="rgb(228,62,29)"/><text x="80.4969%" y="607.50"></text></g><g><title>core::slice::sort::recurse (4 samples, 0.49%)</title><rect x="80.2469%" y="581" width="0.4938%" height="15" fill="rgb(251,103,34)"/><text x="80.4969%" y="591.50"></text></g><g><title>core::slice::sort::recurse (3 samples, 0.37%)</title><rect x="80.3704%" y="565" width="0.3704%" height="15" fill="rgb(233,12,30)"/><text x="80.6204%" y="575.50"></text></g><g><title>core::slice::sort::partition (1 samples, 0.12%)</title><rect x="80.6173%" y="549" width="0.1235%" height="15" fill="rgb(238,52,0)"/><text x="80.8673%" y="559.50"></text></g><g><title>core::slice::sort::partition_in_blocks (1 samples, 0.12%)</title><rect x="80.6173%" y="533" width="0.1235%" height="15" fill="rgb(223,98,5)"/><text x="80.8673%" y="543.50"></text></g><g><title>axgeom::range::Range&lt;T&gt;::contains_ext (3 samples, 0.37%)</title><rect x="80.9877%" y="613" width="0.3704%" height="15" fill="rgb(228,75,37)"/><text x="81.2377%" y="623.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::lt (2 samples, 0.25%)</title><rect x="81.1111%" y="597" width="0.2469%" height="15" fill="rgb(205,115,49)"/><text x="81.3611%" y="607.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.12%)</title><rect x="81.3580%" y="613" width="0.1235%" height="15" fill="rgb(250,154,43)"/><text x="81.6080%" y="623.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.12%)</title><rect x="81.3580%" y="597" width="0.1235%" height="15" fill="rgb(226,43,29)"/><text x="81.6080%" y="607.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.12%)</title><rect x="81.4815%" y="581" width="0.1235%" height="15" fill="rgb(249,228,39)"/><text x="81.7315%" y="591.50"></text></g><g><title>broccoli::tree::analyze::oned::bin_middle_left_right (11 samples, 1.36%)</title><rect x="80.7407%" y="629" width="1.3580%" height="15" fill="rgb(216,79,43)"/><text x="80.9907%" y="639.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (5 samples, 0.62%)</title><rect x="81.4815%" y="613" width="0.6173%" height="15" fill="rgb(228,95,12)"/><text x="81.7315%" y="623.50"></text></g><g><title>core::ptr::swap (5 samples, 0.62%)</title><rect x="81.4815%" y="597" width="0.6173%" height="15" fill="rgb(249,221,15)"/><text x="81.7315%" y="607.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.49%)</title><rect x="81.6049%" y="581" width="0.4938%" height="15" fill="rgb(233,34,13)"/><text x="81.8549%" y="591.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.12%)</title><rect x="82.5926%" y="549" width="0.1235%" height="15" fill="rgb(214,103,39)"/><text x="82.8426%" y="559.50"></text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::create_non_leaf (18 samples, 2.22%)</title><rect x="80.7407%" y="661" width="2.2222%" height="15" fill="rgb(251,126,39)"/><text x="80.9907%" y="671.50">b..</text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf (18 samples, 2.22%)</title><rect x="80.7407%" y="645" width="2.2222%" height="15" fill="rgb(214,216,36)"/><text x="80.9907%" y="655.50">b..</text></g><g><title>pdqselect::select_by (7 samples, 0.86%)</title><rect x="82.0988%" y="629" width="0.8642%" height="15" fill="rgb(220,221,8)"/><text x="82.3488%" y="639.50"></text></g><g><title>pdqselect::quickselect (7 samples, 0.86%)</title><rect x="82.0988%" y="613" width="0.8642%" height="15" fill="rgb(240,216,3)"/><text x="82.3488%" y="623.50"></text></g><g><title>pdqselect::recurse (7 samples, 0.86%)</title><rect x="82.0988%" y="597" width="0.8642%" height="15" fill="rgb(232,218,17)"/><text x="82.3488%" y="607.50"></text></g><g><title>pdqselect::partition (7 samples, 0.86%)</title><rect x="82.0988%" y="581" width="0.8642%" height="15" fill="rgb(229,163,45)"/><text x="82.3488%" y="591.50"></text></g><g><title>pdqselect::partition_in_blocks (5 samples, 0.62%)</title><rect x="82.3457%" y="565" width="0.6173%" height="15" fill="rgb(231,110,42)"/><text x="82.5957%" y="575.50"></text></g><g><title>pdqselect::select_by::{{closure}} (2 samples, 0.25%)</title><rect x="82.7160%" y="549" width="0.2469%" height="15" fill="rgb(208,170,48)"/><text x="82.9660%" y="559.50"></text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf::{{closure}} (2 samples, 0.25%)</title><rect x="82.7160%" y="533" width="0.2469%" height="15" fill="rgb(239,116,25)"/><text x="82.9660%" y="543.50"></text></g><g><title>broccoli::tree::analyze::oned::compare_bots (2 samples, 0.25%)</title><rect x="82.7160%" y="517" width="0.2469%" height="15" fill="rgb(219,200,50)"/><text x="82.9660%" y="527.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (2 samples, 0.25%)</title><rect x="82.7160%" y="501" width="0.2469%" height="15" fill="rgb(245,200,0)"/><text x="82.9660%" y="511.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_mut (1 samples, 0.12%)</title><rect x="82.9630%" y="549" width="0.1235%" height="15" fill="rgb(245,119,33)"/><text x="83.2130%" y="559.50"></text></g><g><title>core::slice::sort::insertion_sort (1 samples, 0.12%)</title><rect x="83.0864%" y="549" width="0.1235%" height="15" fill="rgb(231,125,12)"/><text x="83.3364%" y="559.50"></text></g><g><title>core::slice::sort::shift_tail (1 samples, 0.12%)</title><rect x="83.0864%" y="533" width="0.1235%" height="15" fill="rgb(216,96,41)"/><text x="83.3364%" y="543.50"></text></g><g><title>core::ptr::read (1 samples, 0.12%)</title><rect x="83.0864%" y="517" width="0.1235%" height="15" fill="rgb(248,43,45)"/><text x="83.3364%" y="527.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.12%)</title><rect x="83.2099%" y="517" width="0.1235%" height="15" fill="rgb(217,222,7)"/><text x="83.4599%" y="527.50"></text></g><g><title>core::slice::sort::partition (2 samples, 0.25%)</title><rect x="83.2099%" y="549" width="0.2469%" height="15" fill="rgb(233,28,6)"/><text x="83.4599%" y="559.50"></text></g><g><title>core::slice::sort::partition_in_blocks (2 samples, 0.25%)</title><rect x="83.2099%" y="533" width="0.2469%" height="15" fill="rgb(231,218,15)"/><text x="83.4599%" y="543.50"></text></g><g><title>core::ptr::swap (1 samples, 0.12%)</title><rect x="83.3333%" y="517" width="0.1235%" height="15" fill="rgb(226,171,48)"/><text x="83.5833%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.12%)</title><rect x="83.3333%" y="501" width="0.1235%" height="15" fill="rgb(235,201,9)"/><text x="83.5833%" y="511.50"></text></g><g><title>&lt;broccoli::tree::analyze::DefaultSorter as broccoli::tree::analyze::Sorter&gt;::sort (5 samples, 0.62%)</title><rect x="82.9630%" y="629" width="0.6173%" height="15" fill="rgb(217,80,15)"/><text x="83.2130%" y="639.50"></text></g><g><title>broccoli::tree::analyze::oned::sweeper_update (5 samples, 0.62%)</title><rect x="82.9630%" y="613" width="0.6173%" height="15" fill="rgb(219,152,8)"/><text x="83.2130%" y="623.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by (5 samples, 0.62%)</title><rect x="82.9630%" y="597" width="0.6173%" height="15" fill="rgb(243,107,38)"/><text x="83.2130%" y="607.50"></text></g><g><title>core::slice::sort::quicksort (5 samples, 0.62%)</title><rect x="82.9630%" y="581" width="0.6173%" height="15" fill="rgb(231,17,5)"/><text x="83.2130%" y="591.50"></text></g><g><title>core::slice::sort::recurse (5 samples, 0.62%)</title><rect x="82.9630%" y="565" width="0.6173%" height="15" fill="rgb(209,25,54)"/><text x="83.2130%" y="575.50"></text></g><g><title>core::slice::sort::recurse (1 samples, 0.12%)</title><rect x="83.4568%" y="549" width="0.1235%" height="15" fill="rgb(219,0,2)"/><text x="83.7068%" y="559.50"></text></g><g><title>core::slice::sort::insertion_sort (1 samples, 0.12%)</title><rect x="83.4568%" y="533" width="0.1235%" height="15" fill="rgb(246,9,5)"/><text x="83.7068%" y="543.50"></text></g><g><title>core::slice::sort::shift_tail (1 samples, 0.12%)</title><rect x="83.4568%" y="517" width="0.1235%" height="15" fill="rgb(226,159,4)"/><text x="83.7068%" y="527.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by::{{closure}} (1 samples, 0.12%)</title><rect x="83.4568%" y="501" width="0.1235%" height="15" fill="rgb(219,175,34)"/><text x="83.7068%" y="511.50"></text></g><g><title>broccoli::tree::analyze::oned::sweeper_update::{{closure}} (1 samples, 0.12%)</title><rect x="83.4568%" y="485" width="0.1235%" height="15" fill="rgb(236,10,46)"/><text x="83.7068%" y="495.50"></text></g><g><title>broccoli::tree::analyze::oned::compare_bots (1 samples, 0.12%)</title><rect x="83.4568%" y="469" width="0.1235%" height="15" fill="rgb(240,211,16)"/><text x="83.7068%" y="479.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.12%)</title><rect x="83.4568%" y="453" width="0.1235%" height="15" fill="rgb(205,3,43)"/><text x="83.7068%" y="463.50"></text></g><g><title>broccoli::tree::analyze::builder::NonLeafFinisher&lt;A,T&gt;::finish (6 samples, 0.74%)</title><rect x="82.9630%" y="645" width="0.7407%" height="15" fill="rgb(245,7,22)"/><text x="83.2130%" y="655.50"></text></g><g><title>broccoli::tree::analyze::builder::create_cont (1 samples, 0.12%)</title><rect x="83.5802%" y="629" width="0.1235%" height="15" fill="rgb(239,132,32)"/><text x="83.8302%" y="639.50"></text></g><g><title>axgeom::range::Range&lt;T&gt;::contains_ext (1 samples, 0.12%)</title><rect x="83.7037%" y="597" width="0.1235%" height="15" fill="rgb(228,202,34)"/><text x="83.9537%" y="607.50"></text></g><g><title>broccoli::tree::analyze::oned::bin_middle_left_right (3 samples, 0.37%)</title><rect x="83.7037%" y="613" width="0.3704%" height="15" fill="rgb(254,200,22)"/><text x="83.9537%" y="623.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (2 samples, 0.25%)</title><rect x="83.8272%" y="597" width="0.2469%" height="15" fill="rgb(219,10,39)"/><text x="84.0772%" y="607.50"></text></g><g><title>core::ptr::swap (1 samples, 0.12%)</title><rect x="83.9506%" y="581" width="0.1235%" height="15" fill="rgb(226,210,39)"/><text x="84.2006%" y="591.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.12%)</title><rect x="83.9506%" y="565" width="0.1235%" height="15" fill="rgb(208,219,16)"/><text x="84.2006%" y="575.50"></text></g><g><title>pdqselect::insertion_sort (1 samples, 0.12%)</title><rect x="84.0741%" y="565" width="0.1235%" height="15" fill="rgb(216,158,51)"/><text x="84.3241%" y="575.50"></text></g><g><title>pdqselect::shift_tail (1 samples, 0.12%)</title><rect x="84.0741%" y="549" width="0.1235%" height="15" fill="rgb(233,14,44)"/><text x="84.3241%" y="559.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.12%)</title><rect x="84.0741%" y="533" width="0.1235%" height="15" fill="rgb(237,97,39)"/><text x="84.3241%" y="543.50"></text></g><g><title>&lt;pdqselect::CopyOnDrop&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.12%)</title><rect x="84.0741%" y="517" width="0.1235%" height="15" fill="rgb(218,198,43)"/><text x="84.3241%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.12%)</title><rect x="84.0741%" y="501" width="0.1235%" height="15" fill="rgb(231,104,20)"/><text x="84.3241%" y="511.50"></text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::create_non_leaf (9 samples, 1.11%)</title><rect x="83.7037%" y="645" width="1.1111%" height="15" fill="rgb(254,36,13)"/><text x="83.9537%" y="655.50"></text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf (9 samples, 1.11%)</title><rect x="83.7037%" y="629" width="1.1111%" height="15" fill="rgb(248,14,50)"/><text x="83.9537%" y="639.50"></text></g><g><title>pdqselect::select_by (6 samples, 0.74%)</title><rect x="84.0741%" y="613" width="0.7407%" height="15" fill="rgb(217,107,29)"/><text x="84.3241%" y="623.50"></text></g><g><title>pdqselect::quickselect (6 samples, 0.74%)</title><rect x="84.0741%" y="597" width="0.7407%" height="15" fill="rgb(251,169,33)"/><text x="84.3241%" y="607.50"></text></g><g><title>pdqselect::recurse (6 samples, 0.74%)</title><rect x="84.0741%" y="581" width="0.7407%" height="15" fill="rgb(217,108,32)"/><text x="84.3241%" y="591.50"></text></g><g><title>pdqselect::partition (5 samples, 0.62%)</title><rect x="84.1975%" y="565" width="0.6173%" height="15" fill="rgb(219,66,42)"/><text x="84.4475%" y="575.50"></text></g><g><title>pdqselect::partition_in_blocks (5 samples, 0.62%)</title><rect x="84.1975%" y="549" width="0.6173%" height="15" fill="rgb(206,180,7)"/><text x="84.4475%" y="559.50"></text></g><g><title>pdqselect::select_by::{{closure}} (3 samples, 0.37%)</title><rect x="84.4444%" y="533" width="0.3704%" height="15" fill="rgb(208,226,31)"/><text x="84.6944%" y="543.50"></text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf::{{closure}} (3 samples, 0.37%)</title><rect x="84.4444%" y="517" width="0.3704%" height="15" fill="rgb(218,26,49)"/><text x="84.6944%" y="527.50"></text></g><g><title>broccoli::tree::analyze::oned::compare_bots (3 samples, 0.37%)</title><rect x="84.4444%" y="501" width="0.3704%" height="15" fill="rgb(233,197,48)"/><text x="84.6944%" y="511.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.12%)</title><rect x="84.6914%" y="485" width="0.1235%" height="15" fill="rgb(252,181,51)"/><text x="84.9414%" y="495.50"></text></g><g><title>core::ptr::read (1 samples, 0.12%)</title><rect x="84.8148%" y="501" width="0.1235%" height="15" fill="rgb(253,90,19)"/><text x="85.0648%" y="511.50"></text></g><g><title>core::slice::sort::insertion_sort (2 samples, 0.25%)</title><rect x="84.8148%" y="533" width="0.2469%" height="15" fill="rgb(215,171,30)"/><text x="85.0648%" y="543.50"></text></g><g><title>core::slice::sort::shift_tail (2 samples, 0.25%)</title><rect x="84.8148%" y="517" width="0.2469%" height="15" fill="rgb(214,222,9)"/><text x="85.0648%" y="527.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by::{{closure}} (1 samples, 0.12%)</title><rect x="84.9383%" y="501" width="0.1235%" height="15" fill="rgb(223,3,22)"/><text x="85.1883%" y="511.50"></text></g><g><title>broccoli::tree::analyze::oned::sweeper_update::{{closure}} (1 samples, 0.12%)</title><rect x="84.9383%" y="485" width="0.1235%" height="15" fill="rgb(225,196,46)"/><text x="85.1883%" y="495.50"></text></g><g><title>broccoli::tree::analyze::oned::compare_bots (1 samples, 0.12%)</title><rect x="84.9383%" y="469" width="0.1235%" height="15" fill="rgb(209,110,37)"/><text x="85.1883%" y="479.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.12%)</title><rect x="84.9383%" y="453" width="0.1235%" height="15" fill="rgb(249,89,12)"/><text x="85.1883%" y="463.50"></text></g><g><title>core::slice::sort::partition (1 samples, 0.12%)</title><rect x="85.0617%" y="533" width="0.1235%" height="15" fill="rgb(226,27,33)"/><text x="85.3117%" y="543.50"></text></g><g><title>core::slice::sort::partition_in_blocks (1 samples, 0.12%)</title><rect x="85.0617%" y="517" width="0.1235%" height="15" fill="rgb(213,82,22)"/><text x="85.3117%" y="527.50"></text></g><g><title>core::slice::sort::insertion_sort (1 samples, 0.12%)</title><rect x="85.1852%" y="517" width="0.1235%" height="15" fill="rgb(248,140,0)"/><text x="85.4352%" y="527.50"></text></g><g><title>core::slice::sort::shift_tail (1 samples, 0.12%)</title><rect x="85.1852%" y="501" width="0.1235%" height="15" fill="rgb(228,106,3)"/><text x="85.4352%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.12%)</title><rect x="85.1852%" y="485" width="0.1235%" height="15" fill="rgb(209,23,37)"/><text x="85.4352%" y="495.50"></text></g><g><title>broccoli::tree::analyze::builder::NonLeafFinisher&lt;A,T&gt;::finish (5 samples, 0.62%)</title><rect x="84.8148%" y="629" width="0.6173%" height="15" fill="rgb(241,93,50)"/><text x="85.0648%" y="639.50"></text></g><g><title>&lt;broccoli::tree::analyze::DefaultSorter as broccoli::tree::analyze::Sorter&gt;::sort (5 samples, 0.62%)</title><rect x="84.8148%" y="613" width="0.6173%" height="15" fill="rgb(253,46,43)"/><text x="85.0648%" y="623.50"></text></g><g><title>broccoli::tree::analyze::oned::sweeper_update (5 samples, 0.62%)</title><rect x="84.8148%" y="597" width="0.6173%" height="15" fill="rgb(226,206,43)"/><text x="85.0648%" y="607.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by (5 samples, 0.62%)</title><rect x="84.8148%" y="581" width="0.6173%" height="15" fill="rgb(217,54,7)"/><text x="85.0648%" y="591.50"></text></g><g><title>core::slice::sort::quicksort (5 samples, 0.62%)</title><rect x="84.8148%" y="565" width="0.6173%" height="15" fill="rgb(223,5,52)"/><text x="85.0648%" y="575.50"></text></g><g><title>core::slice::sort::recurse (5 samples, 0.62%)</title><rect x="84.8148%" y="549" width="0.6173%" height="15" fill="rgb(206,52,46)"/><text x="85.0648%" y="559.50"></text></g><g><title>core::slice::sort::recurse (2 samples, 0.25%)</title><rect x="85.1852%" y="533" width="0.2469%" height="15" fill="rgb(253,136,11)"/><text x="85.4352%" y="543.50"></text></g><g><title>core::slice::sort::partition (1 samples, 0.12%)</title><rect x="85.3086%" y="517" width="0.1235%" height="15" fill="rgb(208,106,33)"/><text x="85.5586%" y="527.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by::{{closure}} (1 samples, 0.12%)</title><rect x="85.3086%" y="501" width="0.1235%" height="15" fill="rgb(206,54,4)"/><text x="85.5586%" y="511.50"></text></g><g><title>broccoli::tree::analyze::oned::sweeper_update::{{closure}} (1 samples, 0.12%)</title><rect x="85.3086%" y="485" width="0.1235%" height="15" fill="rgb(213,3,15)"/><text x="85.5586%" y="495.50"></text></g><g><title>broccoli::tree::analyze::oned::compare_bots (1 samples, 0.12%)</title><rect x="85.3086%" y="469" width="0.1235%" height="15" fill="rgb(252,211,39)"/><text x="85.5586%" y="479.50"></text></g><g><title>axgeom::range::Range&lt;T&gt;::contains_ext (1 samples, 0.12%)</title><rect x="85.5556%" y="581" width="0.1235%" height="15" fill="rgb(223,6,36)"/><text x="85.8056%" y="591.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::lt (1 samples, 0.12%)</title><rect x="85.5556%" y="565" width="0.1235%" height="15" fill="rgb(252,169,45)"/><text x="85.8056%" y="575.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.12%)</title><rect x="85.6790%" y="581" width="0.1235%" height="15" fill="rgb(212,48,26)"/><text x="85.9290%" y="591.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.12%)</title><rect x="85.6790%" y="565" width="0.1235%" height="15" fill="rgb(251,102,48)"/><text x="85.9290%" y="575.50"></text></g><g><title>broccoli::tree::analyze::oned::bin_middle_left_right (7 samples, 0.86%)</title><rect x="85.4321%" y="597" width="0.8642%" height="15" fill="rgb(243,208,16)"/><text x="85.6821%" y="607.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (4 samples, 0.49%)</title><rect x="85.8025%" y="581" width="0.4938%" height="15" fill="rgb(219,96,24)"/><text x="86.0525%" y="591.50"></text></g><g><title>core::ptr::swap (2 samples, 0.25%)</title><rect x="86.0494%" y="565" width="0.2469%" height="15" fill="rgb(219,33,29)"/><text x="86.2994%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.25%)</title><rect x="86.0494%" y="549" width="0.2469%" height="15" fill="rgb(223,176,5)"/><text x="86.2994%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.37%)</title><rect x="86.7901%" y="517" width="0.3704%" height="15" fill="rgb(228,140,14)"/><text x="87.0401%" y="527.50"></text></g><g><title>core::ptr::swap (1 samples, 0.12%)</title><rect x="87.1605%" y="517" width="0.1235%" height="15" fill="rgb(217,179,31)"/><text x="87.4105%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.12%)</title><rect x="87.1605%" y="501" width="0.1235%" height="15" fill="rgb(230,9,30)"/><text x="87.4105%" y="511.50"></text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::create_non_leaf (19 samples, 2.35%)</title><rect x="85.4321%" y="629" width="2.3457%" height="15" fill="rgb(230,136,20)"/><text x="85.6821%" y="639.50">b..</text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf (19 samples, 2.35%)</title><rect x="85.4321%" y="613" width="2.3457%" height="15" fill="rgb(215,210,22)"/><text x="85.6821%" y="623.50">b..</text></g><g><title>pdqselect::select_by (12 samples, 1.48%)</title><rect x="86.2963%" y="597" width="1.4815%" height="15" fill="rgb(218,43,5)"/><text x="86.5463%" y="607.50"></text></g><g><title>pdqselect::quickselect (12 samples, 1.48%)</title><rect x="86.2963%" y="581" width="1.4815%" height="15" fill="rgb(216,11,5)"/><text x="86.5463%" y="591.50"></text></g><g><title>pdqselect::recurse (12 samples, 1.48%)</title><rect x="86.2963%" y="565" width="1.4815%" height="15" fill="rgb(209,82,29)"/><text x="86.5463%" y="575.50"></text></g><g><title>pdqselect::partition (12 samples, 1.48%)</title><rect x="86.2963%" y="549" width="1.4815%" height="15" fill="rgb(244,115,12)"/><text x="86.5463%" y="559.50"></text></g><g><title>pdqselect::partition_in_blocks (11 samples, 1.36%)</title><rect x="86.4198%" y="533" width="1.3580%" height="15" fill="rgb(222,82,18)"/><text x="86.6698%" y="543.50"></text></g><g><title>pdqselect::select_by::{{closure}} (4 samples, 0.49%)</title><rect x="87.2840%" y="517" width="0.4938%" height="15" fill="rgb(249,227,8)"/><text x="87.5340%" y="527.50"></text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf::{{closure}} (4 samples, 0.49%)</title><rect x="87.2840%" y="501" width="0.4938%" height="15" fill="rgb(253,141,45)"/><text x="87.5340%" y="511.50"></text></g><g><title>broccoli::tree::analyze::oned::compare_bots (4 samples, 0.49%)</title><rect x="87.2840%" y="485" width="0.4938%" height="15" fill="rgb(234,184,4)"/><text x="87.5340%" y="495.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (4 samples, 0.49%)</title><rect x="87.2840%" y="469" width="0.4938%" height="15" fill="rgb(218,194,23)"/><text x="87.5340%" y="479.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.12%)</title><rect x="87.7778%" y="501" width="0.1235%" height="15" fill="rgb(235,66,41)"/><text x="88.0278%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.12%)</title><rect x="88.0247%" y="485" width="0.1235%" height="15" fill="rgb(245,217,1)"/><text x="88.2747%" y="495.50"></text></g><g><title>broccoli::tree::analyze::builder::NonLeafFinisher&lt;A,T&gt;::finish (4 samples, 0.49%)</title><rect x="87.7778%" y="613" width="0.4938%" height="15" fill="rgb(229,91,1)"/><text x="88.0278%" y="623.50"></text></g><g><title>&lt;broccoli::tree::analyze::DefaultSorter as broccoli::tree::analyze::Sorter&gt;::sort (4 samples, 0.49%)</title><rect x="87.7778%" y="597" width="0.4938%" height="15" fill="rgb(207,101,30)"/><text x="88.0278%" y="607.50"></text></g><g><title>broccoli::tree::analyze::oned::sweeper_update (4 samples, 0.49%)</title><rect x="87.7778%" y="581" width="0.4938%" height="15" fill="rgb(223,82,49)"/><text x="88.0278%" y="591.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by (4 samples, 0.49%)</title><rect x="87.7778%" y="565" width="0.4938%" height="15" fill="rgb(218,167,17)"/><text x="88.0278%" y="575.50"></text></g><g><title>core::slice::sort::quicksort (4 samples, 0.49%)</title><rect x="87.7778%" y="549" width="0.4938%" height="15" fill="rgb(208,103,14)"/><text x="88.0278%" y="559.50"></text></g><g><title>core::slice::sort::recurse (4 samples, 0.49%)</title><rect x="87.7778%" y="533" width="0.4938%" height="15" fill="rgb(238,20,8)"/><text x="88.0278%" y="543.50"></text></g><g><title>core::slice::sort::insertion_sort (4 samples, 0.49%)</title><rect x="87.7778%" y="517" width="0.4938%" height="15" fill="rgb(218,80,54)"/><text x="88.0278%" y="527.50"></text></g><g><title>core::slice::sort::shift_tail (3 samples, 0.37%)</title><rect x="87.9012%" y="501" width="0.3704%" height="15" fill="rgb(240,144,17)"/><text x="88.1512%" y="511.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.12%)</title><rect x="88.1481%" y="485" width="0.1235%" height="15" fill="rgb(245,27,50)"/><text x="88.3981%" y="495.50"></text></g><g><title>&lt;core::slice::sort::CopyOnDrop&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.12%)</title><rect x="88.1481%" y="469" width="0.1235%" height="15" fill="rgb(251,51,7)"/><text x="88.3981%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.12%)</title><rect x="88.1481%" y="453" width="0.1235%" height="15" fill="rgb(245,217,29)"/><text x="88.3981%" y="463.50"></text></g><g><title>broccoli::tree::analyze::oned::bin_middle_left_right (1 samples, 0.12%)</title><rect x="88.2716%" y="581" width="0.1235%" height="15" fill="rgb(221,176,29)"/><text x="88.5216%" y="591.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.12%)</title><rect x="88.2716%" y="565" width="0.1235%" height="15" fill="rgb(212,180,24)"/><text x="88.5216%" y="575.50"></text></g><g><title>core::ptr::swap (1 samples, 0.12%)</title><rect x="88.2716%" y="549" width="0.1235%" height="15" fill="rgb(254,24,2)"/><text x="88.5216%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.12%)</title><rect x="88.2716%" y="533" width="0.1235%" height="15" fill="rgb(230,100,2)"/><text x="88.5216%" y="543.50"></text></g><g><title>pdqselect::choose_pivot (2 samples, 0.25%)</title><rect x="88.5185%" y="533" width="0.2469%" height="15" fill="rgb(219,142,25)"/><text x="88.7685%" y="543.50"></text></g><g><title>pdqselect::choose_pivot::{{closure}} (1 samples, 0.12%)</title><rect x="88.6420%" y="517" width="0.1235%" height="15" fill="rgb(240,73,43)"/><text x="88.8920%" y="527.50"></text></g><g><title>pdqselect::choose_pivot::{{closure}} (1 samples, 0.12%)</title><rect x="88.6420%" y="501" width="0.1235%" height="15" fill="rgb(214,114,15)"/><text x="88.8920%" y="511.50"></text></g><g><title>pdqselect::insertion_sort (1 samples, 0.12%)</title><rect x="88.7654%" y="533" width="0.1235%" height="15" fill="rgb(207,130,4)"/><text x="89.0154%" y="543.50"></text></g><g><title>pdqselect::shift_tail (1 samples, 0.12%)</title><rect x="88.7654%" y="517" width="0.1235%" height="15" fill="rgb(221,25,40)"/><text x="89.0154%" y="527.50"></text></g><g><title>pdqselect::select_by::{{closure}} (1 samples, 0.12%)</title><rect x="88.7654%" y="501" width="0.1235%" height="15" fill="rgb(241,184,7)"/><text x="89.0154%" y="511.50"></text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf::{{closure}} (1 samples, 0.12%)</title><rect x="88.7654%" y="485" width="0.1235%" height="15" fill="rgb(235,159,4)"/><text x="89.0154%" y="495.50"></text></g><g><title>broccoli::tree::analyze::oned::compare_bots (1 samples, 0.12%)</title><rect x="88.7654%" y="469" width="0.1235%" height="15" fill="rgb(214,87,48)"/><text x="89.0154%" y="479.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.12%)</title><rect x="88.7654%" y="453" width="0.1235%" height="15" fill="rgb(246,198,24)"/><text x="89.0154%" y="463.50"></text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::create_non_leaf (9 samples, 1.11%)</title><rect x="88.2716%" y="613" width="1.1111%" height="15" fill="rgb(209,66,40)"/><text x="88.5216%" y="623.50"></text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf (9 samples, 1.11%)</title><rect x="88.2716%" y="597" width="1.1111%" height="15" fill="rgb(233,147,39)"/><text x="88.5216%" y="607.50"></text></g><g><title>pdqselect::select_by (8 samples, 0.99%)</title><rect x="88.3951%" y="581" width="0.9877%" height="15" fill="rgb(231,145,52)"/><text x="88.6451%" y="591.50"></text></g><g><title>pdqselect::quickselect (8 samples, 0.99%)</title><rect x="88.3951%" y="565" width="0.9877%" height="15" fill="rgb(206,20,26)"/><text x="88.6451%" y="575.50"></text></g><g><title>pdqselect::recurse (8 samples, 0.99%)</title><rect x="88.3951%" y="549" width="0.9877%" height="15" fill="rgb(238,220,4)"/><text x="88.6451%" y="559.50"></text></g><g><title>pdqselect::partition (4 samples, 0.49%)</title><rect x="88.8889%" y="533" width="0.4938%" height="15" fill="rgb(252,195,42)"/><text x="89.1389%" y="543.50"></text></g><g><title>pdqselect::partition_in_blocks (4 samples, 0.49%)</title><rect x="88.8889%" y="517" width="0.4938%" height="15" fill="rgb(209,10,6)"/><text x="89.1389%" y="527.50"></text></g><g><title>core::ptr::swap (2 samples, 0.25%)</title><rect x="89.1358%" y="501" width="0.2469%" height="15" fill="rgb(229,3,52)"/><text x="89.3858%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.25%)</title><rect x="89.1358%" y="485" width="0.2469%" height="15" fill="rgb(253,49,37)"/><text x="89.3858%" y="495.50"></text></g><g><title>core::slice::sort::insertion_sort (1 samples, 0.12%)</title><rect x="89.3827%" y="501" width="0.1235%" height="15" fill="rgb(240,103,49)"/><text x="89.6327%" y="511.50"></text></g><g><title>core::slice::sort::shift_tail (1 samples, 0.12%)</title><rect x="89.3827%" y="485" width="0.1235%" height="15" fill="rgb(250,182,30)"/><text x="89.6327%" y="495.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.12%)</title><rect x="89.3827%" y="469" width="0.1235%" height="15" fill="rgb(248,8,30)"/><text x="89.6327%" y="479.50"></text></g><g><title>&lt;core::slice::sort::CopyOnDrop&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.12%)</title><rect x="89.3827%" y="453" width="0.1235%" height="15" fill="rgb(237,120,30)"/><text x="89.6327%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.12%)</title><rect x="89.3827%" y="437" width="0.1235%" height="15" fill="rgb(221,146,34)"/><text x="89.6327%" y="447.50"></text></g><g><title>broccoli::tree::analyze::builder::NonLeafFinisher&lt;A,T&gt;::finish (2 samples, 0.25%)</title><rect x="89.3827%" y="597" width="0.2469%" height="15" fill="rgb(242,55,13)"/><text x="89.6327%" y="607.50"></text></g><g><title>&lt;broccoli::tree::analyze::DefaultSorter as broccoli::tree::analyze::Sorter&gt;::sort (2 samples, 0.25%)</title><rect x="89.3827%" y="581" width="0.2469%" height="15" fill="rgb(242,112,31)"/><text x="89.6327%" y="591.50"></text></g><g><title>broccoli::tree::analyze::oned::sweeper_update (2 samples, 0.25%)</title><rect x="89.3827%" y="565" width="0.2469%" height="15" fill="rgb(249,192,27)"/><text x="89.6327%" y="575.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by (2 samples, 0.25%)</title><rect x="89.3827%" y="549" width="0.2469%" height="15" fill="rgb(208,204,44)"/><text x="89.6327%" y="559.50"></text></g><g><title>core::slice::sort::quicksort (2 samples, 0.25%)</title><rect x="89.3827%" y="533" width="0.2469%" height="15" fill="rgb(208,93,54)"/><text x="89.6327%" y="543.50"></text></g><g><title>core::slice::sort::recurse (2 samples, 0.25%)</title><rect x="89.3827%" y="517" width="0.2469%" height="15" fill="rgb(242,1,31)"/><text x="89.6327%" y="527.50"></text></g><g><title>core::slice::sort::recurse (1 samples, 0.12%)</title><rect x="89.5062%" y="501" width="0.1235%" height="15" fill="rgb(241,83,25)"/><text x="89.7562%" y="511.50"></text></g><g><title>core::slice::sort::insertion_sort (1 samples, 0.12%)</title><rect x="89.5062%" y="485" width="0.1235%" height="15" fill="rgb(205,169,50)"/><text x="89.7562%" y="495.50"></text></g><g><title>core::slice::sort::shift_tail (1 samples, 0.12%)</title><rect x="89.5062%" y="469" width="0.1235%" height="15" fill="rgb(239,186,37)"/><text x="89.7562%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.12%)</title><rect x="89.5062%" y="453" width="0.1235%" height="15" fill="rgb(205,221,10)"/><text x="89.7562%" y="463.50"></text></g><g><title>axgeom::range::Range&lt;T&gt;::contains_ext (1 samples, 0.12%)</title><rect x="89.8765%" y="549" width="0.1235%" height="15" fill="rgb(218,196,15)"/><text x="90.1265%" y="559.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_mut (1 samples, 0.12%)</title><rect x="90.0000%" y="549" width="0.1235%" height="15" fill="rgb(218,196,35)"/><text x="90.2500%" y="559.50"></text></g><g><title>broccoli::tree::analyze::oned::bin_middle_left_right (8 samples, 0.99%)</title><rect x="89.6296%" y="565" width="0.9877%" height="15" fill="rgb(233,63,24)"/><text x="89.8796%" y="575.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (4 samples, 0.49%)</title><rect x="90.1235%" y="549" width="0.4938%" height="15" fill="rgb(225,8,4)"/><text x="90.3735%" y="559.50"></text></g><g><title>core::ptr::swap (2 samples, 0.25%)</title><rect x="90.3704%" y="533" width="0.2469%" height="15" fill="rgb(234,105,35)"/><text x="90.6204%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.25%)</title><rect x="90.3704%" y="517" width="0.2469%" height="15" fill="rgb(236,21,32)"/><text x="90.6204%" y="527.50"></text></g><g><title>pdqselect::choose_pivot (1 samples, 0.12%)</title><rect x="90.6173%" y="517" width="0.1235%" height="15" fill="rgb(228,109,6)"/><text x="90.8673%" y="527.50"></text></g><g><title>pdqselect::choose_pivot::{{closure}} (1 samples, 0.12%)</title><rect x="90.6173%" y="501" width="0.1235%" height="15" fill="rgb(229,215,31)"/><text x="90.8673%" y="511.50"></text></g><g><title>pdqselect::choose_pivot::{{closure}} (1 samples, 0.12%)</title><rect x="90.6173%" y="485" width="0.1235%" height="15" fill="rgb(221,52,54)"/><text x="90.8673%" y="495.50"></text></g><g><title>pdqselect::insertion_sort (1 samples, 0.12%)</title><rect x="90.7407%" y="517" width="0.1235%" height="15" fill="rgb(252,129,43)"/><text x="90.9907%" y="527.50"></text></g><g><title>pdqselect::shift_tail (1 samples, 0.12%)</title><rect x="90.7407%" y="501" width="0.1235%" height="15" fill="rgb(248,183,27)"/><text x="90.9907%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.37%)</title><rect x="91.7284%" y="485" width="0.3704%" height="15" fill="rgb(250,0,22)"/><text x="91.9784%" y="495.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.12%)</title><rect x="92.0988%" y="485" width="0.1235%" height="15" fill="rgb(213,166,10)"/><text x="92.3488%" y="495.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (1 samples, 0.12%)</title><rect x="92.0988%" y="469" width="0.1235%" height="15" fill="rgb(207,163,36)"/><text x="92.3488%" y="479.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (1 samples, 0.12%)</title><rect x="92.0988%" y="453" width="0.1235%" height="15" fill="rgb(208,122,22)"/><text x="92.3488%" y="463.50"></text></g><g><title>core::ptr::swap (2 samples, 0.25%)</title><rect x="92.2222%" y="485" width="0.2469%" height="15" fill="rgb(207,104,49)"/><text x="92.4722%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.25%)</title><rect x="92.2222%" y="469" width="0.2469%" height="15" fill="rgb(248,211,50)"/><text x="92.4722%" y="479.50"></text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::create_non_leaf (25 samples, 3.09%)</title><rect x="89.6296%" y="597" width="3.0864%" height="15" fill="rgb(217,13,45)"/><text x="89.8796%" y="607.50">bro..</text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf (25 samples, 3.09%)</title><rect x="89.6296%" y="581" width="3.0864%" height="15" fill="rgb(211,216,49)"/><text x="89.8796%" y="591.50">bro..</text></g><g><title>pdqselect::select_by (17 samples, 2.10%)</title><rect x="90.6173%" y="565" width="2.0988%" height="15" fill="rgb(221,58,53)"/><text x="90.8673%" y="575.50">p..</text></g><g><title>pdqselect::quickselect (17 samples, 2.10%)</title><rect x="90.6173%" y="549" width="2.0988%" height="15" fill="rgb(220,112,41)"/><text x="90.8673%" y="559.50">p..</text></g><g><title>pdqselect::recurse (17 samples, 2.10%)</title><rect x="90.6173%" y="533" width="2.0988%" height="15" fill="rgb(236,38,28)"/><text x="90.8673%" y="543.50">p..</text></g><g><title>pdqselect::partition (15 samples, 1.85%)</title><rect x="90.8642%" y="517" width="1.8519%" height="15" fill="rgb(227,195,22)"/><text x="91.1142%" y="527.50">p..</text></g><g><title>pdqselect::partition_in_blocks (14 samples, 1.73%)</title><rect x="90.9877%" y="501" width="1.7284%" height="15" fill="rgb(214,55,33)"/><text x="91.2377%" y="511.50"></text></g><g><title>pdqselect::select_by::{{closure}} (2 samples, 0.25%)</title><rect x="92.4691%" y="485" width="0.2469%" height="15" fill="rgb(248,80,13)"/><text x="92.7191%" y="495.50"></text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf::{{closure}} (2 samples, 0.25%)</title><rect x="92.4691%" y="469" width="0.2469%" height="15" fill="rgb(238,52,6)"/><text x="92.7191%" y="479.50"></text></g><g><title>broccoli::tree::analyze::oned::compare_bots (2 samples, 0.25%)</title><rect x="92.4691%" y="453" width="0.2469%" height="15" fill="rgb(224,198,47)"/><text x="92.7191%" y="463.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (2 samples, 0.25%)</title><rect x="92.4691%" y="437" width="0.2469%" height="15" fill="rgb(233,171,20)"/><text x="92.7191%" y="447.50"></text></g><g><title>broccoli::tree::analyze::builder::NonLeafFinisher&lt;A,T&gt;::finish (2 samples, 0.25%)</title><rect x="92.7160%" y="581" width="0.2469%" height="15" fill="rgb(241,30,25)"/><text x="92.9660%" y="591.50"></text></g><g><title>&lt;broccoli::tree::analyze::DefaultSorter as broccoli::tree::analyze::Sorter&gt;::sort (2 samples, 0.25%)</title><rect x="92.7160%" y="565" width="0.2469%" height="15" fill="rgb(207,171,38)"/><text x="92.9660%" y="575.50"></text></g><g><title>broccoli::tree::analyze::oned::sweeper_update (2 samples, 0.25%)</title><rect x="92.7160%" y="549" width="0.2469%" height="15" fill="rgb(234,70,1)"/><text x="92.9660%" y="559.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by (2 samples, 0.25%)</title><rect x="92.7160%" y="533" width="0.2469%" height="15" fill="rgb(232,178,18)"/><text x="92.9660%" y="543.50"></text></g><g><title>core::slice::sort::quicksort (2 samples, 0.25%)</title><rect x="92.7160%" y="517" width="0.2469%" height="15" fill="rgb(241,78,40)"/><text x="92.9660%" y="527.50"></text></g><g><title>core::slice::sort::recurse (2 samples, 0.25%)</title><rect x="92.7160%" y="501" width="0.2469%" height="15" fill="rgb(222,35,25)"/><text x="92.9660%" y="511.50"></text></g><g><title>core::slice::sort::insertion_sort (2 samples, 0.25%)</title><rect x="92.7160%" y="485" width="0.2469%" height="15" fill="rgb(207,92,16)"/><text x="92.9660%" y="495.50"></text></g><g><title>core::slice::sort::shift_tail (2 samples, 0.25%)</title><rect x="92.7160%" y="469" width="0.2469%" height="15" fill="rgb(216,59,51)"/><text x="92.9660%" y="479.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.25%)</title><rect x="92.7160%" y="453" width="0.2469%" height="15" fill="rgb(213,80,28)"/><text x="92.9660%" y="463.50"></text></g><g><title>&lt;core::slice::sort::CopyOnDrop&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.25%)</title><rect x="92.7160%" y="437" width="0.2469%" height="15" fill="rgb(220,93,7)"/><text x="92.9660%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.25%)</title><rect x="92.7160%" y="421" width="0.2469%" height="15" fill="rgb(225,24,44)"/><text x="92.9660%" y="431.50"></text></g><g><title>broccoli::tree::analyze::oned::bin_middle_left_right (4 samples, 0.49%)</title><rect x="92.9630%" y="549" width="0.4938%" height="15" fill="rgb(243,74,40)"/><text x="93.2130%" y="559.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (3 samples, 0.37%)</title><rect x="93.0864%" y="533" width="0.3704%" height="15" fill="rgb(228,39,7)"/><text x="93.3364%" y="543.50"></text></g><g><title>core::ptr::swap (1 samples, 0.12%)</title><rect x="93.3333%" y="517" width="0.1235%" height="15" fill="rgb(227,79,8)"/><text x="93.5833%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.12%)</title><rect x="93.3333%" y="501" width="0.1235%" height="15" fill="rgb(236,58,11)"/><text x="93.5833%" y="511.50"></text></g><g><title>pdqselect::insertion_sort (1 samples, 0.12%)</title><rect x="93.7037%" y="501" width="0.1235%" height="15" fill="rgb(249,63,35)"/><text x="93.9537%" y="511.50"></text></g><g><title>pdqselect::shift_tail (1 samples, 0.12%)</title><rect x="93.7037%" y="485" width="0.1235%" height="15" fill="rgb(252,114,16)"/><text x="93.9537%" y="495.50"></text></g><g><title>pdqselect::select_by::{{closure}} (1 samples, 0.12%)</title><rect x="93.7037%" y="469" width="0.1235%" height="15" fill="rgb(254,151,24)"/><text x="93.9537%" y="479.50"></text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf::{{closure}} (1 samples, 0.12%)</title><rect x="93.7037%" y="453" width="0.1235%" height="15" fill="rgb(253,54,39)"/><text x="93.9537%" y="463.50"></text></g><g><title>broccoli::tree::analyze::oned::compare_bots (1 samples, 0.12%)</title><rect x="93.7037%" y="437" width="0.1235%" height="15" fill="rgb(243,25,45)"/><text x="93.9537%" y="447.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.12%)</title><rect x="93.7037%" y="421" width="0.1235%" height="15" fill="rgb(234,134,9)"/><text x="93.9537%" y="431.50"></text></g><g><title>core::ptr::read (1 samples, 0.12%)</title><rect x="94.3210%" y="469" width="0.1235%" height="15" fill="rgb(227,166,31)"/><text x="94.5710%" y="479.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.12%)</title><rect x="94.4444%" y="453" width="0.1235%" height="15" fill="rgb(245,143,41)"/><text x="94.6944%" y="463.50"></text></g><g><title>core::ptr::swap (2 samples, 0.25%)</title><rect x="94.4444%" y="469" width="0.2469%" height="15" fill="rgb(238,181,32)"/><text x="94.6944%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.12%)</title><rect x="94.5679%" y="453" width="0.1235%" height="15" fill="rgb(224,113,18)"/><text x="94.8179%" y="463.50"></text></g><g><title>pdqselect::partition_in_blocks (6 samples, 0.74%)</title><rect x="94.0741%" y="485" width="0.7407%" height="15" fill="rgb(240,229,28)"/><text x="94.3241%" y="495.50"></text></g><g><title>pdqselect::select_by::{{closure}} (1 samples, 0.12%)</title><rect x="94.6914%" y="469" width="0.1235%" height="15" fill="rgb(250,185,3)"/><text x="94.9414%" y="479.50"></text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf::{{closure}} (1 samples, 0.12%)</title><rect x="94.6914%" y="453" width="0.1235%" height="15" fill="rgb(212,59,25)"/><text x="94.9414%" y="463.50"></text></g><g><title>broccoli::tree::analyze::oned::compare_bots (1 samples, 0.12%)</title><rect x="94.6914%" y="437" width="0.1235%" height="15" fill="rgb(221,87,20)"/><text x="94.9414%" y="447.50"></text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::create_non_leaf (16 samples, 1.98%)</title><rect x="92.9630%" y="581" width="1.9753%" height="15" fill="rgb(213,74,28)"/><text x="93.2130%" y="591.50">b..</text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf (16 samples, 1.98%)</title><rect x="92.9630%" y="565" width="1.9753%" height="15" fill="rgb(224,132,34)"/><text x="93.2130%" y="575.50">b..</text></g><g><title>pdqselect::select_by (12 samples, 1.48%)</title><rect x="93.4568%" y="549" width="1.4815%" height="15" fill="rgb(222,101,24)"/><text x="93.7068%" y="559.50"></text></g><g><title>pdqselect::quickselect (12 samples, 1.48%)</title><rect x="93.4568%" y="533" width="1.4815%" height="15" fill="rgb(254,142,4)"/><text x="93.7068%" y="543.50"></text></g><g><title>pdqselect::recurse (12 samples, 1.48%)</title><rect x="93.4568%" y="517" width="1.4815%" height="15" fill="rgb(230,229,49)"/><text x="93.7068%" y="527.50"></text></g><g><title>pdqselect::partition (9 samples, 1.11%)</title><rect x="93.8272%" y="501" width="1.1111%" height="15" fill="rgb(238,70,47)"/><text x="94.0772%" y="511.50"></text></g><g><title>pdqselect::select_by::{{closure}} (1 samples, 0.12%)</title><rect x="94.8148%" y="485" width="0.1235%" height="15" fill="rgb(231,160,17)"/><text x="95.0648%" y="495.50"></text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf::{{closure}} (1 samples, 0.12%)</title><rect x="94.8148%" y="469" width="0.1235%" height="15" fill="rgb(218,68,53)"/><text x="95.0648%" y="479.50"></text></g><g><title>broccoli::tree::analyze::oned::compare_bots (1 samples, 0.12%)</title><rect x="94.8148%" y="453" width="0.1235%" height="15" fill="rgb(236,111,10)"/><text x="95.0648%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.12%)</title><rect x="94.9383%" y="565" width="0.1235%" height="15" fill="rgb(224,34,41)"/><text x="95.1883%" y="575.50"></text></g><g><title>core::ptr::write (1 samples, 0.12%)</title><rect x="94.9383%" y="549" width="0.1235%" height="15" fill="rgb(241,118,19)"/><text x="95.1883%" y="559.50"></text></g><g><title>core::slice::sort::choose_pivot (1 samples, 0.12%)</title><rect x="95.1852%" y="469" width="0.1235%" height="15" fill="rgb(238,129,25)"/><text x="95.4352%" y="479.50"></text></g><g><title>core::slice::sort::choose_pivot::{{closure}} (1 samples, 0.12%)</title><rect x="95.1852%" y="453" width="0.1235%" height="15" fill="rgb(238,22,31)"/><text x="95.4352%" y="463.50"></text></g><g><title>core::slice::sort::choose_pivot::{{closure}} (1 samples, 0.12%)</title><rect x="95.1852%" y="437" width="0.1235%" height="15" fill="rgb(222,174,48)"/><text x="95.4352%" y="447.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by::{{closure}} (1 samples, 0.12%)</title><rect x="95.1852%" y="421" width="0.1235%" height="15" fill="rgb(206,152,40)"/><text x="95.4352%" y="431.50"></text></g><g><title>broccoli::tree::analyze::oned::sweeper_update::{{closure}} (1 samples, 0.12%)</title><rect x="95.1852%" y="405" width="0.1235%" height="15" fill="rgb(218,99,54)"/><text x="95.4352%" y="415.50"></text></g><g><title>broccoli::tree::analyze::oned::compare_bots (1 samples, 0.12%)</title><rect x="95.1852%" y="389" width="0.1235%" height="15" fill="rgb(220,174,26)"/><text x="95.4352%" y="399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.12%)</title><rect x="95.1852%" y="373" width="0.1235%" height="15" fill="rgb(245,116,9)"/><text x="95.4352%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.25%)</title><rect x="95.4321%" y="437" width="0.2469%" height="15" fill="rgb(209,72,35)"/><text x="95.6821%" y="447.50"></text></g><g><title>core::slice::sort::insertion_sort (5 samples, 0.62%)</title><rect x="95.3086%" y="469" width="0.6173%" height="15" fill="rgb(226,126,21)"/><text x="95.5586%" y="479.50"></text></g><g><title>core::slice::sort::shift_tail (5 samples, 0.62%)</title><rect x="95.3086%" y="453" width="0.6173%" height="15" fill="rgb(227,192,1)"/><text x="95.5586%" y="463.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by::{{closure}} (2 samples, 0.25%)</title><rect x="95.6790%" y="437" width="0.2469%" height="15" fill="rgb(237,180,29)"/><text x="95.9290%" y="447.50"></text></g><g><title>broccoli::tree::analyze::oned::sweeper_update::{{closure}} (2 samples, 0.25%)</title><rect x="95.6790%" y="421" width="0.2469%" height="15" fill="rgb(230,197,35)"/><text x="95.9290%" y="431.50"></text></g><g><title>broccoli::tree::analyze::oned::compare_bots (2 samples, 0.25%)</title><rect x="95.6790%" y="405" width="0.2469%" height="15" fill="rgb(246,193,31)"/><text x="95.9290%" y="415.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (2 samples, 0.25%)</title><rect x="95.6790%" y="389" width="0.2469%" height="15" fill="rgb(241,36,4)"/><text x="95.9290%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.12%)</title><rect x="96.1728%" y="437" width="0.1235%" height="15" fill="rgb(241,130,17)"/><text x="96.4228%" y="447.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.12%)</title><rect x="96.2963%" y="437" width="0.1235%" height="15" fill="rgb(206,137,32)"/><text x="96.5463%" y="447.50"></text></g><g><title>core::slice::sort::partition (5 samples, 0.62%)</title><rect x="95.9259%" y="469" width="0.6173%" height="15" fill="rgb(237,228,51)"/><text x="96.1759%" y="479.50"></text></g><g><title>core::slice::sort::partition_in_blocks (3 samples, 0.37%)</title><rect x="96.1728%" y="453" width="0.3704%" height="15" fill="rgb(243,6,42)"/><text x="96.4228%" y="463.50"></text></g><g><title>core::ptr::swap (1 samples, 0.12%)</title><rect x="96.4198%" y="437" width="0.1235%" height="15" fill="rgb(251,74,28)"/><text x="96.6698%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.12%)</title><rect x="96.4198%" y="421" width="0.1235%" height="15" fill="rgb(218,20,49)"/><text x="96.6698%" y="431.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (3 samples, 0.37%)</title><rect x="96.5432%" y="437" width="0.3704%" height="15" fill="rgb(238,28,14)"/><text x="96.7932%" y="447.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.25%)</title><rect x="96.9136%" y="421" width="0.2469%" height="15" fill="rgb(229,40,46)"/><text x="97.1636%" y="431.50"></text></g><g><title>&lt;core::slice::sort::CopyOnDrop&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.25%)</title><rect x="96.9136%" y="405" width="0.2469%" height="15" fill="rgb(244,195,20)"/><text x="97.1636%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.25%)</title><rect x="96.9136%" y="389" width="0.2469%" height="15" fill="rgb(253,56,35)"/><text x="97.1636%" y="399.50"></text></g><g><title>core::ptr::read (1 samples, 0.12%)</title><rect x="97.1605%" y="421" width="0.1235%" height="15" fill="rgb(210,149,44)"/><text x="97.4105%" y="431.50"></text></g><g><title>&lt;broccoli::tree::analyze::DefaultSorter as broccoli::tree::analyze::Sorter&gt;::sort (19 samples, 2.35%)</title><rect x="95.0617%" y="549" width="2.3457%" height="15" fill="rgb(240,135,12)"/><text x="95.3117%" y="559.50">&lt;..</text></g><g><title>broccoli::tree::analyze::oned::sweeper_update (19 samples, 2.35%)</title><rect x="95.0617%" y="533" width="2.3457%" height="15" fill="rgb(251,24,50)"/><text x="95.3117%" y="543.50">b..</text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by (19 samples, 2.35%)</title><rect x="95.0617%" y="517" width="2.3457%" height="15" fill="rgb(243,200,47)"/><text x="95.3117%" y="527.50">c..</text></g><g><title>core::slice::sort::quicksort (19 samples, 2.35%)</title><rect x="95.0617%" y="501" width="2.3457%" height="15" fill="rgb(224,166,26)"/><text x="95.3117%" y="511.50">c..</text></g><g><title>core::slice::sort::recurse (19 samples, 2.35%)</title><rect x="95.0617%" y="485" width="2.3457%" height="15" fill="rgb(233,0,47)"/><text x="95.3117%" y="495.50">c..</text></g><g><title>core::slice::sort::recurse (7 samples, 0.86%)</title><rect x="96.5432%" y="469" width="0.8642%" height="15" fill="rgb(253,80,5)"/><text x="96.7932%" y="479.50"></text></g><g><title>core::slice::sort::insertion_sort (7 samples, 0.86%)</title><rect x="96.5432%" y="453" width="0.8642%" height="15" fill="rgb(214,133,25)"/><text x="96.7932%" y="463.50"></text></g><g><title>core::slice::sort::shift_tail (4 samples, 0.49%)</title><rect x="96.9136%" y="437" width="0.4938%" height="15" fill="rgb(209,27,14)"/><text x="97.1636%" y="447.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by::{{closure}} (1 samples, 0.12%)</title><rect x="97.2840%" y="421" width="0.1235%" height="15" fill="rgb(219,102,51)"/><text x="97.5340%" y="431.50"></text></g><g><title>broccoli::tree::analyze::oned::sweeper_update::{{closure}} (1 samples, 0.12%)</title><rect x="97.2840%" y="405" width="0.1235%" height="15" fill="rgb(237,18,16)"/><text x="97.5340%" y="415.50"></text></g><g><title>broccoli::tree::analyze::oned::compare_bots (1 samples, 0.12%)</title><rect x="97.2840%" y="389" width="0.1235%" height="15" fill="rgb(241,85,17)"/><text x="97.5340%" y="399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.12%)</title><rect x="97.2840%" y="373" width="0.1235%" height="15" fill="rgb(236,90,42)"/><text x="97.5340%" y="383.50"></text></g><g><title>data_gen::support::bench_closure (713 samples, 88.02%)</title><rect x="9.6296%" y="837" width="88.0247%" height="15" fill="rgb(249,57,21)"/><text x="9.8796%" y="847.50">data_gen::support::bench_closure</text></g><g><title>data_gen::support::bench_closure_ret (713 samples, 88.02%)</title><rect x="9.6296%" y="821" width="88.0247%" height="15" fill="rgb(243,12,36)"/><text x="9.8796%" y="831.50">data_gen::support::bench_closure_ret</text></g><g><title>data_gen::main::{{closure}} (713 samples, 88.02%)</title><rect x="9.6296%" y="805" width="88.0247%" height="15" fill="rgb(253,128,47)"/><text x="9.8796%" y="815.50">data_gen::main::{{closure}}</text></g><g><title>broccoli::tree::new (206 samples, 25.43%)</title><rect x="72.2222%" y="789" width="25.4321%" height="15" fill="rgb(207,33,20)"/><text x="72.4722%" y="799.50">broccoli::tree::new</text></g><g><title>broccoli::tree::analyze::builder::TreeBuilder&lt;A,T&gt;::build_seq (206 samples, 25.43%)</title><rect x="72.2222%" y="773" width="25.4321%" height="15" fill="rgb(233,215,35)"/><text x="72.4722%" y="783.50">broccoli::tree::analyze::builder::TreeBui..</text></g><g><title>broccoli::tree::analyze::builder::create_tree_seq (206 samples, 25.43%)</title><rect x="72.2222%" y="757" width="25.4321%" height="15" fill="rgb(249,188,52)"/><text x="72.4722%" y="767.50">broccoli::tree::analyze::builder::create_..</text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::recurse_preorder_seq (206 samples, 25.43%)</title><rect x="72.2222%" y="741" width="25.4321%" height="15" fill="rgb(225,12,32)"/><text x="72.4722%" y="751.50">broccoli::tree::analyze::builder::Recurse..</text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::recurse_preorder_seq (190 samples, 23.46%)</title><rect x="74.1975%" y="725" width="23.4568%" height="15" fill="rgb(247,98,14)"/><text x="74.4475%" y="735.50">broccoli::tree::analyze::builder::Rec..</text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::recurse_preorder_seq (175 samples, 21.60%)</title><rect x="76.0494%" y="709" width="21.6049%" height="15" fill="rgb(247,219,48)"/><text x="76.2994%" y="719.50">broccoli::tree::analyze::builder::..</text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::recurse_preorder_seq (155 samples, 19.14%)</title><rect x="78.5185%" y="693" width="19.1358%" height="15" fill="rgb(253,60,48)"/><text x="78.7685%" y="703.50">broccoli::tree::analyze::build..</text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::recurse_preorder_seq (141 samples, 17.41%)</title><rect x="80.2469%" y="677" width="17.4074%" height="15" fill="rgb(245,15,52)"/><text x="80.4969%" y="687.50">broccoli::tree::analyze::bu..</text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::recurse_preorder_seq (119 samples, 14.69%)</title><rect x="82.9630%" y="661" width="14.6914%" height="15" fill="rgb(220,133,28)"/><text x="83.2130%" y="671.50">broccoli::tree::analyz..</text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::recurse_preorder_seq (104 samples, 12.84%)</title><rect x="84.8148%" y="645" width="12.8395%" height="15" fill="rgb(217,180,4)"/><text x="85.0648%" y="655.50">broccoli::tree::ana..</text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::recurse_preorder_seq (80 samples, 9.88%)</title><rect x="87.7778%" y="629" width="9.8765%" height="15" fill="rgb(251,24,1)"/><text x="88.0278%" y="639.50">broccoli::tree..</text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::recurse_preorder_seq (67 samples, 8.27%)</title><rect x="89.3827%" y="613" width="8.2716%" height="15" fill="rgb(212,185,49)"/><text x="89.6327%" y="623.50">broccoli::tr..</text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::recurse_preorder_seq (40 samples, 4.94%)</title><rect x="92.7160%" y="597" width="4.9383%" height="15" fill="rgb(215,175,22)"/><text x="92.9660%" y="607.50">brocco..</text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::recurse_preorder_seq (22 samples, 2.72%)</title><rect x="94.9383%" y="581" width="2.7160%" height="15" fill="rgb(250,205,14)"/><text x="95.1883%" y="591.50">br..</text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::create_leaf (21 samples, 2.59%)</title><rect x="95.0617%" y="565" width="2.5926%" height="15" fill="rgb(225,211,22)"/><text x="95.3117%" y="575.50">br..</text></g><g><title>broccoli::tree::analyze::builder::create_cont (2 samples, 0.25%)</title><rect x="97.4074%" y="549" width="0.2469%" height="15" fill="rgb(251,179,42)"/><text x="97.6574%" y="559.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::lt (1 samples, 0.12%)</title><rect x="97.5309%" y="533" width="0.1235%" height="15" fill="rgb(208,216,51)"/><text x="97.7809%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.37%)</title><rect x="97.6543%" y="693" width="0.3704%" height="15" fill="rgb(235,36,11)"/><text x="97.9043%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (3 samples, 0.37%)</title><rect x="97.6543%" y="677" width="0.3704%" height="15" fill="rgb(213,189,28)"/><text x="97.9043%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.37%)</title><rect x="97.6543%" y="661" width="0.3704%" height="15" fill="rgb(227,203,42)"/><text x="97.9043%" y="671.50"></text></g><g><title>&lt;core::iter::sources::RepeatWith&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.37%)</title><rect x="97.6543%" y="645" width="0.3704%" height="15" fill="rgb(244,72,36)"/><text x="97.9043%" y="655.50"></text></g><g><title>dists::spiral_iter::{{closure}} (3 samples, 0.37%)</title><rect x="97.6543%" y="629" width="0.3704%" height="15" fill="rgb(213,53,17)"/><text x="97.9043%" y="639.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::cos (3 samples, 0.37%)</title><rect x="97.6543%" y="613" width="0.3704%" height="15" fill="rgb(207,167,3)"/><text x="97.9043%" y="623.50"></text></g><g><title>__sincos (3 samples, 0.37%)</title><rect x="97.6543%" y="597" width="0.3704%" height="15" fill="rgb(216,98,30)"/><text x="97.9043%" y="607.50"></text></g><g><title>do_sin (3 samples, 0.37%)</title><rect x="97.6543%" y="581" width="0.3704%" height="15" fill="rgb(236,123,15)"/><text x="97.9043%" y="591.50"></text></g><g><title>data_gen::support::distribute (4 samples, 0.49%)</title><rect x="97.6543%" y="837" width="0.4938%" height="15" fill="rgb(248,81,50)"/><text x="97.9043%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (4 samples, 0.49%)</title><rect x="97.6543%" y="821" width="0.4938%" height="15" fill="rgb(214,120,4)"/><text x="97.9043%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (4 samples, 0.49%)</title><rect x="97.6543%" y="805" width="0.4938%" height="15" fill="rgb(208,179,34)"/><text x="97.9043%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.49%)</title><rect x="97.6543%" y="789" width="0.4938%" height="15" fill="rgb(227,140,7)"/><text x="97.9043%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (4 samples, 0.49%)</title><rect x="97.6543%" y="773" width="0.4938%" height="15" fill="rgb(214,22,6)"/><text x="97.9043%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (4 samples, 0.49%)</title><rect x="97.6543%" y="757" width="0.4938%" height="15" fill="rgb(207,137,27)"/><text x="97.9043%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (4 samples, 0.49%)</title><rect x="97.6543%" y="741" width="0.4938%" height="15" fill="rgb(210,8,46)"/><text x="97.9043%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.49%)</title><rect x="97.6543%" y="725" width="0.4938%" height="15" fill="rgb(240,16,54)"/><text x="97.9043%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (4 samples, 0.49%)</title><rect x="97.6543%" y="709" width="0.4938%" height="15" fill="rgb(211,209,29)"/><text x="97.9043%" y="719.50"></text></g><g><title>core::iter::adapters::map_fold::{{closure}} (1 samples, 0.12%)</title><rect x="98.0247%" y="693" width="0.1235%" height="15" fill="rgb(226,228,24)"/><text x="98.2747%" y="703.50"></text></g><g><title>data_gen::support::distribute::{{closure}} (1 samples, 0.12%)</title><rect x="98.0247%" y="677" width="0.1235%" height="15" fill="rgb(222,84,9)"/><text x="98.2747%" y="687.50"></text></g><g><title>data_gen::main::{{closure}} (1 samples, 0.12%)</title><rect x="98.0247%" y="661" width="0.1235%" height="15" fill="rgb(234,203,30)"/><text x="98.2747%" y="671.50"></text></g><g><title>data_gen::support::RectConv::to_f32n (1 samples, 0.12%)</title><rect x="98.0247%" y="645" width="0.1235%" height="15" fill="rgb(238,109,14)"/><text x="98.2747%" y="655.50"></text></g><g><title>axgeom::rect::Rect&lt;T&gt;::inner_as (1 samples, 0.12%)</title><rect x="98.0247%" y="629" width="0.1235%" height="15" fill="rgb(233,206,34)"/><text x="98.2747%" y="639.50"></text></g><g><title>num_cpus::get_physical (1 samples, 0.12%)</title><rect x="98.1481%" y="837" width="0.1235%" height="15" fill="rgb(220,167,47)"/><text x="98.3981%" y="847.50"></text></g><g><title>num_cpus::linux::get_num_physical_cpus (1 samples, 0.12%)</title><rect x="98.1481%" y="821" width="0.1235%" height="15" fill="rgb(238,105,10)"/><text x="98.3981%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.12%)</title><rect x="98.1481%" y="805" width="0.1235%" height="15" fill="rgb(213,227,17)"/><text x="98.3981%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (1 samples, 0.12%)</title><rect x="98.1481%" y="789" width="0.1235%" height="15" fill="rgb(217,132,38)"/><text x="98.3981%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.12%)</title><rect x="98.1481%" y="773" width="0.1235%" height="15" fill="rgb(242,146,4)"/><text x="98.3981%" y="783.50"></text></g><g><title>&lt;std::io::Lines&lt;B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.12%)</title><rect x="98.1481%" y="757" width="0.1235%" height="15" fill="rgb(212,61,9)"/><text x="98.3981%" y="767.50"></text></g><g><title>std::io::BufRead::read_line (1 samples, 0.12%)</title><rect x="98.1481%" y="741" width="0.1235%" height="15" fill="rgb(247,126,22)"/><text x="98.3981%" y="751.50"></text></g><g><title>std::io::append_to_string (1 samples, 0.12%)</title><rect x="98.1481%" y="725" width="0.1235%" height="15" fill="rgb(220,196,2)"/><text x="98.3981%" y="735.50"></text></g><g><title>std::io::BufRead::read_line::{{closure}} (1 samples, 0.12%)</title><rect x="98.1481%" y="709" width="0.1235%" height="15" fill="rgb(208,46,4)"/><text x="98.3981%" y="719.50"></text></g><g><title>std::io::read_until (1 samples, 0.12%)</title><rect x="98.1481%" y="693" width="0.1235%" height="15" fill="rgb(252,104,46)"/><text x="98.3981%" y="703.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::BufRead&gt;::fill_buf (1 samples, 0.12%)</title><rect x="98.1481%" y="677" width="0.1235%" height="15" fill="rgb(237,152,48)"/><text x="98.3981%" y="687.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read (1 samples, 0.12%)</title><rect x="98.1481%" y="661" width="0.1235%" height="15" fill="rgb(221,59,37)"/><text x="98.3981%" y="671.50"></text></g><g><title>std::sys::unix::fs::File::read (1 samples, 0.12%)</title><rect x="98.1481%" y="645" width="0.1235%" height="15" fill="rgb(209,202,51)"/><text x="98.3981%" y="655.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read (1 samples, 0.12%)</title><rect x="98.1481%" y="629" width="0.1235%" height="15" fill="rgb(228,81,30)"/><text x="98.3981%" y="639.50"></text></g><g><title>__GI___libc_read (1 samples, 0.12%)</title><rect x="98.1481%" y="613" width="0.1235%" height="15" fill="rgb(227,42,39)"/><text x="98.3981%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="98.1481%" y="597" width="0.1235%" height="15" fill="rgb(221,26,2)"/><text x="98.3981%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="98.1481%" y="581" width="0.1235%" height="15" fill="rgb(254,61,31)"/><text x="98.3981%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="98.1481%" y="565" width="0.1235%" height="15" fill="rgb(222,173,38)"/><text x="98.3981%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="98.1481%" y="549" width="0.1235%" height="15" fill="rgb(218,50,12)"/><text x="98.3981%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="98.1481%" y="533" width="0.1235%" height="15" fill="rgb(223,88,40)"/><text x="98.3981%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="98.1481%" y="517" width="0.1235%" height="15" fill="rgb(237,54,19)"/><text x="98.3981%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="98.1481%" y="501" width="0.1235%" height="15" fill="rgb(251,129,25)"/><text x="98.3981%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="98.1481%" y="485" width="0.1235%" height="15" fill="rgb(238,97,19)"/><text x="98.3981%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="98.1481%" y="469" width="0.1235%" height="15" fill="rgb(240,169,18)"/><text x="98.3981%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="98.1481%" y="453" width="0.1235%" height="15" fill="rgb(230,187,49)"/><text x="98.3981%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="98.1481%" y="437" width="0.1235%" height="15" fill="rgb(209,44,26)"/><text x="98.3981%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="98.1481%" y="421" width="0.1235%" height="15" fill="rgb(244,0,6)"/><text x="98.3981%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="98.1481%" y="405" width="0.1235%" height="15" fill="rgb(248,18,21)"/><text x="98.3981%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="98.1481%" y="389" width="0.1235%" height="15" fill="rgb(245,180,19)"/><text x="98.3981%" y="399.50"></text></g><g><title>rayon_core::ThreadPoolBuilder&lt;S&gt;::build_global (6 samples, 0.74%)</title><rect x="98.2716%" y="837" width="0.7407%" height="15" fill="rgb(252,118,36)"/><text x="98.5216%" y="847.50"></text></g><g><title>rayon_core::registry::Registry::wait_until_primed (6 samples, 0.74%)</title><rect x="98.2716%" y="821" width="0.7407%" height="15" fill="rgb(210,224,19)"/><text x="98.5216%" y="831.50"></text></g><g><title>rayon_core::latch::LockLatch::wait (6 samples, 0.74%)</title><rect x="98.2716%" y="805" width="0.7407%" height="15" fill="rgb(218,30,24)"/><text x="98.5216%" y="815.50"></text></g><g><title>std::sync::condvar::Condvar::wait (6 samples, 0.74%)</title><rect x="98.2716%" y="789" width="0.7407%" height="15" fill="rgb(219,75,50)"/><text x="98.5216%" y="799.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait (6 samples, 0.74%)</title><rect x="98.2716%" y="773" width="0.7407%" height="15" fill="rgb(234,72,50)"/><text x="98.5216%" y="783.50"></text></g><g><title>std::sys::unix::condvar::Condvar::wait (6 samples, 0.74%)</title><rect x="98.2716%" y="757" width="0.7407%" height="15" fill="rgb(219,100,48)"/><text x="98.5216%" y="767.50"></text></g><g><title>__pthread_cond_wait (6 samples, 0.74%)</title><rect x="98.2716%" y="741" width="0.7407%" height="15" fill="rgb(253,5,41)"/><text x="98.5216%" y="751.50"></text></g><g><title>__pthread_cond_wait_common (6 samples, 0.74%)</title><rect x="98.2716%" y="725" width="0.7407%" height="15" fill="rgb(247,181,11)"/><text x="98.5216%" y="735.50"></text></g><g><title>futex_wait_cancelable (6 samples, 0.74%)</title><rect x="98.2716%" y="709" width="0.7407%" height="15" fill="rgb(222,223,25)"/><text x="98.5216%" y="719.50"></text></g><g><title>[unknown] (6 samples, 0.74%)</title><rect x="98.2716%" y="693" width="0.7407%" height="15" fill="rgb(214,198,28)"/><text x="98.5216%" y="703.50"></text></g><g><title>[unknown] (6 samples, 0.74%)</title><rect x="98.2716%" y="677" width="0.7407%" height="15" fill="rgb(230,46,43)"/><text x="98.5216%" y="687.50"></text></g><g><title>[unknown] (6 samples, 0.74%)</title><rect x="98.2716%" y="661" width="0.7407%" height="15" fill="rgb(233,65,53)"/><text x="98.5216%" y="671.50"></text></g><g><title>[unknown] (6 samples, 0.74%)</title><rect x="98.2716%" y="645" width="0.7407%" height="15" fill="rgb(221,121,27)"/><text x="98.5216%" y="655.50"></text></g><g><title>[unknown] (6 samples, 0.74%)</title><rect x="98.2716%" y="629" width="0.7407%" height="15" fill="rgb(247,70,47)"/><text x="98.5216%" y="639.50"></text></g><g><title>[unknown] (6 samples, 0.74%)</title><rect x="98.2716%" y="613" width="0.7407%" height="15" fill="rgb(228,85,35)"/><text x="98.5216%" y="623.50"></text></g><g><title>[unknown] (6 samples, 0.74%)</title><rect x="98.2716%" y="597" width="0.7407%" height="15" fill="rgb(209,50,18)"/><text x="98.5216%" y="607.50"></text></g><g><title>[unknown] (6 samples, 0.74%)</title><rect x="98.2716%" y="581" width="0.7407%" height="15" fill="rgb(250,19,35)"/><text x="98.5216%" y="591.50"></text></g><g><title>[unknown] (6 samples, 0.74%)</title><rect x="98.2716%" y="565" width="0.7407%" height="15" fill="rgb(253,107,29)"/><text x="98.5216%" y="575.50"></text></g><g><title>[unknown] (6 samples, 0.74%)</title><rect x="98.2716%" y="549" width="0.7407%" height="15" fill="rgb(252,179,29)"/><text x="98.5216%" y="559.50"></text></g><g><title>[unknown] (6 samples, 0.74%)</title><rect x="98.2716%" y="533" width="0.7407%" height="15" fill="rgb(238,194,6)"/><text x="98.5216%" y="543.50"></text></g><g><title>[unknown] (6 samples, 0.74%)</title><rect x="98.2716%" y="517" width="0.7407%" height="15" fill="rgb(238,164,29)"/><text x="98.5216%" y="527.50"></text></g><g><title>[unknown] (5 samples, 0.62%)</title><rect x="98.3951%" y="501" width="0.6173%" height="15" fill="rgb(224,25,9)"/><text x="98.6451%" y="511.50"></text></g><g><title>[unknown] (5 samples, 0.62%)</title><rect x="98.3951%" y="485" width="0.6173%" height="15" fill="rgb(244,153,23)"/><text x="98.6451%" y="495.50"></text></g><g><title>__libc_start_main (727 samples, 89.75%)</title><rect x="9.3827%" y="1013" width="89.7531%" height="15" fill="rgb(212,203,14)"/><text x="9.6327%" y="1023.50">__libc_start_main</text></g><g><title>main (727 samples, 89.75%)</title><rect x="9.3827%" y="997" width="89.7531%" height="15" fill="rgb(220,164,20)"/><text x="9.6327%" y="1007.50">main</text></g><g><title>std::rt::lang_start_internal (727 samples, 89.75%)</title><rect x="9.3827%" y="981" width="89.7531%" height="15" fill="rgb(222,203,48)"/><text x="9.6327%" y="991.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (727 samples, 89.75%)</title><rect x="9.3827%" y="965" width="89.7531%" height="15" fill="rgb(215,159,22)"/><text x="9.6327%" y="975.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (727 samples, 89.75%)</title><rect x="9.3827%" y="949" width="89.7531%" height="15" fill="rgb(216,183,47)"/><text x="9.6327%" y="959.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (727 samples, 89.75%)</title><rect x="9.3827%" y="933" width="89.7531%" height="15" fill="rgb(229,195,25)"/><text x="9.6327%" y="943.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (727 samples, 89.75%)</title><rect x="9.3827%" y="917" width="89.7531%" height="15" fill="rgb(224,132,51)"/><text x="9.6327%" y="927.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (727 samples, 89.75%)</title><rect x="9.3827%" y="901" width="89.7531%" height="15" fill="rgb(240,63,7)"/><text x="9.6327%" y="911.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (727 samples, 89.75%)</title><rect x="9.3827%" y="885" width="89.7531%" height="15" fill="rgb(249,182,41)"/><text x="9.6327%" y="895.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (727 samples, 89.75%)</title><rect x="9.3827%" y="869" width="89.7531%" height="15" fill="rgb(243,47,26)"/><text x="9.6327%" y="879.50">core::ops::function::FnOnce::call_once</text></g><g><title>data_gen::main (727 samples, 89.75%)</title><rect x="9.3827%" y="853" width="89.7531%" height="15" fill="rgb(233,48,2)"/><text x="9.6327%" y="863.50">data_gen::main</text></g><g><title>std::io::stdio::_eprint (1 samples, 0.12%)</title><rect x="99.0123%" y="837" width="0.1235%" height="15" fill="rgb(244,165,34)"/><text x="99.2623%" y="847.50"></text></g><g><title>std::io::stdio::print_to (1 samples, 0.12%)</title><rect x="99.0123%" y="821" width="0.1235%" height="15" fill="rgb(207,89,7)"/><text x="99.2623%" y="831.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (1 samples, 0.12%)</title><rect x="99.0123%" y="805" width="0.1235%" height="15" fill="rgb(244,117,36)"/><text x="99.2623%" y="815.50"></text></g><g><title>std::io::stdio::print_to::{{closure}} (1 samples, 0.12%)</title><rect x="99.0123%" y="789" width="0.1235%" height="15" fill="rgb(226,144,34)"/><text x="99.2623%" y="799.50"></text></g><g><title>&lt;std::io::stdio::Stderr as std::io::Write&gt;::write_fmt (1 samples, 0.12%)</title><rect x="99.0123%" y="773" width="0.1235%" height="15" fill="rgb(213,23,19)"/><text x="99.2623%" y="783.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stderr as std::io::Write&gt;::write_fmt (1 samples, 0.12%)</title><rect x="99.0123%" y="757" width="0.1235%" height="15" fill="rgb(217,75,12)"/><text x="99.2623%" y="767.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.12%)</title><rect x="99.0123%" y="741" width="0.1235%" height="15" fill="rgb(224,159,17)"/><text x="99.2623%" y="751.50"></text></g><g><title>core::fmt::write (1 samples, 0.12%)</title><rect x="99.0123%" y="725" width="0.1235%" height="15" fill="rgb(217,118,1)"/><text x="99.2623%" y="735.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adaptor&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.12%)</title><rect x="99.0123%" y="709" width="0.1235%" height="15" fill="rgb(232,180,48)"/><text x="99.2623%" y="719.50"></text></g><g><title>&lt;std::io::stdio::StderrLock as std::io::Write&gt;::write_all (1 samples, 0.12%)</title><rect x="99.0123%" y="693" width="0.1235%" height="15" fill="rgb(230,27,33)"/><text x="99.2623%" y="703.50"></text></g><g><title>&lt;std::io::stdio::StderrRaw as std::io::Write&gt;::write_all (1 samples, 0.12%)</title><rect x="99.0123%" y="677" width="0.1235%" height="15" fill="rgb(205,31,21)"/><text x="99.2623%" y="687.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.12%)</title><rect x="99.0123%" y="661" width="0.1235%" height="15" fill="rgb(253,59,4)"/><text x="99.2623%" y="671.50"></text></g><g><title>&lt;std::sys::unix::stdio::Stderr as std::io::Write&gt;::write (1 samples, 0.12%)</title><rect x="99.0123%" y="645" width="0.1235%" height="15" fill="rgb(224,201,9)"/><text x="99.2623%" y="655.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (1 samples, 0.12%)</title><rect x="99.0123%" y="629" width="0.1235%" height="15" fill="rgb(229,206,30)"/><text x="99.2623%" y="639.50"></text></g><g><title>__GI___libc_write (1 samples, 0.12%)</title><rect x="99.0123%" y="613" width="0.1235%" height="15" fill="rgb(212,67,47)"/><text x="99.2623%" y="623.50"></text></g><g><title>__GI___libc_write (1 samples, 0.12%)</title><rect x="99.0123%" y="597" width="0.1235%" height="15" fill="rgb(211,96,50)"/><text x="99.2623%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="99.0123%" y="581" width="0.1235%" height="15" fill="rgb(252,114,18)"/><text x="99.2623%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="99.0123%" y="565" width="0.1235%" height="15" fill="rgb(223,58,37)"/><text x="99.2623%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="99.0123%" y="549" width="0.1235%" height="15" fill="rgb(237,70,4)"/><text x="99.2623%" y="559.50"></text></g><g><title>data_gen (804 samples, 99.26%)</title><rect x="0.0000%" y="1045" width="99.2593%" height="15" fill="rgb(244,85,46)"/><text x="0.2500%" y="1055.50">data_gen</text></g><g><title>_start (728 samples, 89.88%)</title><rect x="9.3827%" y="1029" width="89.8765%" height="15" fill="rgb(223,39,52)"/><text x="9.6327%" y="1039.50">_start</text></g><g><title>_dl_start (1 samples, 0.12%)</title><rect x="99.1358%" y="1013" width="0.1235%" height="15" fill="rgb(218,200,14)"/><text x="99.3858%" y="1023.50"></text></g><g><title>_dl_start_final (1 samples, 0.12%)</title><rect x="99.1358%" y="997" width="0.1235%" height="15" fill="rgb(208,171,16)"/><text x="99.3858%" y="1007.50"></text></g><g><title>_dl_sysdep_start (1 samples, 0.12%)</title><rect x="99.1358%" y="981" width="0.1235%" height="15" fill="rgb(234,200,18)"/><text x="99.3858%" y="991.50"></text></g><g><title>dl_main (1 samples, 0.12%)</title><rect x="99.1358%" y="965" width="0.1235%" height="15" fill="rgb(228,45,11)"/><text x="99.3858%" y="975.50"></text></g><g><title>_dl_map_object_deps (1 samples, 0.12%)</title><rect x="99.1358%" y="949" width="0.1235%" height="15" fill="rgb(237,182,11)"/><text x="99.3858%" y="959.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.12%)</title><rect x="99.1358%" y="933" width="0.1235%" height="15" fill="rgb(241,175,49)"/><text x="99.3858%" y="943.50"></text></g><g><title>openaux (1 samples, 0.12%)</title><rect x="99.1358%" y="917" width="0.1235%" height="15" fill="rgb(247,38,35)"/><text x="99.3858%" y="927.50"></text></g><g><title>_dl_map_object (1 samples, 0.12%)</title><rect x="99.1358%" y="901" width="0.1235%" height="15" fill="rgb(228,39,49)"/><text x="99.3858%" y="911.50"></text></g><g><title>open_path (1 samples, 0.12%)</title><rect x="99.1358%" y="885" width="0.1235%" height="15" fill="rgb(226,101,26)"/><text x="99.3858%" y="895.50"></text></g><g><title>open_verify (1 samples, 0.12%)</title><rect x="99.1358%" y="869" width="0.1235%" height="15" fill="rgb(206,141,19)"/><text x="99.3858%" y="879.50"></text></g><g><title>__GI___open64_nocancel (1 samples, 0.12%)</title><rect x="99.1358%" y="853" width="0.1235%" height="15" fill="rgb(211,200,13)"/><text x="99.3858%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="99.1358%" y="837" width="0.1235%" height="15" fill="rgb(241,121,6)"/><text x="99.3858%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="99.1358%" y="821" width="0.1235%" height="15" fill="rgb(234,221,29)"/><text x="99.3858%" y="831.50"></text></g><g><title>all (810 samples, 100%)</title><rect x="0.0000%" y="1061" width="100.0000%" height="15" fill="rgb(229,136,5)"/><text x="0.2500%" y="1071.50"></text></g><g><title>perf (6 samples, 0.74%)</title><rect x="99.2593%" y="1045" width="0.7407%" height="15" fill="rgb(238,36,11)"/><text x="99.5093%" y="1055.50"></text></g><g><title>[unknown] (6 samples, 0.74%)</title><rect x="99.2593%" y="1029" width="0.7407%" height="15" fill="rgb(251,55,41)"/><text x="99.5093%" y="1039.50"></text></g><g><title>[unknown] (6 samples, 0.74%)</title><rect x="99.2593%" y="1013" width="0.7407%" height="15" fill="rgb(242,34,40)"/><text x="99.5093%" y="1023.50"></text></g><g><title>[unknown] (6 samples, 0.74%)</title><rect x="99.2593%" y="997" width="0.7407%" height="15" fill="rgb(215,42,17)"/><text x="99.5093%" y="1007.50"></text></g><g><title>[unknown] (6 samples, 0.74%)</title><rect x="99.2593%" y="981" width="0.7407%" height="15" fill="rgb(207,44,46)"/><text x="99.5093%" y="991.50"></text></g><g><title>[unknown] (6 samples, 0.74%)</title><rect x="99.2593%" y="965" width="0.7407%" height="15" fill="rgb(211,206,28)"/><text x="99.5093%" y="975.50"></text></g><g><title>[unknown] (6 samples, 0.74%)</title><rect x="99.2593%" y="949" width="0.7407%" height="15" fill="rgb(237,167,16)"/><text x="99.5093%" y="959.50"></text></g><g><title>[unknown] (6 samples, 0.74%)</title><rect x="99.2593%" y="933" width="0.7407%" height="15" fill="rgb(233,66,6)"/><text x="99.5093%" y="943.50"></text></g><g><title>[unknown] (6 samples, 0.74%)</title><rect x="99.2593%" y="917" width="0.7407%" height="15" fill="rgb(246,123,29)"/><text x="99.5093%" y="927.50"></text></g><g><title>[unknown] (6 samples, 0.74%)</title><rect x="99.2593%" y="901" width="0.7407%" height="15" fill="rgb(209,62,40)"/><text x="99.5093%" y="911.50"></text></g><g><title>[unknown] (5 samples, 0.62%)</title><rect x="99.3827%" y="885" width="0.6173%" height="15" fill="rgb(218,4,25)"/><text x="99.6327%" y="895.50"></text></g><g><title>[unknown] (5 samples, 0.62%)</title><rect x="99.3827%" y="869" width="0.6173%" height="15" fill="rgb(253,91,49)"/><text x="99.6327%" y="879.50"></text></g><g><title>[unknown] (5 samples, 0.62%)</title><rect x="99.3827%" y="853" width="0.6173%" height="15" fill="rgb(228,155,29)"/><text x="99.6327%" y="863.50"></text></g><g><title>[unknown] (5 samples, 0.62%)</title><rect x="99.3827%" y="837" width="0.6173%" height="15" fill="rgb(243,57,37)"/><text x="99.6327%" y="847.50"></text></g></svg></svg>