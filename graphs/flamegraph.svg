<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="790" onload="init(evt)" viewBox="0 0 1200 790" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="790" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="773.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="773.00"> </text><svg id="frames" x="10" width="1180"><g><title>[[heap]] (2 samples, 0.30%)</title><rect x="0.0000%" y="709" width="0.3040%" height="15" fill="rgb(227,0,7)"/><text x="0.2500%" y="719.50"></text></g><g><title>broccoli::query::colfind::inner::ColfindRecurser&lt;T,NO&gt;::recurse_seq (2 samples, 0.30%)</title><rect x="0.0000%" y="693" width="0.3040%" height="15" fill="rgb(217,0,24)"/><text x="0.2500%" y="703.50"></text></g><g><title>[[stack]] (1 samples, 0.15%)</title><rect x="0.3040%" y="709" width="0.1520%" height="15" fill="rgb(221,193,54)"/><text x="0.5540%" y="719.50"></text></g><g><title>core::slice::sort::recurse (1 samples, 0.15%)</title><rect x="0.3040%" y="693" width="0.1520%" height="15" fill="rgb(248,212,6)"/><text x="0.5540%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="0.4559%" y="693" width="0.1520%" height="15" fill="rgb(208,68,35)"/><text x="0.7059%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="0.4559%" y="677" width="0.1520%" height="15" fill="rgb(232,128,0)"/><text x="0.7059%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="0.4559%" y="661" width="0.1520%" height="15" fill="rgb(207,160,47)"/><text x="0.7059%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="0.4559%" y="645" width="0.1520%" height="15" fill="rgb(228,23,34)"/><text x="0.7059%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="0.4559%" y="629" width="0.1520%" height="15" fill="rgb(218,30,26)"/><text x="0.7059%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="0.4559%" y="613" width="0.1520%" height="15" fill="rgb(220,122,19)"/><text x="0.7059%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="0.4559%" y="597" width="0.1520%" height="15" fill="rgb(250,228,42)"/><text x="0.7059%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="0.4559%" y="581" width="0.1520%" height="15" fill="rgb(240,193,28)"/><text x="0.7059%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="0.4559%" y="565" width="0.1520%" height="15" fill="rgb(216,20,37)"/><text x="0.7059%" y="575.50"></text></g><g><title>__GI___clone (1 samples, 0.15%)</title><rect x="0.6079%" y="693" width="0.1520%" height="15" fill="rgb(206,188,39)"/><text x="0.8579%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="0.6079%" y="677" width="0.1520%" height="15" fill="rgb(217,207,13)"/><text x="0.8579%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="0.6079%" y="661" width="0.1520%" height="15" fill="rgb(231,73,38)"/><text x="0.8579%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="0.6079%" y="645" width="0.1520%" height="15" fill="rgb(225,20,46)"/><text x="0.8579%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="0.6079%" y="629" width="0.1520%" height="15" fill="rgb(210,31,41)"/><text x="0.8579%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="0.6079%" y="613" width="0.1520%" height="15" fill="rgb(221,200,47)"/><text x="0.8579%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="0.6079%" y="597" width="0.1520%" height="15" fill="rgb(226,26,5)"/><text x="0.8579%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="0.6079%" y="581" width="0.1520%" height="15" fill="rgb(249,33,26)"/><text x="0.8579%" y="591.50"></text></g><g><title>[unknown] (3 samples, 0.46%)</title><rect x="0.4559%" y="709" width="0.4559%" height="15" fill="rgb(235,183,28)"/><text x="0.7059%" y="719.50"></text></g><g><title>core::slice::sort::recurse (1 samples, 0.15%)</title><rect x="0.7599%" y="693" width="0.1520%" height="15" fill="rgb(221,5,38)"/><text x="1.0099%" y="703.50"></text></g><g><title>[unknown] (12 samples, 1.82%)</title><rect x="0.9119%" y="693" width="1.8237%" height="15" fill="rgb(247,18,42)"/><text x="1.1619%" y="703.50">[..</text></g><g><title>[unknown] (12 samples, 1.82%)</title><rect x="0.9119%" y="677" width="1.8237%" height="15" fill="rgb(241,131,45)"/><text x="1.1619%" y="687.50">[..</text></g><g><title>[unknown] (12 samples, 1.82%)</title><rect x="0.9119%" y="661" width="1.8237%" height="15" fill="rgb(249,31,29)"/><text x="1.1619%" y="671.50">[..</text></g><g><title>[unknown] (12 samples, 1.82%)</title><rect x="0.9119%" y="645" width="1.8237%" height="15" fill="rgb(225,111,53)"/><text x="1.1619%" y="655.50">[..</text></g><g><title>[unknown] (10 samples, 1.52%)</title><rect x="1.2158%" y="629" width="1.5198%" height="15" fill="rgb(238,160,17)"/><text x="1.4658%" y="639.50"></text></g><g><title>[unknown] (10 samples, 1.52%)</title><rect x="1.2158%" y="613" width="1.5198%" height="15" fill="rgb(214,148,48)"/><text x="1.4658%" y="623.50"></text></g><g><title>[unknown] (10 samples, 1.52%)</title><rect x="1.2158%" y="597" width="1.5198%" height="15" fill="rgb(232,36,49)"/><text x="1.4658%" y="607.50"></text></g><g><title>[unknown] (10 samples, 1.52%)</title><rect x="1.2158%" y="581" width="1.5198%" height="15" fill="rgb(209,103,24)"/><text x="1.4658%" y="591.50"></text></g><g><title>__GI___sched_yield (1 samples, 0.15%)</title><rect x="2.7356%" y="405" width="0.1520%" height="15" fill="rgb(229,88,8)"/><text x="2.9856%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="2.7356%" y="389" width="0.1520%" height="15" fill="rgb(213,181,19)"/><text x="2.9856%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="2.7356%" y="373" width="0.1520%" height="15" fill="rgb(254,191,54)"/><text x="2.9856%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="2.7356%" y="357" width="0.1520%" height="15" fill="rgb(241,83,37)"/><text x="2.9856%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="2.7356%" y="341" width="0.1520%" height="15" fill="rgb(233,36,39)"/><text x="2.9856%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="2.7356%" y="325" width="0.1520%" height="15" fill="rgb(226,3,54)"/><text x="2.9856%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="2.7356%" y="309" width="0.1520%" height="15" fill="rgb(245,192,40)"/><text x="2.9856%" y="319.50"></text></g><g><title>std::panic::catch_unwind (13 samples, 1.98%)</title><rect x="2.7356%" y="597" width="1.9757%" height="15" fill="rgb(238,167,29)"/><text x="2.9856%" y="607.50">s..</text></g><g><title>std::panicking::try (13 samples, 1.98%)</title><rect x="2.7356%" y="581" width="1.9757%" height="15" fill="rgb(232,182,51)"/><text x="2.9856%" y="591.50">s..</text></g><g><title>std::panicking::try::do_call (13 samples, 1.98%)</title><rect x="2.7356%" y="565" width="1.9757%" height="15" fill="rgb(231,60,39)"/><text x="2.9856%" y="575.50">s..</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (13 samples, 1.98%)</title><rect x="2.7356%" y="549" width="1.9757%" height="15" fill="rgb(208,69,12)"/><text x="2.9856%" y="559.50">&lt;..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (13 samples, 1.98%)</title><rect x="2.7356%" y="533" width="1.9757%" height="15" fill="rgb(235,93,37)"/><text x="2.9856%" y="543.50">s..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (13 samples, 1.98%)</title><rect x="2.7356%" y="517" width="1.9757%" height="15" fill="rgb(213,116,39)"/><text x="2.9856%" y="527.50">s..</text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (13 samples, 1.98%)</title><rect x="2.7356%" y="501" width="1.9757%" height="15" fill="rgb(222,207,29)"/><text x="2.9856%" y="511.50">&lt;..</text></g><g><title>rayon_core::registry::ThreadBuilder::run (13 samples, 1.98%)</title><rect x="2.7356%" y="485" width="1.9757%" height="15" fill="rgb(206,96,30)"/><text x="2.9856%" y="495.50">r..</text></g><g><title>rayon_core::registry::main_loop (13 samples, 1.98%)</title><rect x="2.7356%" y="469" width="1.9757%" height="15" fill="rgb(218,138,4)"/><text x="2.9856%" y="479.50">r..</text></g><g><title>rayon_core::registry::WorkerThread::wait_until (13 samples, 1.98%)</title><rect x="2.7356%" y="453" width="1.9757%" height="15" fill="rgb(250,191,14)"/><text x="2.9856%" y="463.50">r..</text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (13 samples, 1.98%)</title><rect x="2.7356%" y="437" width="1.9757%" height="15" fill="rgb(239,60,40)"/><text x="2.9856%" y="447.50">r..</text></g><g><title>rayon_core::sleep::Sleep::no_work_found (13 samples, 1.98%)</title><rect x="2.7356%" y="421" width="1.9757%" height="15" fill="rgb(206,27,48)"/><text x="2.9856%" y="431.50">r..</text></g><g><title>rayon_core::sleep::Sleep::sleep (12 samples, 1.82%)</title><rect x="2.8875%" y="405" width="1.8237%" height="15" fill="rgb(225,35,8)"/><text x="3.1375%" y="415.50">r..</text></g><g><title>std::sync::condvar::Condvar::wait (12 samples, 1.82%)</title><rect x="2.8875%" y="389" width="1.8237%" height="15" fill="rgb(250,213,24)"/><text x="3.1375%" y="399.50">s..</text></g><g><title>std::sys_common::condvar::Condvar::wait (12 samples, 1.82%)</title><rect x="2.8875%" y="373" width="1.8237%" height="15" fill="rgb(247,123,22)"/><text x="3.1375%" y="383.50">s..</text></g><g><title>std::sys::unix::condvar::Condvar::wait (12 samples, 1.82%)</title><rect x="2.8875%" y="357" width="1.8237%" height="15" fill="rgb(231,138,38)"/><text x="3.1375%" y="367.50">s..</text></g><g><title>__pthread_cond_wait (12 samples, 1.82%)</title><rect x="2.8875%" y="341" width="1.8237%" height="15" fill="rgb(231,145,46)"/><text x="3.1375%" y="351.50">_..</text></g><g><title>__pthread_cond_wait_common (12 samples, 1.82%)</title><rect x="2.8875%" y="325" width="1.8237%" height="15" fill="rgb(251,118,11)"/><text x="3.1375%" y="335.50">_..</text></g><g><title>futex_wait_cancelable (12 samples, 1.82%)</title><rect x="2.8875%" y="309" width="1.8237%" height="15" fill="rgb(217,147,25)"/><text x="3.1375%" y="319.50">f..</text></g><g><title>[unknown] (12 samples, 1.82%)</title><rect x="2.8875%" y="293" width="1.8237%" height="15" fill="rgb(247,81,37)"/><text x="3.1375%" y="303.50">[..</text></g><g><title>[unknown] (12 samples, 1.82%)</title><rect x="2.8875%" y="277" width="1.8237%" height="15" fill="rgb(209,12,38)"/><text x="3.1375%" y="287.50">[..</text></g><g><title>[unknown] (11 samples, 1.67%)</title><rect x="3.0395%" y="261" width="1.6717%" height="15" fill="rgb(227,1,9)"/><text x="3.2895%" y="271.50"></text></g><g><title>[unknown] (11 samples, 1.67%)</title><rect x="3.0395%" y="245" width="1.6717%" height="15" fill="rgb(248,47,43)"/><text x="3.2895%" y="255.50"></text></g><g><title>[unknown] (11 samples, 1.67%)</title><rect x="3.0395%" y="229" width="1.6717%" height="15" fill="rgb(221,10,30)"/><text x="3.2895%" y="239.50"></text></g><g><title>[unknown] (11 samples, 1.67%)</title><rect x="3.0395%" y="213" width="1.6717%" height="15" fill="rgb(210,229,1)"/><text x="3.2895%" y="223.50"></text></g><g><title>[unknown] (10 samples, 1.52%)</title><rect x="3.1915%" y="197" width="1.5198%" height="15" fill="rgb(222,148,37)"/><text x="3.4415%" y="207.50"></text></g><g><title>[unknown] (10 samples, 1.52%)</title><rect x="3.1915%" y="181" width="1.5198%" height="15" fill="rgb(234,67,33)"/><text x="3.4415%" y="191.50"></text></g><g><title>[unknown] (10 samples, 1.52%)</title><rect x="3.1915%" y="165" width="1.5198%" height="15" fill="rgb(247,98,35)"/><text x="3.4415%" y="175.50"></text></g><g><title>[unknown] (10 samples, 1.52%)</title><rect x="3.1915%" y="149" width="1.5198%" height="15" fill="rgb(247,138,52)"/><text x="3.4415%" y="159.50"></text></g><g><title>[unknown] (10 samples, 1.52%)</title><rect x="3.1915%" y="133" width="1.5198%" height="15" fill="rgb(213,79,30)"/><text x="3.4415%" y="143.50"></text></g><g><title>[unknown] (10 samples, 1.52%)</title><rect x="3.1915%" y="117" width="1.5198%" height="15" fill="rgb(246,177,23)"/><text x="3.4415%" y="127.50"></text></g><g><title>[unknown] (10 samples, 1.52%)</title><rect x="3.1915%" y="101" width="1.5198%" height="15" fill="rgb(230,62,27)"/><text x="3.4415%" y="111.50"></text></g><g><title>[unknown] (10 samples, 1.52%)</title><rect x="3.1915%" y="85" width="1.5198%" height="15" fill="rgb(216,154,8)"/><text x="3.4415%" y="95.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (14 samples, 2.13%)</title><rect x="2.7356%" y="661" width="2.1277%" height="15" fill="rgb(244,35,45)"/><text x="2.9856%" y="671.50">&lt;..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (14 samples, 2.13%)</title><rect x="2.7356%" y="645" width="2.1277%" height="15" fill="rgb(251,115,12)"/><text x="2.9856%" y="655.50">&lt;..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (14 samples, 2.13%)</title><rect x="2.7356%" y="629" width="2.1277%" height="15" fill="rgb(240,54,50)"/><text x="2.9856%" y="639.50">c..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (14 samples, 2.13%)</title><rect x="2.7356%" y="613" width="2.1277%" height="15" fill="rgb(233,84,52)"/><text x="2.9856%" y="623.50">s..</text></g><g><title>std::sys::unix::thread::guard::current (1 samples, 0.15%)</title><rect x="4.7112%" y="597" width="0.1520%" height="15" fill="rgb(207,117,47)"/><text x="4.9612%" y="607.50"></text></g><g><title>pthread_getattr_np (1 samples, 0.15%)</title><rect x="4.7112%" y="581" width="0.1520%" height="15" fill="rgb(249,43,39)"/><text x="4.9612%" y="591.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.15%)</title><rect x="4.7112%" y="565" width="0.1520%" height="15" fill="rgb(209,38,44)"/><text x="4.9612%" y="575.50"></text></g><g><title>tcache_init (1 samples, 0.15%)</title><rect x="4.7112%" y="549" width="0.1520%" height="15" fill="rgb(236,212,23)"/><text x="4.9612%" y="559.50"></text></g><g><title>tcache_init (1 samples, 0.15%)</title><rect x="4.7112%" y="533" width="0.1520%" height="15" fill="rgb(242,79,21)"/><text x="4.9612%" y="543.50"></text></g><g><title>arena_get2 (1 samples, 0.15%)</title><rect x="4.7112%" y="517" width="0.1520%" height="15" fill="rgb(211,96,35)"/><text x="4.9612%" y="527.50"></text></g><g><title>arena_get2 (1 samples, 0.15%)</title><rect x="4.7112%" y="501" width="0.1520%" height="15" fill="rgb(253,215,40)"/><text x="4.9612%" y="511.50"></text></g><g><title>_int_new_arena (1 samples, 0.15%)</title><rect x="4.7112%" y="485" width="0.1520%" height="15" fill="rgb(211,81,21)"/><text x="4.9612%" y="495.50"></text></g><g><title>new_heap (1 samples, 0.15%)</title><rect x="4.7112%" y="469" width="0.1520%" height="15" fill="rgb(208,190,38)"/><text x="4.9612%" y="479.50"></text></g><g><title>__GI___mmap64 (1 samples, 0.15%)</title><rect x="4.7112%" y="453" width="0.1520%" height="15" fill="rgb(235,213,38)"/><text x="4.9612%" y="463.50"></text></g><g><title>__GI___mmap64 (1 samples, 0.15%)</title><rect x="4.7112%" y="437" width="0.1520%" height="15" fill="rgb(237,122,38)"/><text x="4.9612%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="4.7112%" y="421" width="0.1520%" height="15" fill="rgb(244,218,35)"/><text x="4.9612%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="4.7112%" y="405" width="0.1520%" height="15" fill="rgb(240,68,47)"/><text x="4.9612%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="4.7112%" y="389" width="0.1520%" height="15" fill="rgb(210,16,53)"/><text x="4.9612%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="4.7112%" y="373" width="0.1520%" height="15" fill="rgb(235,124,12)"/><text x="4.9612%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="4.7112%" y="357" width="0.1520%" height="15" fill="rgb(224,169,11)"/><text x="4.9612%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="4.7112%" y="341" width="0.1520%" height="15" fill="rgb(250,166,2)"/><text x="4.9612%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="4.7112%" y="325" width="0.1520%" height="15" fill="rgb(242,216,29)"/><text x="4.9612%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="4.7112%" y="309" width="0.1520%" height="15" fill="rgb(230,116,27)"/><text x="4.9612%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="4.7112%" y="293" width="0.1520%" height="15" fill="rgb(228,99,48)"/><text x="4.9612%" y="303.50"></text></g><g><title>__GI___clone (27 samples, 4.10%)</title><rect x="0.9119%" y="709" width="4.1033%" height="15" fill="rgb(253,11,6)"/><text x="1.1619%" y="719.50">__GI..</text></g><g><title>start_thread (15 samples, 2.28%)</title><rect x="2.7356%" y="693" width="2.2796%" height="15" fill="rgb(247,143,39)"/><text x="2.9856%" y="703.50">s..</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (15 samples, 2.28%)</title><rect x="2.7356%" y="677" width="2.2796%" height="15" fill="rgb(236,97,10)"/><text x="2.9856%" y="687.50">s..</text></g><g><title>std::sys::unix::stack_overflow::Handler::new (1 samples, 0.15%)</title><rect x="4.8632%" y="661" width="0.1520%" height="15" fill="rgb(233,208,19)"/><text x="5.1132%" y="671.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (1 samples, 0.15%)</title><rect x="4.8632%" y="645" width="0.1520%" height="15" fill="rgb(216,164,2)"/><text x="5.1132%" y="655.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (1 samples, 0.15%)</title><rect x="4.8632%" y="629" width="0.1520%" height="15" fill="rgb(220,129,5)"/><text x="5.1132%" y="639.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (1 samples, 0.15%)</title><rect x="4.8632%" y="613" width="0.1520%" height="15" fill="rgb(242,17,10)"/><text x="5.1132%" y="623.50"></text></g><g><title>__GI___mmap64 (1 samples, 0.15%)</title><rect x="4.8632%" y="597" width="0.1520%" height="15" fill="rgb(242,107,0)"/><text x="5.1132%" y="607.50"></text></g><g><title>__GI___mmap64 (1 samples, 0.15%)</title><rect x="4.8632%" y="581" width="0.1520%" height="15" fill="rgb(251,28,31)"/><text x="5.1132%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="4.8632%" y="565" width="0.1520%" height="15" fill="rgb(233,223,10)"/><text x="5.1132%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="4.8632%" y="549" width="0.1520%" height="15" fill="rgb(215,21,27)"/><text x="5.1132%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="4.8632%" y="533" width="0.1520%" height="15" fill="rgb(232,23,21)"/><text x="5.1132%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="4.8632%" y="517" width="0.1520%" height="15" fill="rgb(244,5,23)"/><text x="5.1132%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="4.8632%" y="501" width="0.1520%" height="15" fill="rgb(226,81,46)"/><text x="5.1132%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="4.8632%" y="485" width="0.1520%" height="15" fill="rgb(247,70,30)"/><text x="5.1132%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="4.8632%" y="469" width="0.1520%" height="15" fill="rgb(212,68,19)"/><text x="5.1132%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="4.8632%" y="453" width="0.1520%" height="15" fill="rgb(240,187,13)"/><text x="5.1132%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="4.8632%" y="437" width="0.1520%" height="15" fill="rgb(223,113,26)"/><text x="5.1132%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="4.8632%" y="421" width="0.1520%" height="15" fill="rgb(206,192,2)"/><text x="5.1132%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as twounordered::RetainMutUnordered&lt;T&gt;&gt;::truncate (1 samples, 0.15%)</title><rect x="5.0152%" y="325" width="0.1520%" height="15" fill="rgb(241,108,4)"/><text x="5.2652%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::truncate (1 samples, 0.15%)</title><rect x="5.0152%" y="309" width="0.1520%" height="15" fill="rgb(247,173,49)"/><text x="5.2652%" y="319.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_node (2 samples, 0.30%)</title><rect x="5.0152%" y="389" width="0.3040%" height="15" fill="rgb(224,114,35)"/><text x="5.2652%" y="399.50"></text></g><g><title>broccoli::query::colfind::oned::find_2d (2 samples, 0.30%)</title><rect x="5.0152%" y="373" width="0.3040%" height="15" fill="rgb(245,159,27)"/><text x="5.2652%" y="383.50"></text></g><g><title>broccoli::query::colfind::oned::find (2 samples, 0.30%)</title><rect x="5.0152%" y="357" width="0.3040%" height="15" fill="rgb(245,172,44)"/><text x="5.2652%" y="367.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (2 samples, 0.30%)</title><rect x="5.0152%" y="341" width="0.3040%" height="15" fill="rgb(236,23,11)"/><text x="5.2652%" y="351.50"></text></g><g><title>broccoli::query::colfind::oned::find::{{closure}} (1 samples, 0.15%)</title><rect x="5.1672%" y="325" width="0.1520%" height="15" fill="rgb(205,117,38)"/><text x="5.4172%" y="335.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.15%)</title><rect x="5.1672%" y="309" width="0.1520%" height="15" fill="rgb(237,72,25)"/><text x="5.4172%" y="319.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (1 samples, 0.15%)</title><rect x="5.3191%" y="309" width="0.1520%" height="15" fill="rgb(244,70,9)"/><text x="5.5691%" y="319.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.15%)</title><rect x="5.4711%" y="309" width="0.1520%" height="15" fill="rgb(217,125,39)"/><text x="5.7211%" y="319.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (3 samples, 0.46%)</title><rect x="5.3191%" y="357" width="0.4559%" height="15" fill="rgb(235,36,10)"/><text x="5.5691%" y="367.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (3 samples, 0.46%)</title><rect x="5.3191%" y="341" width="0.4559%" height="15" fill="rgb(251,123,47)"/><text x="5.5691%" y="351.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (3 samples, 0.46%)</title><rect x="5.3191%" y="325" width="0.4559%" height="15" fill="rgb(221,13,13)"/><text x="5.5691%" y="335.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.15%)</title><rect x="5.6231%" y="309" width="0.1520%" height="15" fill="rgb(238,131,9)"/><text x="5.8731%" y="319.50"></text></g><g><title>core::ptr::swap (1 samples, 0.15%)</title><rect x="5.6231%" y="293" width="0.1520%" height="15" fill="rgb(211,50,8)"/><text x="5.8731%" y="303.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.15%)</title><rect x="5.6231%" y="277" width="0.1520%" height="15" fill="rgb(245,182,24)"/><text x="5.8731%" y="287.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (5 samples, 0.76%)</title><rect x="5.3191%" y="373" width="0.7599%" height="15" fill="rgb(242,14,37)"/><text x="5.5691%" y="383.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (2 samples, 0.30%)</title><rect x="5.7751%" y="357" width="0.3040%" height="15" fill="rgb(246,228,12)"/><text x="6.0251%" y="367.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (2 samples, 0.30%)</title><rect x="5.7751%" y="341" width="0.3040%" height="15" fill="rgb(213,55,15)"/><text x="6.0251%" y="351.50"></text></g><g><title>&lt;broccoli::query::colfind::builder::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (1 samples, 0.15%)</title><rect x="5.9271%" y="325" width="0.1520%" height="15" fill="rgb(209,9,3)"/><text x="6.1771%" y="335.50"></text></g><g><title>broccoli::query::colfind::ColfindQuery::find_colliding_pairs_mut::{{closure}} (1 samples, 0.15%)</title><rect x="5.9271%" y="309" width="0.1520%" height="15" fill="rgb(230,59,30)"/><text x="6.1771%" y="319.50"></text></g><g><title>data_gen::profile_test::{{closure}}::{{closure}} (1 samples, 0.15%)</title><rect x="5.9271%" y="293" width="0.1520%" height="15" fill="rgb(209,121,21)"/><text x="6.1771%" y="303.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (2 samples, 0.30%)</title><rect x="6.0790%" y="277" width="0.3040%" height="15" fill="rgb(220,109,13)"/><text x="6.3290%" y="287.50"></text></g><g><title>&lt;broccoli::query::colfind::builder::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (1 samples, 0.15%)</title><rect x="6.2310%" y="261" width="0.1520%" height="15" fill="rgb(232,18,1)"/><text x="6.4810%" y="271.50"></text></g><g><title>broccoli::query::colfind::ColfindQuery::find_colliding_pairs_mut::{{closure}} (1 samples, 0.15%)</title><rect x="6.2310%" y="245" width="0.1520%" height="15" fill="rgb(215,41,42)"/><text x="6.4810%" y="255.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.15%)</title><rect x="6.2310%" y="229" width="0.1520%" height="15" fill="rgb(224,123,36)"/><text x="6.4810%" y="239.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (4 samples, 0.61%)</title><rect x="6.0790%" y="341" width="0.6079%" height="15" fill="rgb(240,125,3)"/><text x="6.3290%" y="351.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (4 samples, 0.61%)</title><rect x="6.0790%" y="325" width="0.6079%" height="15" fill="rgb(205,98,50)"/><text x="6.3290%" y="335.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (4 samples, 0.61%)</title><rect x="6.0790%" y="309" width="0.6079%" height="15" fill="rgb(205,185,37)"/><text x="6.3290%" y="319.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (4 samples, 0.61%)</title><rect x="6.0790%" y="293" width="0.6079%" height="15" fill="rgb(238,207,15)"/><text x="6.3290%" y="303.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (2 samples, 0.30%)</title><rect x="6.3830%" y="277" width="0.3040%" height="15" fill="rgb(213,199,42)"/><text x="6.6330%" y="287.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (1 samples, 0.15%)</title><rect x="6.6869%" y="341" width="0.1520%" height="15" fill="rgb(235,201,11)"/><text x="6.9369%" y="351.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (1 samples, 0.15%)</title><rect x="6.6869%" y="325" width="0.1520%" height="15" fill="rgb(207,46,11)"/><text x="6.9369%" y="335.50"></text></g><g><title>&lt;broccoli::query::colfind::builder::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (1 samples, 0.15%)</title><rect x="6.6869%" y="309" width="0.1520%" height="15" fill="rgb(241,35,35)"/><text x="6.9369%" y="319.50"></text></g><g><title>broccoli::query::colfind::ColfindQuery::find_colliding_pairs_mut::{{closure}} (1 samples, 0.15%)</title><rect x="6.6869%" y="293" width="0.1520%" height="15" fill="rgb(243,32,47)"/><text x="6.9369%" y="303.50"></text></g><g><title>data_gen::profile_test::{{closure}}::{{closure}} (1 samples, 0.15%)</title><rect x="6.6869%" y="277" width="0.1520%" height="15" fill="rgb(247,202,23)"/><text x="6.9369%" y="287.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (6 samples, 0.91%)</title><rect x="6.0790%" y="357" width="0.9119%" height="15" fill="rgb(219,102,11)"/><text x="6.3290%" y="367.50"></text></g><g><title>broccoli::query::tools::get_section_mut (1 samples, 0.15%)</title><rect x="6.8389%" y="341" width="0.1520%" height="15" fill="rgb(243,110,44)"/><text x="7.0889%" y="351.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::lt (1 samples, 0.15%)</title><rect x="7.2948%" y="293" width="0.1520%" height="15" fill="rgb(222,74,54)"/><text x="7.5448%" y="303.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.15%)</title><rect x="7.4468%" y="293" width="0.1520%" height="15" fill="rgb(216,99,12)"/><text x="7.6968%" y="303.50"></text></g><g><title>twounordered::FirstVec&lt;T&gt;::push (1 samples, 0.15%)</title><rect x="7.5988%" y="293" width="0.1520%" height="15" fill="rgb(226,22,26)"/><text x="7.8488%" y="303.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.15%)</title><rect x="7.5988%" y="277" width="0.1520%" height="15" fill="rgb(217,163,10)"/><text x="7.8488%" y="287.50"></text></g><g><title>core::ptr::swap (1 samples, 0.15%)</title><rect x="7.5988%" y="261" width="0.1520%" height="15" fill="rgb(213,25,53)"/><text x="7.8488%" y="271.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.15%)</title><rect x="7.5988%" y="245" width="0.1520%" height="15" fill="rgb(252,105,26)"/><text x="7.8488%" y="255.50"></text></g><g><title>&lt;twounordered::SecondVec&lt;T&gt; as twounordered::RetainMutUnordered&lt;T&gt;&gt;::truncate (1 samples, 0.15%)</title><rect x="8.2067%" y="277" width="0.1520%" height="15" fill="rgb(220,39,43)"/><text x="8.4567%" y="287.50"></text></g><g><title>twounordered::SecondVec&lt;T&gt;::truncate (1 samples, 0.15%)</title><rect x="8.2067%" y="261" width="0.1520%" height="15" fill="rgb(229,68,48)"/><text x="8.4567%" y="271.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (11 samples, 1.67%)</title><rect x="6.9909%" y="325" width="1.6717%" height="15" fill="rgb(252,8,32)"/><text x="7.2409%" y="335.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (11 samples, 1.67%)</title><rect x="6.9909%" y="309" width="1.6717%" height="15" fill="rgb(223,20,43)"/><text x="7.2409%" y="319.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (6 samples, 0.91%)</title><rect x="7.7508%" y="293" width="0.9119%" height="15" fill="rgb(229,81,49)"/><text x="8.0008%" y="303.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (2 samples, 0.30%)</title><rect x="8.3587%" y="277" width="0.3040%" height="15" fill="rgb(236,28,36)"/><text x="8.6087%" y="287.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (13 samples, 1.98%)</title><rect x="6.9909%" y="341" width="1.9757%" height="15" fill="rgb(249,185,26)"/><text x="7.2409%" y="351.50">&lt;..</text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (2 samples, 0.30%)</title><rect x="8.6626%" y="325" width="0.3040%" height="15" fill="rgb(249,174,33)"/><text x="8.9126%" y="335.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (2 samples, 0.30%)</title><rect x="8.6626%" y="309" width="0.3040%" height="15" fill="rgb(233,201,37)"/><text x="8.9126%" y="319.50"></text></g><g><title>&lt;broccoli::query::colfind::builder::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (2 samples, 0.30%)</title><rect x="8.6626%" y="293" width="0.3040%" height="15" fill="rgb(221,78,26)"/><text x="8.9126%" y="303.50"></text></g><g><title>broccoli::query::colfind::ColfindQuery::find_colliding_pairs_mut::{{closure}} (2 samples, 0.30%)</title><rect x="8.6626%" y="277" width="0.3040%" height="15" fill="rgb(250,127,30)"/><text x="8.9126%" y="287.50"></text></g><g><title>data_gen::profile_test::{{closure}}::{{closure}} (2 samples, 0.30%)</title><rect x="8.6626%" y="261" width="0.3040%" height="15" fill="rgb(230,49,44)"/><text x="8.9126%" y="271.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::lt (1 samples, 0.15%)</title><rect x="8.9666%" y="277" width="0.1520%" height="15" fill="rgb(229,67,23)"/><text x="9.2166%" y="287.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.15%)</title><rect x="9.1185%" y="277" width="0.1520%" height="15" fill="rgb(249,83,47)"/><text x="9.3685%" y="287.50"></text></g><g><title>&lt;twounordered::FirstVec&lt;T&gt; as twounordered::RetainMutUnordered&lt;T&gt;&gt;::truncate (1 samples, 0.15%)</title><rect x="9.5745%" y="261" width="0.1520%" height="15" fill="rgb(215,43,3)"/><text x="9.8245%" y="271.50"></text></g><g><title>twounordered::FirstVec&lt;T&gt;::truncate (1 samples, 0.15%)</title><rect x="9.5745%" y="245" width="0.1520%" height="15" fill="rgb(238,154,13)"/><text x="9.8245%" y="255.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.15%)</title><rect x="9.5745%" y="229" width="0.1520%" height="15" fill="rgb(219,56,2)"/><text x="9.8245%" y="239.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.15%)</title><rect x="9.5745%" y="213" width="0.1520%" height="15" fill="rgb(233,0,4)"/><text x="9.8245%" y="223.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (6 samples, 0.91%)</title><rect x="8.9666%" y="309" width="0.9119%" height="15" fill="rgb(235,30,7)"/><text x="9.2166%" y="319.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (6 samples, 0.91%)</title><rect x="8.9666%" y="293" width="0.9119%" height="15" fill="rgb(250,79,13)"/><text x="9.2166%" y="303.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (4 samples, 0.61%)</title><rect x="9.2705%" y="277" width="0.6079%" height="15" fill="rgb(211,146,34)"/><text x="9.5205%" y="287.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.15%)</title><rect x="9.7264%" y="261" width="0.1520%" height="15" fill="rgb(228,22,38)"/><text x="9.9764%" y="271.50"></text></g><g><title>core::ptr::swap (1 samples, 0.15%)</title><rect x="9.7264%" y="245" width="0.1520%" height="15" fill="rgb(235,168,5)"/><text x="9.9764%" y="255.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.15%)</title><rect x="9.7264%" y="229" width="0.1520%" height="15" fill="rgb(221,155,16)"/><text x="9.9764%" y="239.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (7 samples, 1.06%)</title><rect x="8.9666%" y="325" width="1.0638%" height="15" fill="rgb(215,215,53)"/><text x="9.2166%" y="335.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (1 samples, 0.15%)</title><rect x="9.8784%" y="309" width="0.1520%" height="15" fill="rgb(223,4,10)"/><text x="10.1284%" y="319.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (1 samples, 0.15%)</title><rect x="9.8784%" y="293" width="0.1520%" height="15" fill="rgb(234,103,6)"/><text x="10.1284%" y="303.50"></text></g><g><title>&lt;broccoli::query::colfind::builder::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (1 samples, 0.15%)</title><rect x="9.8784%" y="277" width="0.1520%" height="15" fill="rgb(227,97,0)"/><text x="10.1284%" y="287.50"></text></g><g><title>broccoli::query::colfind::ColfindQuery::find_colliding_pairs_mut::{{closure}} (1 samples, 0.15%)</title><rect x="9.8784%" y="261" width="0.1520%" height="15" fill="rgb(234,150,53)"/><text x="10.1284%" y="271.50"></text></g><g><title>data_gen::profile_test::{{closure}}::{{closure}} (1 samples, 0.15%)</title><rect x="9.8784%" y="245" width="0.1520%" height="15" fill="rgb(228,201,54)"/><text x="10.1284%" y="255.50"></text></g><g><title>broccoli::query::colfind::inner::ColfindRecurser&lt;T,NO&gt;::recurse_common (34 samples, 5.17%)</title><rect x="5.0152%" y="405" width="5.1672%" height="15" fill="rgb(222,22,37)"/><text x="5.2652%" y="415.50">brocco..</text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,KK,B&gt;::recurse (32 samples, 4.86%)</title><rect x="5.3191%" y="389" width="4.8632%" height="15" fill="rgb(237,53,32)"/><text x="5.5691%" y="399.50">brocco..</text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,KK,B&gt;::recurse (27 samples, 4.10%)</title><rect x="6.0790%" y="373" width="4.1033%" height="15" fill="rgb(233,25,53)"/><text x="6.3290%" y="383.50">broc..</text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,KK,B&gt;::recurse (21 samples, 3.19%)</title><rect x="6.9909%" y="357" width="3.1915%" height="15" fill="rgb(210,40,34)"/><text x="7.2409%" y="367.50">bro..</text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,KK,B&gt;::recurse (8 samples, 1.22%)</title><rect x="8.9666%" y="341" width="1.2158%" height="15" fill="rgb(241,220,44)"/><text x="9.2166%" y="351.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,KK,B&gt;::recurse (1 samples, 0.15%)</title><rect x="10.0304%" y="325" width="0.1520%" height="15" fill="rgb(235,28,35)"/><text x="10.2804%" y="335.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (1 samples, 0.15%)</title><rect x="10.0304%" y="309" width="0.1520%" height="15" fill="rgb(210,56,17)"/><text x="10.2804%" y="319.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (1 samples, 0.15%)</title><rect x="10.0304%" y="293" width="0.1520%" height="15" fill="rgb(224,130,29)"/><text x="10.2804%" y="303.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (1 samples, 0.15%)</title><rect x="10.0304%" y="277" width="0.1520%" height="15" fill="rgb(235,212,8)"/><text x="10.2804%" y="287.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (1 samples, 0.15%)</title><rect x="10.0304%" y="261" width="0.1520%" height="15" fill="rgb(223,33,50)"/><text x="10.2804%" y="271.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (1 samples, 0.15%)</title><rect x="10.0304%" y="245" width="0.1520%" height="15" fill="rgb(219,149,13)"/><text x="10.2804%" y="255.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek::{{closure}} (1 samples, 0.15%)</title><rect x="10.0304%" y="229" width="0.1520%" height="15" fill="rgb(250,156,29)"/><text x="10.2804%" y="239.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.15%)</title><rect x="10.0304%" y="213" width="0.1520%" height="15" fill="rgb(216,193,19)"/><text x="10.2804%" y="223.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.15%)</title><rect x="10.0304%" y="197" width="0.1520%" height="15" fill="rgb(216,135,14)"/><text x="10.2804%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.15%)</title><rect x="10.1824%" y="325" width="0.1520%" height="15" fill="rgb(241,47,5)"/><text x="10.4324%" y="335.50"></text></g><g><title>core::ptr::write (1 samples, 0.15%)</title><rect x="10.1824%" y="309" width="0.1520%" height="15" fill="rgb(233,42,35)"/><text x="10.4324%" y="319.50"></text></g><g><title>&lt;broccoli::query::colfind::builder::QueryFn&lt;T,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (1 samples, 0.15%)</title><rect x="10.6383%" y="277" width="0.1520%" height="15" fill="rgb(231,13,6)"/><text x="10.8883%" y="287.50"></text></g><g><title>broccoli::query::colfind::ColfindQuery::find_colliding_pairs_mut_par::{{closure}} (1 samples, 0.15%)</title><rect x="10.6383%" y="261" width="0.1520%" height="15" fill="rgb(207,181,40)"/><text x="10.8883%" y="271.50"></text></g><g><title>data_gen::colfind::float_vs_integer::handle_bench::{{closure}}::{{closure}} (1 samples, 0.15%)</title><rect x="10.6383%" y="245" width="0.1520%" height="15" fill="rgb(254,173,49)"/><text x="10.8883%" y="255.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_node (5 samples, 0.76%)</title><rect x="10.1824%" y="373" width="0.7599%" height="15" fill="rgb(221,1,38)"/><text x="10.4324%" y="383.50"></text></g><g><title>broccoli::query::colfind::oned::find_2d (5 samples, 0.76%)</title><rect x="10.1824%" y="357" width="0.7599%" height="15" fill="rgb(206,124,46)"/><text x="10.4324%" y="367.50"></text></g><g><title>broccoli::query::colfind::oned::find (5 samples, 0.76%)</title><rect x="10.1824%" y="341" width="0.7599%" height="15" fill="rgb(249,21,11)"/><text x="10.4324%" y="351.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (4 samples, 0.61%)</title><rect x="10.3343%" y="325" width="0.6079%" height="15" fill="rgb(222,201,40)"/><text x="10.5843%" y="335.50"></text></g><g><title>broccoli::query::colfind::oned::find::{{closure}} (3 samples, 0.46%)</title><rect x="10.4863%" y="309" width="0.4559%" height="15" fill="rgb(235,61,29)"/><text x="10.7363%" y="319.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (2 samples, 0.30%)</title><rect x="10.6383%" y="293" width="0.3040%" height="15" fill="rgb(219,207,3)"/><text x="10.8883%" y="303.50"></text></g><g><title>&lt;broccoli::query::colfind::builder::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (1 samples, 0.15%)</title><rect x="10.7903%" y="277" width="0.1520%" height="15" fill="rgb(222,56,46)"/><text x="11.0403%" y="287.50"></text></g><g><title>broccoli::query::colfind::ColfindQuery::find_colliding_pairs_mut::{{closure}} (1 samples, 0.15%)</title><rect x="10.7903%" y="261" width="0.1520%" height="15" fill="rgb(239,76,54)"/><text x="11.0403%" y="271.50"></text></g><g><title>data_gen::profile_test::{{closure}}::{{closure}} (1 samples, 0.15%)</title><rect x="10.7903%" y="245" width="0.1520%" height="15" fill="rgb(231,124,27)"/><text x="11.0403%" y="255.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.15%)</title><rect x="11.0942%" y="309" width="0.1520%" height="15" fill="rgb(249,195,6)"/><text x="11.3442%" y="319.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (6 samples, 0.91%)</title><rect x="10.9422%" y="341" width="0.9119%" height="15" fill="rgb(237,174,47)"/><text x="11.1922%" y="351.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (6 samples, 0.91%)</title><rect x="10.9422%" y="325" width="0.9119%" height="15" fill="rgb(206,201,31)"/><text x="11.1922%" y="335.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (4 samples, 0.61%)</title><rect x="11.2462%" y="309" width="0.6079%" height="15" fill="rgb(231,57,52)"/><text x="11.4962%" y="319.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (2 samples, 0.30%)</title><rect x="11.5502%" y="293" width="0.3040%" height="15" fill="rgb(248,177,22)"/><text x="11.8002%" y="303.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (2 samples, 0.30%)</title><rect x="11.5502%" y="277" width="0.3040%" height="15" fill="rgb(215,211,37)"/><text x="11.8002%" y="287.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.15%)</title><rect x="11.8541%" y="325" width="0.1520%" height="15" fill="rgb(241,128,51)"/><text x="12.1041%" y="335.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.15%)</title><rect x="11.8541%" y="309" width="0.1520%" height="15" fill="rgb(227,165,31)"/><text x="12.1041%" y="319.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (9 samples, 1.37%)</title><rect x="10.9422%" y="357" width="1.3678%" height="15" fill="rgb(228,167,24)"/><text x="11.1922%" y="367.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (3 samples, 0.46%)</title><rect x="11.8541%" y="341" width="0.4559%" height="15" fill="rgb(228,143,12)"/><text x="12.1041%" y="351.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (2 samples, 0.30%)</title><rect x="12.0061%" y="325" width="0.3040%" height="15" fill="rgb(249,149,8)"/><text x="12.2561%" y="335.50"></text></g><g><title>&lt;broccoli::query::colfind::builder::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (1 samples, 0.15%)</title><rect x="12.1581%" y="309" width="0.1520%" height="15" fill="rgb(243,35,44)"/><text x="12.4081%" y="319.50"></text></g><g><title>broccoli::query::colfind::ColfindQuery::find_colliding_pairs_mut::{{closure}} (1 samples, 0.15%)</title><rect x="12.1581%" y="293" width="0.1520%" height="15" fill="rgb(246,89,9)"/><text x="12.4081%" y="303.50"></text></g><g><title>data_gen::profile_test::{{closure}}::{{closure}} (1 samples, 0.15%)</title><rect x="12.1581%" y="277" width="0.1520%" height="15" fill="rgb(233,213,13)"/><text x="12.4081%" y="287.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::lt (1 samples, 0.15%)</title><rect x="12.4620%" y="293" width="0.1520%" height="15" fill="rgb(233,141,41)"/><text x="12.7120%" y="303.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (2 samples, 0.30%)</title><rect x="12.6140%" y="293" width="0.3040%" height="15" fill="rgb(239,167,4)"/><text x="12.8640%" y="303.50"></text></g><g><title>twounordered::FirstVec&lt;T&gt;::push (1 samples, 0.15%)</title><rect x="12.9179%" y="293" width="0.1520%" height="15" fill="rgb(209,217,16)"/><text x="13.1679%" y="303.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.15%)</title><rect x="12.9179%" y="277" width="0.1520%" height="15" fill="rgb(219,88,35)"/><text x="13.1679%" y="287.50"></text></g><g><title>core::ptr::swap (1 samples, 0.15%)</title><rect x="12.9179%" y="261" width="0.1520%" height="15" fill="rgb(220,193,23)"/><text x="13.1679%" y="271.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.15%)</title><rect x="12.9179%" y="245" width="0.1520%" height="15" fill="rgb(230,90,52)"/><text x="13.1679%" y="255.50"></text></g><g><title>&lt;twounordered::SecondVec&lt;T&gt; as twounordered::RetainMutUnordered&lt;T&gt;&gt;::as_slice_mut (1 samples, 0.15%)</title><rect x="13.2219%" y="277" width="0.1520%" height="15" fill="rgb(252,106,19)"/><text x="13.4719%" y="287.50"></text></g><g><title>twounordered::SecondVec&lt;T&gt;::as_slice_mut (1 samples, 0.15%)</title><rect x="13.2219%" y="261" width="0.1520%" height="15" fill="rgb(206,74,20)"/><text x="13.4719%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1 samples, 0.15%)</title><rect x="13.2219%" y="245" width="0.1520%" height="15" fill="rgb(230,138,44)"/><text x="13.4719%" y="255.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1 samples, 0.15%)</title><rect x="13.2219%" y="229" width="0.1520%" height="15" fill="rgb(235,182,43)"/><text x="13.4719%" y="239.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.15%)</title><rect x="13.2219%" y="213" width="0.1520%" height="15" fill="rgb(242,16,51)"/><text x="13.4719%" y="223.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (13 samples, 1.98%)</title><rect x="12.3100%" y="325" width="1.9757%" height="15" fill="rgb(248,9,4)"/><text x="12.5600%" y="335.50">b..</text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (13 samples, 1.98%)</title><rect x="12.3100%" y="309" width="1.9757%" height="15" fill="rgb(210,31,22)"/><text x="12.5600%" y="319.50">b..</text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (8 samples, 1.22%)</title><rect x="13.0699%" y="293" width="1.2158%" height="15" fill="rgb(239,54,39)"/><text x="13.3199%" y="303.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (6 samples, 0.91%)</title><rect x="13.3739%" y="277" width="0.9119%" height="15" fill="rgb(230,99,41)"/><text x="13.6239%" y="287.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (4 samples, 0.61%)</title><rect x="13.6778%" y="261" width="0.6079%" height="15" fill="rgb(253,106,12)"/><text x="13.9278%" y="271.50"></text></g><g><title>&lt;broccoli::query::colfind::builder::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (1 samples, 0.15%)</title><rect x="14.1337%" y="245" width="0.1520%" height="15" fill="rgb(213,46,41)"/><text x="14.3837%" y="255.50"></text></g><g><title>broccoli::query::colfind::ColfindQuery::find_colliding_pairs_mut::{{closure}} (1 samples, 0.15%)</title><rect x="14.1337%" y="229" width="0.1520%" height="15" fill="rgb(215,133,35)"/><text x="14.3837%" y="239.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.15%)</title><rect x="14.1337%" y="213" width="0.1520%" height="15" fill="rgb(213,28,5)"/><text x="14.3837%" y="223.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (4 samples, 0.61%)</title><rect x="14.2857%" y="325" width="0.6079%" height="15" fill="rgb(215,77,49)"/><text x="14.5357%" y="335.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.46%)</title><rect x="14.4377%" y="309" width="0.4559%" height="15" fill="rgb(248,100,22)"/><text x="14.6877%" y="319.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.46%)</title><rect x="14.4377%" y="293" width="0.4559%" height="15" fill="rgb(208,67,9)"/><text x="14.6877%" y="303.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (20 samples, 3.04%)</title><rect x="12.3100%" y="341" width="3.0395%" height="15" fill="rgb(219,133,21)"/><text x="12.5600%" y="351.50">&lt;br..</text></g><g><title>broccoli::query::tools::get_section_mut (3 samples, 0.46%)</title><rect x="14.8936%" y="325" width="0.4559%" height="15" fill="rgb(246,46,29)"/><text x="15.1436%" y="335.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (2 samples, 0.30%)</title><rect x="15.5015%" y="277" width="0.3040%" height="15" fill="rgb(246,185,52)"/><text x="15.7515%" y="287.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (2 samples, 0.30%)</title><rect x="15.5015%" y="261" width="0.3040%" height="15" fill="rgb(252,136,11)"/><text x="15.7515%" y="271.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek::{{closure}} (1 samples, 0.15%)</title><rect x="15.6535%" y="245" width="0.1520%" height="15" fill="rgb(219,138,53)"/><text x="15.9035%" y="255.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.15%)</title><rect x="15.6535%" y="229" width="0.1520%" height="15" fill="rgb(211,51,23)"/><text x="15.9035%" y="239.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.15%)</title><rect x="15.6535%" y="213" width="0.1520%" height="15" fill="rgb(247,221,28)"/><text x="15.9035%" y="223.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.15%)</title><rect x="15.8055%" y="277" width="0.1520%" height="15" fill="rgb(251,222,45)"/><text x="16.0555%" y="287.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (5 samples, 0.76%)</title><rect x="15.5015%" y="309" width="0.7599%" height="15" fill="rgb(217,162,53)"/><text x="15.7515%" y="319.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (5 samples, 0.76%)</title><rect x="15.5015%" y="293" width="0.7599%" height="15" fill="rgb(229,93,14)"/><text x="15.7515%" y="303.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (2 samples, 0.30%)</title><rect x="15.9574%" y="277" width="0.3040%" height="15" fill="rgb(209,67,49)"/><text x="16.2074%" y="287.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (2 samples, 0.30%)</title><rect x="15.9574%" y="261" width="0.3040%" height="15" fill="rgb(213,87,29)"/><text x="16.2074%" y="271.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (1 samples, 0.15%)</title><rect x="16.1094%" y="245" width="0.1520%" height="15" fill="rgb(205,151,52)"/><text x="16.3594%" y="255.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (3 samples, 0.46%)</title><rect x="16.2614%" y="309" width="0.4559%" height="15" fill="rgb(253,215,39)"/><text x="16.5114%" y="319.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (1 samples, 0.15%)</title><rect x="16.5653%" y="293" width="0.1520%" height="15" fill="rgb(221,220,41)"/><text x="16.8153%" y="303.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (10 samples, 1.52%)</title><rect x="15.3495%" y="325" width="1.5198%" height="15" fill="rgb(218,133,21)"/><text x="15.5995%" y="335.50"></text></g><g><title>broccoli::query::tools::get_section_mut (1 samples, 0.15%)</title><rect x="16.7173%" y="309" width="0.1520%" height="15" fill="rgb(221,193,43)"/><text x="16.9673%" y="319.50"></text></g><g><title>&lt;twounordered::SecondVec&lt;T&gt; as twounordered::RetainMutUnordered&lt;T&gt;&gt;::truncate (1 samples, 0.15%)</title><rect x="17.0213%" y="245" width="0.1520%" height="15" fill="rgb(240,128,52)"/><text x="17.2713%" y="255.50"></text></g><g><title>twounordered::SecondVec&lt;T&gt;::truncate (1 samples, 0.15%)</title><rect x="17.0213%" y="229" width="0.1520%" height="15" fill="rgb(253,114,12)"/><text x="17.2713%" y="239.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (1 samples, 0.15%)</title><rect x="17.1733%" y="245" width="0.1520%" height="15" fill="rgb(215,223,47)"/><text x="17.4233%" y="255.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (1 samples, 0.15%)</title><rect x="17.1733%" y="229" width="0.1520%" height="15" fill="rgb(248,225,23)"/><text x="17.4233%" y="239.50"></text></g><g><title>&lt;broccoli::query::colfind::builder::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (1 samples, 0.15%)</title><rect x="17.1733%" y="213" width="0.1520%" height="15" fill="rgb(250,108,0)"/><text x="17.4233%" y="223.50"></text></g><g><title>broccoli::query::colfind::ColfindQuery::find_colliding_pairs_mut::{{closure}} (1 samples, 0.15%)</title><rect x="17.1733%" y="197" width="0.1520%" height="15" fill="rgb(228,208,7)"/><text x="17.4233%" y="207.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.15%)</title><rect x="17.1733%" y="181" width="0.1520%" height="15" fill="rgb(244,45,10)"/><text x="17.4233%" y="191.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (4 samples, 0.61%)</title><rect x="16.8693%" y="293" width="0.6079%" height="15" fill="rgb(207,125,25)"/><text x="17.1193%" y="303.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (4 samples, 0.61%)</title><rect x="16.8693%" y="277" width="0.6079%" height="15" fill="rgb(210,195,18)"/><text x="17.1193%" y="287.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (3 samples, 0.46%)</title><rect x="17.0213%" y="261" width="0.4559%" height="15" fill="rgb(249,80,12)"/><text x="17.2713%" y="271.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.15%)</title><rect x="17.3252%" y="245" width="0.1520%" height="15" fill="rgb(221,65,9)"/><text x="17.5752%" y="255.50"></text></g><g><title>core::ptr::swap (1 samples, 0.15%)</title><rect x="17.3252%" y="229" width="0.1520%" height="15" fill="rgb(235,49,36)"/><text x="17.5752%" y="239.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.15%)</title><rect x="17.3252%" y="213" width="0.1520%" height="15" fill="rgb(225,32,20)"/><text x="17.5752%" y="223.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (5 samples, 0.76%)</title><rect x="16.8693%" y="309" width="0.7599%" height="15" fill="rgb(215,141,46)"/><text x="17.1193%" y="319.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (1 samples, 0.15%)</title><rect x="17.4772%" y="293" width="0.1520%" height="15" fill="rgb(250,160,47)"/><text x="17.7272%" y="303.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (1 samples, 0.15%)</title><rect x="17.4772%" y="277" width="0.1520%" height="15" fill="rgb(216,222,40)"/><text x="17.7272%" y="287.50"></text></g><g><title>axgeom::range::Range&lt;T&gt;::intersects (1 samples, 0.15%)</title><rect x="17.4772%" y="261" width="0.1520%" height="15" fill="rgb(234,217,39)"/><text x="17.7272%" y="271.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::le (1 samples, 0.15%)</title><rect x="17.4772%" y="245" width="0.1520%" height="15" fill="rgb(207,178,40)"/><text x="17.7272%" y="255.50"></text></g><g><title>broccoli::query::colfind::inner::ColfindRecurser&lt;T,NO&gt;::recurse_common (50 samples, 7.60%)</title><rect x="10.1824%" y="389" width="7.5988%" height="15" fill="rgb(221,136,13)"/><text x="10.4324%" y="399.50">broccoli::..</text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,KK,B&gt;::recurse (45 samples, 6.84%)</title><rect x="10.9422%" y="373" width="6.8389%" height="15" fill="rgb(249,199,10)"/><text x="11.1922%" y="383.50">broccoli:..</text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,KK,B&gt;::recurse (36 samples, 5.47%)</title><rect x="12.3100%" y="357" width="5.4711%" height="15" fill="rgb(249,222,13)"/><text x="12.5600%" y="367.50">broccol..</text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,KK,B&gt;::recurse (16 samples, 2.43%)</title><rect x="15.3495%" y="341" width="2.4316%" height="15" fill="rgb(244,185,38)"/><text x="15.5995%" y="351.50">br..</text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,KK,B&gt;::recurse (6 samples, 0.91%)</title><rect x="16.8693%" y="325" width="0.9119%" height="15" fill="rgb(236,202,9)"/><text x="17.1193%" y="335.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,KK,B&gt;::recurse (1 samples, 0.15%)</title><rect x="17.6292%" y="309" width="0.1520%" height="15" fill="rgb(250,229,37)"/><text x="17.8792%" y="319.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (1 samples, 0.15%)</title><rect x="17.6292%" y="293" width="0.1520%" height="15" fill="rgb(206,174,23)"/><text x="17.8792%" y="303.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (1 samples, 0.15%)</title><rect x="17.6292%" y="277" width="0.1520%" height="15" fill="rgb(211,33,43)"/><text x="17.8792%" y="287.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (1 samples, 0.15%)</title><rect x="17.6292%" y="261" width="0.1520%" height="15" fill="rgb(245,58,50)"/><text x="17.8792%" y="271.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (1 samples, 0.15%)</title><rect x="17.6292%" y="245" width="0.1520%" height="15" fill="rgb(244,68,36)"/><text x="17.8792%" y="255.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (1 samples, 0.15%)</title><rect x="17.6292%" y="229" width="0.1520%" height="15" fill="rgb(232,229,15)"/><text x="17.8792%" y="239.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.15%)</title><rect x="17.6292%" y="213" width="0.1520%" height="15" fill="rgb(254,30,23)"/><text x="17.8792%" y="223.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (1 samples, 0.15%)</title><rect x="17.7812%" y="277" width="0.1520%" height="15" fill="rgb(235,160,14)"/><text x="18.0312%" y="287.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_node (2 samples, 0.30%)</title><rect x="17.7812%" y="357" width="0.3040%" height="15" fill="rgb(212,155,44)"/><text x="18.0312%" y="367.50"></text></g><g><title>broccoli::query::colfind::oned::find_2d (2 samples, 0.30%)</title><rect x="17.7812%" y="341" width="0.3040%" height="15" fill="rgb(226,2,50)"/><text x="18.0312%" y="351.50"></text></g><g><title>broccoli::query::colfind::oned::find (2 samples, 0.30%)</title><rect x="17.7812%" y="325" width="0.3040%" height="15" fill="rgb(234,177,6)"/><text x="18.0312%" y="335.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (2 samples, 0.30%)</title><rect x="17.7812%" y="309" width="0.3040%" height="15" fill="rgb(217,24,9)"/><text x="18.0312%" y="319.50"></text></g><g><title>broccoli::query::colfind::oned::find::{{closure}} (2 samples, 0.30%)</title><rect x="17.7812%" y="293" width="0.3040%" height="15" fill="rgb(220,13,46)"/><text x="18.0312%" y="303.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (1 samples, 0.15%)</title><rect x="17.9331%" y="277" width="0.1520%" height="15" fill="rgb(239,221,27)"/><text x="18.1831%" y="287.50"></text></g><g><title>&lt;broccoli::query::colfind::builder::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (1 samples, 0.15%)</title><rect x="17.9331%" y="261" width="0.1520%" height="15" fill="rgb(222,198,25)"/><text x="18.1831%" y="271.50"></text></g><g><title>broccoli::query::colfind::ColfindQuery::find_colliding_pairs_mut::{{closure}} (1 samples, 0.15%)</title><rect x="17.9331%" y="245" width="0.1520%" height="15" fill="rgb(211,99,13)"/><text x="18.1831%" y="255.50"></text></g><g><title>data_gen::profile_test::{{closure}}::{{closure}} (1 samples, 0.15%)</title><rect x="17.9331%" y="229" width="0.1520%" height="15" fill="rgb(232,111,31)"/><text x="18.1831%" y="239.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (2 samples, 0.30%)</title><rect x="18.3891%" y="277" width="0.3040%" height="15" fill="rgb(245,82,37)"/><text x="18.6391%" y="287.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (3 samples, 0.46%)</title><rect x="18.3891%" y="293" width="0.4559%" height="15" fill="rgb(227,149,46)"/><text x="18.6391%" y="303.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (1 samples, 0.15%)</title><rect x="18.6930%" y="277" width="0.1520%" height="15" fill="rgb(218,36,50)"/><text x="18.9430%" y="287.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek::{{closure}} (1 samples, 0.15%)</title><rect x="18.6930%" y="261" width="0.1520%" height="15" fill="rgb(226,80,48)"/><text x="18.9430%" y="271.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.15%)</title><rect x="18.6930%" y="245" width="0.1520%" height="15" fill="rgb(238,224,15)"/><text x="18.9430%" y="255.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.15%)</title><rect x="18.6930%" y="229" width="0.1520%" height="15" fill="rgb(241,136,10)"/><text x="18.9430%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.15%)</title><rect x="18.8450%" y="277" width="0.1520%" height="15" fill="rgb(208,32,45)"/><text x="19.0950%" y="287.50"></text></g><g><title>twounordered::FirstVec&lt;T&gt;::push (2 samples, 0.30%)</title><rect x="18.8450%" y="293" width="0.3040%" height="15" fill="rgb(207,135,9)"/><text x="19.0950%" y="303.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.15%)</title><rect x="18.9970%" y="277" width="0.1520%" height="15" fill="rgb(206,86,44)"/><text x="19.2470%" y="287.50"></text></g><g><title>core::ptr::swap (1 samples, 0.15%)</title><rect x="18.9970%" y="261" width="0.1520%" height="15" fill="rgb(245,177,15)"/><text x="19.2470%" y="271.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.15%)</title><rect x="18.9970%" y="245" width="0.1520%" height="15" fill="rgb(206,64,50)"/><text x="19.2470%" y="255.50"></text></g><g><title>&lt;twounordered::FirstVec&lt;T&gt; as twounordered::RetainMutUnordered&lt;T&gt;&gt;::truncate (1 samples, 0.15%)</title><rect x="19.7568%" y="277" width="0.1520%" height="15" fill="rgb(234,36,40)"/><text x="20.0068%" y="287.50"></text></g><g><title>twounordered::FirstVec&lt;T&gt;::truncate (1 samples, 0.15%)</title><rect x="19.7568%" y="261" width="0.1520%" height="15" fill="rgb(213,64,8)"/><text x="20.0068%" y="271.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.15%)</title><rect x="19.7568%" y="245" width="0.1520%" height="15" fill="rgb(210,75,36)"/><text x="20.0068%" y="255.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.15%)</title><rect x="19.7568%" y="229" width="0.1520%" height="15" fill="rgb(229,88,21)"/><text x="20.0068%" y="239.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (1 samples, 0.15%)</title><rect x="20.0608%" y="261" width="0.1520%" height="15" fill="rgb(252,204,47)"/><text x="20.3108%" y="271.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (3 samples, 0.46%)</title><rect x="20.2128%" y="261" width="0.4559%" height="15" fill="rgb(208,77,27)"/><text x="20.4628%" y="271.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (11 samples, 1.67%)</title><rect x="19.1489%" y="293" width="1.6717%" height="15" fill="rgb(221,76,26)"/><text x="19.3989%" y="303.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (6 samples, 0.91%)</title><rect x="19.9088%" y="277" width="0.9119%" height="15" fill="rgb(225,139,18)"/><text x="20.1588%" y="287.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.15%)</title><rect x="20.6687%" y="261" width="0.1520%" height="15" fill="rgb(230,137,11)"/><text x="20.9187%" y="271.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (19 samples, 2.89%)</title><rect x="18.2371%" y="325" width="2.8875%" height="15" fill="rgb(212,28,1)"/><text x="18.4871%" y="335.50">br..</text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (19 samples, 2.89%)</title><rect x="18.2371%" y="309" width="2.8875%" height="15" fill="rgb(248,164,17)"/><text x="18.4871%" y="319.50">br..</text></g><g><title>twounordered::SecondVec&lt;T&gt;::push (2 samples, 0.30%)</title><rect x="20.8207%" y="293" width="0.3040%" height="15" fill="rgb(222,171,42)"/><text x="21.0707%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (2 samples, 0.30%)</title><rect x="20.8207%" y="277" width="0.3040%" height="15" fill="rgb(243,84,45)"/><text x="21.0707%" y="287.50"></text></g><g><title>core::ptr::write (1 samples, 0.15%)</title><rect x="20.9726%" y="261" width="0.1520%" height="15" fill="rgb(252,49,23)"/><text x="21.2226%" y="271.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 1.06%)</title><rect x="21.1246%" y="309" width="1.0638%" height="15" fill="rgb(215,19,7)"/><text x="21.3746%" y="319.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 1.06%)</title><rect x="21.1246%" y="293" width="1.0638%" height="15" fill="rgb(238,81,41)"/><text x="21.3746%" y="303.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (1 samples, 0.15%)</title><rect x="22.0365%" y="277" width="0.1520%" height="15" fill="rgb(210,199,37)"/><text x="22.2865%" y="287.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.15%)</title><rect x="22.0365%" y="261" width="0.1520%" height="15" fill="rgb(244,192,49)"/><text x="22.2865%" y="271.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (5 samples, 0.76%)</title><rect x="22.1884%" y="309" width="0.7599%" height="15" fill="rgb(226,211,11)"/><text x="22.4384%" y="319.50"></text></g><g><title>&lt;broccoli::query::colfind::builder::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (1 samples, 0.15%)</title><rect x="22.7964%" y="293" width="0.1520%" height="15" fill="rgb(236,162,54)"/><text x="23.0464%" y="303.50"></text></g><g><title>broccoli::query::colfind::ColfindQuery::find_colliding_pairs_mut::{{closure}} (1 samples, 0.15%)</title><rect x="22.7964%" y="277" width="0.1520%" height="15" fill="rgb(220,229,9)"/><text x="23.0464%" y="287.50"></text></g><g><title>data_gen::profile_test::{{closure}}::{{closure}} (1 samples, 0.15%)</title><rect x="22.7964%" y="261" width="0.1520%" height="15" fill="rgb(250,87,22)"/><text x="23.0464%" y="271.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (13 samples, 1.98%)</title><rect x="21.1246%" y="325" width="1.9757%" height="15" fill="rgb(239,43,17)"/><text x="21.3746%" y="335.50">b..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::lt (1 samples, 0.15%)</title><rect x="22.9483%" y="309" width="0.1520%" height="15" fill="rgb(231,177,25)"/><text x="23.1983%" y="319.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (37 samples, 5.62%)</title><rect x="18.0851%" y="341" width="5.6231%" height="15" fill="rgb(219,179,1)"/><text x="18.3351%" y="351.50">&lt;brocco..</text></g><g><title>broccoli::query::tools::get_section_mut (4 samples, 0.61%)</title><rect x="23.1003%" y="325" width="0.6079%" height="15" fill="rgb(238,219,53)"/><text x="23.3503%" y="335.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.15%)</title><rect x="23.5562%" y="309" width="0.1520%" height="15" fill="rgb(232,167,36)"/><text x="23.8062%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.15%)</title><rect x="23.5562%" y="293" width="0.1520%" height="15" fill="rgb(244,19,51)"/><text x="23.8062%" y="303.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.15%)</title><rect x="23.5562%" y="277" width="0.1520%" height="15" fill="rgb(224,6,22)"/><text x="23.8062%" y="287.50"></text></g><g><title>&lt;broccoli::node::vistr_mut::VistrMut&lt;N&gt; as compt::Visitor&gt;::next (1 samples, 0.15%)</title><rect x="23.7082%" y="325" width="0.1520%" height="15" fill="rgb(224,145,5)"/><text x="23.9582%" y="335.50"></text></g><g><title>twounordered::FirstVec&lt;T&gt;::push (2 samples, 0.30%)</title><rect x="24.0122%" y="277" width="0.3040%" height="15" fill="rgb(234,130,49)"/><text x="24.2622%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (2 samples, 0.30%)</title><rect x="24.0122%" y="261" width="0.3040%" height="15" fill="rgb(254,6,2)"/><text x="24.2622%" y="271.50"></text></g><g><title>core::ptr::write (1 samples, 0.15%)</title><rect x="24.1641%" y="245" width="0.1520%" height="15" fill="rgb(208,96,46)"/><text x="24.4141%" y="255.50"></text></g><g><title>&lt;twounordered::FirstVec&lt;T&gt; as twounordered::RetainMutUnordered&lt;T&gt;&gt;::truncate (1 samples, 0.15%)</title><rect x="24.7720%" y="261" width="0.1520%" height="15" fill="rgb(239,3,39)"/><text x="25.0220%" y="271.50"></text></g><g><title>twounordered::FirstVec&lt;T&gt;::truncate (1 samples, 0.15%)</title><rect x="24.7720%" y="245" width="0.1520%" height="15" fill="rgb(233,210,1)"/><text x="25.0220%" y="255.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.15%)</title><rect x="24.7720%" y="229" width="0.1520%" height="15" fill="rgb(244,137,37)"/><text x="25.0220%" y="239.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.15%)</title><rect x="24.7720%" y="213" width="0.1520%" height="15" fill="rgb(240,136,2)"/><text x="25.0220%" y="223.50"></text></g><g><title>&lt;twounordered::SecondVec&lt;T&gt; as twounordered::RetainMutUnordered&lt;T&gt;&gt;::truncate (1 samples, 0.15%)</title><rect x="24.9240%" y="261" width="0.1520%" height="15" fill="rgb(239,18,37)"/><text x="25.1740%" y="271.50"></text></g><g><title>twounordered::SecondVec&lt;T&gt;::truncate (1 samples, 0.15%)</title><rect x="24.9240%" y="245" width="0.1520%" height="15" fill="rgb(218,185,22)"/><text x="25.1740%" y="255.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (4 samples, 0.61%)</title><rect x="25.2280%" y="245" width="0.6079%" height="15" fill="rgb(225,218,4)"/><text x="25.4780%" y="255.50"></text></g><g><title>&lt;broccoli::query::colfind::builder::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (1 samples, 0.15%)</title><rect x="25.6839%" y="229" width="0.1520%" height="15" fill="rgb(230,182,32)"/><text x="25.9339%" y="239.50"></text></g><g><title>broccoli::query::colfind::ColfindQuery::find_colliding_pairs_mut::{{closure}} (1 samples, 0.15%)</title><rect x="25.6839%" y="213" width="0.1520%" height="15" fill="rgb(242,56,43)"/><text x="25.9339%" y="223.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.15%)</title><rect x="25.6839%" y="197" width="0.1520%" height="15" fill="rgb(233,99,24)"/><text x="25.9339%" y="207.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (11 samples, 1.67%)</title><rect x="24.3161%" y="277" width="1.6717%" height="15" fill="rgb(234,209,42)"/><text x="24.5661%" y="287.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (6 samples, 0.91%)</title><rect x="25.0760%" y="261" width="0.9119%" height="15" fill="rgb(227,7,12)"/><text x="25.3260%" y="271.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.15%)</title><rect x="25.8359%" y="245" width="0.1520%" height="15" fill="rgb(245,203,43)"/><text x="26.0859%" y="255.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (16 samples, 2.43%)</title><rect x="23.8602%" y="309" width="2.4316%" height="15" fill="rgb(238,205,33)"/><text x="24.1102%" y="319.50">br..</text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (16 samples, 2.43%)</title><rect x="23.8602%" y="293" width="2.4316%" height="15" fill="rgb(231,56,7)"/><text x="24.1102%" y="303.50">br..</text></g><g><title>twounordered::SecondVec&lt;T&gt;::push (2 samples, 0.30%)</title><rect x="25.9878%" y="277" width="0.3040%" height="15" fill="rgb(244,186,29)"/><text x="26.2378%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (2 samples, 0.30%)</title><rect x="25.9878%" y="261" width="0.3040%" height="15" fill="rgb(234,111,31)"/><text x="26.2378%" y="271.50"></text></g><g><title>core::ptr::write (1 samples, 0.15%)</title><rect x="26.1398%" y="245" width="0.1520%" height="15" fill="rgb(241,149,10)"/><text x="26.3898%" y="255.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.30%)</title><rect x="26.4438%" y="293" width="0.3040%" height="15" fill="rgb(249,206,44)"/><text x="26.6938%" y="303.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.30%)</title><rect x="26.4438%" y="277" width="0.3040%" height="15" fill="rgb(251,153,30)"/><text x="26.6938%" y="287.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (1 samples, 0.15%)</title><rect x="26.5957%" y="261" width="0.1520%" height="15" fill="rgb(239,152,38)"/><text x="26.8457%" y="271.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.15%)</title><rect x="26.5957%" y="245" width="0.1520%" height="15" fill="rgb(249,139,47)"/><text x="26.8457%" y="255.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (21 samples, 3.19%)</title><rect x="23.8602%" y="325" width="3.1915%" height="15" fill="rgb(244,64,35)"/><text x="24.1102%" y="335.50">&lt;br..</text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (5 samples, 0.76%)</title><rect x="26.2918%" y="309" width="0.7599%" height="15" fill="rgb(216,46,15)"/><text x="26.5418%" y="319.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::le (2 samples, 0.30%)</title><rect x="26.7477%" y="293" width="0.3040%" height="15" fill="rgb(250,74,19)"/><text x="26.9977%" y="303.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (6 samples, 0.91%)</title><rect x="27.0517%" y="293" width="0.9119%" height="15" fill="rgb(249,42,33)"/><text x="27.3017%" y="303.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (6 samples, 0.91%)</title><rect x="27.0517%" y="277" width="0.9119%" height="15" fill="rgb(242,149,17)"/><text x="27.3017%" y="287.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (6 samples, 0.91%)</title><rect x="27.0517%" y="261" width="0.9119%" height="15" fill="rgb(244,29,21)"/><text x="27.3017%" y="271.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (4 samples, 0.61%)</title><rect x="27.3556%" y="245" width="0.6079%" height="15" fill="rgb(220,130,37)"/><text x="27.6056%" y="255.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (3 samples, 0.46%)</title><rect x="27.5076%" y="229" width="0.4559%" height="15" fill="rgb(211,67,2)"/><text x="27.7576%" y="239.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (1 samples, 0.15%)</title><rect x="27.9635%" y="293" width="0.1520%" height="15" fill="rgb(235,68,52)"/><text x="28.2135%" y="303.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.15%)</title><rect x="27.9635%" y="277" width="0.1520%" height="15" fill="rgb(246,142,3)"/><text x="28.2135%" y="287.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.15%)</title><rect x="27.9635%" y="261" width="0.1520%" height="15" fill="rgb(241,25,7)"/><text x="28.2135%" y="271.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (8 samples, 1.22%)</title><rect x="27.0517%" y="309" width="1.2158%" height="15" fill="rgb(242,119,39)"/><text x="27.3017%" y="319.50"></text></g><g><title>broccoli::query::tools::get_section_mut (1 samples, 0.15%)</title><rect x="28.1155%" y="293" width="0.1520%" height="15" fill="rgb(241,98,45)"/><text x="28.3655%" y="303.50"></text></g><g><title>twounordered::FirstVec&lt;T&gt;::push (1 samples, 0.15%)</title><rect x="28.2675%" y="245" width="0.1520%" height="15" fill="rgb(254,28,30)"/><text x="28.5175%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.15%)</title><rect x="28.2675%" y="229" width="0.1520%" height="15" fill="rgb(241,142,54)"/><text x="28.5175%" y="239.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (2 samples, 0.30%)</title><rect x="28.2675%" y="277" width="0.3040%" height="15" fill="rgb(222,85,15)"/><text x="28.5175%" y="287.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (2 samples, 0.30%)</title><rect x="28.2675%" y="261" width="0.3040%" height="15" fill="rgb(210,85,47)"/><text x="28.5175%" y="271.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (1 samples, 0.15%)</title><rect x="28.4195%" y="245" width="0.1520%" height="15" fill="rgb(224,206,25)"/><text x="28.6695%" y="255.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (1 samples, 0.15%)</title><rect x="28.4195%" y="229" width="0.1520%" height="15" fill="rgb(243,201,19)"/><text x="28.6695%" y="239.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (1 samples, 0.15%)</title><rect x="28.4195%" y="213" width="0.1520%" height="15" fill="rgb(236,59,4)"/><text x="28.6695%" y="223.50"></text></g><g><title>broccoli::query::colfind::inner::ColfindRecurser&lt;T,NO&gt;::recurse_common (72 samples, 10.94%)</title><rect x="17.7812%" y="373" width="10.9422%" height="15" fill="rgb(254,179,45)"/><text x="18.0312%" y="383.50">broccoli::query:..</text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,KK,B&gt;::recurse (70 samples, 10.64%)</title><rect x="18.0851%" y="357" width="10.6383%" height="15" fill="rgb(226,14,10)"/><text x="18.3351%" y="367.50">broccoli::query:..</text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,KK,B&gt;::recurse (33 samples, 5.02%)</title><rect x="23.7082%" y="341" width="5.0152%" height="15" fill="rgb(244,27,41)"/><text x="23.9582%" y="351.50">brocco..</text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,KK,B&gt;::recurse (11 samples, 1.67%)</title><rect x="27.0517%" y="325" width="1.6717%" height="15" fill="rgb(235,35,32)"/><text x="27.3017%" y="335.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,KK,B&gt;::recurse (3 samples, 0.46%)</title><rect x="28.2675%" y="309" width="0.4559%" height="15" fill="rgb(218,68,31)"/><text x="28.5175%" y="319.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (3 samples, 0.46%)</title><rect x="28.2675%" y="293" width="0.4559%" height="15" fill="rgb(207,120,37)"/><text x="28.5175%" y="303.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (1 samples, 0.15%)</title><rect x="28.5714%" y="277" width="0.1520%" height="15" fill="rgb(227,98,0)"/><text x="28.8214%" y="287.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (1 samples, 0.15%)</title><rect x="28.5714%" y="261" width="0.1520%" height="15" fill="rgb(207,7,3)"/><text x="28.8214%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.15%)</title><rect x="28.7234%" y="293" width="0.1520%" height="15" fill="rgb(206,98,19)"/><text x="28.9734%" y="303.50"></text></g><g><title>core::ptr::write (1 samples, 0.15%)</title><rect x="28.7234%" y="277" width="0.1520%" height="15" fill="rgb(217,5,26)"/><text x="28.9734%" y="287.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (1 samples, 0.15%)</title><rect x="29.1793%" y="261" width="0.1520%" height="15" fill="rgb(235,190,38)"/><text x="29.4293%" y="271.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (3 samples, 0.46%)</title><rect x="29.3313%" y="261" width="0.4559%" height="15" fill="rgb(247,86,24)"/><text x="29.5813%" y="271.50"></text></g><g><title>&lt;broccoli::query::colfind::builder::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (1 samples, 0.15%)</title><rect x="29.6353%" y="245" width="0.1520%" height="15" fill="rgb(205,101,16)"/><text x="29.8853%" y="255.50"></text></g><g><title>broccoli::query::colfind::ColfindQuery::find_colliding_pairs_mut::{{closure}} (1 samples, 0.15%)</title><rect x="29.6353%" y="229" width="0.1520%" height="15" fill="rgb(246,168,33)"/><text x="29.8853%" y="239.50"></text></g><g><title>data_gen::profile_test::{{closure}}::{{closure}} (1 samples, 0.15%)</title><rect x="29.6353%" y="213" width="0.1520%" height="15" fill="rgb(231,114,1)"/><text x="29.8853%" y="223.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_node (8 samples, 1.22%)</title><rect x="28.7234%" y="341" width="1.2158%" height="15" fill="rgb(207,184,53)"/><text x="28.9734%" y="351.50"></text></g><g><title>broccoli::query::colfind::oned::find_2d (8 samples, 1.22%)</title><rect x="28.7234%" y="325" width="1.2158%" height="15" fill="rgb(224,95,51)"/><text x="28.9734%" y="335.50"></text></g><g><title>broccoli::query::colfind::oned::find (8 samples, 1.22%)</title><rect x="28.7234%" y="309" width="1.2158%" height="15" fill="rgb(212,188,45)"/><text x="28.9734%" y="319.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (7 samples, 1.06%)</title><rect x="28.8754%" y="293" width="1.0638%" height="15" fill="rgb(223,154,38)"/><text x="29.1254%" y="303.50"></text></g><g><title>broccoli::query::colfind::oned::find::{{closure}} (6 samples, 0.91%)</title><rect x="29.0274%" y="277" width="0.9119%" height="15" fill="rgb(251,22,52)"/><text x="29.2774%" y="287.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.15%)</title><rect x="29.7872%" y="261" width="0.1520%" height="15" fill="rgb(229,209,22)"/><text x="30.0372%" y="271.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (1 samples, 0.15%)</title><rect x="30.2432%" y="277" width="0.1520%" height="15" fill="rgb(234,138,34)"/><text x="30.4932%" y="287.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (1 samples, 0.15%)</title><rect x="30.2432%" y="261" width="0.1520%" height="15" fill="rgb(212,95,11)"/><text x="30.4932%" y="271.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek::{{closure}} (1 samples, 0.15%)</title><rect x="30.2432%" y="245" width="0.1520%" height="15" fill="rgb(240,179,47)"/><text x="30.4932%" y="255.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.15%)</title><rect x="30.2432%" y="229" width="0.1520%" height="15" fill="rgb(240,163,11)"/><text x="30.4932%" y="239.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.15%)</title><rect x="30.2432%" y="213" width="0.1520%" height="15" fill="rgb(236,37,12)"/><text x="30.4932%" y="223.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.15%)</title><rect x="30.3951%" y="277" width="0.1520%" height="15" fill="rgb(232,164,16)"/><text x="30.6451%" y="287.50"></text></g><g><title>twounordered::FirstVec&lt;T&gt;::push (1 samples, 0.15%)</title><rect x="30.5471%" y="277" width="0.1520%" height="15" fill="rgb(244,205,15)"/><text x="30.7971%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.15%)</title><rect x="30.5471%" y="261" width="0.1520%" height="15" fill="rgb(223,117,47)"/><text x="30.7971%" y="271.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (1 samples, 0.15%)</title><rect x="31.0030%" y="245" width="0.1520%" height="15" fill="rgb(244,107,35)"/><text x="31.2530%" y="255.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (4 samples, 0.61%)</title><rect x="31.1550%" y="245" width="0.6079%" height="15" fill="rgb(205,140,8)"/><text x="31.4050%" y="255.50"></text></g><g><title>&lt;broccoli::query::colfind::builder::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (1 samples, 0.15%)</title><rect x="31.6109%" y="229" width="0.1520%" height="15" fill="rgb(228,84,46)"/><text x="31.8609%" y="239.50"></text></g><g><title>broccoli::query::colfind::ColfindQuery::find_colliding_pairs_mut::{{closure}} (1 samples, 0.15%)</title><rect x="31.6109%" y="213" width="0.1520%" height="15" fill="rgb(254,188,9)"/><text x="31.8609%" y="223.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.15%)</title><rect x="31.6109%" y="197" width="0.1520%" height="15" fill="rgb(206,112,54)"/><text x="31.8609%" y="207.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (8 samples, 1.22%)</title><rect x="30.8511%" y="261" width="1.2158%" height="15" fill="rgb(216,84,49)"/><text x="31.1011%" y="271.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (2 samples, 0.30%)</title><rect x="31.7629%" y="245" width="0.3040%" height="15" fill="rgb(214,194,35)"/><text x="32.0129%" y="255.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (14 samples, 2.13%)</title><rect x="30.2432%" y="309" width="2.1277%" height="15" fill="rgb(249,28,3)"/><text x="30.4932%" y="319.50">b..</text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (14 samples, 2.13%)</title><rect x="30.2432%" y="293" width="2.1277%" height="15" fill="rgb(222,56,52)"/><text x="30.4932%" y="303.50">b..</text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (11 samples, 1.67%)</title><rect x="30.6991%" y="277" width="1.6717%" height="15" fill="rgb(245,217,50)"/><text x="30.9491%" y="287.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (2 samples, 0.30%)</title><rect x="32.0669%" y="261" width="0.3040%" height="15" fill="rgb(213,201,24)"/><text x="32.3169%" y="271.50"></text></g><g><title>core::ptr::swap (2 samples, 0.30%)</title><rect x="32.0669%" y="245" width="0.3040%" height="15" fill="rgb(248,116,28)"/><text x="32.3169%" y="255.50"></text></g><g><title>core::intrinsics::copy (2 samples, 0.30%)</title><rect x="32.0669%" y="229" width="0.3040%" height="15" fill="rgb(219,72,43)"/><text x="32.3169%" y="239.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.61%)</title><rect x="32.9787%" y="293" width="0.6079%" height="15" fill="rgb(209,138,14)"/><text x="33.2287%" y="303.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.61%)</title><rect x="32.9787%" y="277" width="0.6079%" height="15" fill="rgb(222,18,33)"/><text x="33.2287%" y="287.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (7 samples, 1.06%)</title><rect x="33.5866%" y="293" width="1.0638%" height="15" fill="rgb(213,199,7)"/><text x="33.8366%" y="303.50"></text></g><g><title>&lt;broccoli::query::colfind::builder::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (4 samples, 0.61%)</title><rect x="34.0426%" y="277" width="0.6079%" height="15" fill="rgb(250,110,10)"/><text x="34.2926%" y="287.50"></text></g><g><title>broccoli::query::colfind::ColfindQuery::find_colliding_pairs_mut::{{closure}} (4 samples, 0.61%)</title><rect x="34.0426%" y="261" width="0.6079%" height="15" fill="rgb(248,123,6)"/><text x="34.2926%" y="271.50"></text></g><g><title>data_gen::profile_test::{{closure}}::{{closure}} (4 samples, 0.61%)</title><rect x="34.0426%" y="245" width="0.6079%" height="15" fill="rgb(206,91,31)"/><text x="34.2926%" y="255.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::le (1 samples, 0.15%)</title><rect x="34.6505%" y="293" width="0.1520%" height="15" fill="rgb(211,154,13)"/><text x="34.9005%" y="303.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (17 samples, 2.58%)</title><rect x="32.3708%" y="309" width="2.5836%" height="15" fill="rgb(225,148,7)"/><text x="32.6208%" y="319.50">br..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::lt (1 samples, 0.15%)</title><rect x="34.8024%" y="293" width="0.1520%" height="15" fill="rgb(220,160,43)"/><text x="35.0524%" y="303.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (32 samples, 4.86%)</title><rect x="30.2432%" y="325" width="4.8632%" height="15" fill="rgb(213,52,39)"/><text x="30.4932%" y="335.50">&lt;brocc..</text></g><g><title>broccoli::query::tools::get_section_mut (1 samples, 0.15%)</title><rect x="34.9544%" y="309" width="0.1520%" height="15" fill="rgb(243,137,7)"/><text x="35.2044%" y="319.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (2 samples, 0.30%)</title><rect x="35.7143%" y="261" width="0.3040%" height="15" fill="rgb(230,79,13)"/><text x="35.9643%" y="271.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (2 samples, 0.30%)</title><rect x="35.7143%" y="245" width="0.3040%" height="15" fill="rgb(247,105,23)"/><text x="35.9643%" y="255.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek::{{closure}} (2 samples, 0.30%)</title><rect x="35.7143%" y="229" width="0.3040%" height="15" fill="rgb(223,179,41)"/><text x="35.9643%" y="239.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.30%)</title><rect x="35.7143%" y="213" width="0.3040%" height="15" fill="rgb(218,9,34)"/><text x="35.9643%" y="223.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.30%)</title><rect x="35.7143%" y="197" width="0.3040%" height="15" fill="rgb(222,106,8)"/><text x="35.9643%" y="207.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (2 samples, 0.30%)</title><rect x="36.0182%" y="261" width="0.3040%" height="15" fill="rgb(211,220,0)"/><text x="36.2682%" y="271.50"></text></g><g><title>twounordered::FirstVec&lt;T&gt;::push (2 samples, 0.30%)</title><rect x="36.3222%" y="261" width="0.3040%" height="15" fill="rgb(229,52,16)"/><text x="36.5722%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (2 samples, 0.30%)</title><rect x="36.3222%" y="245" width="0.3040%" height="15" fill="rgb(212,155,18)"/><text x="36.5722%" y="255.50"></text></g><g><title>core::ptr::write (2 samples, 0.30%)</title><rect x="36.3222%" y="229" width="0.3040%" height="15" fill="rgb(242,21,14)"/><text x="36.5722%" y="239.50"></text></g><g><title>&lt;twounordered::FirstVec&lt;T&gt; as twounordered::RetainMutUnordered&lt;T&gt;&gt;::truncate (2 samples, 0.30%)</title><rect x="36.9301%" y="245" width="0.3040%" height="15" fill="rgb(222,19,48)"/><text x="37.1801%" y="255.50"></text></g><g><title>twounordered::FirstVec&lt;T&gt;::truncate (2 samples, 0.30%)</title><rect x="36.9301%" y="229" width="0.3040%" height="15" fill="rgb(232,45,27)"/><text x="37.1801%" y="239.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.15%)</title><rect x="37.0821%" y="213" width="0.1520%" height="15" fill="rgb(249,103,42)"/><text x="37.3321%" y="223.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (1 samples, 0.15%)</title><rect x="37.6900%" y="229" width="0.1520%" height="15" fill="rgb(246,81,33)"/><text x="37.9400%" y="239.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (4 samples, 0.61%)</title><rect x="37.8419%" y="229" width="0.6079%" height="15" fill="rgb(252,33,42)"/><text x="38.0919%" y="239.50"></text></g><g><title>&lt;broccoli::query::colfind::builder::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (1 samples, 0.15%)</title><rect x="38.2979%" y="213" width="0.1520%" height="15" fill="rgb(209,212,41)"/><text x="38.5479%" y="223.50"></text></g><g><title>broccoli::query::colfind::ColfindQuery::find_colliding_pairs_mut::{{closure}} (1 samples, 0.15%)</title><rect x="38.2979%" y="197" width="0.1520%" height="15" fill="rgb(207,154,6)"/><text x="38.5479%" y="207.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.15%)</title><rect x="38.2979%" y="181" width="0.1520%" height="15" fill="rgb(223,64,47)"/><text x="38.5479%" y="191.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (10 samples, 1.52%)</title><rect x="37.2340%" y="245" width="1.5198%" height="15" fill="rgb(211,161,38)"/><text x="37.4840%" y="255.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (2 samples, 0.30%)</title><rect x="38.4498%" y="229" width="0.3040%" height="15" fill="rgb(219,138,40)"/><text x="38.6998%" y="239.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (25 samples, 3.80%)</title><rect x="35.1064%" y="293" width="3.7994%" height="15" fill="rgb(241,228,46)"/><text x="35.3564%" y="303.50">broc..</text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (25 samples, 3.80%)</title><rect x="35.1064%" y="277" width="3.7994%" height="15" fill="rgb(223,209,38)"/><text x="35.3564%" y="287.50">broc..</text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (15 samples, 2.28%)</title><rect x="36.6261%" y="261" width="2.2796%" height="15" fill="rgb(236,164,45)"/><text x="36.8761%" y="271.50">t..</text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.15%)</title><rect x="38.7538%" y="245" width="0.1520%" height="15" fill="rgb(231,15,5)"/><text x="39.0038%" y="255.50"></text></g><g><title>core::ptr::swap (1 samples, 0.15%)</title><rect x="38.7538%" y="229" width="0.1520%" height="15" fill="rgb(252,35,15)"/><text x="39.0038%" y="239.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.15%)</title><rect x="38.7538%" y="213" width="0.1520%" height="15" fill="rgb(248,181,18)"/><text x="39.0038%" y="223.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.15%)</title><rect x="38.9058%" y="277" width="0.1520%" height="15" fill="rgb(233,39,42)"/><text x="39.1558%" y="287.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.15%)</title><rect x="38.9058%" y="261" width="0.1520%" height="15" fill="rgb(238,110,33)"/><text x="39.1558%" y="271.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (1 samples, 0.15%)</title><rect x="39.0578%" y="277" width="0.1520%" height="15" fill="rgb(233,195,10)"/><text x="39.3078%" y="287.50"></text></g><g><title>&lt;broccoli::query::colfind::builder::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (1 samples, 0.15%)</title><rect x="39.0578%" y="261" width="0.1520%" height="15" fill="rgb(254,105,3)"/><text x="39.3078%" y="271.50"></text></g><g><title>broccoli::query::colfind::ColfindQuery::find_colliding_pairs_mut::{{closure}} (1 samples, 0.15%)</title><rect x="39.0578%" y="245" width="0.1520%" height="15" fill="rgb(221,225,9)"/><text x="39.3078%" y="255.50"></text></g><g><title>data_gen::profile_test::{{closure}}::{{closure}} (1 samples, 0.15%)</title><rect x="39.0578%" y="229" width="0.1520%" height="15" fill="rgb(224,227,45)"/><text x="39.3078%" y="239.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (28 samples, 4.26%)</title><rect x="35.1064%" y="309" width="4.2553%" height="15" fill="rgb(229,198,43)"/><text x="35.3564%" y="319.50">&lt;broc..</text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (3 samples, 0.46%)</title><rect x="38.9058%" y="293" width="0.4559%" height="15" fill="rgb(206,209,35)"/><text x="39.1558%" y="303.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::lt (1 samples, 0.15%)</title><rect x="39.2097%" y="277" width="0.1520%" height="15" fill="rgb(245,195,53)"/><text x="39.4597%" y="287.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.15%)</title><rect x="39.5137%" y="245" width="0.1520%" height="15" fill="rgb(240,92,26)"/><text x="39.7637%" y="255.50"></text></g><g><title>&lt;twounordered::SecondVec&lt;T&gt; as twounordered::RetainMutUnordered&lt;T&gt;&gt;::as_slice_mut (1 samples, 0.15%)</title><rect x="39.9696%" y="229" width="0.1520%" height="15" fill="rgb(207,40,23)"/><text x="40.2196%" y="239.50"></text></g><g><title>twounordered::SecondVec&lt;T&gt;::as_slice_mut (1 samples, 0.15%)</title><rect x="39.9696%" y="213" width="0.1520%" height="15" fill="rgb(223,111,35)"/><text x="40.2196%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1 samples, 0.15%)</title><rect x="39.9696%" y="197" width="0.1520%" height="15" fill="rgb(229,147,28)"/><text x="40.2196%" y="207.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1 samples, 0.15%)</title><rect x="39.9696%" y="181" width="0.1520%" height="15" fill="rgb(211,29,28)"/><text x="40.2196%" y="191.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.15%)</title><rect x="39.9696%" y="165" width="0.1520%" height="15" fill="rgb(228,72,33)"/><text x="40.2196%" y="175.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (2 samples, 0.30%)</title><rect x="40.2736%" y="213" width="0.3040%" height="15" fill="rgb(205,214,31)"/><text x="40.5236%" y="223.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (9 samples, 1.37%)</title><rect x="39.3617%" y="277" width="1.3678%" height="15" fill="rgb(224,111,15)"/><text x="39.6117%" y="287.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (9 samples, 1.37%)</title><rect x="39.3617%" y="261" width="1.3678%" height="15" fill="rgb(253,21,26)"/><text x="39.6117%" y="271.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (7 samples, 1.06%)</title><rect x="39.6657%" y="245" width="1.0638%" height="15" fill="rgb(245,139,43)"/><text x="39.9157%" y="255.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (4 samples, 0.61%)</title><rect x="40.1216%" y="229" width="0.6079%" height="15" fill="rgb(252,170,7)"/><text x="40.3716%" y="239.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (1 samples, 0.15%)</title><rect x="40.5775%" y="213" width="0.1520%" height="15" fill="rgb(231,118,14)"/><text x="40.8275%" y="223.50"></text></g><g><title>broccoli::query::colfind::inner::ColfindRecurser&lt;T,NO&gt;::recurse_common (80 samples, 12.16%)</title><rect x="28.7234%" y="357" width="12.1581%" height="15" fill="rgb(238,83,0)"/><text x="28.9734%" y="367.50">broccoli::query::c..</text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,KK,B&gt;::recurse (72 samples, 10.94%)</title><rect x="29.9392%" y="341" width="10.9422%" height="15" fill="rgb(221,39,39)"/><text x="30.1892%" y="351.50">broccoli::query:..</text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,KK,B&gt;::recurse (38 samples, 5.78%)</title><rect x="35.1064%" y="325" width="5.7751%" height="15" fill="rgb(222,119,46)"/><text x="35.3564%" y="335.50">broccol..</text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,KK,B&gt;::recurse (10 samples, 1.52%)</title><rect x="39.3617%" y="309" width="1.5198%" height="15" fill="rgb(222,165,49)"/><text x="39.6117%" y="319.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (10 samples, 1.52%)</title><rect x="39.3617%" y="293" width="1.5198%" height="15" fill="rgb(219,113,52)"/><text x="39.6117%" y="303.50"></text></g><g><title>broccoli::query::tools::get_section_mut (1 samples, 0.15%)</title><rect x="40.7295%" y="277" width="0.1520%" height="15" fill="rgb(214,7,15)"/><text x="40.9795%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.15%)</title><rect x="40.8815%" y="277" width="0.1520%" height="15" fill="rgb(235,32,4)"/><text x="41.1315%" y="287.50"></text></g><g><title>&lt;broccoli::query::colfind::builder::QueryFn&lt;T,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (1 samples, 0.15%)</title><rect x="41.4894%" y="229" width="0.1520%" height="15" fill="rgb(238,90,54)"/><text x="41.7394%" y="239.50"></text></g><g><title>broccoli::query::colfind::ColfindQuery::find_colliding_pairs_mut_par::{{closure}} (1 samples, 0.15%)</title><rect x="41.4894%" y="213" width="0.1520%" height="15" fill="rgb(213,208,19)"/><text x="41.7394%" y="223.50"></text></g><g><title>data_gen::colfind::float_vs_integer::handle_bench::{{closure}}::{{closure}} (1 samples, 0.15%)</title><rect x="41.4894%" y="197" width="0.1520%" height="15" fill="rgb(233,156,4)"/><text x="41.7394%" y="207.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_node (6 samples, 0.91%)</title><rect x="40.8815%" y="325" width="0.9119%" height="15" fill="rgb(207,194,5)"/><text x="41.1315%" y="335.50"></text></g><g><title>broccoli::query::colfind::oned::find_2d (6 samples, 0.91%)</title><rect x="40.8815%" y="309" width="0.9119%" height="15" fill="rgb(206,111,30)"/><text x="41.1315%" y="319.50"></text></g><g><title>broccoli::query::colfind::oned::find (6 samples, 0.91%)</title><rect x="40.8815%" y="293" width="0.9119%" height="15" fill="rgb(243,70,54)"/><text x="41.1315%" y="303.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (5 samples, 0.76%)</title><rect x="41.0334%" y="277" width="0.7599%" height="15" fill="rgb(242,28,8)"/><text x="41.2834%" y="287.50"></text></g><g><title>broccoli::query::colfind::oned::find::{{closure}} (4 samples, 0.61%)</title><rect x="41.1854%" y="261" width="0.6079%" height="15" fill="rgb(219,106,18)"/><text x="41.4354%" y="271.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (3 samples, 0.46%)</title><rect x="41.3374%" y="245" width="0.4559%" height="15" fill="rgb(244,222,10)"/><text x="41.5874%" y="255.50"></text></g><g><title>&lt;broccoli::query::colfind::builder::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (1 samples, 0.15%)</title><rect x="41.6413%" y="229" width="0.1520%" height="15" fill="rgb(236,179,52)"/><text x="41.8913%" y="239.50"></text></g><g><title>broccoli::query::colfind::ColfindQuery::find_colliding_pairs_mut::{{closure}} (1 samples, 0.15%)</title><rect x="41.6413%" y="213" width="0.1520%" height="15" fill="rgb(213,23,39)"/><text x="41.8913%" y="223.50"></text></g><g><title>data_gen::profile_test::{{closure}}::{{closure}} (1 samples, 0.15%)</title><rect x="41.6413%" y="197" width="0.1520%" height="15" fill="rgb(238,48,10)"/><text x="41.8913%" y="207.50"></text></g><g><title>twounordered::FirstVec&lt;T&gt;::push (2 samples, 0.30%)</title><rect x="41.9453%" y="261" width="0.3040%" height="15" fill="rgb(251,196,23)"/><text x="42.1953%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (2 samples, 0.30%)</title><rect x="41.9453%" y="245" width="0.3040%" height="15" fill="rgb(250,152,24)"/><text x="42.1953%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::as_mut_ptr (1 samples, 0.15%)</title><rect x="42.0973%" y="229" width="0.1520%" height="15" fill="rgb(209,150,17)"/><text x="42.3473%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.15%)</title><rect x="42.0973%" y="213" width="0.1520%" height="15" fill="rgb(234,202,34)"/><text x="42.3473%" y="223.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (2 samples, 0.30%)</title><rect x="42.8571%" y="229" width="0.3040%" height="15" fill="rgb(253,148,53)"/><text x="43.1071%" y="239.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (8 samples, 1.22%)</title><rect x="43.1611%" y="229" width="1.2158%" height="15" fill="rgb(218,129,16)"/><text x="43.4111%" y="239.50"></text></g><g><title>&lt;broccoli::query::colfind::builder::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (3 samples, 0.46%)</title><rect x="43.9210%" y="213" width="0.4559%" height="15" fill="rgb(216,85,19)"/><text x="44.1710%" y="223.50"></text></g><g><title>broccoli::query::colfind::ColfindQuery::find_colliding_pairs_mut::{{closure}} (3 samples, 0.46%)</title><rect x="43.9210%" y="197" width="0.4559%" height="15" fill="rgb(235,228,7)"/><text x="44.1710%" y="207.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (3 samples, 0.46%)</title><rect x="43.9210%" y="181" width="0.4559%" height="15" fill="rgb(245,175,0)"/><text x="44.1710%" y="191.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (11 samples, 1.67%)</title><rect x="42.8571%" y="245" width="1.6717%" height="15" fill="rgb(208,168,36)"/><text x="43.1071%" y="255.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.15%)</title><rect x="44.3769%" y="229" width="0.1520%" height="15" fill="rgb(246,171,24)"/><text x="44.6269%" y="239.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (16 samples, 2.43%)</title><rect x="42.2492%" y="261" width="2.4316%" height="15" fill="rgb(215,142,24)"/><text x="42.4992%" y="271.50">tw..</text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.15%)</title><rect x="44.5289%" y="245" width="0.1520%" height="15" fill="rgb(250,187,7)"/><text x="44.7789%" y="255.50"></text></g><g><title>core::ptr::swap (1 samples, 0.15%)</title><rect x="44.5289%" y="229" width="0.1520%" height="15" fill="rgb(228,66,33)"/><text x="44.7789%" y="239.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.15%)</title><rect x="44.5289%" y="213" width="0.1520%" height="15" fill="rgb(234,215,21)"/><text x="44.7789%" y="223.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (20 samples, 3.04%)</title><rect x="41.7933%" y="293" width="3.0395%" height="15" fill="rgb(222,191,20)"/><text x="42.0433%" y="303.50">bro..</text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (20 samples, 3.04%)</title><rect x="41.7933%" y="277" width="3.0395%" height="15" fill="rgb(245,79,54)"/><text x="42.0433%" y="287.50">bro..</text></g><g><title>twounordered::SecondVec&lt;T&gt;::push (1 samples, 0.15%)</title><rect x="44.6809%" y="261" width="0.1520%" height="15" fill="rgb(240,10,37)"/><text x="44.9309%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.15%)</title><rect x="44.6809%" y="245" width="0.1520%" height="15" fill="rgb(214,192,32)"/><text x="44.9309%" y="255.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 1.06%)</title><rect x="45.1368%" y="277" width="1.0638%" height="15" fill="rgb(209,36,54)"/><text x="45.3868%" y="287.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 1.06%)</title><rect x="45.1368%" y="261" width="1.0638%" height="15" fill="rgb(220,10,11)"/><text x="45.3868%" y="271.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (1 samples, 0.15%)</title><rect x="46.0486%" y="245" width="0.1520%" height="15" fill="rgb(221,106,17)"/><text x="46.2986%" y="255.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.15%)</title><rect x="46.0486%" y="229" width="0.1520%" height="15" fill="rgb(251,142,44)"/><text x="46.2986%" y="239.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (4 samples, 0.61%)</title><rect x="46.2006%" y="277" width="0.6079%" height="15" fill="rgb(238,13,15)"/><text x="46.4506%" y="287.50"></text></g><g><title>&lt;broccoli::query::colfind::builder::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (2 samples, 0.30%)</title><rect x="46.5046%" y="261" width="0.3040%" height="15" fill="rgb(208,107,27)"/><text x="46.7546%" y="271.50"></text></g><g><title>broccoli::query::colfind::ColfindQuery::find_colliding_pairs_mut::{{closure}} (2 samples, 0.30%)</title><rect x="46.5046%" y="245" width="0.3040%" height="15" fill="rgb(205,136,37)"/><text x="46.7546%" y="255.50"></text></g><g><title>data_gen::profile_test::{{closure}}::{{closure}} (2 samples, 0.30%)</title><rect x="46.5046%" y="229" width="0.3040%" height="15" fill="rgb(250,205,27)"/><text x="46.7546%" y="239.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (15 samples, 2.28%)</title><rect x="44.8328%" y="293" width="2.2796%" height="15" fill="rgb(210,80,43)"/><text x="45.0828%" y="303.50">b..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::le (2 samples, 0.30%)</title><rect x="46.8085%" y="277" width="0.3040%" height="15" fill="rgb(247,160,36)"/><text x="47.0585%" y="287.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (36 samples, 5.47%)</title><rect x="41.7933%" y="309" width="5.4711%" height="15" fill="rgb(234,13,49)"/><text x="42.0433%" y="319.50">&lt;brocco..</text></g><g><title>broccoli::query::tools::get_section_mut (1 samples, 0.15%)</title><rect x="47.1125%" y="293" width="0.1520%" height="15" fill="rgb(234,122,0)"/><text x="47.3625%" y="303.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::ge (1 samples, 0.15%)</title><rect x="47.1125%" y="277" width="0.1520%" height="15" fill="rgb(207,146,38)"/><text x="47.3625%" y="287.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.15%)</title><rect x="47.4164%" y="245" width="0.1520%" height="15" fill="rgb(207,177,25)"/><text x="47.6664%" y="255.50"></text></g><g><title>twounordered::FirstVec&lt;T&gt;::push (1 samples, 0.15%)</title><rect x="47.5684%" y="245" width="0.1520%" height="15" fill="rgb(211,178,42)"/><text x="47.8184%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.15%)</title><rect x="47.5684%" y="229" width="0.1520%" height="15" fill="rgb(230,69,54)"/><text x="47.8184%" y="239.50"></text></g><g><title>core::ptr::write (1 samples, 0.15%)</title><rect x="47.5684%" y="213" width="0.1520%" height="15" fill="rgb(214,135,41)"/><text x="47.8184%" y="223.50"></text></g><g><title>&lt;twounordered::FirstVec&lt;T&gt; as twounordered::RetainMutUnordered&lt;T&gt;&gt;::truncate (1 samples, 0.15%)</title><rect x="48.4802%" y="229" width="0.1520%" height="15" fill="rgb(237,67,25)"/><text x="48.7302%" y="239.50"></text></g><g><title>twounordered::FirstVec&lt;T&gt;::truncate (1 samples, 0.15%)</title><rect x="48.4802%" y="213" width="0.1520%" height="15" fill="rgb(222,189,50)"/><text x="48.7302%" y="223.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.15%)</title><rect x="48.4802%" y="197" width="0.1520%" height="15" fill="rgb(245,148,34)"/><text x="48.7302%" y="207.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.15%)</title><rect x="48.4802%" y="181" width="0.1520%" height="15" fill="rgb(222,29,6)"/><text x="48.7302%" y="191.50"></text></g><g><title>&lt;twounordered::SecondVec&lt;T&gt; as twounordered::RetainMutUnordered&lt;T&gt;&gt;::as_slice_mut (1 samples, 0.15%)</title><rect x="48.6322%" y="229" width="0.1520%" height="15" fill="rgb(221,189,43)"/><text x="48.8822%" y="239.50"></text></g><g><title>twounordered::SecondVec&lt;T&gt;::as_slice_mut (1 samples, 0.15%)</title><rect x="48.6322%" y="213" width="0.1520%" height="15" fill="rgb(207,36,27)"/><text x="48.8822%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1 samples, 0.15%)</title><rect x="48.6322%" y="197" width="0.1520%" height="15" fill="rgb(217,90,24)"/><text x="48.8822%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.15%)</title><rect x="48.6322%" y="181" width="0.1520%" height="15" fill="rgb(224,66,35)"/><text x="48.8822%" y="191.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (4 samples, 0.61%)</title><rect x="48.7842%" y="229" width="0.6079%" height="15" fill="rgb(221,13,50)"/><text x="49.0342%" y="239.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (3 samples, 0.46%)</title><rect x="48.9362%" y="213" width="0.4559%" height="15" fill="rgb(236,68,49)"/><text x="49.1862%" y="223.50"></text></g><g><title>&lt;broccoli::query::colfind::builder::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (1 samples, 0.15%)</title><rect x="49.2401%" y="197" width="0.1520%" height="15" fill="rgb(229,146,28)"/><text x="49.4901%" y="207.50"></text></g><g><title>broccoli::query::colfind::ColfindQuery::find_colliding_pairs_mut::{{closure}} (1 samples, 0.15%)</title><rect x="49.2401%" y="181" width="0.1520%" height="15" fill="rgb(225,31,38)"/><text x="49.4901%" y="191.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.15%)</title><rect x="49.2401%" y="165" width="0.1520%" height="15" fill="rgb(250,208,3)"/><text x="49.4901%" y="175.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (15 samples, 2.28%)</title><rect x="47.2644%" y="277" width="2.2796%" height="15" fill="rgb(246,54,23)"/><text x="47.5144%" y="287.50">b..</text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (15 samples, 2.28%)</title><rect x="47.2644%" y="261" width="2.2796%" height="15" fill="rgb(243,76,11)"/><text x="47.5144%" y="271.50">b..</text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (12 samples, 1.82%)</title><rect x="47.7204%" y="245" width="1.8237%" height="15" fill="rgb(245,21,50)"/><text x="47.9704%" y="255.50">t..</text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.15%)</title><rect x="49.3921%" y="229" width="0.1520%" height="15" fill="rgb(228,9,43)"/><text x="49.6421%" y="239.50"></text></g><g><title>core::ptr::swap (1 samples, 0.15%)</title><rect x="49.3921%" y="213" width="0.1520%" height="15" fill="rgb(208,100,47)"/><text x="49.6421%" y="223.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.15%)</title><rect x="49.3921%" y="197" width="0.1520%" height="15" fill="rgb(232,26,8)"/><text x="49.6421%" y="207.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.46%)</title><rect x="49.5441%" y="261" width="0.4559%" height="15" fill="rgb(216,166,38)"/><text x="49.7941%" y="271.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.46%)</title><rect x="49.5441%" y="245" width="0.4559%" height="15" fill="rgb(251,202,51)"/><text x="49.7941%" y="255.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (20 samples, 3.04%)</title><rect x="47.2644%" y="293" width="3.0395%" height="15" fill="rgb(254,216,34)"/><text x="47.5144%" y="303.50">&lt;br..</text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (5 samples, 0.76%)</title><rect x="49.5441%" y="277" width="0.7599%" height="15" fill="rgb(251,32,27)"/><text x="49.7941%" y="287.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (2 samples, 0.30%)</title><rect x="50.0000%" y="261" width="0.3040%" height="15" fill="rgb(208,127,28)"/><text x="50.2500%" y="271.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (2 samples, 0.30%)</title><rect x="50.3040%" y="277" width="0.3040%" height="15" fill="rgb(224,137,22)"/><text x="50.5540%" y="287.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (2 samples, 0.30%)</title><rect x="50.3040%" y="261" width="0.3040%" height="15" fill="rgb(254,70,32)"/><text x="50.5540%" y="271.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (2 samples, 0.30%)</title><rect x="50.3040%" y="245" width="0.3040%" height="15" fill="rgb(229,75,37)"/><text x="50.5540%" y="255.50"></text></g><g><title>broccoli::util::prevec::PreVec&lt;T&gt;::insert_two_vec (1 samples, 0.15%)</title><rect x="50.4559%" y="229" width="0.1520%" height="15" fill="rgb(252,64,23)"/><text x="50.7059%" y="239.50"></text></g><g><title>core::mem::swap (1 samples, 0.15%)</title><rect x="50.4559%" y="213" width="0.1520%" height="15" fill="rgb(232,162,48)"/><text x="50.7059%" y="223.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (1 samples, 0.15%)</title><rect x="50.4559%" y="197" width="0.1520%" height="15" fill="rgb(246,160,12)"/><text x="50.7059%" y="207.50"></text></g><g><title>core::ptr::swap_nonoverlapping (1 samples, 0.15%)</title><rect x="50.4559%" y="181" width="0.1520%" height="15" fill="rgb(247,166,0)"/><text x="50.7059%" y="191.50"></text></g><g><title>core::ptr::swap_nonoverlapping_bytes (1 samples, 0.15%)</title><rect x="50.4559%" y="165" width="0.1520%" height="15" fill="rgb(249,219,21)"/><text x="50.7059%" y="175.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.15%)</title><rect x="50.4559%" y="149" width="0.1520%" height="15" fill="rgb(205,209,3)"/><text x="50.7059%" y="159.50"></text></g><g><title>broccoli::query::colfind::inner::ColfindRecurser&lt;T,NO&gt;::recurse_common (65 samples, 9.88%)</title><rect x="40.8815%" y="341" width="9.8784%" height="15" fill="rgb(243,44,1)"/><text x="41.1315%" y="351.50">broccoli::quer..</text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,KK,B&gt;::recurse (59 samples, 8.97%)</title><rect x="41.7933%" y="325" width="8.9666%" height="15" fill="rgb(206,159,16)"/><text x="42.0433%" y="335.50">broccoli::que..</text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,KK,B&gt;::recurse (23 samples, 3.50%)</title><rect x="47.2644%" y="309" width="3.4954%" height="15" fill="rgb(244,77,30)"/><text x="47.5144%" y="319.50">bro..</text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,KK,B&gt;::recurse (3 samples, 0.46%)</title><rect x="50.3040%" y="293" width="0.4559%" height="15" fill="rgb(218,69,12)"/><text x="50.5540%" y="303.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,KK,B&gt;::recurse (1 samples, 0.15%)</title><rect x="50.6079%" y="277" width="0.1520%" height="15" fill="rgb(212,87,7)"/><text x="50.8579%" y="287.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (1 samples, 0.15%)</title><rect x="50.6079%" y="261" width="0.1520%" height="15" fill="rgb(245,114,25)"/><text x="50.8579%" y="271.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (1 samples, 0.15%)</title><rect x="50.6079%" y="245" width="0.1520%" height="15" fill="rgb(210,61,42)"/><text x="50.8579%" y="255.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (1 samples, 0.15%)</title><rect x="50.6079%" y="229" width="0.1520%" height="15" fill="rgb(211,52,33)"/><text x="50.8579%" y="239.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (1 samples, 0.15%)</title><rect x="50.6079%" y="213" width="0.1520%" height="15" fill="rgb(234,58,33)"/><text x="50.8579%" y="223.50"></text></g><g><title>&lt;twounordered::FirstVec&lt;T&gt; as twounordered::RetainMutUnordered&lt;T&gt;&gt;::truncate (1 samples, 0.15%)</title><rect x="50.6079%" y="197" width="0.1520%" height="15" fill="rgb(220,115,36)"/><text x="50.8579%" y="207.50"></text></g><g><title>twounordered::FirstVec&lt;T&gt;::truncate (1 samples, 0.15%)</title><rect x="50.6079%" y="181" width="0.1520%" height="15" fill="rgb(243,153,54)"/><text x="50.8579%" y="191.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_node (4 samples, 0.61%)</title><rect x="50.7599%" y="309" width="0.6079%" height="15" fill="rgb(251,47,18)"/><text x="51.0099%" y="319.50"></text></g><g><title>broccoli::query::colfind::oned::find_2d (4 samples, 0.61%)</title><rect x="50.7599%" y="293" width="0.6079%" height="15" fill="rgb(242,102,42)"/><text x="51.0099%" y="303.50"></text></g><g><title>broccoli::query::colfind::oned::find (4 samples, 0.61%)</title><rect x="50.7599%" y="277" width="0.6079%" height="15" fill="rgb(234,31,38)"/><text x="51.0099%" y="287.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (4 samples, 0.61%)</title><rect x="50.7599%" y="261" width="0.6079%" height="15" fill="rgb(221,117,51)"/><text x="51.0099%" y="271.50"></text></g><g><title>broccoli::query::colfind::oned::find::{{closure}} (4 samples, 0.61%)</title><rect x="50.7599%" y="245" width="0.6079%" height="15" fill="rgb(212,20,18)"/><text x="51.0099%" y="255.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (2 samples, 0.30%)</title><rect x="51.0638%" y="229" width="0.3040%" height="15" fill="rgb(245,133,36)"/><text x="51.3138%" y="239.50"></text></g><g><title>&lt;broccoli::query::colfind::builder::QueryFn&lt;T,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (2 samples, 0.30%)</title><rect x="51.0638%" y="213" width="0.3040%" height="15" fill="rgb(212,6,19)"/><text x="51.3138%" y="223.50"></text></g><g><title>broccoli::query::colfind::ColfindQuery::find_colliding_pairs_mut_par::{{closure}} (2 samples, 0.30%)</title><rect x="51.0638%" y="197" width="0.3040%" height="15" fill="rgb(218,1,36)"/><text x="51.3138%" y="207.50"></text></g><g><title>data_gen::colfind::float_vs_integer::handle_bench::{{closure}}::{{closure}} (2 samples, 0.30%)</title><rect x="51.0638%" y="181" width="0.3040%" height="15" fill="rgb(246,84,54)"/><text x="51.3138%" y="191.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (3 samples, 0.46%)</title><rect x="51.3678%" y="245" width="0.4559%" height="15" fill="rgb(242,110,6)"/><text x="51.6178%" y="255.50"></text></g><g><title>twounordered::FirstVec&lt;T&gt;::push (1 samples, 0.15%)</title><rect x="51.8237%" y="245" width="0.1520%" height="15" fill="rgb(214,47,5)"/><text x="52.0737%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.15%)</title><rect x="51.8237%" y="229" width="0.1520%" height="15" fill="rgb(218,159,25)"/><text x="52.0737%" y="239.50"></text></g><g><title>core::ptr::write (1 samples, 0.15%)</title><rect x="51.8237%" y="213" width="0.1520%" height="15" fill="rgb(215,211,28)"/><text x="52.0737%" y="223.50"></text></g><g><title>&lt;twounordered::FirstVec&lt;T&gt; as twounordered::RetainMutUnordered&lt;T&gt;&gt;::truncate (2 samples, 0.30%)</title><rect x="52.5836%" y="229" width="0.3040%" height="15" fill="rgb(238,59,32)"/><text x="52.8336%" y="239.50"></text></g><g><title>twounordered::FirstVec&lt;T&gt;::truncate (2 samples, 0.30%)</title><rect x="52.5836%" y="213" width="0.3040%" height="15" fill="rgb(226,82,3)"/><text x="52.8336%" y="223.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.15%)</title><rect x="52.7356%" y="197" width="0.1520%" height="15" fill="rgb(240,164,32)"/><text x="52.9856%" y="207.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.15%)</title><rect x="52.7356%" y="181" width="0.1520%" height="15" fill="rgb(232,46,7)"/><text x="52.9856%" y="191.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (1 samples, 0.15%)</title><rect x="53.1915%" y="213" width="0.1520%" height="15" fill="rgb(229,129,53)"/><text x="53.4415%" y="223.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (10 samples, 1.52%)</title><rect x="51.9757%" y="245" width="1.5198%" height="15" fill="rgb(234,188,29)"/><text x="52.2257%" y="255.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (4 samples, 0.61%)</title><rect x="52.8875%" y="229" width="0.6079%" height="15" fill="rgb(246,141,4)"/><text x="53.1375%" y="239.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (1 samples, 0.15%)</title><rect x="53.3435%" y="213" width="0.1520%" height="15" fill="rgb(229,23,39)"/><text x="53.5935%" y="223.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (15 samples, 2.28%)</title><rect x="51.3678%" y="277" width="2.2796%" height="15" fill="rgb(206,12,3)"/><text x="51.6178%" y="287.50">b..</text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (15 samples, 2.28%)</title><rect x="51.3678%" y="261" width="2.2796%" height="15" fill="rgb(252,226,20)"/><text x="51.6178%" y="271.50">b..</text></g><g><title>twounordered::SecondVec&lt;T&gt;::push (1 samples, 0.15%)</title><rect x="53.4954%" y="245" width="0.1520%" height="15" fill="rgb(216,123,35)"/><text x="53.7454%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.15%)</title><rect x="53.4954%" y="229" width="0.1520%" height="15" fill="rgb(212,68,40)"/><text x="53.7454%" y="239.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.76%)</title><rect x="53.9514%" y="261" width="0.7599%" height="15" fill="rgb(254,125,32)"/><text x="54.2014%" y="271.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.76%)</title><rect x="53.9514%" y="245" width="0.7599%" height="15" fill="rgb(253,97,22)"/><text x="54.2014%" y="255.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (1 samples, 0.15%)</title><rect x="54.5593%" y="229" width="0.1520%" height="15" fill="rgb(241,101,14)"/><text x="54.8093%" y="239.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.15%)</title><rect x="54.5593%" y="213" width="0.1520%" height="15" fill="rgb(238,103,29)"/><text x="54.8093%" y="223.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (7 samples, 1.06%)</title><rect x="54.7112%" y="261" width="1.0638%" height="15" fill="rgb(233,195,47)"/><text x="54.9612%" y="271.50"></text></g><g><title>&lt;broccoli::query::colfind::builder::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (5 samples, 0.76%)</title><rect x="55.0152%" y="245" width="0.7599%" height="15" fill="rgb(246,218,30)"/><text x="55.2652%" y="255.50"></text></g><g><title>broccoli::query::colfind::ColfindQuery::find_colliding_pairs_mut::{{closure}} (5 samples, 0.76%)</title><rect x="55.0152%" y="229" width="0.7599%" height="15" fill="rgb(219,145,47)"/><text x="55.2652%" y="239.50"></text></g><g><title>data_gen::profile_test::{{closure}}::{{closure}} (5 samples, 0.76%)</title><rect x="55.0152%" y="213" width="0.7599%" height="15" fill="rgb(243,12,26)"/><text x="55.2652%" y="223.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::le (1 samples, 0.15%)</title><rect x="55.7751%" y="261" width="0.1520%" height="15" fill="rgb(214,87,16)"/><text x="56.0251%" y="271.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (31 samples, 4.71%)</title><rect x="51.3678%" y="293" width="4.7112%" height="15" fill="rgb(208,99,42)"/><text x="51.6178%" y="303.50">&lt;broc..</text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (16 samples, 2.43%)</title><rect x="53.6474%" y="277" width="2.4316%" height="15" fill="rgb(253,99,2)"/><text x="53.8974%" y="287.50">br..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::lt (1 samples, 0.15%)</title><rect x="55.9271%" y="261" width="0.1520%" height="15" fill="rgb(220,168,23)"/><text x="56.1771%" y="271.50"></text></g><g><title>&lt;twounordered::SecondVec&lt;T&gt; as twounordered::RetainMutUnordered&lt;T&gt;&gt;::as_slice_mut (1 samples, 0.15%)</title><rect x="56.6869%" y="213" width="0.1520%" height="15" fill="rgb(242,38,24)"/><text x="56.9369%" y="223.50"></text></g><g><title>twounordered::SecondVec&lt;T&gt;::as_slice_mut (1 samples, 0.15%)</title><rect x="56.6869%" y="197" width="0.1520%" height="15" fill="rgb(225,182,9)"/><text x="56.9369%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1 samples, 0.15%)</title><rect x="56.6869%" y="181" width="0.1520%" height="15" fill="rgb(243,178,37)"/><text x="56.9369%" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.15%)</title><rect x="56.6869%" y="165" width="0.1520%" height="15" fill="rgb(232,139,19)"/><text x="56.9369%" y="175.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (1 samples, 0.15%)</title><rect x="57.1429%" y="197" width="0.1520%" height="15" fill="rgb(225,201,24)"/><text x="57.3929%" y="207.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (4 samples, 0.61%)</title><rect x="56.8389%" y="213" width="0.6079%" height="15" fill="rgb(221,47,46)"/><text x="57.0889%" y="223.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (1 samples, 0.15%)</title><rect x="57.2948%" y="197" width="0.1520%" height="15" fill="rgb(249,23,13)"/><text x="57.5448%" y="207.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.15%)</title><rect x="57.4468%" y="213" width="0.1520%" height="15" fill="rgb(219,9,5)"/><text x="57.6968%" y="223.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (10 samples, 1.52%)</title><rect x="56.2310%" y="261" width="1.5198%" height="15" fill="rgb(254,171,16)"/><text x="56.4810%" y="271.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (10 samples, 1.52%)</title><rect x="56.2310%" y="245" width="1.5198%" height="15" fill="rgb(230,171,20)"/><text x="56.4810%" y="255.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (9 samples, 1.37%)</title><rect x="56.3830%" y="229" width="1.3678%" height="15" fill="rgb(210,71,41)"/><text x="56.6330%" y="239.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.15%)</title><rect x="57.5988%" y="213" width="0.1520%" height="15" fill="rgb(206,173,20)"/><text x="57.8488%" y="223.50"></text></g><g><title>core::ptr::swap (1 samples, 0.15%)</title><rect x="57.5988%" y="197" width="0.1520%" height="15" fill="rgb(233,88,34)"/><text x="57.8488%" y="207.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.15%)</title><rect x="57.5988%" y="181" width="0.1520%" height="15" fill="rgb(223,209,46)"/><text x="57.8488%" y="191.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (12 samples, 1.82%)</title><rect x="56.2310%" y="277" width="1.8237%" height="15" fill="rgb(250,43,18)"/><text x="56.4810%" y="287.50">&lt;..</text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (2 samples, 0.30%)</title><rect x="57.7508%" y="261" width="0.3040%" height="15" fill="rgb(208,13,10)"/><text x="58.0008%" y="271.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.15%)</title><rect x="57.9027%" y="245" width="0.1520%" height="15" fill="rgb(212,200,36)"/><text x="58.1527%" y="255.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.15%)</title><rect x="57.9027%" y="229" width="0.1520%" height="15" fill="rgb(225,90,30)"/><text x="58.1527%" y="239.50"></text></g><g><title>broccoli::query::colfind::inner::ColfindRecurser&lt;T,NO&gt;::recurse_common (49 samples, 7.45%)</title><rect x="50.7599%" y="325" width="7.4468%" height="15" fill="rgb(236,182,39)"/><text x="51.0099%" y="335.50">broccoli::..</text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,KK,B&gt;::recurse (45 samples, 6.84%)</title><rect x="51.3678%" y="309" width="6.8389%" height="15" fill="rgb(212,144,35)"/><text x="51.6178%" y="319.50">broccoli:..</text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,KK,B&gt;::recurse (14 samples, 2.13%)</title><rect x="56.0790%" y="293" width="2.1277%" height="15" fill="rgb(228,63,44)"/><text x="56.3290%" y="303.50">b..</text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,KK,B&gt;::recurse (1 samples, 0.15%)</title><rect x="58.0547%" y="277" width="0.1520%" height="15" fill="rgb(228,109,6)"/><text x="58.3047%" y="287.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (1 samples, 0.15%)</title><rect x="58.0547%" y="261" width="0.1520%" height="15" fill="rgb(238,117,24)"/><text x="58.3047%" y="271.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (1 samples, 0.15%)</title><rect x="58.0547%" y="245" width="0.1520%" height="15" fill="rgb(242,26,26)"/><text x="58.3047%" y="255.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.15%)</title><rect x="58.0547%" y="229" width="0.1520%" height="15" fill="rgb(221,92,48)"/><text x="58.3047%" y="239.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.15%)</title><rect x="58.0547%" y="213" width="0.1520%" height="15" fill="rgb(209,209,32)"/><text x="58.3047%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.15%)</title><rect x="58.2067%" y="245" width="0.1520%" height="15" fill="rgb(221,70,22)"/><text x="58.4567%" y="255.50"></text></g><g><title>core::ptr::write (1 samples, 0.15%)</title><rect x="58.2067%" y="229" width="0.1520%" height="15" fill="rgb(248,145,5)"/><text x="58.4567%" y="239.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_node (2 samples, 0.30%)</title><rect x="58.2067%" y="293" width="0.3040%" height="15" fill="rgb(226,116,26)"/><text x="58.4567%" y="303.50"></text></g><g><title>broccoli::query::colfind::oned::find_2d (2 samples, 0.30%)</title><rect x="58.2067%" y="277" width="0.3040%" height="15" fill="rgb(244,5,17)"/><text x="58.4567%" y="287.50"></text></g><g><title>broccoli::query::colfind::oned::find (2 samples, 0.30%)</title><rect x="58.2067%" y="261" width="0.3040%" height="15" fill="rgb(252,159,33)"/><text x="58.4567%" y="271.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (1 samples, 0.15%)</title><rect x="58.3587%" y="245" width="0.1520%" height="15" fill="rgb(206,71,0)"/><text x="58.6087%" y="255.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.15%)</title><rect x="58.5106%" y="229" width="0.1520%" height="15" fill="rgb(233,118,54)"/><text x="58.7606%" y="239.50"></text></g><g><title>&lt;broccoli::query::colfind::builder::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (1 samples, 0.15%)</title><rect x="59.2705%" y="181" width="0.1520%" height="15" fill="rgb(234,83,48)"/><text x="59.5205%" y="191.50"></text></g><g><title>broccoli::query::colfind::ColfindQuery::find_colliding_pairs_mut::{{closure}} (1 samples, 0.15%)</title><rect x="59.2705%" y="165" width="0.1520%" height="15" fill="rgb(228,3,54)"/><text x="59.5205%" y="175.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.15%)</title><rect x="59.2705%" y="149" width="0.1520%" height="15" fill="rgb(226,155,13)"/><text x="59.5205%" y="159.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (7 samples, 1.06%)</title><rect x="58.5106%" y="261" width="1.0638%" height="15" fill="rgb(241,28,37)"/><text x="58.7606%" y="271.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (7 samples, 1.06%)</title><rect x="58.5106%" y="245" width="1.0638%" height="15" fill="rgb(233,93,10)"/><text x="58.7606%" y="255.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (6 samples, 0.91%)</title><rect x="58.6626%" y="229" width="0.9119%" height="15" fill="rgb(225,113,19)"/><text x="58.9126%" y="239.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (5 samples, 0.76%)</title><rect x="58.8146%" y="213" width="0.7599%" height="15" fill="rgb(241,2,18)"/><text x="59.0646%" y="223.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (3 samples, 0.46%)</title><rect x="59.1185%" y="197" width="0.4559%" height="15" fill="rgb(228,207,21)"/><text x="59.3685%" y="207.50"></text></g><g><title>axgeom::range::Range&lt;T&gt;::intersects (1 samples, 0.15%)</title><rect x="59.4225%" y="181" width="0.1520%" height="15" fill="rgb(213,211,35)"/><text x="59.6725%" y="191.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::le (1 samples, 0.15%)</title><rect x="59.4225%" y="165" width="0.1520%" height="15" fill="rgb(209,83,10)"/><text x="59.6725%" y="175.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (10 samples, 1.52%)</title><rect x="58.5106%" y="277" width="1.5198%" height="15" fill="rgb(209,164,1)"/><text x="58.7606%" y="287.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (3 samples, 0.46%)</title><rect x="59.5745%" y="261" width="0.4559%" height="15" fill="rgb(213,184,43)"/><text x="59.8245%" y="271.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (3 samples, 0.46%)</title><rect x="59.5745%" y="245" width="0.4559%" height="15" fill="rgb(231,61,34)"/><text x="59.8245%" y="255.50"></text></g><g><title>axgeom::range::Range&lt;T&gt;::intersects (1 samples, 0.15%)</title><rect x="59.8784%" y="229" width="0.1520%" height="15" fill="rgb(235,75,3)"/><text x="60.1284%" y="239.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::le (1 samples, 0.15%)</title><rect x="59.8784%" y="213" width="0.1520%" height="15" fill="rgb(220,106,47)"/><text x="60.1284%" y="223.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (1 samples, 0.15%)</title><rect x="60.1824%" y="181" width="0.1520%" height="15" fill="rgb(210,196,33)"/><text x="60.4324%" y="191.50"></text></g><g><title>broccoli::query::colfind::inner::ColfindRecurser&lt;T,NO&gt;::recurse_common (15 samples, 2.28%)</title><rect x="58.2067%" y="309" width="2.2796%" height="15" fill="rgb(229,154,42)"/><text x="58.4567%" y="319.50">b..</text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,KK,B&gt;::recurse (13 samples, 1.98%)</title><rect x="58.5106%" y="293" width="1.9757%" height="15" fill="rgb(228,114,26)"/><text x="58.7606%" y="303.50">b..</text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,KK,B&gt;::recurse (3 samples, 0.46%)</title><rect x="60.0304%" y="277" width="0.4559%" height="15" fill="rgb(208,144,1)"/><text x="60.2804%" y="287.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (3 samples, 0.46%)</title><rect x="60.0304%" y="261" width="0.4559%" height="15" fill="rgb(239,112,37)"/><text x="60.2804%" y="271.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (3 samples, 0.46%)</title><rect x="60.0304%" y="245" width="0.4559%" height="15" fill="rgb(210,96,50)"/><text x="60.2804%" y="255.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (3 samples, 0.46%)</title><rect x="60.0304%" y="229" width="0.4559%" height="15" fill="rgb(222,178,2)"/><text x="60.2804%" y="239.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (3 samples, 0.46%)</title><rect x="60.0304%" y="213" width="0.4559%" height="15" fill="rgb(226,74,18)"/><text x="60.2804%" y="223.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (3 samples, 0.46%)</title><rect x="60.0304%" y="197" width="0.4559%" height="15" fill="rgb(225,67,54)"/><text x="60.2804%" y="207.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (1 samples, 0.15%)</title><rect x="60.3343%" y="181" width="0.1520%" height="15" fill="rgb(251,92,32)"/><text x="60.5843%" y="191.50"></text></g><g><title>&lt;broccoli::query::colfind::builder::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (1 samples, 0.15%)</title><rect x="60.3343%" y="165" width="0.1520%" height="15" fill="rgb(228,149,22)"/><text x="60.5843%" y="175.50"></text></g><g><title>broccoli::query::colfind::ColfindQuery::find_colliding_pairs_mut::{{closure}} (1 samples, 0.15%)</title><rect x="60.3343%" y="149" width="0.1520%" height="15" fill="rgb(243,54,13)"/><text x="60.5843%" y="159.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.15%)</title><rect x="60.3343%" y="133" width="0.1520%" height="15" fill="rgb(243,180,28)"/><text x="60.5843%" y="143.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_node (1 samples, 0.15%)</title><rect x="60.4863%" y="277" width="0.1520%" height="15" fill="rgb(208,167,24)"/><text x="60.7363%" y="287.50"></text></g><g><title>broccoli::query::colfind::oned::find_2d (1 samples, 0.15%)</title><rect x="60.4863%" y="261" width="0.1520%" height="15" fill="rgb(245,73,45)"/><text x="60.7363%" y="271.50"></text></g><g><title>broccoli::query::colfind::oned::find (1 samples, 0.15%)</title><rect x="60.4863%" y="245" width="0.1520%" height="15" fill="rgb(237,203,48)"/><text x="60.7363%" y="255.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (1 samples, 0.15%)</title><rect x="60.4863%" y="229" width="0.1520%" height="15" fill="rgb(211,197,16)"/><text x="60.7363%" y="239.50"></text></g><g><title>broccoli::query::colfind::oned::find::{{closure}} (1 samples, 0.15%)</title><rect x="60.4863%" y="213" width="0.1520%" height="15" fill="rgb(243,99,51)"/><text x="60.7363%" y="223.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.15%)</title><rect x="60.4863%" y="197" width="0.1520%" height="15" fill="rgb(215,123,29)"/><text x="60.7363%" y="207.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (1 samples, 0.15%)</title><rect x="60.6383%" y="245" width="0.1520%" height="15" fill="rgb(239,186,37)"/><text x="60.8883%" y="255.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (1 samples, 0.15%)</title><rect x="60.6383%" y="229" width="0.1520%" height="15" fill="rgb(252,136,39)"/><text x="60.8883%" y="239.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (1 samples, 0.15%)</title><rect x="60.6383%" y="213" width="0.1520%" height="15" fill="rgb(223,213,32)"/><text x="60.8883%" y="223.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.15%)</title><rect x="60.7903%" y="229" width="0.1520%" height="15" fill="rgb(233,115,5)"/><text x="61.0403%" y="239.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.15%)</title><rect x="60.7903%" y="213" width="0.1520%" height="15" fill="rgb(207,226,44)"/><text x="61.0403%" y="223.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (2 samples, 0.30%)</title><rect x="60.7903%" y="245" width="0.3040%" height="15" fill="rgb(208,126,0)"/><text x="61.0403%" y="255.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (1 samples, 0.15%)</title><rect x="60.9422%" y="229" width="0.1520%" height="15" fill="rgb(244,66,21)"/><text x="61.1922%" y="239.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (4 samples, 0.61%)</title><rect x="60.6383%" y="261" width="0.6079%" height="15" fill="rgb(222,97,12)"/><text x="60.8883%" y="271.50"></text></g><g><title>broccoli::query::tools::get_section_mut (1 samples, 0.15%)</title><rect x="61.0942%" y="245" width="0.1520%" height="15" fill="rgb(219,213,19)"/><text x="61.3442%" y="255.50"></text></g><g><title>twounordered::FirstVec&lt;T&gt;::push (1 samples, 0.15%)</title><rect x="61.2462%" y="197" width="0.1520%" height="15" fill="rgb(252,169,30)"/><text x="61.4962%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.15%)</title><rect x="61.2462%" y="181" width="0.1520%" height="15" fill="rgb(206,32,51)"/><text x="61.4962%" y="191.50"></text></g><g><title>broccoli::query::colfind::inner::ColfindRecurser&lt;T,NO&gt;::recurse_seq (7 samples, 1.06%)</title><rect x="60.4863%" y="309" width="1.0638%" height="15" fill="rgb(250,172,42)"/><text x="60.7363%" y="319.50"></text></g><g><title>broccoli::query::colfind::inner::ColfindRecurser&lt;T,NO&gt;::recurse_common (7 samples, 1.06%)</title><rect x="60.4863%" y="293" width="1.0638%" height="15" fill="rgb(209,34,43)"/><text x="60.7363%" y="303.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,KK,B&gt;::recurse (6 samples, 0.91%)</title><rect x="60.6383%" y="277" width="0.9119%" height="15" fill="rgb(223,11,35)"/><text x="60.8883%" y="287.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,KK,B&gt;::recurse (2 samples, 0.30%)</title><rect x="61.2462%" y="261" width="0.3040%" height="15" fill="rgb(251,219,26)"/><text x="61.4962%" y="271.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (2 samples, 0.30%)</title><rect x="61.2462%" y="245" width="0.3040%" height="15" fill="rgb(231,119,3)"/><text x="61.4962%" y="255.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (2 samples, 0.30%)</title><rect x="61.2462%" y="229" width="0.3040%" height="15" fill="rgb(216,97,11)"/><text x="61.4962%" y="239.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (2 samples, 0.30%)</title><rect x="61.2462%" y="213" width="0.3040%" height="15" fill="rgb(223,59,9)"/><text x="61.4962%" y="223.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (1 samples, 0.15%)</title><rect x="61.3982%" y="197" width="0.1520%" height="15" fill="rgb(233,93,31)"/><text x="61.6482%" y="207.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (1 samples, 0.15%)</title><rect x="61.3982%" y="181" width="0.1520%" height="15" fill="rgb(239,81,33)"/><text x="61.6482%" y="191.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (1 samples, 0.15%)</title><rect x="61.5502%" y="245" width="0.1520%" height="15" fill="rgb(213,120,34)"/><text x="61.8002%" y="255.50"></text></g><g><title>&lt;broccoli::query::colfind::builder::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (1 samples, 0.15%)</title><rect x="61.5502%" y="229" width="0.1520%" height="15" fill="rgb(243,49,53)"/><text x="61.8002%" y="239.50"></text></g><g><title>broccoli::query::colfind::ColfindQuery::find_colliding_pairs_mut::{{closure}} (1 samples, 0.15%)</title><rect x="61.5502%" y="213" width="0.1520%" height="15" fill="rgb(247,216,33)"/><text x="61.8002%" y="223.50"></text></g><g><title>data_gen::profile_test::{{closure}}::{{closure}} (1 samples, 0.15%)</title><rect x="61.5502%" y="197" width="0.1520%" height="15" fill="rgb(226,26,14)"/><text x="61.8002%" y="207.50"></text></g><g><title>broccoli::query::colfind::inner::ColfindRecurser&lt;T,NO&gt;::recurse_seq (24 samples, 3.65%)</title><rect x="58.2067%" y="325" width="3.6474%" height="15" fill="rgb(215,49,53)"/><text x="58.4567%" y="335.50">broc..</text></g><g><title>broccoli::query::colfind::oned::find_2d (2 samples, 0.30%)</title><rect x="61.5502%" y="309" width="0.3040%" height="15" fill="rgb(245,162,40)"/><text x="61.8002%" y="319.50"></text></g><g><title>broccoli::query::colfind::oned::find (2 samples, 0.30%)</title><rect x="61.5502%" y="293" width="0.3040%" height="15" fill="rgb(229,68,17)"/><text x="61.8002%" y="303.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (2 samples, 0.30%)</title><rect x="61.5502%" y="277" width="0.3040%" height="15" fill="rgb(213,182,10)"/><text x="61.8002%" y="287.50"></text></g><g><title>broccoli::query::colfind::oned::find::{{closure}} (2 samples, 0.30%)</title><rect x="61.5502%" y="261" width="0.3040%" height="15" fill="rgb(245,125,30)"/><text x="61.8002%" y="271.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.15%)</title><rect x="61.7021%" y="245" width="0.1520%" height="15" fill="rgb(232,202,2)"/><text x="61.9521%" y="255.50"></text></g><g><title>broccoli::query::colfind::oned::find::{{closure}} (5 samples, 0.76%)</title><rect x="62.3100%" y="277" width="0.7599%" height="15" fill="rgb(237,140,51)"/><text x="62.5600%" y="287.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (5 samples, 0.76%)</title><rect x="62.3100%" y="261" width="0.7599%" height="15" fill="rgb(236,157,25)"/><text x="62.5600%" y="271.50"></text></g><g><title>&lt;broccoli::query::colfind::builder::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (4 samples, 0.61%)</title><rect x="62.4620%" y="245" width="0.6079%" height="15" fill="rgb(219,209,0)"/><text x="62.7120%" y="255.50"></text></g><g><title>broccoli::query::colfind::ColfindQuery::find_colliding_pairs_mut::{{closure}} (4 samples, 0.61%)</title><rect x="62.4620%" y="229" width="0.6079%" height="15" fill="rgb(240,116,54)"/><text x="62.7120%" y="239.50"></text></g><g><title>data_gen::profile_test::{{closure}}::{{closure}} (4 samples, 0.61%)</title><rect x="62.4620%" y="213" width="0.6079%" height="15" fill="rgb(216,10,36)"/><text x="62.7120%" y="223.50"></text></g><g><title>broccoli::query::colfind::inner::ColfindRecurser&lt;T,NO&gt;::recurse_seq (82 samples, 12.46%)</title><rect x="50.7599%" y="341" width="12.4620%" height="15" fill="rgb(222,72,44)"/><text x="51.0099%" y="351.50">broccoli::query::co..</text></g><g><title>broccoli::query::colfind::oned::find_2d (9 samples, 1.37%)</title><rect x="61.8541%" y="325" width="1.3678%" height="15" fill="rgb(232,159,9)"/><text x="62.1041%" y="335.50"></text></g><g><title>broccoli::query::colfind::oned::find (9 samples, 1.37%)</title><rect x="61.8541%" y="309" width="1.3678%" height="15" fill="rgb(210,39,32)"/><text x="62.1041%" y="319.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (9 samples, 1.37%)</title><rect x="61.8541%" y="293" width="1.3678%" height="15" fill="rgb(216,194,45)"/><text x="62.1041%" y="303.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.15%)</title><rect x="63.0699%" y="277" width="0.1520%" height="15" fill="rgb(218,18,35)"/><text x="63.3199%" y="287.50"></text></g><g><title>core::ptr::swap (1 samples, 0.15%)</title><rect x="63.0699%" y="261" width="0.1520%" height="15" fill="rgb(207,83,51)"/><text x="63.3199%" y="271.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.15%)</title><rect x="63.0699%" y="245" width="0.1520%" height="15" fill="rgb(225,63,43)"/><text x="63.3199%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (3 samples, 0.46%)</title><rect x="63.2219%" y="309" width="0.4559%" height="15" fill="rgb(207,57,36)"/><text x="63.4719%" y="319.50"></text></g><g><title>core::ptr::write (3 samples, 0.46%)</title><rect x="63.2219%" y="293" width="0.4559%" height="15" fill="rgb(216,99,33)"/><text x="63.4719%" y="303.50"></text></g><g><title>broccoli::query::colfind::inner::ColfindRecurser&lt;T,NO&gt;::recurse_seq (159 samples, 24.16%)</title><rect x="40.8815%" y="357" width="24.1641%" height="15" fill="rgb(225,42,16)"/><text x="41.1315%" y="367.50">broccoli::query::colfind::inner::Colfi..</text></g><g><title>broccoli::query::colfind::oned::find_2d (12 samples, 1.82%)</title><rect x="63.2219%" y="341" width="1.8237%" height="15" fill="rgb(220,201,45)"/><text x="63.4719%" y="351.50">b..</text></g><g><title>broccoli::query::colfind::oned::find (12 samples, 1.82%)</title><rect x="63.2219%" y="325" width="1.8237%" height="15" fill="rgb(225,33,4)"/><text x="63.4719%" y="335.50">b..</text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (9 samples, 1.37%)</title><rect x="63.6778%" y="309" width="1.3678%" height="15" fill="rgb(224,33,50)"/><text x="63.9278%" y="319.50"></text></g><g><title>broccoli::query::colfind::oned::find::{{closure}} (8 samples, 1.22%)</title><rect x="63.8298%" y="293" width="1.2158%" height="15" fill="rgb(246,198,51)"/><text x="64.0798%" y="303.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (7 samples, 1.06%)</title><rect x="63.9818%" y="277" width="1.0638%" height="15" fill="rgb(205,22,4)"/><text x="64.2318%" y="287.50"></text></g><g><title>&lt;broccoli::query::colfind::builder::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (3 samples, 0.46%)</title><rect x="64.5897%" y="261" width="0.4559%" height="15" fill="rgb(206,3,8)"/><text x="64.8397%" y="271.50"></text></g><g><title>broccoli::query::colfind::ColfindQuery::find_colliding_pairs_mut::{{closure}} (3 samples, 0.46%)</title><rect x="64.5897%" y="245" width="0.4559%" height="15" fill="rgb(251,23,15)"/><text x="64.8397%" y="255.50"></text></g><g><title>data_gen::profile_test::{{closure}}::{{closure}} (3 samples, 0.46%)</title><rect x="64.5897%" y="229" width="0.4559%" height="15" fill="rgb(252,88,28)"/><text x="64.8397%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.15%)</title><rect x="65.0456%" y="325" width="0.1520%" height="15" fill="rgb(212,127,14)"/><text x="65.2956%" y="335.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (2 samples, 0.30%)</title><rect x="65.9574%" y="293" width="0.3040%" height="15" fill="rgb(247,145,37)"/><text x="66.2074%" y="303.50"></text></g><g><title>broccoli::query::colfind::oned::find::{{closure}} (6 samples, 0.91%)</title><rect x="65.6535%" y="309" width="0.9119%" height="15" fill="rgb(209,117,53)"/><text x="65.9035%" y="319.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (2 samples, 0.30%)</title><rect x="66.2614%" y="293" width="0.3040%" height="15" fill="rgb(212,90,42)"/><text x="66.5114%" y="303.50"></text></g><g><title>broccoli::query::colfind::inner::ColfindRecurser&lt;T,NO&gt;::recurse_seq (250 samples, 37.99%)</title><rect x="28.7234%" y="373" width="37.9939%" height="15" fill="rgb(218,164,37)"/><text x="28.9734%" y="383.50">broccoli::query::colfind::inner::ColfindRecurser&lt;T,NO&gt;::recurs..</text></g><g><title>broccoli::query::colfind::oned::find_2d (11 samples, 1.67%)</title><rect x="65.0456%" y="357" width="1.6717%" height="15" fill="rgb(246,65,34)"/><text x="65.2956%" y="367.50"></text></g><g><title>broccoli::query::colfind::oned::find (11 samples, 1.67%)</title><rect x="65.0456%" y="341" width="1.6717%" height="15" fill="rgb(231,100,33)"/><text x="65.2956%" y="351.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (10 samples, 1.52%)</title><rect x="65.1976%" y="325" width="1.5198%" height="15" fill="rgb(228,126,14)"/><text x="65.4476%" y="335.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.15%)</title><rect x="66.5653%" y="309" width="0.1520%" height="15" fill="rgb(215,173,21)"/><text x="66.8153%" y="319.50"></text></g><g><title>core::ptr::swap (1 samples, 0.15%)</title><rect x="66.5653%" y="293" width="0.1520%" height="15" fill="rgb(210,6,40)"/><text x="66.8153%" y="303.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.15%)</title><rect x="66.5653%" y="277" width="0.1520%" height="15" fill="rgb(212,48,18)"/><text x="66.8153%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.15%)</title><rect x="66.7173%" y="341" width="0.1520%" height="15" fill="rgb(230,214,11)"/><text x="66.9673%" y="351.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (1 samples, 0.15%)</title><rect x="68.0851%" y="309" width="0.1520%" height="15" fill="rgb(254,105,39)"/><text x="68.3351%" y="319.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (3 samples, 0.46%)</title><rect x="68.2371%" y="309" width="0.4559%" height="15" fill="rgb(245,158,5)"/><text x="68.4871%" y="319.50"></text></g><g><title>&lt;broccoli::query::colfind::builder::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (2 samples, 0.30%)</title><rect x="68.3891%" y="293" width="0.3040%" height="15" fill="rgb(249,208,11)"/><text x="68.6391%" y="303.50"></text></g><g><title>broccoli::query::colfind::ColfindQuery::find_colliding_pairs_mut::{{closure}} (2 samples, 0.30%)</title><rect x="68.3891%" y="277" width="0.3040%" height="15" fill="rgb(210,39,28)"/><text x="68.6391%" y="287.50"></text></g><g><title>data_gen::profile_test::{{closure}}::{{closure}} (2 samples, 0.30%)</title><rect x="68.3891%" y="261" width="0.3040%" height="15" fill="rgb(211,56,53)"/><text x="68.6391%" y="271.50"></text></g><g><title>broccoli::query::colfind::inner::ColfindRecurser&lt;T,NO&gt;::recurse_seq (336 samples, 51.06%)</title><rect x="17.7812%" y="389" width="51.0638%" height="15" fill="rgb(226,201,30)"/><text x="18.0312%" y="399.50">broccoli::query::colfind::inner::ColfindRecurser&lt;T,NO&gt;::recurse_seq</text></g><g><title>broccoli::query::colfind::oned::find_2d (14 samples, 2.13%)</title><rect x="66.7173%" y="373" width="2.1277%" height="15" fill="rgb(239,101,34)"/><text x="66.9673%" y="383.50">b..</text></g><g><title>broccoli::query::colfind::oned::find (14 samples, 2.13%)</title><rect x="66.7173%" y="357" width="2.1277%" height="15" fill="rgb(226,209,5)"/><text x="66.9673%" y="367.50">b..</text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (13 samples, 1.98%)</title><rect x="66.8693%" y="341" width="1.9757%" height="15" fill="rgb(250,105,47)"/><text x="67.1193%" y="351.50">t..</text></g><g><title>broccoli::query::colfind::oned::find::{{closure}} (7 samples, 1.06%)</title><rect x="67.7812%" y="325" width="1.0638%" height="15" fill="rgb(230,72,3)"/><text x="68.0312%" y="335.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.15%)</title><rect x="68.6930%" y="309" width="0.1520%" height="15" fill="rgb(232,218,39)"/><text x="68.9430%" y="319.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (1 samples, 0.15%)</title><rect x="69.6049%" y="325" width="0.1520%" height="15" fill="rgb(248,166,6)"/><text x="69.8549%" y="335.50"></text></g><g><title>broccoli::query::colfind::inner::ColfindRecurser&lt;T,NO&gt;::recurse_seq (393 samples, 59.73%)</title><rect x="10.1824%" y="405" width="59.7264%" height="15" fill="rgb(247,89,20)"/><text x="10.4324%" y="415.50">broccoli::query::colfind::inner::ColfindRecurser&lt;T,NO&gt;::recurse_seq</text></g><g><title>broccoli::query::colfind::oned::find_2d (7 samples, 1.06%)</title><rect x="68.8450%" y="389" width="1.0638%" height="15" fill="rgb(248,130,54)"/><text x="69.0950%" y="399.50"></text></g><g><title>broccoli::query::colfind::oned::find (7 samples, 1.06%)</title><rect x="68.8450%" y="373" width="1.0638%" height="15" fill="rgb(234,196,4)"/><text x="69.0950%" y="383.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (7 samples, 1.06%)</title><rect x="68.8450%" y="357" width="1.0638%" height="15" fill="rgb(250,143,31)"/><text x="69.0950%" y="367.50"></text></g><g><title>broccoli::query::colfind::oned::find::{{closure}} (2 samples, 0.30%)</title><rect x="69.6049%" y="341" width="0.3040%" height="15" fill="rgb(211,110,34)"/><text x="69.8549%" y="351.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.15%)</title><rect x="69.7568%" y="325" width="0.1520%" height="15" fill="rgb(215,124,48)"/><text x="70.0068%" y="335.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (1 samples, 0.15%)</title><rect x="69.9088%" y="341" width="0.1520%" height="15" fill="rgb(216,46,13)"/><text x="70.1588%" y="351.50"></text></g><g><title>broccoli::query::colfind::ColfindQuery::find_colliding_pairs_mut (430 samples, 65.35%)</title><rect x="5.0152%" y="453" width="65.3495%" height="15" fill="rgb(205,184,25)"/><text x="5.2652%" y="463.50">broccoli::query::colfind::ColfindQuery::find_colliding_pairs_mut</text></g><g><title>broccoli::query::colfind::builder::QueryBuilder&lt;T&gt;::query_seq (430 samples, 65.35%)</title><rect x="5.0152%" y="437" width="65.3495%" height="15" fill="rgb(228,1,10)"/><text x="5.2652%" y="447.50">broccoli::query::colfind::builder::QueryBuilder&lt;T&gt;::query_seq</text></g><g><title>broccoli::query::colfind::inner::ColfindRecurser&lt;T,NO&gt;::recurse_seq (430 samples, 65.35%)</title><rect x="5.0152%" y="421" width="65.3495%" height="15" fill="rgb(213,116,27)"/><text x="5.2652%" y="431.50">broccoli::query::colfind::inner::ColfindRecurser&lt;T,NO&gt;::recurse_seq</text></g><g><title>broccoli::query::colfind::oned::find_2d (3 samples, 0.46%)</title><rect x="69.9088%" y="405" width="0.4559%" height="15" fill="rgb(241,95,50)"/><text x="70.1588%" y="415.50"></text></g><g><title>broccoli::query::colfind::oned::find (3 samples, 0.46%)</title><rect x="69.9088%" y="389" width="0.4559%" height="15" fill="rgb(238,48,32)"/><text x="70.1588%" y="399.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (3 samples, 0.46%)</title><rect x="69.9088%" y="373" width="0.4559%" height="15" fill="rgb(235,113,49)"/><text x="70.1588%" y="383.50"></text></g><g><title>broccoli::query::colfind::oned::find::{{closure}} (3 samples, 0.46%)</title><rect x="69.9088%" y="357" width="0.4559%" height="15" fill="rgb(205,127,43)"/><text x="70.1588%" y="367.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (2 samples, 0.30%)</title><rect x="70.0608%" y="341" width="0.3040%" height="15" fill="rgb(250,162,2)"/><text x="70.3108%" y="351.50"></text></g><g><title>&lt;broccoli::query::colfind::builder::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (1 samples, 0.15%)</title><rect x="70.2128%" y="325" width="0.1520%" height="15" fill="rgb(220,13,41)"/><text x="70.4628%" y="335.50"></text></g><g><title>broccoli::query::colfind::ColfindQuery::find_colliding_pairs_mut::{{closure}} (1 samples, 0.15%)</title><rect x="70.2128%" y="309" width="0.1520%" height="15" fill="rgb(249,221,25)"/><text x="70.4628%" y="319.50"></text></g><g><title>data_gen::profile_test::{{closure}}::{{closure}} (1 samples, 0.15%)</title><rect x="70.2128%" y="293" width="0.1520%" height="15" fill="rgb(215,208,19)"/><text x="70.4628%" y="303.50"></text></g><g><title>axgeom::range::Range&lt;T&gt;::contains_ext (3 samples, 0.46%)</title><rect x="70.6687%" y="325" width="0.4559%" height="15" fill="rgb(236,175,2)"/><text x="70.9187%" y="335.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.15%)</title><rect x="71.1246%" y="325" width="0.1520%" height="15" fill="rgb(241,52,2)"/><text x="71.3746%" y="335.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.15%)</title><rect x="71.1246%" y="309" width="0.1520%" height="15" fill="rgb(248,140,14)"/><text x="71.3746%" y="319.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.15%)</title><rect x="71.2766%" y="293" width="0.1520%" height="15" fill="rgb(253,22,42)"/><text x="71.5266%" y="303.50"></text></g><g><title>broccoli::tree::build::oned::bin_middle_left_right (8 samples, 1.22%)</title><rect x="70.3647%" y="341" width="1.2158%" height="15" fill="rgb(234,61,47)"/><text x="70.6147%" y="351.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (2 samples, 0.30%)</title><rect x="71.2766%" y="325" width="0.3040%" height="15" fill="rgb(208,226,15)"/><text x="71.5266%" y="335.50"></text></g><g><title>core::ptr::swap (2 samples, 0.30%)</title><rect x="71.2766%" y="309" width="0.3040%" height="15" fill="rgb(217,221,4)"/><text x="71.5266%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.15%)</title><rect x="71.4286%" y="293" width="0.1520%" height="15" fill="rgb(212,174,34)"/><text x="71.6786%" y="303.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (3 samples, 0.46%)</title><rect x="71.5805%" y="261" width="0.4559%" height="15" fill="rgb(253,83,4)"/><text x="71.8305%" y="271.50"></text></g><g><title>pdqselect::partition_in_blocks (6 samples, 0.91%)</title><rect x="71.5805%" y="277" width="0.9119%" height="15" fill="rgb(250,195,49)"/><text x="71.8305%" y="287.50"></text></g><g><title>pdqselect::select_by::{{closure}} (3 samples, 0.46%)</title><rect x="72.0365%" y="261" width="0.4559%" height="15" fill="rgb(241,192,25)"/><text x="72.2865%" y="271.50"></text></g><g><title>broccoli::tree::build::builder::construct_non_leaf::{{closure}} (3 samples, 0.46%)</title><rect x="72.0365%" y="245" width="0.4559%" height="15" fill="rgb(208,124,10)"/><text x="72.2865%" y="255.50"></text></g><g><title>broccoli::util::compare_bots (3 samples, 0.46%)</title><rect x="72.0365%" y="229" width="0.4559%" height="15" fill="rgb(222,33,0)"/><text x="72.2865%" y="239.50"></text></g><g><title>broccoli::tree::build::builder::Recurser&lt;T,K,S&gt;::create_non_leaf (15 samples, 2.28%)</title><rect x="70.3647%" y="373" width="2.2796%" height="15" fill="rgb(234,209,28)"/><text x="70.6147%" y="383.50">b..</text></g><g><title>broccoli::tree::build::builder::construct_non_leaf (15 samples, 2.28%)</title><rect x="70.3647%" y="357" width="2.2796%" height="15" fill="rgb(224,11,23)"/><text x="70.6147%" y="367.50">b..</text></g><g><title>pdqselect::select_by (7 samples, 1.06%)</title><rect x="71.5805%" y="341" width="1.0638%" height="15" fill="rgb(232,99,1)"/><text x="71.8305%" y="351.50"></text></g><g><title>pdqselect::quickselect (7 samples, 1.06%)</title><rect x="71.5805%" y="325" width="1.0638%" height="15" fill="rgb(237,95,45)"/><text x="71.8305%" y="335.50"></text></g><g><title>pdqselect::recurse (7 samples, 1.06%)</title><rect x="71.5805%" y="309" width="1.0638%" height="15" fill="rgb(208,109,11)"/><text x="71.8305%" y="319.50"></text></g><g><title>pdqselect::partition (7 samples, 1.06%)</title><rect x="71.5805%" y="293" width="1.0638%" height="15" fill="rgb(216,190,48)"/><text x="71.8305%" y="303.50"></text></g><g><title>pdqselect::select_by::{{closure}} (1 samples, 0.15%)</title><rect x="72.4924%" y="277" width="0.1520%" height="15" fill="rgb(251,171,36)"/><text x="72.7424%" y="287.50"></text></g><g><title>broccoli::tree::build::builder::construct_non_leaf::{{closure}} (1 samples, 0.15%)</title><rect x="72.4924%" y="261" width="0.1520%" height="15" fill="rgb(230,62,22)"/><text x="72.7424%" y="271.50"></text></g><g><title>broccoli::util::compare_bots (1 samples, 0.15%)</title><rect x="72.4924%" y="245" width="0.1520%" height="15" fill="rgb(225,114,35)"/><text x="72.7424%" y="255.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.15%)</title><rect x="72.4924%" y="229" width="0.1520%" height="15" fill="rgb(215,118,42)"/><text x="72.7424%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="72.4924%" y="213" width="0.1520%" height="15" fill="rgb(243,119,21)"/><text x="72.7424%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="72.4924%" y="197" width="0.1520%" height="15" fill="rgb(252,177,53)"/><text x="72.7424%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="72.4924%" y="181" width="0.1520%" height="15" fill="rgb(237,209,29)"/><text x="72.7424%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="72.4924%" y="165" width="0.1520%" height="15" fill="rgb(212,65,23)"/><text x="72.7424%" y="175.50"></text></g><g><title>axgeom::range::Range&lt;T&gt;::contains_ext (1 samples, 0.15%)</title><rect x="72.6444%" y="309" width="0.1520%" height="15" fill="rgb(230,222,46)"/><text x="72.8944%" y="319.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.15%)</title><rect x="72.7964%" y="309" width="0.1520%" height="15" fill="rgb(215,135,32)"/><text x="73.0464%" y="319.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.15%)</title><rect x="72.7964%" y="293" width="0.1520%" height="15" fill="rgb(246,101,22)"/><text x="73.0464%" y="303.50"></text></g><g><title>broccoli::tree::build::oned::bin_middle_left_right (4 samples, 0.61%)</title><rect x="72.6444%" y="325" width="0.6079%" height="15" fill="rgb(206,107,13)"/><text x="72.8944%" y="335.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (2 samples, 0.30%)</title><rect x="72.9483%" y="309" width="0.3040%" height="15" fill="rgb(250,100,44)"/><text x="73.1983%" y="319.50"></text></g><g><title>core::ptr::swap (2 samples, 0.30%)</title><rect x="72.9483%" y="293" width="0.3040%" height="15" fill="rgb(231,147,38)"/><text x="73.1983%" y="303.50"></text></g><g><title>core::intrinsics::copy (2 samples, 0.30%)</title><rect x="72.9483%" y="277" width="0.3040%" height="15" fill="rgb(229,8,40)"/><text x="73.1983%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.15%)</title><rect x="73.5562%" y="245" width="0.1520%" height="15" fill="rgb(221,135,30)"/><text x="73.8062%" y="255.50"></text></g><g><title>broccoli::tree::build::builder::Recurser&lt;T,K,S&gt;::create_non_leaf (8 samples, 1.22%)</title><rect x="72.6444%" y="357" width="1.2158%" height="15" fill="rgb(249,193,18)"/><text x="72.8944%" y="367.50"></text></g><g><title>broccoli::tree::build::builder::construct_non_leaf (8 samples, 1.22%)</title><rect x="72.6444%" y="341" width="1.2158%" height="15" fill="rgb(209,133,39)"/><text x="72.8944%" y="351.50"></text></g><g><title>pdqselect::select_by (4 samples, 0.61%)</title><rect x="73.2523%" y="325" width="0.6079%" height="15" fill="rgb(232,100,14)"/><text x="73.5023%" y="335.50"></text></g><g><title>pdqselect::quickselect (4 samples, 0.61%)</title><rect x="73.2523%" y="309" width="0.6079%" height="15" fill="rgb(224,185,1)"/><text x="73.5023%" y="319.50"></text></g><g><title>pdqselect::recurse (4 samples, 0.61%)</title><rect x="73.2523%" y="293" width="0.6079%" height="15" fill="rgb(223,139,8)"/><text x="73.5023%" y="303.50"></text></g><g><title>pdqselect::partition (4 samples, 0.61%)</title><rect x="73.2523%" y="277" width="0.6079%" height="15" fill="rgb(232,213,38)"/><text x="73.5023%" y="287.50"></text></g><g><title>pdqselect::partition_in_blocks (3 samples, 0.46%)</title><rect x="73.4043%" y="261" width="0.4559%" height="15" fill="rgb(207,94,22)"/><text x="73.6543%" y="271.50"></text></g><g><title>pdqselect::select_by::{{closure}} (1 samples, 0.15%)</title><rect x="73.7082%" y="245" width="0.1520%" height="15" fill="rgb(219,183,54)"/><text x="73.9582%" y="255.50"></text></g><g><title>broccoli::tree::build::builder::construct_non_leaf::{{closure}} (1 samples, 0.15%)</title><rect x="73.7082%" y="229" width="0.1520%" height="15" fill="rgb(216,185,54)"/><text x="73.9582%" y="239.50"></text></g><g><title>broccoli::util::compare_bots (1 samples, 0.15%)</title><rect x="73.7082%" y="213" width="0.1520%" height="15" fill="rgb(254,217,39)"/><text x="73.9582%" y="223.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.15%)</title><rect x="73.7082%" y="197" width="0.1520%" height="15" fill="rgb(240,178,23)"/><text x="73.9582%" y="207.50"></text></g><g><title>broccoli::tree::build::builder::NonLeafFinisher&lt;A,T&gt;::finish (1 samples, 0.15%)</title><rect x="73.8602%" y="341" width="0.1520%" height="15" fill="rgb(218,11,47)"/><text x="74.1102%" y="351.50"></text></g><g><title>broccoli::tree::build::builder::create_cont (1 samples, 0.15%)</title><rect x="73.8602%" y="325" width="0.1520%" height="15" fill="rgb(218,51,51)"/><text x="74.1102%" y="335.50"></text></g><g><title>axgeom::range::Range&lt;T&gt;::contains_ext (1 samples, 0.15%)</title><rect x="74.3161%" y="293" width="0.1520%" height="15" fill="rgb(238,126,27)"/><text x="74.5661%" y="303.50"></text></g><g><title>broccoli::tree::build::oned::bin_middle_left_right (5 samples, 0.76%)</title><rect x="74.0122%" y="309" width="0.7599%" height="15" fill="rgb(249,202,22)"/><text x="74.2622%" y="319.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (2 samples, 0.30%)</title><rect x="74.4681%" y="293" width="0.3040%" height="15" fill="rgb(254,195,49)"/><text x="74.7181%" y="303.50"></text></g><g><title>core::ptr::swap (1 samples, 0.15%)</title><rect x="74.6201%" y="277" width="0.1520%" height="15" fill="rgb(208,123,14)"/><text x="74.8701%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.15%)</title><rect x="74.6201%" y="261" width="0.1520%" height="15" fill="rgb(224,200,8)"/><text x="74.8701%" y="271.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.46%)</title><rect x="75.2280%" y="229" width="0.4559%" height="15" fill="rgb(217,61,36)"/><text x="75.4780%" y="239.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.15%)</title><rect x="75.6839%" y="229" width="0.1520%" height="15" fill="rgb(206,35,45)"/><text x="75.9339%" y="239.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (2 samples, 0.30%)</title><rect x="75.8359%" y="229" width="0.3040%" height="15" fill="rgb(217,65,33)"/><text x="76.0859%" y="239.50"></text></g><g><title>broccoli::tree::build::builder::Recurser&lt;T,K,S&gt;::create_non_leaf (17 samples, 2.58%)</title><rect x="74.0122%" y="341" width="2.5836%" height="15" fill="rgb(222,158,48)"/><text x="74.2622%" y="351.50">br..</text></g><g><title>broccoli::tree::build::builder::construct_non_leaf (17 samples, 2.58%)</title><rect x="74.0122%" y="325" width="2.5836%" height="15" fill="rgb(254,2,54)"/><text x="74.2622%" y="335.50">br..</text></g><g><title>pdqselect::select_by (12 samples, 1.82%)</title><rect x="74.7720%" y="309" width="1.8237%" height="15" fill="rgb(250,143,38)"/><text x="75.0220%" y="319.50">p..</text></g><g><title>pdqselect::quickselect (12 samples, 1.82%)</title><rect x="74.7720%" y="293" width="1.8237%" height="15" fill="rgb(248,25,0)"/><text x="75.0220%" y="303.50">p..</text></g><g><title>pdqselect::recurse (12 samples, 1.82%)</title><rect x="74.7720%" y="277" width="1.8237%" height="15" fill="rgb(206,152,27)"/><text x="75.0220%" y="287.50">p..</text></g><g><title>pdqselect::partition (12 samples, 1.82%)</title><rect x="74.7720%" y="261" width="1.8237%" height="15" fill="rgb(240,77,30)"/><text x="75.0220%" y="271.50">p..</text></g><g><title>pdqselect::partition_in_blocks (12 samples, 1.82%)</title><rect x="74.7720%" y="245" width="1.8237%" height="15" fill="rgb(231,5,3)"/><text x="75.0220%" y="255.50">p..</text></g><g><title>pdqselect::select_by::{{closure}} (3 samples, 0.46%)</title><rect x="76.1398%" y="229" width="0.4559%" height="15" fill="rgb(207,226,32)"/><text x="76.3898%" y="239.50"></text></g><g><title>broccoli::tree::build::builder::construct_non_leaf::{{closure}} (3 samples, 0.46%)</title><rect x="76.1398%" y="213" width="0.4559%" height="15" fill="rgb(222,207,47)"/><text x="76.3898%" y="223.50"></text></g><g><title>broccoli::util::compare_bots (3 samples, 0.46%)</title><rect x="76.1398%" y="197" width="0.4559%" height="15" fill="rgb(229,115,45)"/><text x="76.3898%" y="207.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.15%)</title><rect x="76.4438%" y="181" width="0.1520%" height="15" fill="rgb(224,191,6)"/><text x="76.6938%" y="191.50"></text></g><g><title>broccoli::tree::build::oned::bin_middle_left_right (3 samples, 0.46%)</title><rect x="76.5957%" y="293" width="0.4559%" height="15" fill="rgb(230,227,24)"/><text x="76.8457%" y="303.50"></text></g><g><title>axgeom::range::Range&lt;T&gt;::contains_ext (1 samples, 0.15%)</title><rect x="76.8997%" y="277" width="0.1520%" height="15" fill="rgb(228,80,19)"/><text x="77.1497%" y="287.50"></text></g><g><title>pdqselect::choose_pivot (1 samples, 0.15%)</title><rect x="77.0517%" y="245" width="0.1520%" height="15" fill="rgb(247,229,0)"/><text x="77.3017%" y="255.50"></text></g><g><title>pdqselect::choose_pivot::{{closure}} (1 samples, 0.15%)</title><rect x="77.0517%" y="229" width="0.1520%" height="15" fill="rgb(237,194,15)"/><text x="77.3017%" y="239.50"></text></g><g><title>pdqselect::choose_pivot::{{closure}} (1 samples, 0.15%)</title><rect x="77.0517%" y="213" width="0.1520%" height="15" fill="rgb(219,203,20)"/><text x="77.3017%" y="223.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.15%)</title><rect x="77.5076%" y="213" width="0.1520%" height="15" fill="rgb(234,128,8)"/><text x="77.7576%" y="223.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.15%)</title><rect x="77.6596%" y="213" width="0.1520%" height="15" fill="rgb(248,202,8)"/><text x="77.9096%" y="223.50"></text></g><g><title>broccoli::tree::build::builder::Recurser&lt;T,K,S&gt;::create_non_leaf (12 samples, 1.82%)</title><rect x="76.5957%" y="325" width="1.8237%" height="15" fill="rgb(206,104,37)"/><text x="76.8457%" y="335.50">b..</text></g><g><title>broccoli::tree::build::builder::construct_non_leaf (12 samples, 1.82%)</title><rect x="76.5957%" y="309" width="1.8237%" height="15" fill="rgb(223,8,27)"/><text x="76.8457%" y="319.50">b..</text></g><g><title>pdqselect::select_by (9 samples, 1.37%)</title><rect x="77.0517%" y="293" width="1.3678%" height="15" fill="rgb(216,217,28)"/><text x="77.3017%" y="303.50"></text></g><g><title>pdqselect::quickselect (9 samples, 1.37%)</title><rect x="77.0517%" y="277" width="1.3678%" height="15" fill="rgb(249,199,1)"/><text x="77.3017%" y="287.50"></text></g><g><title>pdqselect::recurse (9 samples, 1.37%)</title><rect x="77.0517%" y="261" width="1.3678%" height="15" fill="rgb(240,85,17)"/><text x="77.3017%" y="271.50"></text></g><g><title>pdqselect::partition (8 samples, 1.22%)</title><rect x="77.2036%" y="245" width="1.2158%" height="15" fill="rgb(206,108,45)"/><text x="77.4536%" y="255.50"></text></g><g><title>pdqselect::partition_in_blocks (8 samples, 1.22%)</title><rect x="77.2036%" y="229" width="1.2158%" height="15" fill="rgb(245,210,41)"/><text x="77.4536%" y="239.50"></text></g><g><title>pdqselect::select_by::{{closure}} (4 samples, 0.61%)</title><rect x="77.8116%" y="213" width="0.6079%" height="15" fill="rgb(206,13,37)"/><text x="78.0616%" y="223.50"></text></g><g><title>broccoli::tree::build::builder::construct_non_leaf::{{closure}} (4 samples, 0.61%)</title><rect x="77.8116%" y="197" width="0.6079%" height="15" fill="rgb(250,61,18)"/><text x="78.0616%" y="207.50"></text></g><g><title>broccoli::util::compare_bots (4 samples, 0.61%)</title><rect x="77.8116%" y="181" width="0.6079%" height="15" fill="rgb(235,172,48)"/><text x="78.0616%" y="191.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (4 samples, 0.61%)</title><rect x="77.8116%" y="165" width="0.6079%" height="15" fill="rgb(249,201,17)"/><text x="78.0616%" y="175.50"></text></g><g><title>core::slice::sort::partition (1 samples, 0.15%)</title><rect x="78.4195%" y="213" width="0.1520%" height="15" fill="rgb(219,208,6)"/><text x="78.6695%" y="223.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.15%)</title><rect x="78.5714%" y="165" width="0.1520%" height="15" fill="rgb(248,31,23)"/><text x="78.8214%" y="175.50"></text></g><g><title>&lt;core::slice::sort::CopyOnDrop&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.15%)</title><rect x="78.5714%" y="149" width="0.1520%" height="15" fill="rgb(245,15,42)"/><text x="78.8214%" y="159.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.15%)</title><rect x="78.5714%" y="133" width="0.1520%" height="15" fill="rgb(222,217,39)"/><text x="78.8214%" y="143.50"></text></g><g><title>broccoli::tree::build::builder::NonLeafFinisher&lt;A,T&gt;::finish (3 samples, 0.46%)</title><rect x="78.4195%" y="309" width="0.4559%" height="15" fill="rgb(210,219,27)"/><text x="78.6695%" y="319.50"></text></g><g><title>&lt;broccoli::tree::build::DefaultSorter as broccoli::tree::build::Sorter&gt;::sort (3 samples, 0.46%)</title><rect x="78.4195%" y="293" width="0.4559%" height="15" fill="rgb(252,166,36)"/><text x="78.6695%" y="303.50"></text></g><g><title>broccoli::util::sweeper_update (3 samples, 0.46%)</title><rect x="78.4195%" y="277" width="0.4559%" height="15" fill="rgb(245,132,34)"/><text x="78.6695%" y="287.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by (3 samples, 0.46%)</title><rect x="78.4195%" y="261" width="0.4559%" height="15" fill="rgb(236,54,3)"/><text x="78.6695%" y="271.50"></text></g><g><title>core::slice::sort::quicksort (3 samples, 0.46%)</title><rect x="78.4195%" y="245" width="0.4559%" height="15" fill="rgb(241,173,43)"/><text x="78.6695%" y="255.50"></text></g><g><title>core::slice::sort::recurse (3 samples, 0.46%)</title><rect x="78.4195%" y="229" width="0.4559%" height="15" fill="rgb(215,190,9)"/><text x="78.6695%" y="239.50"></text></g><g><title>core::slice::sort::recurse (2 samples, 0.30%)</title><rect x="78.5714%" y="213" width="0.3040%" height="15" fill="rgb(242,101,16)"/><text x="78.8214%" y="223.50"></text></g><g><title>core::slice::sort::insertion_sort (2 samples, 0.30%)</title><rect x="78.5714%" y="197" width="0.3040%" height="15" fill="rgb(223,190,21)"/><text x="78.8214%" y="207.50"></text></g><g><title>core::slice::sort::shift_tail (2 samples, 0.30%)</title><rect x="78.5714%" y="181" width="0.3040%" height="15" fill="rgb(215,228,25)"/><text x="78.8214%" y="191.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by::{{closure}} (1 samples, 0.15%)</title><rect x="78.7234%" y="165" width="0.1520%" height="15" fill="rgb(225,36,22)"/><text x="78.9734%" y="175.50"></text></g><g><title>broccoli::util::sweeper_update::{{closure}} (1 samples, 0.15%)</title><rect x="78.7234%" y="149" width="0.1520%" height="15" fill="rgb(251,106,46)"/><text x="78.9734%" y="159.50"></text></g><g><title>broccoli::util::compare_bots (1 samples, 0.15%)</title><rect x="78.7234%" y="133" width="0.1520%" height="15" fill="rgb(208,90,1)"/><text x="78.9734%" y="143.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.15%)</title><rect x="78.7234%" y="117" width="0.1520%" height="15" fill="rgb(243,10,4)"/><text x="78.9734%" y="127.50"></text></g><g><title>broccoli::tree::build::oned::bin_middle_left_right (2 samples, 0.30%)</title><rect x="78.8754%" y="277" width="0.3040%" height="15" fill="rgb(212,137,27)"/><text x="79.1254%" y="287.50"></text></g><g><title>axgeom::range::Range&lt;T&gt;::contains_ext (2 samples, 0.30%)</title><rect x="78.8754%" y="261" width="0.3040%" height="15" fill="rgb(231,220,49)"/><text x="79.1254%" y="271.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::lt (1 samples, 0.15%)</title><rect x="79.0274%" y="245" width="0.1520%" height="15" fill="rgb(237,96,20)"/><text x="79.2774%" y="255.50"></text></g><g><title>pdqselect::choose_pivot (1 samples, 0.15%)</title><rect x="79.1793%" y="229" width="0.1520%" height="15" fill="rgb(239,229,30)"/><text x="79.4293%" y="239.50"></text></g><g><title>pdqselect::choose_pivot::{{closure}} (1 samples, 0.15%)</title><rect x="79.1793%" y="213" width="0.1520%" height="15" fill="rgb(219,65,33)"/><text x="79.4293%" y="223.50"></text></g><g><title>pdqselect::choose_pivot::{{closure}} (1 samples, 0.15%)</title><rect x="79.1793%" y="197" width="0.1520%" height="15" fill="rgb(243,134,7)"/><text x="79.4293%" y="207.50"></text></g><g><title>pdqselect::insertion_sort (1 samples, 0.15%)</title><rect x="79.3313%" y="229" width="0.1520%" height="15" fill="rgb(216,177,54)"/><text x="79.5813%" y="239.50"></text></g><g><title>pdqselect::shift_tail (1 samples, 0.15%)</title><rect x="79.3313%" y="213" width="0.1520%" height="15" fill="rgb(211,160,20)"/><text x="79.5813%" y="223.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.15%)</title><rect x="79.3313%" y="197" width="0.1520%" height="15" fill="rgb(239,85,39)"/><text x="79.5813%" y="207.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.46%)</title><rect x="79.4833%" y="197" width="0.4559%" height="15" fill="rgb(232,125,22)"/><text x="79.7333%" y="207.50"></text></g><g><title>broccoli::tree::build::builder::Recurser&lt;T,K,S&gt;::create_non_leaf (12 samples, 1.82%)</title><rect x="78.8754%" y="309" width="1.8237%" height="15" fill="rgb(244,57,34)"/><text x="79.1254%" y="319.50">b..</text></g><g><title>broccoli::tree::build::builder::construct_non_leaf (12 samples, 1.82%)</title><rect x="78.8754%" y="293" width="1.8237%" height="15" fill="rgb(214,203,32)"/><text x="79.1254%" y="303.50">b..</text></g><g><title>pdqselect::select_by (10 samples, 1.52%)</title><rect x="79.1793%" y="277" width="1.5198%" height="15" fill="rgb(207,58,43)"/><text x="79.4293%" y="287.50"></text></g><g><title>pdqselect::quickselect (10 samples, 1.52%)</title><rect x="79.1793%" y="261" width="1.5198%" height="15" fill="rgb(215,193,15)"/><text x="79.4293%" y="271.50"></text></g><g><title>pdqselect::recurse (10 samples, 1.52%)</title><rect x="79.1793%" y="245" width="1.5198%" height="15" fill="rgb(232,15,44)"/><text x="79.4293%" y="255.50"></text></g><g><title>pdqselect::partition (8 samples, 1.22%)</title><rect x="79.4833%" y="229" width="1.2158%" height="15" fill="rgb(212,3,48)"/><text x="79.7333%" y="239.50"></text></g><g><title>pdqselect::partition_in_blocks (8 samples, 1.22%)</title><rect x="79.4833%" y="213" width="1.2158%" height="15" fill="rgb(218,128,7)"/><text x="79.7333%" y="223.50"></text></g><g><title>pdqselect::select_by::{{closure}} (5 samples, 0.76%)</title><rect x="79.9392%" y="197" width="0.7599%" height="15" fill="rgb(226,216,39)"/><text x="80.1892%" y="207.50"></text></g><g><title>broccoli::tree::build::builder::construct_non_leaf::{{closure}} (5 samples, 0.76%)</title><rect x="79.9392%" y="181" width="0.7599%" height="15" fill="rgb(243,47,51)"/><text x="80.1892%" y="191.50"></text></g><g><title>broccoli::util::compare_bots (5 samples, 0.76%)</title><rect x="79.9392%" y="165" width="0.7599%" height="15" fill="rgb(241,183,40)"/><text x="80.1892%" y="175.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (4 samples, 0.61%)</title><rect x="80.0912%" y="149" width="0.6079%" height="15" fill="rgb(231,217,32)"/><text x="80.3412%" y="159.50"></text></g><g><title>core::slice::sort::insertion_sort (1 samples, 0.15%)</title><rect x="80.6991%" y="181" width="0.1520%" height="15" fill="rgb(229,61,38)"/><text x="80.9491%" y="191.50"></text></g><g><title>core::slice::sort::shift_tail (1 samples, 0.15%)</title><rect x="80.6991%" y="165" width="0.1520%" height="15" fill="rgb(225,210,5)"/><text x="80.9491%" y="175.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by::{{closure}} (1 samples, 0.15%)</title><rect x="80.6991%" y="149" width="0.1520%" height="15" fill="rgb(231,79,45)"/><text x="80.9491%" y="159.50"></text></g><g><title>broccoli::util::sweeper_update::{{closure}} (1 samples, 0.15%)</title><rect x="80.6991%" y="133" width="0.1520%" height="15" fill="rgb(224,100,7)"/><text x="80.9491%" y="143.50"></text></g><g><title>broccoli::util::compare_bots (1 samples, 0.15%)</title><rect x="80.6991%" y="117" width="0.1520%" height="15" fill="rgb(241,198,18)"/><text x="80.9491%" y="127.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.15%)</title><rect x="80.6991%" y="101" width="0.1520%" height="15" fill="rgb(252,97,53)"/><text x="80.9491%" y="111.50"></text></g><g><title>broccoli::tree::build::builder::NonLeafFinisher&lt;A,T&gt;::finish (2 samples, 0.30%)</title><rect x="80.6991%" y="293" width="0.3040%" height="15" fill="rgb(220,88,7)"/><text x="80.9491%" y="303.50"></text></g><g><title>&lt;broccoli::tree::build::DefaultSorter as broccoli::tree::build::Sorter&gt;::sort (2 samples, 0.30%)</title><rect x="80.6991%" y="277" width="0.3040%" height="15" fill="rgb(213,176,14)"/><text x="80.9491%" y="287.50"></text></g><g><title>broccoli::util::sweeper_update (2 samples, 0.30%)</title><rect x="80.6991%" y="261" width="0.3040%" height="15" fill="rgb(246,73,7)"/><text x="80.9491%" y="271.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by (2 samples, 0.30%)</title><rect x="80.6991%" y="245" width="0.3040%" height="15" fill="rgb(245,64,36)"/><text x="80.9491%" y="255.50"></text></g><g><title>core::slice::sort::quicksort (2 samples, 0.30%)</title><rect x="80.6991%" y="229" width="0.3040%" height="15" fill="rgb(245,80,10)"/><text x="80.9491%" y="239.50"></text></g><g><title>core::slice::sort::recurse (2 samples, 0.30%)</title><rect x="80.6991%" y="213" width="0.3040%" height="15" fill="rgb(232,107,50)"/><text x="80.9491%" y="223.50"></text></g><g><title>core::slice::sort::recurse (2 samples, 0.30%)</title><rect x="80.6991%" y="197" width="0.3040%" height="15" fill="rgb(253,3,0)"/><text x="80.9491%" y="207.50"></text></g><g><title>core::slice::sort::partition (1 samples, 0.15%)</title><rect x="80.8511%" y="181" width="0.1520%" height="15" fill="rgb(212,99,53)"/><text x="81.1011%" y="191.50"></text></g><g><title>core::slice::sort::partition_in_blocks (1 samples, 0.15%)</title><rect x="80.8511%" y="165" width="0.1520%" height="15" fill="rgb(249,111,54)"/><text x="81.1011%" y="175.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.15%)</title><rect x="80.8511%" y="149" width="0.1520%" height="15" fill="rgb(249,55,30)"/><text x="81.1011%" y="159.50"></text></g><g><title>broccoli::tree::build::oned::bin_middle_left_right (3 samples, 0.46%)</title><rect x="81.0030%" y="261" width="0.4559%" height="15" fill="rgb(237,47,42)"/><text x="81.2530%" y="271.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (2 samples, 0.30%)</title><rect x="81.1550%" y="245" width="0.3040%" height="15" fill="rgb(211,20,18)"/><text x="81.4050%" y="255.50"></text></g><g><title>core::ptr::swap (1 samples, 0.15%)</title><rect x="81.3070%" y="229" width="0.1520%" height="15" fill="rgb(231,203,46)"/><text x="81.5570%" y="239.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.15%)</title><rect x="81.3070%" y="213" width="0.1520%" height="15" fill="rgb(237,142,3)"/><text x="81.5570%" y="223.50"></text></g><g><title>pdqselect::choose_pivot (1 samples, 0.15%)</title><rect x="81.4590%" y="213" width="0.1520%" height="15" fill="rgb(241,107,1)"/><text x="81.7090%" y="223.50"></text></g><g><title>pdqselect::choose_pivot::{{closure}} (1 samples, 0.15%)</title><rect x="81.4590%" y="197" width="0.1520%" height="15" fill="rgb(229,83,13)"/><text x="81.7090%" y="207.50"></text></g><g><title>pdqselect::choose_pivot::{{closure}} (1 samples, 0.15%)</title><rect x="81.4590%" y="181" width="0.1520%" height="15" fill="rgb(241,91,40)"/><text x="81.7090%" y="191.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.15%)</title><rect x="81.6109%" y="181" width="0.1520%" height="15" fill="rgb(225,3,45)"/><text x="81.8609%" y="191.50"></text></g><g><title>&lt;pdqselect::CopyOnDrop&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.15%)</title><rect x="81.6109%" y="165" width="0.1520%" height="15" fill="rgb(244,223,14)"/><text x="81.8609%" y="175.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.15%)</title><rect x="81.6109%" y="149" width="0.1520%" height="15" fill="rgb(224,124,37)"/><text x="81.8609%" y="159.50"></text></g><g><title>pdqselect::insertion_sort (2 samples, 0.30%)</title><rect x="81.6109%" y="213" width="0.3040%" height="15" fill="rgb(251,171,30)"/><text x="81.8609%" y="223.50"></text></g><g><title>pdqselect::shift_tail (2 samples, 0.30%)</title><rect x="81.6109%" y="197" width="0.3040%" height="15" fill="rgb(236,46,54)"/><text x="81.8609%" y="207.50"></text></g><g><title>pdqselect::select_by::{{closure}} (1 samples, 0.15%)</title><rect x="81.7629%" y="181" width="0.1520%" height="15" fill="rgb(245,213,5)"/><text x="82.0129%" y="191.50"></text></g><g><title>broccoli::tree::build::builder::construct_non_leaf::{{closure}} (1 samples, 0.15%)</title><rect x="81.7629%" y="165" width="0.1520%" height="15" fill="rgb(230,144,27)"/><text x="82.0129%" y="175.50"></text></g><g><title>broccoli::util::compare_bots (1 samples, 0.15%)</title><rect x="81.7629%" y="149" width="0.1520%" height="15" fill="rgb(220,86,6)"/><text x="82.0129%" y="159.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.15%)</title><rect x="81.7629%" y="133" width="0.1520%" height="15" fill="rgb(240,20,13)"/><text x="82.0129%" y="143.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.15%)</title><rect x="81.9149%" y="197" width="0.1520%" height="15" fill="rgb(217,89,34)"/><text x="82.1649%" y="207.50"></text></g><g><title>core::ptr::swap (1 samples, 0.15%)</title><rect x="81.9149%" y="181" width="0.1520%" height="15" fill="rgb(229,13,5)"/><text x="82.1649%" y="191.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.15%)</title><rect x="81.9149%" y="165" width="0.1520%" height="15" fill="rgb(244,67,35)"/><text x="82.1649%" y="175.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.61%)</title><rect x="82.2188%" y="181" width="0.6079%" height="15" fill="rgb(221,40,2)"/><text x="82.4688%" y="191.50"></text></g><g><title>broccoli::tree::build::builder::Recurser&lt;T,K,S&gt;::create_non_leaf (13 samples, 1.98%)</title><rect x="81.0030%" y="293" width="1.9757%" height="15" fill="rgb(237,157,21)"/><text x="81.2530%" y="303.50">b..</text></g><g><title>broccoli::tree::build::builder::construct_non_leaf (13 samples, 1.98%)</title><rect x="81.0030%" y="277" width="1.9757%" height="15" fill="rgb(222,94,11)"/><text x="81.2530%" y="287.50">b..</text></g><g><title>pdqselect::select_by (10 samples, 1.52%)</title><rect x="81.4590%" y="261" width="1.5198%" height="15" fill="rgb(249,113,6)"/><text x="81.7090%" y="271.50"></text></g><g><title>pdqselect::quickselect (10 samples, 1.52%)</title><rect x="81.4590%" y="245" width="1.5198%" height="15" fill="rgb(238,137,36)"/><text x="81.7090%" y="255.50"></text></g><g><title>pdqselect::recurse (10 samples, 1.52%)</title><rect x="81.4590%" y="229" width="1.5198%" height="15" fill="rgb(210,102,26)"/><text x="81.7090%" y="239.50"></text></g><g><title>pdqselect::partition (7 samples, 1.06%)</title><rect x="81.9149%" y="213" width="1.0638%" height="15" fill="rgb(218,30,30)"/><text x="82.1649%" y="223.50"></text></g><g><title>pdqselect::partition_in_blocks (6 samples, 0.91%)</title><rect x="82.0669%" y="197" width="0.9119%" height="15" fill="rgb(214,67,26)"/><text x="82.3169%" y="207.50"></text></g><g><title>pdqselect::select_by::{{closure}} (1 samples, 0.15%)</title><rect x="82.8267%" y="181" width="0.1520%" height="15" fill="rgb(251,9,53)"/><text x="83.0767%" y="191.50"></text></g><g><title>broccoli::tree::build::builder::construct_non_leaf::{{closure}} (1 samples, 0.15%)</title><rect x="82.8267%" y="165" width="0.1520%" height="15" fill="rgb(228,204,25)"/><text x="83.0767%" y="175.50"></text></g><g><title>broccoli::util::compare_bots (1 samples, 0.15%)</title><rect x="82.8267%" y="149" width="0.1520%" height="15" fill="rgb(207,153,8)"/><text x="83.0767%" y="159.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.15%)</title><rect x="82.8267%" y="133" width="0.1520%" height="15" fill="rgb(242,9,16)"/><text x="83.0767%" y="143.50"></text></g><g><title>core::slice::sort::partition (1 samples, 0.15%)</title><rect x="82.9787%" y="181" width="0.1520%" height="15" fill="rgb(217,211,10)"/><text x="83.2287%" y="191.50"></text></g><g><title>core::slice::sort::partition_in_blocks (1 samples, 0.15%)</title><rect x="82.9787%" y="165" width="0.1520%" height="15" fill="rgb(219,228,52)"/><text x="83.2287%" y="175.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.15%)</title><rect x="82.9787%" y="149" width="0.1520%" height="15" fill="rgb(231,92,29)"/><text x="83.2287%" y="159.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (1 samples, 0.15%)</title><rect x="82.9787%" y="133" width="0.1520%" height="15" fill="rgb(232,8,23)"/><text x="83.2287%" y="143.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (1 samples, 0.15%)</title><rect x="82.9787%" y="117" width="0.1520%" height="15" fill="rgb(216,211,34)"/><text x="83.2287%" y="127.50"></text></g><g><title>core::slice::sort::insertion_sort (1 samples, 0.15%)</title><rect x="83.1307%" y="165" width="0.1520%" height="15" fill="rgb(236,151,0)"/><text x="83.3807%" y="175.50"></text></g><g><title>core::slice::sort::shift_tail (1 samples, 0.15%)</title><rect x="83.1307%" y="149" width="0.1520%" height="15" fill="rgb(209,168,3)"/><text x="83.3807%" y="159.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.15%)</title><rect x="83.1307%" y="133" width="0.1520%" height="15" fill="rgb(208,129,28)"/><text x="83.3807%" y="143.50"></text></g><g><title>&lt;core::slice::sort::CopyOnDrop&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.15%)</title><rect x="83.1307%" y="117" width="0.1520%" height="15" fill="rgb(229,78,22)"/><text x="83.3807%" y="127.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.15%)</title><rect x="83.1307%" y="101" width="0.1520%" height="15" fill="rgb(228,187,13)"/><text x="83.3807%" y="111.50"></text></g><g><title>core::slice::sort::partition (1 samples, 0.15%)</title><rect x="83.2827%" y="165" width="0.1520%" height="15" fill="rgb(240,119,24)"/><text x="83.5327%" y="175.50"></text></g><g><title>core::slice::sort::partition_in_blocks (1 samples, 0.15%)</title><rect x="83.2827%" y="149" width="0.1520%" height="15" fill="rgb(209,194,42)"/><text x="83.5327%" y="159.50"></text></g><g><title>broccoli::tree::build::builder::NonLeafFinisher&lt;A,T&gt;::finish (4 samples, 0.61%)</title><rect x="82.9787%" y="277" width="0.6079%" height="15" fill="rgb(247,200,46)"/><text x="83.2287%" y="287.50"></text></g><g><title>&lt;broccoli::tree::build::DefaultSorter as broccoli::tree::build::Sorter&gt;::sort (4 samples, 0.61%)</title><rect x="82.9787%" y="261" width="0.6079%" height="15" fill="rgb(218,76,16)"/><text x="83.2287%" y="271.50"></text></g><g><title>broccoli::util::sweeper_update (4 samples, 0.61%)</title><rect x="82.9787%" y="245" width="0.6079%" height="15" fill="rgb(225,21,48)"/><text x="83.2287%" y="255.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by (4 samples, 0.61%)</title><rect x="82.9787%" y="229" width="0.6079%" height="15" fill="rgb(239,223,50)"/><text x="83.2287%" y="239.50"></text></g><g><title>core::slice::sort::quicksort (4 samples, 0.61%)</title><rect x="82.9787%" y="213" width="0.6079%" height="15" fill="rgb(244,45,21)"/><text x="83.2287%" y="223.50"></text></g><g><title>core::slice::sort::recurse (4 samples, 0.61%)</title><rect x="82.9787%" y="197" width="0.6079%" height="15" fill="rgb(232,33,43)"/><text x="83.2287%" y="207.50"></text></g><g><title>core::slice::sort::recurse (3 samples, 0.46%)</title><rect x="83.1307%" y="181" width="0.4559%" height="15" fill="rgb(209,8,3)"/><text x="83.3807%" y="191.50"></text></g><g><title>core::slice::sort::recurse (1 samples, 0.15%)</title><rect x="83.4347%" y="165" width="0.1520%" height="15" fill="rgb(214,25,53)"/><text x="83.6847%" y="175.50"></text></g><g><title>core::slice::sort::insertion_sort (1 samples, 0.15%)</title><rect x="83.4347%" y="149" width="0.1520%" height="15" fill="rgb(254,186,54)"/><text x="83.6847%" y="159.50"></text></g><g><title>core::slice::sort::shift_tail (1 samples, 0.15%)</title><rect x="83.4347%" y="133" width="0.1520%" height="15" fill="rgb(208,174,49)"/><text x="83.6847%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.15%)</title><rect x="83.4347%" y="117" width="0.1520%" height="15" fill="rgb(233,191,51)"/><text x="83.6847%" y="127.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range&lt;A&gt;&gt;::next_back (1 samples, 0.15%)</title><rect x="83.4347%" y="101" width="0.1520%" height="15" fill="rgb(222,134,10)"/><text x="83.6847%" y="111.50"></text></g><g><title>axgeom::range::Range&lt;T&gt;::contains_ext (2 samples, 0.30%)</title><rect x="83.5866%" y="229" width="0.3040%" height="15" fill="rgb(230,226,20)"/><text x="83.8366%" y="239.50"></text></g><g><title>broccoli::tree::build::oned::bin_middle_left_right (4 samples, 0.61%)</title><rect x="83.5866%" y="245" width="0.6079%" height="15" fill="rgb(251,111,25)"/><text x="83.8366%" y="255.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (2 samples, 0.30%)</title><rect x="83.8906%" y="229" width="0.3040%" height="15" fill="rgb(224,40,46)"/><text x="84.1406%" y="239.50"></text></g><g><title>core::ptr::swap (2 samples, 0.30%)</title><rect x="83.8906%" y="213" width="0.3040%" height="15" fill="rgb(236,108,47)"/><text x="84.1406%" y="223.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.30%)</title><rect x="83.8906%" y="197" width="0.3040%" height="15" fill="rgb(234,93,0)"/><text x="84.1406%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="84.6505%" y="165" width="0.1520%" height="15" fill="rgb(224,213,32)"/><text x="84.9005%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="84.6505%" y="149" width="0.1520%" height="15" fill="rgb(251,11,48)"/><text x="84.9005%" y="159.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="84.6505%" y="133" width="0.1520%" height="15" fill="rgb(236,173,5)"/><text x="84.9005%" y="143.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.15%)</title><rect x="84.8024%" y="165" width="0.1520%" height="15" fill="rgb(230,95,12)"/><text x="85.0524%" y="175.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.15%)</title><rect x="84.9544%" y="165" width="0.1520%" height="15" fill="rgb(232,209,1)"/><text x="85.2044%" y="175.50"></text></g><g><title>core::ptr::swap (2 samples, 0.30%)</title><rect x="85.1064%" y="165" width="0.3040%" height="15" fill="rgb(232,6,1)"/><text x="85.3564%" y="175.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.30%)</title><rect x="85.1064%" y="149" width="0.3040%" height="15" fill="rgb(210,224,50)"/><text x="85.3564%" y="159.50"></text></g><g><title>broccoli::tree::build::builder::Recurser&lt;T,K,S&gt;::create_non_leaf (13 samples, 1.98%)</title><rect x="83.5866%" y="277" width="1.9757%" height="15" fill="rgb(228,127,35)"/><text x="83.8366%" y="287.50">b..</text></g><g><title>broccoli::tree::build::builder::construct_non_leaf (13 samples, 1.98%)</title><rect x="83.5866%" y="261" width="1.9757%" height="15" fill="rgb(245,102,45)"/><text x="83.8366%" y="271.50">b..</text></g><g><title>pdqselect::select_by (9 samples, 1.37%)</title><rect x="84.1945%" y="245" width="1.3678%" height="15" fill="rgb(214,1,49)"/><text x="84.4445%" y="255.50"></text></g><g><title>pdqselect::quickselect (9 samples, 1.37%)</title><rect x="84.1945%" y="229" width="1.3678%" height="15" fill="rgb(226,163,40)"/><text x="84.4445%" y="239.50"></text></g><g><title>pdqselect::recurse (9 samples, 1.37%)</title><rect x="84.1945%" y="213" width="1.3678%" height="15" fill="rgb(239,212,28)"/><text x="84.4445%" y="223.50"></text></g><g><title>pdqselect::partition (9 samples, 1.37%)</title><rect x="84.1945%" y="197" width="1.3678%" height="15" fill="rgb(220,20,13)"/><text x="84.4445%" y="207.50"></text></g><g><title>pdqselect::partition_in_blocks (9 samples, 1.37%)</title><rect x="84.1945%" y="181" width="1.3678%" height="15" fill="rgb(210,164,35)"/><text x="84.4445%" y="191.50"></text></g><g><title>pdqselect::select_by::{{closure}} (1 samples, 0.15%)</title><rect x="85.4103%" y="165" width="0.1520%" height="15" fill="rgb(248,109,41)"/><text x="85.6603%" y="175.50"></text></g><g><title>broccoli::tree::build::builder::construct_non_leaf::{{closure}} (1 samples, 0.15%)</title><rect x="85.4103%" y="149" width="0.1520%" height="15" fill="rgb(238,23,50)"/><text x="85.6603%" y="159.50"></text></g><g><title>broccoli::util::compare_bots (1 samples, 0.15%)</title><rect x="85.4103%" y="133" width="0.1520%" height="15" fill="rgb(211,48,49)"/><text x="85.6603%" y="143.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.15%)</title><rect x="85.4103%" y="117" width="0.1520%" height="15" fill="rgb(223,36,21)"/><text x="85.6603%" y="127.50"></text></g><g><title>core::slice::sort::insertion_sort (1 samples, 0.15%)</title><rect x="85.7143%" y="165" width="0.1520%" height="15" fill="rgb(207,123,46)"/><text x="85.9643%" y="175.50"></text></g><g><title>core::slice::sort::shift_tail (1 samples, 0.15%)</title><rect x="85.7143%" y="149" width="0.1520%" height="15" fill="rgb(240,218,32)"/><text x="85.9643%" y="159.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by::{{closure}} (1 samples, 0.15%)</title><rect x="85.7143%" y="133" width="0.1520%" height="15" fill="rgb(252,5,43)"/><text x="85.9643%" y="143.50"></text></g><g><title>broccoli::util::sweeper_update::{{closure}} (1 samples, 0.15%)</title><rect x="85.7143%" y="117" width="0.1520%" height="15" fill="rgb(252,84,19)"/><text x="85.9643%" y="127.50"></text></g><g><title>broccoli::util::compare_bots (1 samples, 0.15%)</title><rect x="85.7143%" y="101" width="0.1520%" height="15" fill="rgb(243,152,39)"/><text x="85.9643%" y="111.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.15%)</title><rect x="85.7143%" y="85" width="0.1520%" height="15" fill="rgb(234,160,15)"/><text x="85.9643%" y="95.50"></text></g><g><title>&lt;broccoli::tree::build::DefaultSorter as broccoli::tree::build::Sorter&gt;::sort (3 samples, 0.46%)</title><rect x="85.5623%" y="245" width="0.4559%" height="15" fill="rgb(237,34,20)"/><text x="85.8123%" y="255.50"></text></g><g><title>broccoli::util::sweeper_update (3 samples, 0.46%)</title><rect x="85.5623%" y="229" width="0.4559%" height="15" fill="rgb(229,97,13)"/><text x="85.8123%" y="239.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by (3 samples, 0.46%)</title><rect x="85.5623%" y="213" width="0.4559%" height="15" fill="rgb(234,71,50)"/><text x="85.8123%" y="223.50"></text></g><g><title>core::slice::sort::quicksort (3 samples, 0.46%)</title><rect x="85.5623%" y="197" width="0.4559%" height="15" fill="rgb(253,155,4)"/><text x="85.8123%" y="207.50"></text></g><g><title>core::slice::sort::recurse (3 samples, 0.46%)</title><rect x="85.5623%" y="181" width="0.4559%" height="15" fill="rgb(222,185,37)"/><text x="85.8123%" y="191.50"></text></g><g><title>core::slice::sort::partition (1 samples, 0.15%)</title><rect x="85.8663%" y="165" width="0.1520%" height="15" fill="rgb(251,177,13)"/><text x="86.1163%" y="175.50"></text></g><g><title>core::slice::sort::partition_in_blocks (1 samples, 0.15%)</title><rect x="85.8663%" y="149" width="0.1520%" height="15" fill="rgb(250,179,40)"/><text x="86.1163%" y="159.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.15%)</title><rect x="85.8663%" y="133" width="0.1520%" height="15" fill="rgb(242,44,2)"/><text x="86.1163%" y="143.50"></text></g><g><title>broccoli::tree::build::builder::NonLeafFinisher&lt;A,T&gt;::finish (4 samples, 0.61%)</title><rect x="85.5623%" y="261" width="0.6079%" height="15" fill="rgb(216,177,13)"/><text x="85.8123%" y="271.50"></text></g><g><title>broccoli::tree::build::builder::create_cont (1 samples, 0.15%)</title><rect x="86.0182%" y="245" width="0.1520%" height="15" fill="rgb(216,106,43)"/><text x="86.2682%" y="255.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.15%)</title><rect x="86.0182%" y="229" width="0.1520%" height="15" fill="rgb(216,183,2)"/><text x="86.2682%" y="239.50"></text></g><g><title>broccoli::tree::build::oned::bin_middle_left_right (3 samples, 0.46%)</title><rect x="86.1702%" y="229" width="0.4559%" height="15" fill="rgb(249,75,3)"/><text x="86.4202%" y="239.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.15%)</title><rect x="86.4742%" y="213" width="0.1520%" height="15" fill="rgb(219,67,39)"/><text x="86.7242%" y="223.50"></text></g><g><title>pdqselect::choose_pivot (1 samples, 0.15%)</title><rect x="86.7781%" y="181" width="0.1520%" height="15" fill="rgb(253,228,2)"/><text x="87.0281%" y="191.50"></text></g><g><title>pdqselect::choose_pivot::{{closure}} (1 samples, 0.15%)</title><rect x="86.7781%" y="165" width="0.1520%" height="15" fill="rgb(235,138,27)"/><text x="87.0281%" y="175.50"></text></g><g><title>pdqselect::choose_pivot::{{closure}} (1 samples, 0.15%)</title><rect x="86.7781%" y="149" width="0.1520%" height="15" fill="rgb(236,97,51)"/><text x="87.0281%" y="159.50"></text></g><g><title>pdqselect::choose_pivot::{{closure}} (1 samples, 0.15%)</title><rect x="86.7781%" y="133" width="0.1520%" height="15" fill="rgb(240,80,30)"/><text x="87.0281%" y="143.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.15%)</title><rect x="87.5380%" y="149" width="0.1520%" height="15" fill="rgb(230,178,19)"/><text x="87.7880%" y="159.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (1 samples, 0.15%)</title><rect x="87.5380%" y="133" width="0.1520%" height="15" fill="rgb(210,190,27)"/><text x="87.7880%" y="143.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (1 samples, 0.15%)</title><rect x="87.5380%" y="117" width="0.1520%" height="15" fill="rgb(222,107,31)"/><text x="87.7880%" y="127.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.15%)</title><rect x="87.6900%" y="149" width="0.1520%" height="15" fill="rgb(216,127,34)"/><text x="87.9400%" y="159.50"></text></g><g><title>broccoli::tree::build::builder::Recurser&lt;T,K,S&gt;::create_non_leaf (13 samples, 1.98%)</title><rect x="86.1702%" y="261" width="1.9757%" height="15" fill="rgb(234,116,52)"/><text x="86.4202%" y="271.50">b..</text></g><g><title>broccoli::tree::build::builder::construct_non_leaf (13 samples, 1.98%)</title><rect x="86.1702%" y="245" width="1.9757%" height="15" fill="rgb(222,124,15)"/><text x="86.4202%" y="255.50">b..</text></g><g><title>pdqselect::select_by (10 samples, 1.52%)</title><rect x="86.6261%" y="229" width="1.5198%" height="15" fill="rgb(231,179,28)"/><text x="86.8761%" y="239.50"></text></g><g><title>pdqselect::quickselect (10 samples, 1.52%)</title><rect x="86.6261%" y="213" width="1.5198%" height="15" fill="rgb(226,93,45)"/><text x="86.8761%" y="223.50"></text></g><g><title>pdqselect::recurse (10 samples, 1.52%)</title><rect x="86.6261%" y="197" width="1.5198%" height="15" fill="rgb(215,8,51)"/><text x="86.8761%" y="207.50"></text></g><g><title>pdqselect::partition (8 samples, 1.22%)</title><rect x="86.9301%" y="181" width="1.2158%" height="15" fill="rgb(223,106,5)"/><text x="87.1801%" y="191.50"></text></g><g><title>pdqselect::partition_in_blocks (8 samples, 1.22%)</title><rect x="86.9301%" y="165" width="1.2158%" height="15" fill="rgb(250,191,5)"/><text x="87.1801%" y="175.50"></text></g><g><title>pdqselect::select_by::{{closure}} (2 samples, 0.30%)</title><rect x="87.8419%" y="149" width="0.3040%" height="15" fill="rgb(242,132,44)"/><text x="88.0919%" y="159.50"></text></g><g><title>broccoli::tree::build::builder::construct_non_leaf::{{closure}} (2 samples, 0.30%)</title><rect x="87.8419%" y="133" width="0.3040%" height="15" fill="rgb(251,152,29)"/><text x="88.0919%" y="143.50"></text></g><g><title>broccoli::util::compare_bots (2 samples, 0.30%)</title><rect x="87.8419%" y="117" width="0.3040%" height="15" fill="rgb(218,179,5)"/><text x="88.0919%" y="127.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (2 samples, 0.30%)</title><rect x="87.8419%" y="101" width="0.3040%" height="15" fill="rgb(227,67,19)"/><text x="88.0919%" y="111.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.15%)</title><rect x="88.1459%" y="117" width="0.1520%" height="15" fill="rgb(233,119,31)"/><text x="88.3959%" y="127.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.15%)</title><rect x="88.2979%" y="117" width="0.1520%" height="15" fill="rgb(241,120,22)"/><text x="88.5479%" y="127.50"></text></g><g><title>&lt;core::slice::sort::CopyOnDrop&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.15%)</title><rect x="88.2979%" y="101" width="0.1520%" height="15" fill="rgb(224,102,30)"/><text x="88.5479%" y="111.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.15%)</title><rect x="88.2979%" y="85" width="0.1520%" height="15" fill="rgb(210,164,37)"/><text x="88.5479%" y="95.50"></text></g><g><title>core::slice::sort::insertion_sort (3 samples, 0.46%)</title><rect x="88.1459%" y="149" width="0.4559%" height="15" fill="rgb(226,191,16)"/><text x="88.3959%" y="159.50"></text></g><g><title>core::slice::sort::shift_tail (3 samples, 0.46%)</title><rect x="88.1459%" y="133" width="0.4559%" height="15" fill="rgb(214,40,45)"/><text x="88.3959%" y="143.50"></text></g><g><title>core::ptr::read (1 samples, 0.15%)</title><rect x="88.4498%" y="117" width="0.1520%" height="15" fill="rgb(244,29,26)"/><text x="88.6998%" y="127.50"></text></g><g><title>core::slice::sort::partition (1 samples, 0.15%)</title><rect x="88.6018%" y="149" width="0.1520%" height="15" fill="rgb(216,16,5)"/><text x="88.8518%" y="159.50"></text></g><g><title>core::slice::sort::partition_in_blocks (1 samples, 0.15%)</title><rect x="88.6018%" y="133" width="0.1520%" height="15" fill="rgb(249,76,35)"/><text x="88.8518%" y="143.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.15%)</title><rect x="88.6018%" y="117" width="0.1520%" height="15" fill="rgb(207,11,44)"/><text x="88.8518%" y="127.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (1 samples, 0.15%)</title><rect x="88.6018%" y="101" width="0.1520%" height="15" fill="rgb(228,190,49)"/><text x="88.8518%" y="111.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (1 samples, 0.15%)</title><rect x="88.6018%" y="85" width="0.1520%" height="15" fill="rgb(214,173,12)"/><text x="88.8518%" y="95.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.15%)</title><rect x="88.7538%" y="117" width="0.1520%" height="15" fill="rgb(218,26,35)"/><text x="89.0038%" y="127.50"></text></g><g><title>broccoli::tree::build::builder::NonLeafFinisher&lt;A,T&gt;::finish (6 samples, 0.91%)</title><rect x="88.1459%" y="245" width="0.9119%" height="15" fill="rgb(220,200,19)"/><text x="88.3959%" y="255.50"></text></g><g><title>&lt;broccoli::tree::build::DefaultSorter as broccoli::tree::build::Sorter&gt;::sort (6 samples, 0.91%)</title><rect x="88.1459%" y="229" width="0.9119%" height="15" fill="rgb(239,95,49)"/><text x="88.3959%" y="239.50"></text></g><g><title>broccoli::util::sweeper_update (6 samples, 0.91%)</title><rect x="88.1459%" y="213" width="0.9119%" height="15" fill="rgb(235,85,53)"/><text x="88.3959%" y="223.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by (6 samples, 0.91%)</title><rect x="88.1459%" y="197" width="0.9119%" height="15" fill="rgb(233,133,31)"/><text x="88.3959%" y="207.50"></text></g><g><title>core::slice::sort::quicksort (6 samples, 0.91%)</title><rect x="88.1459%" y="181" width="0.9119%" height="15" fill="rgb(218,25,20)"/><text x="88.3959%" y="191.50"></text></g><g><title>core::slice::sort::recurse (6 samples, 0.91%)</title><rect x="88.1459%" y="165" width="0.9119%" height="15" fill="rgb(252,210,38)"/><text x="88.3959%" y="175.50"></text></g><g><title>core::slice::sort::recurse (2 samples, 0.30%)</title><rect x="88.7538%" y="149" width="0.3040%" height="15" fill="rgb(242,134,21)"/><text x="89.0038%" y="159.50"></text></g><g><title>core::slice::sort::insertion_sort (2 samples, 0.30%)</title><rect x="88.7538%" y="133" width="0.3040%" height="15" fill="rgb(213,28,48)"/><text x="89.0038%" y="143.50"></text></g><g><title>core::slice::sort::shift_tail (1 samples, 0.15%)</title><rect x="88.9058%" y="117" width="0.1520%" height="15" fill="rgb(250,196,2)"/><text x="89.1558%" y="127.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.15%)</title><rect x="88.9058%" y="101" width="0.1520%" height="15" fill="rgb(227,5,17)"/><text x="89.1558%" y="111.50"></text></g><g><title>&lt;core::slice::sort::CopyOnDrop&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.15%)</title><rect x="88.9058%" y="85" width="0.1520%" height="15" fill="rgb(221,226,24)"/><text x="89.1558%" y="95.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.15%)</title><rect x="88.9058%" y="69" width="0.1520%" height="15" fill="rgb(211,5,48)"/><text x="89.1558%" y="79.50"></text></g><g><title>broccoli::tree::build::oned::bin_middle_left_right (2 samples, 0.30%)</title><rect x="89.2097%" y="213" width="0.3040%" height="15" fill="rgb(219,150,6)"/><text x="89.4597%" y="223.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (2 samples, 0.30%)</title><rect x="89.2097%" y="197" width="0.3040%" height="15" fill="rgb(251,46,16)"/><text x="89.4597%" y="207.50"></text></g><g><title>core::ptr::swap (1 samples, 0.15%)</title><rect x="89.3617%" y="181" width="0.1520%" height="15" fill="rgb(220,204,40)"/><text x="89.6117%" y="191.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.15%)</title><rect x="89.3617%" y="165" width="0.1520%" height="15" fill="rgb(211,85,2)"/><text x="89.6117%" y="175.50"></text></g><g><title>pdqselect::choose_pivot (1 samples, 0.15%)</title><rect x="89.6657%" y="165" width="0.1520%" height="15" fill="rgb(229,17,7)"/><text x="89.9157%" y="175.50"></text></g><g><title>pdqselect::choose_pivot::{{closure}} (1 samples, 0.15%)</title><rect x="89.6657%" y="149" width="0.1520%" height="15" fill="rgb(239,72,28)"/><text x="89.9157%" y="159.50"></text></g><g><title>pdqselect::choose_pivot::{{closure}} (1 samples, 0.15%)</title><rect x="89.6657%" y="133" width="0.1520%" height="15" fill="rgb(230,47,54)"/><text x="89.9157%" y="143.50"></text></g><g><title>pdqselect::choose_pivot::{{closure}} (1 samples, 0.15%)</title><rect x="89.6657%" y="117" width="0.1520%" height="15" fill="rgb(214,50,8)"/><text x="89.9157%" y="127.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.15%)</title><rect x="89.8176%" y="133" width="0.1520%" height="15" fill="rgb(216,198,43)"/><text x="90.0676%" y="143.50"></text></g><g><title>&lt;pdqselect::CopyOnDrop&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.15%)</title><rect x="89.8176%" y="117" width="0.1520%" height="15" fill="rgb(234,20,35)"/><text x="90.0676%" y="127.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.15%)</title><rect x="89.8176%" y="101" width="0.1520%" height="15" fill="rgb(254,45,19)"/><text x="90.0676%" y="111.50"></text></g><g><title>core::ptr::read (1 samples, 0.15%)</title><rect x="89.9696%" y="133" width="0.1520%" height="15" fill="rgb(219,14,44)"/><text x="90.2196%" y="143.50"></text></g><g><title>pdqselect::insertion_sort (3 samples, 0.46%)</title><rect x="89.8176%" y="165" width="0.4559%" height="15" fill="rgb(217,220,26)"/><text x="90.0676%" y="175.50"></text></g><g><title>pdqselect::shift_tail (3 samples, 0.46%)</title><rect x="89.8176%" y="149" width="0.4559%" height="15" fill="rgb(213,158,28)"/><text x="90.0676%" y="159.50"></text></g><g><title>pdqselect::select_by::{{closure}} (1 samples, 0.15%)</title><rect x="90.1216%" y="133" width="0.1520%" height="15" fill="rgb(252,51,52)"/><text x="90.3716%" y="143.50"></text></g><g><title>broccoli::tree::build::builder::construct_non_leaf::{{closure}} (1 samples, 0.15%)</title><rect x="90.1216%" y="117" width="0.1520%" height="15" fill="rgb(246,89,16)"/><text x="90.3716%" y="127.50"></text></g><g><title>broccoli::util::compare_bots (1 samples, 0.15%)</title><rect x="90.1216%" y="101" width="0.1520%" height="15" fill="rgb(216,158,49)"/><text x="90.3716%" y="111.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.15%)</title><rect x="90.1216%" y="85" width="0.1520%" height="15" fill="rgb(236,107,19)"/><text x="90.3716%" y="95.50"></text></g><g><title>broccoli::tree::build::builder::Recurser&lt;T,K,S&gt;::create_non_leaf (13 samples, 1.98%)</title><rect x="89.0578%" y="245" width="1.9757%" height="15" fill="rgb(228,185,30)"/><text x="89.3078%" y="255.50">b..</text></g><g><title>broccoli::tree::build::builder::construct_non_leaf (13 samples, 1.98%)</title><rect x="89.0578%" y="229" width="1.9757%" height="15" fill="rgb(246,134,8)"/><text x="89.3078%" y="239.50">b..</text></g><g><title>pdqselect::select_by (10 samples, 1.52%)</title><rect x="89.5137%" y="213" width="1.5198%" height="15" fill="rgb(214,143,50)"/><text x="89.7637%" y="223.50"></text></g><g><title>pdqselect::quickselect (10 samples, 1.52%)</title><rect x="89.5137%" y="197" width="1.5198%" height="15" fill="rgb(228,75,8)"/><text x="89.7637%" y="207.50"></text></g><g><title>pdqselect::recurse (10 samples, 1.52%)</title><rect x="89.5137%" y="181" width="1.5198%" height="15" fill="rgb(207,175,4)"/><text x="89.7637%" y="191.50"></text></g><g><title>pdqselect::partition (5 samples, 0.76%)</title><rect x="90.2736%" y="165" width="0.7599%" height="15" fill="rgb(205,108,24)"/><text x="90.5236%" y="175.50"></text></g><g><title>pdqselect::partition_in_blocks (4 samples, 0.61%)</title><rect x="90.4255%" y="149" width="0.6079%" height="15" fill="rgb(244,120,49)"/><text x="90.6755%" y="159.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.46%)</title><rect x="90.5775%" y="133" width="0.4559%" height="15" fill="rgb(223,47,38)"/><text x="90.8275%" y="143.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.15%)</title><rect x="91.0334%" y="117" width="0.1520%" height="15" fill="rgb(229,179,11)"/><text x="91.2834%" y="127.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.15%)</title><rect x="91.0334%" y="101" width="0.1520%" height="15" fill="rgb(231,122,1)"/><text x="91.2834%" y="111.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.15%)</title><rect x="91.3374%" y="101" width="0.1520%" height="15" fill="rgb(245,119,9)"/><text x="91.5874%" y="111.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.46%)</title><rect x="91.4894%" y="101" width="0.4559%" height="15" fill="rgb(241,163,25)"/><text x="91.7394%" y="111.50"></text></g><g><title>&lt;core::slice::sort::CopyOnDrop&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.46%)</title><rect x="91.4894%" y="85" width="0.4559%" height="15" fill="rgb(217,214,3)"/><text x="91.7394%" y="95.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.46%)</title><rect x="91.4894%" y="69" width="0.4559%" height="15" fill="rgb(240,86,28)"/><text x="91.7394%" y="79.50"></text></g><g><title>core::slice::sort::insertion_sort (8 samples, 1.22%)</title><rect x="91.0334%" y="133" width="1.2158%" height="15" fill="rgb(215,47,9)"/><text x="91.2834%" y="143.50"></text></g><g><title>core::slice::sort::shift_tail (7 samples, 1.06%)</title><rect x="91.1854%" y="117" width="1.0638%" height="15" fill="rgb(252,25,45)"/><text x="91.4354%" y="127.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by::{{closure}} (2 samples, 0.30%)</title><rect x="91.9453%" y="101" width="0.3040%" height="15" fill="rgb(251,164,9)"/><text x="92.1953%" y="111.50"></text></g><g><title>broccoli::util::sweeper_update::{{closure}} (2 samples, 0.30%)</title><rect x="91.9453%" y="85" width="0.3040%" height="15" fill="rgb(233,194,0)"/><text x="92.1953%" y="95.50"></text></g><g><title>broccoli::util::compare_bots (2 samples, 0.30%)</title><rect x="91.9453%" y="69" width="0.3040%" height="15" fill="rgb(249,111,24)"/><text x="92.1953%" y="79.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (2 samples, 0.30%)</title><rect x="91.9453%" y="53" width="0.3040%" height="15" fill="rgb(250,223,3)"/><text x="92.1953%" y="63.50"></text></g><g><title>&lt;broccoli::tree::build::DefaultSorter as broccoli::tree::build::Sorter&gt;::sort (9 samples, 1.37%)</title><rect x="91.0334%" y="213" width="1.3678%" height="15" fill="rgb(236,178,37)"/><text x="91.2834%" y="223.50"></text></g><g><title>broccoli::util::sweeper_update (9 samples, 1.37%)</title><rect x="91.0334%" y="197" width="1.3678%" height="15" fill="rgb(241,158,50)"/><text x="91.2834%" y="207.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by (9 samples, 1.37%)</title><rect x="91.0334%" y="181" width="1.3678%" height="15" fill="rgb(213,121,41)"/><text x="91.2834%" y="191.50"></text></g><g><title>core::slice::sort::quicksort (9 samples, 1.37%)</title><rect x="91.0334%" y="165" width="1.3678%" height="15" fill="rgb(240,92,3)"/><text x="91.2834%" y="175.50"></text></g><g><title>core::slice::sort::recurse (9 samples, 1.37%)</title><rect x="91.0334%" y="149" width="1.3678%" height="15" fill="rgb(205,123,3)"/><text x="91.2834%" y="159.50"></text></g><g><title>core::slice::sort::partition (1 samples, 0.15%)</title><rect x="92.2492%" y="133" width="0.1520%" height="15" fill="rgb(205,97,47)"/><text x="92.4992%" y="143.50"></text></g><g><title>broccoli::tree::build::builder::NonLeafFinisher&lt;A,T&gt;::finish (10 samples, 1.52%)</title><rect x="91.0334%" y="229" width="1.5198%" height="15" fill="rgb(247,152,14)"/><text x="91.2834%" y="239.50"></text></g><g><title>broccoli::tree::build::builder::create_cont (1 samples, 0.15%)</title><rect x="92.4012%" y="213" width="0.1520%" height="15" fill="rgb(248,195,53)"/><text x="92.6512%" y="223.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.15%)</title><rect x="92.8571%" y="149" width="0.1520%" height="15" fill="rgb(226,201,16)"/><text x="93.1071%" y="159.50"></text></g><g><title>broccoli::tree::build::oned::bin_middle_left_right (6 samples, 0.91%)</title><rect x="92.7052%" y="197" width="0.9119%" height="15" fill="rgb(205,98,0)"/><text x="92.9552%" y="207.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (5 samples, 0.76%)</title><rect x="92.8571%" y="181" width="0.7599%" height="15" fill="rgb(214,191,48)"/><text x="93.1071%" y="191.50"></text></g><g><title>core::ptr::swap (5 samples, 0.76%)</title><rect x="92.8571%" y="165" width="0.7599%" height="15" fill="rgb(237,112,39)"/><text x="93.1071%" y="175.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.61%)</title><rect x="93.0091%" y="149" width="0.6079%" height="15" fill="rgb(247,203,27)"/><text x="93.2591%" y="159.50"></text></g><g><title>pdqselect::choose_pivot (1 samples, 0.15%)</title><rect x="93.7690%" y="149" width="0.1520%" height="15" fill="rgb(235,124,28)"/><text x="94.0190%" y="159.50"></text></g><g><title>pdqselect::choose_pivot::{{closure}} (1 samples, 0.15%)</title><rect x="93.7690%" y="133" width="0.1520%" height="15" fill="rgb(208,207,46)"/><text x="94.0190%" y="143.50"></text></g><g><title>pdqselect::choose_pivot::{{closure}} (1 samples, 0.15%)</title><rect x="93.7690%" y="117" width="0.1520%" height="15" fill="rgb(234,176,4)"/><text x="94.0190%" y="127.50"></text></g><g><title>pdqselect::select_by::{{closure}} (1 samples, 0.15%)</title><rect x="93.7690%" y="101" width="0.1520%" height="15" fill="rgb(230,133,28)"/><text x="94.0190%" y="111.50"></text></g><g><title>broccoli::tree::build::builder::construct_non_leaf::{{closure}} (1 samples, 0.15%)</title><rect x="93.7690%" y="85" width="0.1520%" height="15" fill="rgb(211,137,40)"/><text x="94.0190%" y="95.50"></text></g><g><title>broccoli::util::compare_bots (1 samples, 0.15%)</title><rect x="93.7690%" y="69" width="0.1520%" height="15" fill="rgb(254,35,13)"/><text x="94.0190%" y="79.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.15%)</title><rect x="93.7690%" y="53" width="0.1520%" height="15" fill="rgb(225,49,51)"/><text x="94.0190%" y="63.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.15%)</title><rect x="93.9210%" y="117" width="0.1520%" height="15" fill="rgb(251,10,15)"/><text x="94.1710%" y="127.50"></text></g><g><title>pdqselect::insertion_sort (3 samples, 0.46%)</title><rect x="93.9210%" y="149" width="0.4559%" height="15" fill="rgb(228,207,15)"/><text x="94.1710%" y="159.50"></text></g><g><title>pdqselect::shift_tail (3 samples, 0.46%)</title><rect x="93.9210%" y="133" width="0.4559%" height="15" fill="rgb(241,99,19)"/><text x="94.1710%" y="143.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.30%)</title><rect x="94.0729%" y="117" width="0.3040%" height="15" fill="rgb(207,104,49)"/><text x="94.3229%" y="127.50"></text></g><g><title>&lt;pdqselect::CopyOnDrop&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.30%)</title><rect x="94.0729%" y="101" width="0.3040%" height="15" fill="rgb(234,99,18)"/><text x="94.3229%" y="111.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.30%)</title><rect x="94.0729%" y="85" width="0.3040%" height="15" fill="rgb(213,191,49)"/><text x="94.3229%" y="95.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.15%)</title><rect x="95.2888%" y="117" width="0.1520%" height="15" fill="rgb(210,226,19)"/><text x="95.5388%" y="127.50"></text></g><g><title>core::ptr::swap (1 samples, 0.15%)</title><rect x="95.4407%" y="117" width="0.1520%" height="15" fill="rgb(229,97,18)"/><text x="95.6907%" y="127.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.15%)</title><rect x="95.4407%" y="101" width="0.1520%" height="15" fill="rgb(211,167,15)"/><text x="95.6907%" y="111.50"></text></g><g><title>broccoli::tree::build::builder::Recurser&lt;T,K,S&gt;::create_non_leaf (21 samples, 3.19%)</title><rect x="92.5532%" y="229" width="3.1915%" height="15" fill="rgb(210,169,34)"/><text x="92.8032%" y="239.50">bro..</text></g><g><title>broccoli::tree::build::builder::construct_non_leaf (21 samples, 3.19%)</title><rect x="92.5532%" y="213" width="3.1915%" height="15" fill="rgb(241,121,31)"/><text x="92.8032%" y="223.50">bro..</text></g><g><title>pdqselect::select_by (14 samples, 2.13%)</title><rect x="93.6170%" y="197" width="2.1277%" height="15" fill="rgb(232,40,11)"/><text x="93.8670%" y="207.50">p..</text></g><g><title>pdqselect::quickselect (14 samples, 2.13%)</title><rect x="93.6170%" y="181" width="2.1277%" height="15" fill="rgb(205,86,26)"/><text x="93.8670%" y="191.50">p..</text></g><g><title>pdqselect::recurse (14 samples, 2.13%)</title><rect x="93.6170%" y="165" width="2.1277%" height="15" fill="rgb(231,126,28)"/><text x="93.8670%" y="175.50">p..</text></g><g><title>pdqselect::partition (9 samples, 1.37%)</title><rect x="94.3769%" y="149" width="1.3678%" height="15" fill="rgb(219,221,18)"/><text x="94.6269%" y="159.50"></text></g><g><title>pdqselect::partition_in_blocks (7 samples, 1.06%)</title><rect x="94.6809%" y="133" width="1.0638%" height="15" fill="rgb(211,40,0)"/><text x="94.9309%" y="143.50"></text></g><g><title>pdqselect::select_by::{{closure}} (1 samples, 0.15%)</title><rect x="95.5927%" y="117" width="0.1520%" height="15" fill="rgb(239,85,43)"/><text x="95.8427%" y="127.50"></text></g><g><title>broccoli::tree::build::builder::construct_non_leaf::{{closure}} (1 samples, 0.15%)</title><rect x="95.5927%" y="101" width="0.1520%" height="15" fill="rgb(231,55,21)"/><text x="95.8427%" y="111.50"></text></g><g><title>broccoli::util::compare_bots (1 samples, 0.15%)</title><rect x="95.5927%" y="85" width="0.1520%" height="15" fill="rgb(225,184,43)"/><text x="95.8427%" y="95.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.15%)</title><rect x="95.5927%" y="69" width="0.1520%" height="15" fill="rgb(251,158,41)"/><text x="95.8427%" y="79.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.30%)</title><rect x="95.7447%" y="85" width="0.3040%" height="15" fill="rgb(234,159,37)"/><text x="95.9947%" y="95.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.46%)</title><rect x="96.0486%" y="85" width="0.4559%" height="15" fill="rgb(216,204,22)"/><text x="96.2986%" y="95.50"></text></g><g><title>&lt;core::slice::sort::CopyOnDrop&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.46%)</title><rect x="96.0486%" y="69" width="0.4559%" height="15" fill="rgb(214,17,3)"/><text x="96.2986%" y="79.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.46%)</title><rect x="96.0486%" y="53" width="0.4559%" height="15" fill="rgb(212,111,17)"/><text x="96.2986%" y="63.50"></text></g><g><title>core::slice::sort::insertion_sort (6 samples, 0.91%)</title><rect x="95.7447%" y="117" width="0.9119%" height="15" fill="rgb(221,157,24)"/><text x="95.9947%" y="127.50"></text></g><g><title>core::slice::sort::shift_tail (6 samples, 0.91%)</title><rect x="95.7447%" y="101" width="0.9119%" height="15" fill="rgb(252,16,13)"/><text x="95.9947%" y="111.50"></text></g><g><title>core::ptr::read (1 samples, 0.15%)</title><rect x="96.5046%" y="85" width="0.1520%" height="15" fill="rgb(221,62,2)"/><text x="96.7546%" y="95.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.15%)</title><rect x="96.8085%" y="101" width="0.1520%" height="15" fill="rgb(247,87,22)"/><text x="97.0585%" y="111.50"></text></g><g><title>core::ptr::swap (1 samples, 0.15%)</title><rect x="96.8085%" y="85" width="0.1520%" height="15" fill="rgb(215,73,9)"/><text x="97.0585%" y="95.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.15%)</title><rect x="96.8085%" y="69" width="0.1520%" height="15" fill="rgb(207,175,33)"/><text x="97.0585%" y="79.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.15%)</title><rect x="97.2644%" y="85" width="0.1520%" height="15" fill="rgb(243,129,54)"/><text x="97.5144%" y="95.50"></text></g><g><title>core::slice::sort::partition (6 samples, 0.91%)</title><rect x="96.6565%" y="117" width="0.9119%" height="15" fill="rgb(227,119,45)"/><text x="96.9065%" y="127.50"></text></g><g><title>core::slice::sort::partition_in_blocks (4 samples, 0.61%)</title><rect x="96.9605%" y="101" width="0.6079%" height="15" fill="rgb(205,109,36)"/><text x="97.2105%" y="111.50"></text></g><g><title>core::ptr::swap (1 samples, 0.15%)</title><rect x="97.4164%" y="85" width="0.1520%" height="15" fill="rgb(205,6,39)"/><text x="97.6664%" y="95.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.15%)</title><rect x="97.4164%" y="69" width="0.1520%" height="15" fill="rgb(221,32,16)"/><text x="97.6664%" y="79.50"></text></g><g><title>&lt;broccoli::tree::build::DefaultSorter as broccoli::tree::build::Sorter&gt;::sort (15 samples, 2.28%)</title><rect x="95.7447%" y="197" width="2.2796%" height="15" fill="rgb(228,144,50)"/><text x="95.9947%" y="207.50">&lt;..</text></g><g><title>broccoli::util::sweeper_update (15 samples, 2.28%)</title><rect x="95.7447%" y="181" width="2.2796%" height="15" fill="rgb(229,201,53)"/><text x="95.9947%" y="191.50">b..</text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by (15 samples, 2.28%)</title><rect x="95.7447%" y="165" width="2.2796%" height="15" fill="rgb(249,153,27)"/><text x="95.9947%" y="175.50">c..</text></g><g><title>core::slice::sort::quicksort (15 samples, 2.28%)</title><rect x="95.7447%" y="149" width="2.2796%" height="15" fill="rgb(227,106,25)"/><text x="95.9947%" y="159.50">c..</text></g><g><title>core::slice::sort::recurse (15 samples, 2.28%)</title><rect x="95.7447%" y="133" width="2.2796%" height="15" fill="rgb(230,65,29)"/><text x="95.9947%" y="143.50">c..</text></g><g><title>core::slice::sort::recurse (3 samples, 0.46%)</title><rect x="97.5684%" y="117" width="0.4559%" height="15" fill="rgb(221,57,46)"/><text x="97.8184%" y="127.50"></text></g><g><title>core::slice::sort::insertion_sort (3 samples, 0.46%)</title><rect x="97.5684%" y="101" width="0.4559%" height="15" fill="rgb(229,161,17)"/><text x="97.8184%" y="111.50"></text></g><g><title>core::slice::sort::shift_tail (3 samples, 0.46%)</title><rect x="97.5684%" y="85" width="0.4559%" height="15" fill="rgb(222,213,11)"/><text x="97.8184%" y="95.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.46%)</title><rect x="97.5684%" y="69" width="0.4559%" height="15" fill="rgb(235,35,13)"/><text x="97.8184%" y="79.50"></text></g><g><title>&lt;core::slice::sort::CopyOnDrop&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.46%)</title><rect x="97.5684%" y="53" width="0.4559%" height="15" fill="rgb(233,158,34)"/><text x="97.8184%" y="63.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.46%)</title><rect x="97.5684%" y="37" width="0.4559%" height="15" fill="rgb(215,151,48)"/><text x="97.8184%" y="47.50"></text></g><g><title>data_gen::support::bench_closure (613 samples, 93.16%)</title><rect x="5.0152%" y="501" width="93.1611%" height="15" fill="rgb(229,84,14)"/><text x="5.2652%" y="511.50">data_gen::support::bench_closure</text></g><g><title>data_gen::support::bench_closure_ret (613 samples, 93.16%)</title><rect x="5.0152%" y="485" width="93.1611%" height="15" fill="rgb(229,68,14)"/><text x="5.2652%" y="495.50">data_gen::support::bench_closure_ret</text></g><g><title>data_gen::profile_test::{{closure}} (613 samples, 93.16%)</title><rect x="5.0152%" y="469" width="93.1611%" height="15" fill="rgb(243,106,26)"/><text x="5.2652%" y="479.50">data_gen::profile_test::{{closure}}</text></g><g><title>broccoli::tree::new (183 samples, 27.81%)</title><rect x="70.3647%" y="453" width="27.8116%" height="15" fill="rgb(206,45,38)"/><text x="70.6147%" y="463.50">broccoli::tree::new</text></g><g><title>broccoli::tree::Tree&lt;T&gt;::new (183 samples, 27.81%)</title><rect x="70.3647%" y="437" width="27.8116%" height="15" fill="rgb(226,6,15)"/><text x="70.6147%" y="447.50">broccoli::tree::Tree&lt;T&gt;::new</text></g><g><title>broccoli::tree::build::builder::TreeBuilder&lt;T&gt;::build_seq (183 samples, 27.81%)</title><rect x="70.3647%" y="421" width="27.8116%" height="15" fill="rgb(232,22,54)"/><text x="70.6147%" y="431.50">broccoli::tree::build::builder::TreeBuilder&lt;T..</text></g><g><title>broccoli::tree::build::builder::create_tree_seq (183 samples, 27.81%)</title><rect x="70.3647%" y="405" width="27.8116%" height="15" fill="rgb(229,222,32)"/><text x="70.6147%" y="415.50">broccoli::tree::build::builder::create_tree_s..</text></g><g><title>broccoli::tree::build::builder::Recurser&lt;T,K,S&gt;::recurse_preorder_seq (183 samples, 27.81%)</title><rect x="70.3647%" y="389" width="27.8116%" height="15" fill="rgb(228,62,29)"/><text x="70.6147%" y="399.50">broccoli::tree::build::builder::Recurser&lt;T,K,..</text></g><g><title>broccoli::tree::build::builder::Recurser&lt;T,K,S&gt;::recurse_preorder_seq (168 samples, 25.53%)</title><rect x="72.6444%" y="373" width="25.5319%" height="15" fill="rgb(251,103,34)"/><text x="72.8944%" y="383.50">broccoli::tree::build::builder::Recurser&lt;..</text></g><g><title>broccoli::tree::build::builder::Recurser&lt;T,K,S&gt;::recurse_preorder_seq (160 samples, 24.32%)</title><rect x="73.8602%" y="357" width="24.3161%" height="15" fill="rgb(233,12,30)"/><text x="74.1102%" y="367.50">broccoli::tree::build::builder::Recurse..</text></g><g><title>broccoli::tree::build::builder::Recurser&lt;T,K,S&gt;::recurse_preorder_seq (142 samples, 21.58%)</title><rect x="76.5957%" y="341" width="21.5805%" height="15" fill="rgb(238,52,0)"/><text x="76.8457%" y="351.50">broccoli::tree::build::builder::Re..</text></g><g><title>broccoli::tree::build::builder::Recurser&lt;T,K,S&gt;::recurse_preorder_seq (130 samples, 19.76%)</title><rect x="78.4195%" y="325" width="19.7568%" height="15" fill="rgb(223,98,5)"/><text x="78.6695%" y="335.50">broccoli::tree::build::builder:..</text></g><g><title>broccoli::tree::build::builder::Recurser&lt;T,K,S&gt;::recurse_preorder_seq (115 samples, 17.48%)</title><rect x="80.6991%" y="309" width="17.4772%" height="15" fill="rgb(228,75,37)"/><text x="80.9491%" y="319.50">broccoli::tree::build::buil..</text></g><g><title>broccoli::tree::build::builder::Recurser&lt;T,K,S&gt;::recurse_preorder_seq (100 samples, 15.20%)</title><rect x="82.9787%" y="293" width="15.1976%" height="15" fill="rgb(205,115,49)"/><text x="83.2287%" y="303.50">broccoli::tree::build::..</text></g><g><title>broccoli::tree::build::builder::Recurser&lt;T,K,S&gt;::recurse_preorder_seq (83 samples, 12.61%)</title><rect x="85.5623%" y="277" width="12.6140%" height="15" fill="rgb(250,154,43)"/><text x="85.8123%" y="287.50">broccoli::tree::bui..</text></g><g><title>broccoli::tree::build::builder::Recurser&lt;T,K,S&gt;::recurse_preorder_seq (66 samples, 10.03%)</title><rect x="88.1459%" y="261" width="10.0304%" height="15" fill="rgb(226,43,29)"/><text x="88.3959%" y="271.50">broccoli::tree:..</text></g><g><title>broccoli::tree::build::builder::Recurser&lt;T,K,S&gt;::recurse_preorder_seq (47 samples, 7.14%)</title><rect x="91.0334%" y="245" width="7.1429%" height="15" fill="rgb(249,228,39)"/><text x="91.2834%" y="255.50">broccoli::..</text></g><g><title>broccoli::tree::build::builder::Recurser&lt;T,K,S&gt;::recurse_preorder_seq (16 samples, 2.43%)</title><rect x="95.7447%" y="229" width="2.4316%" height="15" fill="rgb(216,79,43)"/><text x="95.9947%" y="239.50">br..</text></g><g><title>broccoli::tree::build::builder::Recurser&lt;T,K,S&gt;::create_leaf (16 samples, 2.43%)</title><rect x="95.7447%" y="213" width="2.4316%" height="15" fill="rgb(228,95,12)"/><text x="95.9947%" y="223.50">br..</text></g><g><title>broccoli::tree::build::builder::create_cont (1 samples, 0.15%)</title><rect x="98.0243%" y="197" width="0.1520%" height="15" fill="rgb(249,221,15)"/><text x="98.2743%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.15%)</title><rect x="98.1763%" y="357" width="0.1520%" height="15" fill="rgb(233,34,13)"/><text x="98.4263%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.15%)</title><rect x="98.1763%" y="341" width="0.1520%" height="15" fill="rgb(214,103,39)"/><text x="98.4263%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.15%)</title><rect x="98.1763%" y="325" width="0.1520%" height="15" fill="rgb(251,126,39)"/><text x="98.4263%" y="335.50"></text></g><g><title>&lt;core::iter::sources::RepeatWith&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.15%)</title><rect x="98.1763%" y="309" width="0.1520%" height="15" fill="rgb(214,216,36)"/><text x="98.4263%" y="319.50"></text></g><g><title>dists::spiral_iter::{{closure}} (1 samples, 0.15%)</title><rect x="98.1763%" y="293" width="0.1520%" height="15" fill="rgb(220,221,8)"/><text x="98.4263%" y="303.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::cos (1 samples, 0.15%)</title><rect x="98.1763%" y="277" width="0.1520%" height="15" fill="rgb(240,216,3)"/><text x="98.4263%" y="287.50"></text></g><g><title>__sincos (1 samples, 0.15%)</title><rect x="98.1763%" y="261" width="0.1520%" height="15" fill="rgb(232,218,17)"/><text x="98.4263%" y="271.50"></text></g><g><title>do_sin (1 samples, 0.15%)</title><rect x="98.1763%" y="245" width="0.1520%" height="15" fill="rgb(229,163,45)"/><text x="98.4263%" y="255.50"></text></g><g><title>data_gen::support::distribute (2 samples, 0.30%)</title><rect x="98.1763%" y="501" width="0.3040%" height="15" fill="rgb(231,110,42)"/><text x="98.4263%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.30%)</title><rect x="98.1763%" y="485" width="0.3040%" height="15" fill="rgb(208,170,48)"/><text x="98.4263%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.30%)</title><rect x="98.1763%" y="469" width="0.3040%" height="15" fill="rgb(239,116,25)"/><text x="98.4263%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.30%)</title><rect x="98.1763%" y="453" width="0.3040%" height="15" fill="rgb(219,200,50)"/><text x="98.4263%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.30%)</title><rect x="98.1763%" y="437" width="0.3040%" height="15" fill="rgb(245,200,0)"/><text x="98.4263%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.30%)</title><rect x="98.1763%" y="421" width="0.3040%" height="15" fill="rgb(245,119,33)"/><text x="98.4263%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.30%)</title><rect x="98.1763%" y="405" width="0.3040%" height="15" fill="rgb(231,125,12)"/><text x="98.4263%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.30%)</title><rect x="98.1763%" y="389" width="0.3040%" height="15" fill="rgb(216,96,41)"/><text x="98.4263%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.30%)</title><rect x="98.1763%" y="373" width="0.3040%" height="15" fill="rgb(248,43,45)"/><text x="98.4263%" y="383.50"></text></g><g><title>core::iter::adapters::map_fold::{{closure}} (1 samples, 0.15%)</title><rect x="98.3283%" y="357" width="0.1520%" height="15" fill="rgb(217,222,7)"/><text x="98.5783%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.15%)</title><rect x="98.3283%" y="341" width="0.1520%" height="15" fill="rgb(233,28,6)"/><text x="98.5783%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend::{{closure}} (1 samples, 0.15%)</title><rect x="98.3283%" y="325" width="0.1520%" height="15" fill="rgb(231,218,15)"/><text x="98.5783%" y="335.50"></text></g><g><title>core::ptr::write (1 samples, 0.15%)</title><rect x="98.3283%" y="309" width="0.1520%" height="15" fill="rgb(226,171,48)"/><text x="98.5783%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="98.3283%" y="293" width="0.1520%" height="15" fill="rgb(235,201,9)"/><text x="98.5783%" y="303.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adaptor&lt;T&gt; as core::fmt::Write&gt;::write_str (2 samples, 0.30%)</title><rect x="98.4802%" y="373" width="0.3040%" height="15" fill="rgb(217,80,15)"/><text x="98.7302%" y="383.50"></text></g><g><title>&lt;std::io::stdio::StderrLock as std::io::Write&gt;::write_all (2 samples, 0.30%)</title><rect x="98.4802%" y="357" width="0.3040%" height="15" fill="rgb(219,152,8)"/><text x="98.7302%" y="367.50"></text></g><g><title>&lt;std::io::stdio::StderrRaw as std::io::Write&gt;::write_all (2 samples, 0.30%)</title><rect x="98.4802%" y="341" width="0.3040%" height="15" fill="rgb(243,107,38)"/><text x="98.7302%" y="351.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.30%)</title><rect x="98.4802%" y="325" width="0.3040%" height="15" fill="rgb(231,17,5)"/><text x="98.7302%" y="335.50"></text></g><g><title>&lt;std::sys::unix::stdio::Stderr as std::io::Write&gt;::write (2 samples, 0.30%)</title><rect x="98.4802%" y="309" width="0.3040%" height="15" fill="rgb(209,25,54)"/><text x="98.7302%" y="319.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (2 samples, 0.30%)</title><rect x="98.4802%" y="293" width="0.3040%" height="15" fill="rgb(219,0,2)"/><text x="98.7302%" y="303.50"></text></g><g><title>__libc_write (2 samples, 0.30%)</title><rect x="98.4802%" y="277" width="0.3040%" height="15" fill="rgb(246,9,5)"/><text x="98.7302%" y="287.50"></text></g><g><title>__libc_write (2 samples, 0.30%)</title><rect x="98.4802%" y="261" width="0.3040%" height="15" fill="rgb(226,159,4)"/><text x="98.7302%" y="271.50"></text></g><g><title>[unknown] (2 samples, 0.30%)</title><rect x="98.4802%" y="245" width="0.3040%" height="15" fill="rgb(219,175,34)"/><text x="98.7302%" y="255.50"></text></g><g><title>[unknown] (2 samples, 0.30%)</title><rect x="98.4802%" y="229" width="0.3040%" height="15" fill="rgb(236,10,46)"/><text x="98.7302%" y="239.50"></text></g><g><title>[unknown] (2 samples, 0.30%)</title><rect x="98.4802%" y="213" width="0.3040%" height="15" fill="rgb(240,211,16)"/><text x="98.7302%" y="223.50"></text></g><g><title>[unknown] (2 samples, 0.30%)</title><rect x="98.4802%" y="197" width="0.3040%" height="15" fill="rgb(205,3,43)"/><text x="98.7302%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="98.6322%" y="181" width="0.1520%" height="15" fill="rgb(245,7,22)"/><text x="98.8822%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="98.6322%" y="165" width="0.1520%" height="15" fill="rgb(239,132,32)"/><text x="98.8822%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="98.6322%" y="149" width="0.1520%" height="15" fill="rgb(228,202,34)"/><text x="98.8822%" y="159.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="98.6322%" y="133" width="0.1520%" height="15" fill="rgb(254,200,22)"/><text x="98.8822%" y="143.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="98.6322%" y="117" width="0.1520%" height="15" fill="rgb(219,10,39)"/><text x="98.8822%" y="127.50"></text></g><g><title>__libc_start_main (618 samples, 93.92%)</title><rect x="5.0152%" y="693" width="93.9210%" height="15" fill="rgb(226,210,39)"/><text x="5.2652%" y="703.50">__libc_start_main</text></g><g><title>main (618 samples, 93.92%)</title><rect x="5.0152%" y="677" width="93.9210%" height="15" fill="rgb(208,219,16)"/><text x="5.2652%" y="687.50">main</text></g><g><title>std::rt::lang_start_internal (618 samples, 93.92%)</title><rect x="5.0152%" y="661" width="93.9210%" height="15" fill="rgb(216,158,51)"/><text x="5.2652%" y="671.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (618 samples, 93.92%)</title><rect x="5.0152%" y="645" width="93.9210%" height="15" fill="rgb(233,14,44)"/><text x="5.2652%" y="655.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (618 samples, 93.92%)</title><rect x="5.0152%" y="629" width="93.9210%" height="15" fill="rgb(237,97,39)"/><text x="5.2652%" y="639.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (618 samples, 93.92%)</title><rect x="5.0152%" y="613" width="93.9210%" height="15" fill="rgb(218,198,43)"/><text x="5.2652%" y="623.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (618 samples, 93.92%)</title><rect x="5.0152%" y="597" width="93.9210%" height="15" fill="rgb(231,104,20)"/><text x="5.2652%" y="607.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (618 samples, 93.92%)</title><rect x="5.0152%" y="581" width="93.9210%" height="15" fill="rgb(254,36,13)"/><text x="5.2652%" y="591.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (618 samples, 93.92%)</title><rect x="5.0152%" y="565" width="93.9210%" height="15" fill="rgb(248,14,50)"/><text x="5.2652%" y="575.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (618 samples, 93.92%)</title><rect x="5.0152%" y="549" width="93.9210%" height="15" fill="rgb(217,107,29)"/><text x="5.2652%" y="559.50">core::ops::function::FnOnce::call_once</text></g><g><title>data_gen::main (618 samples, 93.92%)</title><rect x="5.0152%" y="533" width="93.9210%" height="15" fill="rgb(251,169,33)"/><text x="5.2652%" y="543.50">data_gen::main</text></g><g><title>data_gen::profile_test (618 samples, 93.92%)</title><rect x="5.0152%" y="517" width="93.9210%" height="15" fill="rgb(217,108,32)"/><text x="5.2652%" y="527.50">data_gen::profile_test</text></g><g><title>std::io::stdio::_eprint (3 samples, 0.46%)</title><rect x="98.4802%" y="501" width="0.4559%" height="15" fill="rgb(219,66,42)"/><text x="98.7302%" y="511.50"></text></g><g><title>std::io::stdio::print_to (3 samples, 0.46%)</title><rect x="98.4802%" y="485" width="0.4559%" height="15" fill="rgb(206,180,7)"/><text x="98.7302%" y="495.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (3 samples, 0.46%)</title><rect x="98.4802%" y="469" width="0.4559%" height="15" fill="rgb(208,226,31)"/><text x="98.7302%" y="479.50"></text></g><g><title>std::io::stdio::print_to::{{closure}} (3 samples, 0.46%)</title><rect x="98.4802%" y="453" width="0.4559%" height="15" fill="rgb(218,26,49)"/><text x="98.7302%" y="463.50"></text></g><g><title>&lt;std::io::stdio::Stderr as std::io::Write&gt;::write_fmt (3 samples, 0.46%)</title><rect x="98.4802%" y="437" width="0.4559%" height="15" fill="rgb(233,197,48)"/><text x="98.7302%" y="447.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stderr as std::io::Write&gt;::write_fmt (3 samples, 0.46%)</title><rect x="98.4802%" y="421" width="0.4559%" height="15" fill="rgb(252,181,51)"/><text x="98.7302%" y="431.50"></text></g><g><title>std::io::Write::write_fmt (3 samples, 0.46%)</title><rect x="98.4802%" y="405" width="0.4559%" height="15" fill="rgb(253,90,19)"/><text x="98.7302%" y="415.50"></text></g><g><title>core::fmt::write (3 samples, 0.46%)</title><rect x="98.4802%" y="389" width="0.4559%" height="15" fill="rgb(215,171,30)"/><text x="98.7302%" y="399.50"></text></g><g><title>core::fmt::run (1 samples, 0.15%)</title><rect x="98.7842%" y="373" width="0.1520%" height="15" fill="rgb(214,222,9)"/><text x="99.0342%" y="383.50"></text></g><g><title>core::fmt::float::float_to_decimal_common_shortest (1 samples, 0.15%)</title><rect x="98.7842%" y="357" width="0.1520%" height="15" fill="rgb(223,3,22)"/><text x="99.0342%" y="367.50"></text></g><g><title>core::fmt::Formatter::write_formatted_parts (1 samples, 0.15%)</title><rect x="98.7842%" y="341" width="0.1520%" height="15" fill="rgb(225,196,46)"/><text x="99.0342%" y="351.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adaptor&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.15%)</title><rect x="98.7842%" y="325" width="0.1520%" height="15" fill="rgb(209,110,37)"/><text x="99.0342%" y="335.50"></text></g><g><title>&lt;std::io::stdio::StderrLock as std::io::Write&gt;::write_all (1 samples, 0.15%)</title><rect x="98.7842%" y="309" width="0.1520%" height="15" fill="rgb(249,89,12)"/><text x="99.0342%" y="319.50"></text></g><g><title>&lt;std::io::stdio::StderrRaw as std::io::Write&gt;::write_all (1 samples, 0.15%)</title><rect x="98.7842%" y="293" width="0.1520%" height="15" fill="rgb(226,27,33)"/><text x="99.0342%" y="303.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.15%)</title><rect x="98.7842%" y="277" width="0.1520%" height="15" fill="rgb(213,82,22)"/><text x="99.0342%" y="287.50"></text></g><g><title>&lt;std::sys::unix::stdio::Stderr as std::io::Write&gt;::write (1 samples, 0.15%)</title><rect x="98.7842%" y="261" width="0.1520%" height="15" fill="rgb(248,140,0)"/><text x="99.0342%" y="271.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (1 samples, 0.15%)</title><rect x="98.7842%" y="245" width="0.1520%" height="15" fill="rgb(228,106,3)"/><text x="99.0342%" y="255.50"></text></g><g><title>__libc_write (1 samples, 0.15%)</title><rect x="98.7842%" y="229" width="0.1520%" height="15" fill="rgb(209,23,37)"/><text x="99.0342%" y="239.50"></text></g><g><title>__libc_write (1 samples, 0.15%)</title><rect x="98.7842%" y="213" width="0.1520%" height="15" fill="rgb(241,93,50)"/><text x="99.0342%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="98.7842%" y="197" width="0.1520%" height="15" fill="rgb(253,46,43)"/><text x="99.0342%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="98.7842%" y="181" width="0.1520%" height="15" fill="rgb(226,206,43)"/><text x="99.0342%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="98.7842%" y="165" width="0.1520%" height="15" fill="rgb(217,54,7)"/><text x="99.0342%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="98.7842%" y="149" width="0.1520%" height="15" fill="rgb(223,5,52)"/><text x="99.0342%" y="159.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="98.7842%" y="133" width="0.1520%" height="15" fill="rgb(206,52,46)"/><text x="99.0342%" y="143.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="98.7842%" y="117" width="0.1520%" height="15" fill="rgb(253,136,11)"/><text x="99.0342%" y="127.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="98.7842%" y="101" width="0.1520%" height="15" fill="rgb(208,106,33)"/><text x="99.0342%" y="111.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="98.7842%" y="85" width="0.1520%" height="15" fill="rgb(206,54,4)"/><text x="99.0342%" y="95.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="98.7842%" y="69" width="0.1520%" height="15" fill="rgb(213,3,15)"/><text x="99.0342%" y="79.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="98.7842%" y="53" width="0.1520%" height="15" fill="rgb(252,211,39)"/><text x="99.0342%" y="63.50"></text></g><g><title>data_gen (652 samples, 99.09%)</title><rect x="0.0000%" y="725" width="99.0881%" height="15" fill="rgb(223,6,36)"/><text x="0.2500%" y="735.50">data_gen</text></g><g><title>_start (619 samples, 94.07%)</title><rect x="5.0152%" y="709" width="94.0729%" height="15" fill="rgb(252,169,45)"/><text x="5.2652%" y="719.50">_start</text></g><g><title>_dl_start (1 samples, 0.15%)</title><rect x="98.9362%" y="693" width="0.1520%" height="15" fill="rgb(212,48,26)"/><text x="99.1862%" y="703.50"></text></g><g><title>_dl_start_final (1 samples, 0.15%)</title><rect x="98.9362%" y="677" width="0.1520%" height="15" fill="rgb(251,102,48)"/><text x="99.1862%" y="687.50"></text></g><g><title>_dl_sysdep_start (1 samples, 0.15%)</title><rect x="98.9362%" y="661" width="0.1520%" height="15" fill="rgb(243,208,16)"/><text x="99.1862%" y="671.50"></text></g><g><title>dl_main (1 samples, 0.15%)</title><rect x="98.9362%" y="645" width="0.1520%" height="15" fill="rgb(219,96,24)"/><text x="99.1862%" y="655.50"></text></g><g><title>_dl_map_object_deps (1 samples, 0.15%)</title><rect x="98.9362%" y="629" width="0.1520%" height="15" fill="rgb(219,33,29)"/><text x="99.1862%" y="639.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.15%)</title><rect x="98.9362%" y="613" width="0.1520%" height="15" fill="rgb(223,176,5)"/><text x="99.1862%" y="623.50"></text></g><g><title>openaux (1 samples, 0.15%)</title><rect x="98.9362%" y="597" width="0.1520%" height="15" fill="rgb(228,140,14)"/><text x="99.1862%" y="607.50"></text></g><g><title>_dl_map_object (1 samples, 0.15%)</title><rect x="98.9362%" y="581" width="0.1520%" height="15" fill="rgb(217,179,31)"/><text x="99.1862%" y="591.50"></text></g><g><title>_dl_map_object_from_fd (1 samples, 0.15%)</title><rect x="98.9362%" y="565" width="0.1520%" height="15" fill="rgb(230,9,30)"/><text x="99.1862%" y="575.50"></text></g><g><title>_dl_process_pt_note (1 samples, 0.15%)</title><rect x="98.9362%" y="549" width="0.1520%" height="15" fill="rgb(230,136,20)"/><text x="99.1862%" y="559.50"></text></g><g><title>__GI___pread64_nocancel (1 samples, 0.15%)</title><rect x="98.9362%" y="533" width="0.1520%" height="15" fill="rgb(215,210,22)"/><text x="99.1862%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="98.9362%" y="517" width="0.1520%" height="15" fill="rgb(218,43,5)"/><text x="99.1862%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="98.9362%" y="501" width="0.1520%" height="15" fill="rgb(216,11,5)"/><text x="99.1862%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="98.9362%" y="485" width="0.1520%" height="15" fill="rgb(209,82,29)"/><text x="99.1862%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="98.9362%" y="469" width="0.1520%" height="15" fill="rgb(244,115,12)"/><text x="99.1862%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="98.9362%" y="453" width="0.1520%" height="15" fill="rgb(222,82,18)"/><text x="99.1862%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="98.9362%" y="437" width="0.1520%" height="15" fill="rgb(249,227,8)"/><text x="99.1862%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="98.9362%" y="421" width="0.1520%" height="15" fill="rgb(253,141,45)"/><text x="99.1862%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="98.9362%" y="405" width="0.1520%" height="15" fill="rgb(234,184,4)"/><text x="99.1862%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="98.9362%" y="389" width="0.1520%" height="15" fill="rgb(218,194,23)"/><text x="99.1862%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="98.9362%" y="373" width="0.1520%" height="15" fill="rgb(235,66,41)"/><text x="99.1862%" y="383.50"></text></g><g><title>all (658 samples, 100%)</title><rect x="0.0000%" y="741" width="100.0000%" height="15" fill="rgb(245,217,1)"/><text x="0.2500%" y="751.50"></text></g><g><title>perf (6 samples, 0.91%)</title><rect x="99.0881%" y="725" width="0.9119%" height="15" fill="rgb(229,91,1)"/><text x="99.3381%" y="735.50"></text></g><g><title>[unknown] (6 samples, 0.91%)</title><rect x="99.0881%" y="709" width="0.9119%" height="15" fill="rgb(207,101,30)"/><text x="99.3381%" y="719.50"></text></g><g><title>[unknown] (6 samples, 0.91%)</title><rect x="99.0881%" y="693" width="0.9119%" height="15" fill="rgb(223,82,49)"/><text x="99.3381%" y="703.50"></text></g><g><title>[unknown] (6 samples, 0.91%)</title><rect x="99.0881%" y="677" width="0.9119%" height="15" fill="rgb(218,167,17)"/><text x="99.3381%" y="687.50"></text></g><g><title>[unknown] (6 samples, 0.91%)</title><rect x="99.0881%" y="661" width="0.9119%" height="15" fill="rgb(208,103,14)"/><text x="99.3381%" y="671.50"></text></g><g><title>[unknown] (6 samples, 0.91%)</title><rect x="99.0881%" y="645" width="0.9119%" height="15" fill="rgb(238,20,8)"/><text x="99.3381%" y="655.50"></text></g><g><title>[unknown] (6 samples, 0.91%)</title><rect x="99.0881%" y="629" width="0.9119%" height="15" fill="rgb(218,80,54)"/><text x="99.3381%" y="639.50"></text></g><g><title>[unknown] (6 samples, 0.91%)</title><rect x="99.0881%" y="613" width="0.9119%" height="15" fill="rgb(240,144,17)"/><text x="99.3381%" y="623.50"></text></g><g><title>[unknown] (5 samples, 0.76%)</title><rect x="99.2401%" y="597" width="0.7599%" height="15" fill="rgb(245,27,50)"/><text x="99.4901%" y="607.50"></text></g><g><title>[unknown] (5 samples, 0.76%)</title><rect x="99.2401%" y="581" width="0.7599%" height="15" fill="rgb(251,51,7)"/><text x="99.4901%" y="591.50"></text></g><g><title>[unknown] (5 samples, 0.76%)</title><rect x="99.2401%" y="565" width="0.7599%" height="15" fill="rgb(245,217,29)"/><text x="99.4901%" y="575.50"></text></g><g><title>[unknown] (5 samples, 0.76%)</title><rect x="99.2401%" y="549" width="0.7599%" height="15" fill="rgb(221,176,29)"/><text x="99.4901%" y="559.50"></text></g><g><title>[unknown] (5 samples, 0.76%)</title><rect x="99.2401%" y="533" width="0.7599%" height="15" fill="rgb(212,180,24)"/><text x="99.4901%" y="543.50"></text></g><g><title>[unknown] (5 samples, 0.76%)</title><rect x="99.2401%" y="517" width="0.7599%" height="15" fill="rgb(254,24,2)"/><text x="99.4901%" y="527.50"></text></g></svg></svg>