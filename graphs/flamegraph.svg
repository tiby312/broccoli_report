<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="790" onload="init(evt)" viewBox="0 0 1200 790" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="790" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="773.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="773.00"> </text><svg id="frames" x="10" width="1180"><g><title>broccoli::query::colfind::inner::ColFindRecurser&lt;T,K,S&gt;::recurse_seq (2 samples, 0.25%)</title><rect x="0.0000%" y="693" width="0.2525%" height="15" fill="rgb(227,0,7)"/><text x="0.2500%" y="703.50"></text></g><g><title>[[heap]] (3 samples, 0.38%)</title><rect x="0.0000%" y="709" width="0.3788%" height="15" fill="rgb(217,0,24)"/><text x="0.2500%" y="719.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (1 samples, 0.13%)</title><rect x="0.2525%" y="693" width="0.1263%" height="15" fill="rgb(221,193,54)"/><text x="0.5025%" y="703.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (1 samples, 0.13%)</title><rect x="0.3788%" y="693" width="0.1263%" height="15" fill="rgb(248,212,6)"/><text x="0.6288%" y="703.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (1 samples, 0.13%)</title><rect x="0.5051%" y="693" width="0.1263%" height="15" fill="rgb(208,68,35)"/><text x="0.7551%" y="703.50"></text></g><g><title>[[stack]] (3 samples, 0.38%)</title><rect x="0.3788%" y="709" width="0.3788%" height="15" fill="rgb(232,128,0)"/><text x="0.6288%" y="719.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (1 samples, 0.13%)</title><rect x="0.6313%" y="693" width="0.1263%" height="15" fill="rgb(207,160,47)"/><text x="0.8813%" y="703.50"></text></g><g><title>[anon] (1 samples, 0.13%)</title><rect x="0.7576%" y="709" width="0.1263%" height="15" fill="rgb(228,23,34)"/><text x="1.0076%" y="719.50"></text></g><g><title>core::slice::sort::recurse (1 samples, 0.13%)</title><rect x="0.7576%" y="693" width="0.1263%" height="15" fill="rgb(218,30,26)"/><text x="1.0076%" y="703.50"></text></g><g><title>[unknown] (2 samples, 0.25%)</title><rect x="1.0101%" y="693" width="0.2525%" height="15" fill="rgb(220,122,19)"/><text x="1.2601%" y="703.50"></text></g><g><title>[unknown] (2 samples, 0.25%)</title><rect x="1.0101%" y="677" width="0.2525%" height="15" fill="rgb(250,228,42)"/><text x="1.2601%" y="687.50"></text></g><g><title>[unknown] (2 samples, 0.25%)</title><rect x="1.0101%" y="661" width="0.2525%" height="15" fill="rgb(240,193,28)"/><text x="1.2601%" y="671.50"></text></g><g><title>[unknown] (2 samples, 0.25%)</title><rect x="1.0101%" y="645" width="0.2525%" height="15" fill="rgb(216,20,37)"/><text x="1.2601%" y="655.50"></text></g><g><title>[unknown] (2 samples, 0.25%)</title><rect x="1.0101%" y="629" width="0.2525%" height="15" fill="rgb(206,188,39)"/><text x="1.2601%" y="639.50"></text></g><g><title>[unknown] (2 samples, 0.25%)</title><rect x="1.0101%" y="613" width="0.2525%" height="15" fill="rgb(217,207,13)"/><text x="1.2601%" y="623.50"></text></g><g><title>[unknown] (2 samples, 0.25%)</title><rect x="1.0101%" y="597" width="0.2525%" height="15" fill="rgb(231,73,38)"/><text x="1.2601%" y="607.50"></text></g><g><title>[unknown] (2 samples, 0.25%)</title><rect x="1.0101%" y="581" width="0.2525%" height="15" fill="rgb(225,20,46)"/><text x="1.2601%" y="591.50"></text></g><g><title>[unknown] (2 samples, 0.25%)</title><rect x="1.0101%" y="565" width="0.2525%" height="15" fill="rgb(210,31,41)"/><text x="1.2601%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="1.1364%" y="549" width="0.1263%" height="15" fill="rgb(221,200,47)"/><text x="1.3864%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="1.1364%" y="533" width="0.1263%" height="15" fill="rgb(226,26,5)"/><text x="1.3864%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="1.1364%" y="517" width="0.1263%" height="15" fill="rgb(249,33,26)"/><text x="1.3864%" y="527.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (1 samples, 0.13%)</title><rect x="1.2626%" y="693" width="0.1263%" height="15" fill="rgb(235,183,28)"/><text x="1.5126%" y="703.50"></text></g><g><title>[unknown] (6 samples, 0.76%)</title><rect x="0.8838%" y="709" width="0.7576%" height="15" fill="rgb(221,5,38)"/><text x="1.1338%" y="719.50"></text></g><g><title>pdqselect::select_by (2 samples, 0.25%)</title><rect x="1.3889%" y="693" width="0.2525%" height="15" fill="rgb(247,18,42)"/><text x="1.6389%" y="703.50"></text></g><g><title>[unknown] (18 samples, 2.27%)</title><rect x="1.6414%" y="693" width="2.2727%" height="15" fill="rgb(241,131,45)"/><text x="1.8914%" y="703.50">[..</text></g><g><title>[unknown] (18 samples, 2.27%)</title><rect x="1.6414%" y="677" width="2.2727%" height="15" fill="rgb(249,31,29)"/><text x="1.8914%" y="687.50">[..</text></g><g><title>[unknown] (18 samples, 2.27%)</title><rect x="1.6414%" y="661" width="2.2727%" height="15" fill="rgb(225,111,53)"/><text x="1.8914%" y="671.50">[..</text></g><g><title>[unknown] (17 samples, 2.15%)</title><rect x="1.7677%" y="645" width="2.1465%" height="15" fill="rgb(238,160,17)"/><text x="2.0177%" y="655.50">[..</text></g><g><title>[unknown] (15 samples, 1.89%)</title><rect x="2.0202%" y="629" width="1.8939%" height="15" fill="rgb(214,148,48)"/><text x="2.2702%" y="639.50">[..</text></g><g><title>[unknown] (15 samples, 1.89%)</title><rect x="2.0202%" y="613" width="1.8939%" height="15" fill="rgb(232,36,49)"/><text x="2.2702%" y="623.50">[..</text></g><g><title>[unknown] (15 samples, 1.89%)</title><rect x="2.0202%" y="597" width="1.8939%" height="15" fill="rgb(209,103,24)"/><text x="2.2702%" y="607.50">[..</text></g><g><title>[unknown] (15 samples, 1.89%)</title><rect x="2.0202%" y="581" width="1.8939%" height="15" fill="rgb(229,88,8)"/><text x="2.2702%" y="591.50">[..</text></g><g><title>rayon_core::job::JobFifo::new (7 samples, 0.88%)</title><rect x="3.9141%" y="453" width="0.8838%" height="15" fill="rgb(213,181,19)"/><text x="4.1641%" y="463.50"></text></g><g><title>crossbeam_deque::deque::Injector&lt;T&gt;::new (7 samples, 0.88%)</title><rect x="3.9141%" y="437" width="0.8838%" height="15" fill="rgb(254,191,54)"/><text x="4.1641%" y="447.50"></text></g><g><title>&lt;crossbeam_deque::deque::Injector&lt;T&gt; as core::default::Default&gt;::default (7 samples, 0.88%)</title><rect x="3.9141%" y="421" width="0.8838%" height="15" fill="rgb(241,83,37)"/><text x="4.1641%" y="431.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (7 samples, 0.88%)</title><rect x="3.9141%" y="405" width="0.8838%" height="15" fill="rgb(233,36,39)"/><text x="4.1641%" y="415.50"></text></g><g><title>alloc::alloc::exchange_malloc (7 samples, 0.88%)</title><rect x="3.9141%" y="389" width="0.8838%" height="15" fill="rgb(226,3,54)"/><text x="4.1641%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (7 samples, 0.88%)</title><rect x="3.9141%" y="373" width="0.8838%" height="15" fill="rgb(245,192,40)"/><text x="4.1641%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 0.88%)</title><rect x="3.9141%" y="357" width="0.8838%" height="15" fill="rgb(238,167,29)"/><text x="4.1641%" y="367.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.88%)</title><rect x="3.9141%" y="341" width="0.8838%" height="15" fill="rgb(232,182,51)"/><text x="4.1641%" y="351.50"></text></g><g><title>__GI___libc_malloc (7 samples, 0.88%)</title><rect x="3.9141%" y="325" width="0.8838%" height="15" fill="rgb(231,60,39)"/><text x="4.1641%" y="335.50"></text></g><g><title>_int_malloc (7 samples, 0.88%)</title><rect x="3.9141%" y="309" width="0.8838%" height="15" fill="rgb(208,69,12)"/><text x="4.1641%" y="319.50"></text></g><g><title>[unknown] (7 samples, 0.88%)</title><rect x="3.9141%" y="293" width="0.8838%" height="15" fill="rgb(235,93,37)"/><text x="4.1641%" y="303.50"></text></g><g><title>[unknown] (7 samples, 0.88%)</title><rect x="3.9141%" y="277" width="0.8838%" height="15" fill="rgb(213,116,39)"/><text x="4.1641%" y="287.50"></text></g><g><title>[unknown] (7 samples, 0.88%)</title><rect x="3.9141%" y="261" width="0.8838%" height="15" fill="rgb(222,207,29)"/><text x="4.1641%" y="271.50"></text></g><g><title>[unknown] (7 samples, 0.88%)</title><rect x="3.9141%" y="245" width="0.8838%" height="15" fill="rgb(206,96,30)"/><text x="4.1641%" y="255.50"></text></g><g><title>[unknown] (7 samples, 0.88%)</title><rect x="3.9141%" y="229" width="0.8838%" height="15" fill="rgb(218,138,4)"/><text x="4.1641%" y="239.50"></text></g><g><title>[unknown] (7 samples, 0.88%)</title><rect x="3.9141%" y="213" width="0.8838%" height="15" fill="rgb(250,191,14)"/><text x="4.1641%" y="223.50"></text></g><g><title>[unknown] (7 samples, 0.88%)</title><rect x="3.9141%" y="197" width="0.8838%" height="15" fill="rgb(239,60,40)"/><text x="4.1641%" y="207.50"></text></g><g><title>[unknown] (7 samples, 0.88%)</title><rect x="3.9141%" y="181" width="0.8838%" height="15" fill="rgb(206,27,48)"/><text x="4.1641%" y="191.50"></text></g><g><title>[unknown] (6 samples, 0.76%)</title><rect x="4.0404%" y="165" width="0.7576%" height="15" fill="rgb(225,35,8)"/><text x="4.2904%" y="175.50"></text></g><g><title>[unknown] (6 samples, 0.76%)</title><rect x="4.0404%" y="149" width="0.7576%" height="15" fill="rgb(250,213,24)"/><text x="4.2904%" y="159.50"></text></g><g><title>[unknown] (6 samples, 0.76%)</title><rect x="4.0404%" y="133" width="0.7576%" height="15" fill="rgb(247,123,22)"/><text x="4.2904%" y="143.50"></text></g><g><title>[unknown] (6 samples, 0.76%)</title><rect x="4.0404%" y="117" width="0.7576%" height="15" fill="rgb(231,138,38)"/><text x="4.2904%" y="127.50"></text></g><g><title>[unknown] (6 samples, 0.76%)</title><rect x="4.0404%" y="101" width="0.7576%" height="15" fill="rgb(231,145,46)"/><text x="4.2904%" y="111.50"></text></g><g><title>[unknown] (6 samples, 0.76%)</title><rect x="4.0404%" y="85" width="0.7576%" height="15" fill="rgb(251,118,11)"/><text x="4.2904%" y="95.50"></text></g><g><title>std::panic::catch_unwind (9 samples, 1.14%)</title><rect x="3.9141%" y="597" width="1.1364%" height="15" fill="rgb(217,147,25)"/><text x="4.1641%" y="607.50"></text></g><g><title>std::panicking::try (9 samples, 1.14%)</title><rect x="3.9141%" y="581" width="1.1364%" height="15" fill="rgb(247,81,37)"/><text x="4.1641%" y="591.50"></text></g><g><title>std::panicking::try::do_call (9 samples, 1.14%)</title><rect x="3.9141%" y="565" width="1.1364%" height="15" fill="rgb(209,12,38)"/><text x="4.1641%" y="575.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (9 samples, 1.14%)</title><rect x="3.9141%" y="549" width="1.1364%" height="15" fill="rgb(227,1,9)"/><text x="4.1641%" y="559.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (9 samples, 1.14%)</title><rect x="3.9141%" y="533" width="1.1364%" height="15" fill="rgb(248,47,43)"/><text x="4.1641%" y="543.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (9 samples, 1.14%)</title><rect x="3.9141%" y="517" width="1.1364%" height="15" fill="rgb(221,10,30)"/><text x="4.1641%" y="527.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (9 samples, 1.14%)</title><rect x="3.9141%" y="501" width="1.1364%" height="15" fill="rgb(210,229,1)"/><text x="4.1641%" y="511.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (9 samples, 1.14%)</title><rect x="3.9141%" y="485" width="1.1364%" height="15" fill="rgb(222,148,37)"/><text x="4.1641%" y="495.50"></text></g><g><title>rayon_core::registry::main_loop (9 samples, 1.14%)</title><rect x="3.9141%" y="469" width="1.1364%" height="15" fill="rgb(234,67,33)"/><text x="4.1641%" y="479.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (2 samples, 0.25%)</title><rect x="4.7980%" y="453" width="0.2525%" height="15" fill="rgb(247,98,35)"/><text x="5.0480%" y="463.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (2 samples, 0.25%)</title><rect x="4.7980%" y="437" width="0.2525%" height="15" fill="rgb(247,138,52)"/><text x="5.0480%" y="447.50"></text></g><g><title>rayon_core::sleep::Sleep::no_work_found (2 samples, 0.25%)</title><rect x="4.7980%" y="421" width="0.2525%" height="15" fill="rgb(213,79,30)"/><text x="5.0480%" y="431.50"></text></g><g><title>__GI___sched_yield (2 samples, 0.25%)</title><rect x="4.7980%" y="405" width="0.2525%" height="15" fill="rgb(246,177,23)"/><text x="5.0480%" y="415.50"></text></g><g><title>[unknown] (2 samples, 0.25%)</title><rect x="4.7980%" y="389" width="0.2525%" height="15" fill="rgb(230,62,27)"/><text x="5.0480%" y="399.50"></text></g><g><title>[unknown] (2 samples, 0.25%)</title><rect x="4.7980%" y="373" width="0.2525%" height="15" fill="rgb(216,154,8)"/><text x="5.0480%" y="383.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (10 samples, 1.26%)</title><rect x="3.9141%" y="661" width="1.2626%" height="15" fill="rgb(244,35,45)"/><text x="4.1641%" y="671.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (10 samples, 1.26%)</title><rect x="3.9141%" y="645" width="1.2626%" height="15" fill="rgb(251,115,12)"/><text x="4.1641%" y="655.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (10 samples, 1.26%)</title><rect x="3.9141%" y="629" width="1.2626%" height="15" fill="rgb(240,54,50)"/><text x="4.1641%" y="639.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (10 samples, 1.26%)</title><rect x="3.9141%" y="613" width="1.2626%" height="15" fill="rgb(233,84,52)"/><text x="4.1641%" y="623.50"></text></g><g><title>std::sys::unix::thread::guard::current (1 samples, 0.13%)</title><rect x="5.0505%" y="597" width="0.1263%" height="15" fill="rgb(207,117,47)"/><text x="5.3005%" y="607.50"></text></g><g><title>pthread_getattr_np (1 samples, 0.13%)</title><rect x="5.0505%" y="581" width="0.1263%" height="15" fill="rgb(249,43,39)"/><text x="5.3005%" y="591.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.13%)</title><rect x="5.0505%" y="565" width="0.1263%" height="15" fill="rgb(209,38,44)"/><text x="5.3005%" y="575.50"></text></g><g><title>tcache_init (1 samples, 0.13%)</title><rect x="5.0505%" y="549" width="0.1263%" height="15" fill="rgb(236,212,23)"/><text x="5.3005%" y="559.50"></text></g><g><title>tcache_init (1 samples, 0.13%)</title><rect x="5.0505%" y="533" width="0.1263%" height="15" fill="rgb(242,79,21)"/><text x="5.3005%" y="543.50"></text></g><g><title>arena_get2 (1 samples, 0.13%)</title><rect x="5.0505%" y="517" width="0.1263%" height="15" fill="rgb(211,96,35)"/><text x="5.3005%" y="527.50"></text></g><g><title>arena_get2 (1 samples, 0.13%)</title><rect x="5.0505%" y="501" width="0.1263%" height="15" fill="rgb(253,215,40)"/><text x="5.3005%" y="511.50"></text></g><g><title>_int_new_arena (1 samples, 0.13%)</title><rect x="5.0505%" y="485" width="0.1263%" height="15" fill="rgb(211,81,21)"/><text x="5.3005%" y="495.50"></text></g><g><title>new_heap (1 samples, 0.13%)</title><rect x="5.0505%" y="469" width="0.1263%" height="15" fill="rgb(208,190,38)"/><text x="5.3005%" y="479.50"></text></g><g><title>__GI___mmap64 (1 samples, 0.13%)</title><rect x="5.0505%" y="453" width="0.1263%" height="15" fill="rgb(235,213,38)"/><text x="5.3005%" y="463.50"></text></g><g><title>__GI___mmap64 (1 samples, 0.13%)</title><rect x="5.0505%" y="437" width="0.1263%" height="15" fill="rgb(237,122,38)"/><text x="5.3005%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="5.0505%" y="421" width="0.1263%" height="15" fill="rgb(244,218,35)"/><text x="5.3005%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="5.0505%" y="405" width="0.1263%" height="15" fill="rgb(240,68,47)"/><text x="5.3005%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="5.0505%" y="389" width="0.1263%" height="15" fill="rgb(210,16,53)"/><text x="5.3005%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="5.0505%" y="373" width="0.1263%" height="15" fill="rgb(235,124,12)"/><text x="5.3005%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="5.0505%" y="357" width="0.1263%" height="15" fill="rgb(224,169,11)"/><text x="5.3005%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="5.0505%" y="341" width="0.1263%" height="15" fill="rgb(250,166,2)"/><text x="5.3005%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="5.0505%" y="325" width="0.1263%" height="15" fill="rgb(242,216,29)"/><text x="5.3005%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="5.0505%" y="309" width="0.1263%" height="15" fill="rgb(230,116,27)"/><text x="5.3005%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="5.0505%" y="293" width="0.1263%" height="15" fill="rgb(228,99,48)"/><text x="5.3005%" y="303.50"></text></g><g><title>__GI___clone (30 samples, 3.79%)</title><rect x="1.6414%" y="709" width="3.7879%" height="15" fill="rgb(253,11,6)"/><text x="1.8914%" y="719.50">__GI..</text></g><g><title>start_thread (12 samples, 1.52%)</title><rect x="3.9141%" y="693" width="1.5152%" height="15" fill="rgb(247,143,39)"/><text x="4.1641%" y="703.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (12 samples, 1.52%)</title><rect x="3.9141%" y="677" width="1.5152%" height="15" fill="rgb(236,97,10)"/><text x="4.1641%" y="687.50"></text></g><g><title>std::sys::unix::stack_overflow::Handler::new (2 samples, 0.25%)</title><rect x="5.1768%" y="661" width="0.2525%" height="15" fill="rgb(233,208,19)"/><text x="5.4268%" y="671.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (2 samples, 0.25%)</title><rect x="5.1768%" y="645" width="0.2525%" height="15" fill="rgb(216,164,2)"/><text x="5.4268%" y="655.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (2 samples, 0.25%)</title><rect x="5.1768%" y="629" width="0.2525%" height="15" fill="rgb(220,129,5)"/><text x="5.4268%" y="639.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (2 samples, 0.25%)</title><rect x="5.1768%" y="613" width="0.2525%" height="15" fill="rgb(242,17,10)"/><text x="5.4268%" y="623.50"></text></g><g><title>__GI___mmap64 (2 samples, 0.25%)</title><rect x="5.1768%" y="597" width="0.2525%" height="15" fill="rgb(242,107,0)"/><text x="5.4268%" y="607.50"></text></g><g><title>__GI___mmap64 (2 samples, 0.25%)</title><rect x="5.1768%" y="581" width="0.2525%" height="15" fill="rgb(251,28,31)"/><text x="5.4268%" y="591.50"></text></g><g><title>[unknown] (2 samples, 0.25%)</title><rect x="5.1768%" y="565" width="0.2525%" height="15" fill="rgb(233,223,10)"/><text x="5.4268%" y="575.50"></text></g><g><title>[unknown] (2 samples, 0.25%)</title><rect x="5.1768%" y="549" width="0.2525%" height="15" fill="rgb(215,21,27)"/><text x="5.4268%" y="559.50"></text></g><g><title>[unknown] (2 samples, 0.25%)</title><rect x="5.1768%" y="533" width="0.2525%" height="15" fill="rgb(232,23,21)"/><text x="5.4268%" y="543.50"></text></g><g><title>[unknown] (2 samples, 0.25%)</title><rect x="5.1768%" y="517" width="0.2525%" height="15" fill="rgb(244,5,23)"/><text x="5.4268%" y="527.50"></text></g><g><title>[unknown] (2 samples, 0.25%)</title><rect x="5.1768%" y="501" width="0.2525%" height="15" fill="rgb(226,81,46)"/><text x="5.4268%" y="511.50"></text></g><g><title>[unknown] (2 samples, 0.25%)</title><rect x="5.1768%" y="485" width="0.2525%" height="15" fill="rgb(247,70,30)"/><text x="5.4268%" y="495.50"></text></g><g><title>[unknown] (2 samples, 0.25%)</title><rect x="5.1768%" y="469" width="0.2525%" height="15" fill="rgb(212,68,19)"/><text x="5.4268%" y="479.50"></text></g><g><title>[unknown] (2 samples, 0.25%)</title><rect x="5.1768%" y="453" width="0.2525%" height="15" fill="rgb(240,187,13)"/><text x="5.4268%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="5.3030%" y="437" width="0.1263%" height="15" fill="rgb(223,113,26)"/><text x="5.5530%" y="447.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_node (5 samples, 0.63%)</title><rect x="5.4293%" y="421" width="0.6313%" height="15" fill="rgb(206,192,2)"/><text x="5.6793%" y="431.50"></text></g><g><title>broccoli::query::colfind::oned::find_2d (5 samples, 0.63%)</title><rect x="5.4293%" y="405" width="0.6313%" height="15" fill="rgb(241,108,4)"/><text x="5.6793%" y="415.50"></text></g><g><title>broccoli::query::colfind::oned::find (5 samples, 0.63%)</title><rect x="5.4293%" y="389" width="0.6313%" height="15" fill="rgb(247,173,49)"/><text x="5.6793%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (5 samples, 0.63%)</title><rect x="5.4293%" y="373" width="0.6313%" height="15" fill="rgb(224,114,35)"/><text x="5.6793%" y="383.50"></text></g><g><title>broccoli::query::colfind::oned::find::{{closure}} (5 samples, 0.63%)</title><rect x="5.4293%" y="357" width="0.6313%" height="15" fill="rgb(245,159,27)"/><text x="5.6793%" y="367.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (5 samples, 0.63%)</title><rect x="5.4293%" y="341" width="0.6313%" height="15" fill="rgb(245,172,44)"/><text x="5.6793%" y="351.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (3 samples, 0.38%)</title><rect x="5.6818%" y="325" width="0.3788%" height="15" fill="rgb(236,23,11)"/><text x="5.9318%" y="335.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (3 samples, 0.38%)</title><rect x="5.6818%" y="309" width="0.3788%" height="15" fill="rgb(205,117,38)"/><text x="5.9318%" y="319.50"></text></g><g><title>data_gen::main::{{closure}}::{{closure}} (3 samples, 0.38%)</title><rect x="5.6818%" y="293" width="0.3788%" height="15" fill="rgb(237,72,25)"/><text x="5.9318%" y="303.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_node (2 samples, 0.25%)</title><rect x="6.0606%" y="405" width="0.2525%" height="15" fill="rgb(244,70,9)"/><text x="6.3106%" y="415.50"></text></g><g><title>broccoli::query::colfind::oned::find_2d (2 samples, 0.25%)</title><rect x="6.0606%" y="389" width="0.2525%" height="15" fill="rgb(217,125,39)"/><text x="6.3106%" y="399.50"></text></g><g><title>broccoli::query::colfind::oned::find (2 samples, 0.25%)</title><rect x="6.0606%" y="373" width="0.2525%" height="15" fill="rgb(235,36,10)"/><text x="6.3106%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (2 samples, 0.25%)</title><rect x="6.0606%" y="357" width="0.2525%" height="15" fill="rgb(251,123,47)"/><text x="6.3106%" y="367.50"></text></g><g><title>broccoli::query::colfind::oned::find::{{closure}} (2 samples, 0.25%)</title><rect x="6.0606%" y="341" width="0.2525%" height="15" fill="rgb(221,13,13)"/><text x="6.3106%" y="351.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (2 samples, 0.25%)</title><rect x="6.0606%" y="325" width="0.2525%" height="15" fill="rgb(238,131,9)"/><text x="6.3106%" y="335.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFn&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.13%)</title><rect x="6.1869%" y="309" width="0.1263%" height="15" fill="rgb(211,50,8)"/><text x="6.4369%" y="319.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut_par::{{closure}} (1 samples, 0.13%)</title><rect x="6.1869%" y="293" width="0.1263%" height="15" fill="rgb(245,182,24)"/><text x="6.4369%" y="303.50"></text></g><g><title>data_gen::colfind::colfind::handle_bench_inner::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.13%)</title><rect x="6.1869%" y="277" width="0.1263%" height="15" fill="rgb(242,14,37)"/><text x="6.4369%" y="287.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (3 samples, 0.38%)</title><rect x="6.3131%" y="309" width="0.3788%" height="15" fill="rgb(246,228,12)"/><text x="6.5631%" y="319.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (2 samples, 0.25%)</title><rect x="6.4394%" y="293" width="0.2525%" height="15" fill="rgb(213,55,15)"/><text x="6.6894%" y="303.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (2 samples, 0.25%)</title><rect x="6.4394%" y="277" width="0.2525%" height="15" fill="rgb(209,9,3)"/><text x="6.6894%" y="287.50"></text></g><g><title>data_gen::main::{{closure}}::{{closure}} (2 samples, 0.25%)</title><rect x="6.4394%" y="261" width="0.2525%" height="15" fill="rgb(230,59,30)"/><text x="6.6894%" y="271.50"></text></g><g><title>broccoli::query::colfind::oned::find::{{closure}} (4 samples, 0.51%)</title><rect x="6.3131%" y="325" width="0.5051%" height="15" fill="rgb(209,121,21)"/><text x="6.5631%" y="335.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.13%)</title><rect x="6.6919%" y="309" width="0.1263%" height="15" fill="rgb(220,109,13)"/><text x="6.9419%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (5 samples, 0.63%)</title><rect x="6.3131%" y="341" width="0.6313%" height="15" fill="rgb(232,18,1)"/><text x="6.5631%" y="351.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.13%)</title><rect x="6.8182%" y="325" width="0.1263%" height="15" fill="rgb(215,41,42)"/><text x="7.0682%" y="335.50"></text></g><g><title>core::ptr::swap (1 samples, 0.13%)</title><rect x="6.8182%" y="309" width="0.1263%" height="15" fill="rgb(224,123,36)"/><text x="7.0682%" y="319.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.13%)</title><rect x="6.8182%" y="293" width="0.1263%" height="15" fill="rgb(240,125,3)"/><text x="7.0682%" y="303.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_node (6 samples, 0.76%)</title><rect x="6.3131%" y="389" width="0.7576%" height="15" fill="rgb(205,98,50)"/><text x="6.5631%" y="399.50"></text></g><g><title>broccoli::query::colfind::oned::find_2d (6 samples, 0.76%)</title><rect x="6.3131%" y="373" width="0.7576%" height="15" fill="rgb(205,185,37)"/><text x="6.5631%" y="383.50"></text></g><g><title>broccoli::query::colfind::oned::find (6 samples, 0.76%)</title><rect x="6.3131%" y="357" width="0.7576%" height="15" fill="rgb(238,207,15)"/><text x="6.5631%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.13%)</title><rect x="6.9444%" y="341" width="0.1263%" height="15" fill="rgb(213,199,42)"/><text x="7.1944%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::truncate (1 samples, 0.13%)</title><rect x="7.1970%" y="309" width="0.1263%" height="15" fill="rgb(235,201,11)"/><text x="7.4470%" y="319.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.13%)</title><rect x="7.5758%" y="293" width="0.1263%" height="15" fill="rgb(207,46,11)"/><text x="7.8258%" y="303.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.13%)</title><rect x="7.5758%" y="277" width="0.1263%" height="15" fill="rgb(241,35,35)"/><text x="7.8258%" y="287.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (1 samples, 0.13%)</title><rect x="7.5758%" y="261" width="0.1263%" height="15" fill="rgb(243,32,47)"/><text x="7.8258%" y="271.50"></text></g><g><title>data_gen::main::{{closure}}::{{closure}} (1 samples, 0.13%)</title><rect x="7.5758%" y="245" width="0.1263%" height="15" fill="rgb(247,202,23)"/><text x="7.8258%" y="255.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_node (7 samples, 0.88%)</title><rect x="7.0707%" y="373" width="0.8838%" height="15" fill="rgb(219,102,11)"/><text x="7.3207%" y="383.50"></text></g><g><title>broccoli::query::colfind::oned::find_2d (7 samples, 0.88%)</title><rect x="7.0707%" y="357" width="0.8838%" height="15" fill="rgb(243,110,44)"/><text x="7.3207%" y="367.50"></text></g><g><title>broccoli::query::colfind::oned::find (7 samples, 0.88%)</title><rect x="7.0707%" y="341" width="0.8838%" height="15" fill="rgb(222,74,54)"/><text x="7.3207%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (7 samples, 0.88%)</title><rect x="7.0707%" y="325" width="0.8838%" height="15" fill="rgb(216,99,12)"/><text x="7.3207%" y="335.50"></text></g><g><title>broccoli::query::colfind::oned::find::{{closure}} (5 samples, 0.63%)</title><rect x="7.3232%" y="309" width="0.6313%" height="15" fill="rgb(226,22,26)"/><text x="7.5732%" y="319.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (2 samples, 0.25%)</title><rect x="7.7020%" y="293" width="0.2525%" height="15" fill="rgb(217,163,10)"/><text x="7.9520%" y="303.50"></text></g><g><title>broccoli::query::colfind::oned::find::{{closure}} (3 samples, 0.38%)</title><rect x="7.9545%" y="293" width="0.3788%" height="15" fill="rgb(213,25,53)"/><text x="8.2045%" y="303.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.13%)</title><rect x="8.2071%" y="277" width="0.1263%" height="15" fill="rgb(252,105,26)"/><text x="8.4571%" y="287.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.13%)</title><rect x="8.2071%" y="261" width="0.1263%" height="15" fill="rgb(220,39,43)"/><text x="8.4571%" y="271.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (1 samples, 0.13%)</title><rect x="8.2071%" y="245" width="0.1263%" height="15" fill="rgb(229,68,48)"/><text x="8.4571%" y="255.50"></text></g><g><title>data_gen::main::{{closure}}::{{closure}} (1 samples, 0.13%)</title><rect x="8.2071%" y="229" width="0.1263%" height="15" fill="rgb(252,8,32)"/><text x="8.4571%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (4 samples, 0.51%)</title><rect x="7.9545%" y="309" width="0.5051%" height="15" fill="rgb(223,20,43)"/><text x="8.2045%" y="319.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.13%)</title><rect x="8.3333%" y="293" width="0.1263%" height="15" fill="rgb(229,81,49)"/><text x="8.5833%" y="303.50"></text></g><g><title>core::ptr::swap (1 samples, 0.13%)</title><rect x="8.3333%" y="277" width="0.1263%" height="15" fill="rgb(236,28,36)"/><text x="8.5833%" y="287.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.13%)</title><rect x="8.3333%" y="261" width="0.1263%" height="15" fill="rgb(249,185,26)"/><text x="8.5833%" y="271.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_node (6 samples, 0.76%)</title><rect x="7.9545%" y="357" width="0.7576%" height="15" fill="rgb(249,174,33)"/><text x="8.2045%" y="367.50"></text></g><g><title>broccoli::query::colfind::oned::find_2d (6 samples, 0.76%)</title><rect x="7.9545%" y="341" width="0.7576%" height="15" fill="rgb(233,201,37)"/><text x="8.2045%" y="351.50"></text></g><g><title>broccoli::query::colfind::oned::find (6 samples, 0.76%)</title><rect x="7.9545%" y="325" width="0.7576%" height="15" fill="rgb(221,78,26)"/><text x="8.2045%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (2 samples, 0.25%)</title><rect x="8.4596%" y="309" width="0.2525%" height="15" fill="rgb(250,127,30)"/><text x="8.7096%" y="319.50"></text></g><g><title>core::ptr::write (2 samples, 0.25%)</title><rect x="8.4596%" y="293" width="0.2525%" height="15" fill="rgb(230,49,44)"/><text x="8.7096%" y="303.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.13%)</title><rect x="8.8384%" y="261" width="0.1263%" height="15" fill="rgb(229,67,23)"/><text x="9.0884%" y="271.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.13%)</title><rect x="8.8384%" y="245" width="0.1263%" height="15" fill="rgb(249,83,47)"/><text x="9.0884%" y="255.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (1 samples, 0.13%)</title><rect x="8.8384%" y="229" width="0.1263%" height="15" fill="rgb(215,43,3)"/><text x="9.0884%" y="239.50"></text></g><g><title>data_gen::main::{{closure}}::{{closure}} (1 samples, 0.13%)</title><rect x="8.8384%" y="213" width="0.1263%" height="15" fill="rgb(238,154,13)"/><text x="9.0884%" y="223.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_node (3 samples, 0.38%)</title><rect x="8.7121%" y="341" width="0.3788%" height="15" fill="rgb(219,56,2)"/><text x="8.9621%" y="351.50"></text></g><g><title>broccoli::query::colfind::oned::find_2d (3 samples, 0.38%)</title><rect x="8.7121%" y="325" width="0.3788%" height="15" fill="rgb(233,0,4)"/><text x="8.9621%" y="335.50"></text></g><g><title>broccoli::query::colfind::oned::find (3 samples, 0.38%)</title><rect x="8.7121%" y="309" width="0.3788%" height="15" fill="rgb(235,30,7)"/><text x="8.9621%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (3 samples, 0.38%)</title><rect x="8.7121%" y="293" width="0.3788%" height="15" fill="rgb(250,79,13)"/><text x="8.9621%" y="303.50"></text></g><g><title>broccoli::query::colfind::oned::find::{{closure}} (2 samples, 0.25%)</title><rect x="8.8384%" y="277" width="0.2525%" height="15" fill="rgb(211,146,34)"/><text x="9.0884%" y="287.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.13%)</title><rect x="8.9646%" y="261" width="0.1263%" height="15" fill="rgb(228,22,38)"/><text x="9.2146%" y="271.50"></text></g><g><title>broccoli::query::colfind::oned::find::{{closure}} (1 samples, 0.13%)</title><rect x="9.0909%" y="261" width="0.1263%" height="15" fill="rgb(235,168,5)"/><text x="9.3409%" y="271.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.13%)</title><rect x="9.0909%" y="245" width="0.1263%" height="15" fill="rgb(221,155,16)"/><text x="9.3409%" y="255.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.13%)</title><rect x="9.0909%" y="229" width="0.1263%" height="15" fill="rgb(215,215,53)"/><text x="9.3409%" y="239.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (1 samples, 0.13%)</title><rect x="9.0909%" y="213" width="0.1263%" height="15" fill="rgb(223,4,10)"/><text x="9.3409%" y="223.50"></text></g><g><title>data_gen::main::{{closure}}::{{closure}} (1 samples, 0.13%)</title><rect x="9.0909%" y="197" width="0.1263%" height="15" fill="rgb(234,103,6)"/><text x="9.3409%" y="207.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_node (2 samples, 0.25%)</title><rect x="9.0909%" y="325" width="0.2525%" height="15" fill="rgb(227,97,0)"/><text x="9.3409%" y="335.50"></text></g><g><title>broccoli::query::colfind::oned::find_2d (2 samples, 0.25%)</title><rect x="9.0909%" y="309" width="0.2525%" height="15" fill="rgb(234,150,53)"/><text x="9.3409%" y="319.50"></text></g><g><title>broccoli::query::colfind::oned::find (2 samples, 0.25%)</title><rect x="9.0909%" y="293" width="0.2525%" height="15" fill="rgb(228,201,54)"/><text x="9.3409%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (2 samples, 0.25%)</title><rect x="9.0909%" y="277" width="0.2525%" height="15" fill="rgb(222,22,37)"/><text x="9.3409%" y="287.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.13%)</title><rect x="9.2172%" y="261" width="0.1263%" height="15" fill="rgb(237,53,32)"/><text x="9.4672%" y="271.50"></text></g><g><title>core::ptr::swap (1 samples, 0.13%)</title><rect x="9.2172%" y="245" width="0.1263%" height="15" fill="rgb(233,25,53)"/><text x="9.4672%" y="255.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.13%)</title><rect x="9.2172%" y="229" width="0.1263%" height="15" fill="rgb(210,40,34)"/><text x="9.4672%" y="239.50"></text></g><g><title>broccoli::query::colfind::inner::ColFindRecurser&lt;T,K,S&gt;::recurse_seq (1 samples, 0.13%)</title><rect x="9.3434%" y="309" width="0.1263%" height="15" fill="rgb(241,220,44)"/><text x="9.5934%" y="319.50"></text></g><g><title>broccoli::query::colfind::inner::ColFindRecurser&lt;T,K,S&gt;::recurse_seq (1 samples, 0.13%)</title><rect x="9.3434%" y="293" width="0.1263%" height="15" fill="rgb(235,28,35)"/><text x="9.5934%" y="303.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (1 samples, 0.13%)</title><rect x="9.3434%" y="277" width="0.1263%" height="15" fill="rgb(210,56,17)"/><text x="9.5934%" y="287.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (1 samples, 0.13%)</title><rect x="9.3434%" y="261" width="0.1263%" height="15" fill="rgb(224,130,29)"/><text x="9.5934%" y="271.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (1 samples, 0.13%)</title><rect x="9.3434%" y="245" width="0.1263%" height="15" fill="rgb(235,212,8)"/><text x="9.5934%" y="255.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (1 samples, 0.13%)</title><rect x="9.3434%" y="229" width="0.1263%" height="15" fill="rgb(223,33,50)"/><text x="9.5934%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (1 samples, 0.13%)</title><rect x="9.3434%" y="213" width="0.1263%" height="15" fill="rgb(219,149,13)"/><text x="9.5934%" y="223.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (1 samples, 0.13%)</title><rect x="9.3434%" y="197" width="0.1263%" height="15" fill="rgb(250,156,29)"/><text x="9.5934%" y="207.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.13%)</title><rect x="9.3434%" y="181" width="0.1263%" height="15" fill="rgb(216,193,19)"/><text x="9.5934%" y="191.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.13%)</title><rect x="9.3434%" y="165" width="0.1263%" height="15" fill="rgb(216,135,14)"/><text x="9.5934%" y="175.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (1 samples, 0.13%)</title><rect x="9.3434%" y="149" width="0.1263%" height="15" fill="rgb(241,47,5)"/><text x="9.5934%" y="159.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.13%)</title><rect x="9.3434%" y="133" width="0.1263%" height="15" fill="rgb(233,42,35)"/><text x="9.5934%" y="143.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (1 samples, 0.13%)</title><rect x="9.4697%" y="277" width="0.1263%" height="15" fill="rgb(231,13,6)"/><text x="9.7197%" y="287.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (1 samples, 0.13%)</title><rect x="9.4697%" y="261" width="0.1263%" height="15" fill="rgb(207,181,40)"/><text x="9.7197%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (1 samples, 0.13%)</title><rect x="9.4697%" y="245" width="0.1263%" height="15" fill="rgb(254,173,49)"/><text x="9.7197%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (2 samples, 0.25%)</title><rect x="9.7222%" y="245" width="0.2525%" height="15" fill="rgb(221,1,38)"/><text x="9.9722%" y="255.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (2 samples, 0.25%)</title><rect x="9.7222%" y="229" width="0.2525%" height="15" fill="rgb(206,124,46)"/><text x="9.9722%" y="239.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.13%)</title><rect x="9.8485%" y="213" width="0.1263%" height="15" fill="rgb(249,21,11)"/><text x="10.0985%" y="223.50"></text></g><g><title>axgeom::range::Range&lt;T&gt;::intersects (1 samples, 0.13%)</title><rect x="9.8485%" y="197" width="0.1263%" height="15" fill="rgb(222,201,40)"/><text x="10.0985%" y="207.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::le (1 samples, 0.13%)</title><rect x="9.8485%" y="181" width="0.1263%" height="15" fill="rgb(235,61,29)"/><text x="10.0985%" y="191.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (1 samples, 0.13%)</title><rect x="9.9747%" y="245" width="0.1263%" height="15" fill="rgb(219,207,3)"/><text x="10.2247%" y="255.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (1 samples, 0.13%)</title><rect x="9.9747%" y="229" width="0.1263%" height="15" fill="rgb(222,56,46)"/><text x="10.2247%" y="239.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek::{{closure}} (1 samples, 0.13%)</title><rect x="9.9747%" y="213" width="0.1263%" height="15" fill="rgb(239,76,54)"/><text x="10.2247%" y="223.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.13%)</title><rect x="9.9747%" y="197" width="0.1263%" height="15" fill="rgb(231,124,27)"/><text x="10.2247%" y="207.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.13%)</title><rect x="9.9747%" y="181" width="0.1263%" height="15" fill="rgb(249,195,6)"/><text x="10.2247%" y="191.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (6 samples, 0.76%)</title><rect x="9.4697%" y="293" width="0.7576%" height="15" fill="rgb(237,174,47)"/><text x="9.7197%" y="303.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (5 samples, 0.63%)</title><rect x="9.5960%" y="277" width="0.6313%" height="15" fill="rgb(206,201,31)"/><text x="9.8460%" y="287.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (5 samples, 0.63%)</title><rect x="9.5960%" y="261" width="0.6313%" height="15" fill="rgb(231,57,52)"/><text x="9.8460%" y="271.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.13%)</title><rect x="10.1010%" y="245" width="0.1263%" height="15" fill="rgb(248,177,22)"/><text x="10.3510%" y="255.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (7 samples, 0.88%)</title><rect x="9.4697%" y="309" width="0.8838%" height="15" fill="rgb(215,211,37)"/><text x="9.7197%" y="319.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (1 samples, 0.13%)</title><rect x="10.2273%" y="293" width="0.1263%" height="15" fill="rgb(241,128,51)"/><text x="10.4773%" y="303.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (1 samples, 0.13%)</title><rect x="10.2273%" y="277" width="0.1263%" height="15" fill="rgb(227,165,31)"/><text x="10.4773%" y="287.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (1 samples, 0.13%)</title><rect x="10.2273%" y="261" width="0.1263%" height="15" fill="rgb(228,167,24)"/><text x="10.4773%" y="271.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (1 samples, 0.13%)</title><rect x="10.2273%" y="245" width="0.1263%" height="15" fill="rgb(228,143,12)"/><text x="10.4773%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (1 samples, 0.13%)</title><rect x="10.2273%" y="229" width="0.1263%" height="15" fill="rgb(249,149,8)"/><text x="10.4773%" y="239.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (1 samples, 0.13%)</title><rect x="10.2273%" y="213" width="0.1263%" height="15" fill="rgb(243,35,44)"/><text x="10.4773%" y="223.50"></text></g><g><title>broccoli::query::colfind::inner::ColFindRecurser&lt;T,K,S&gt;::recurse_seq (9 samples, 1.14%)</title><rect x="9.3434%" y="325" width="1.1364%" height="15" fill="rgb(246,89,9)"/><text x="9.5934%" y="335.50"></text></g><g><title>broccoli::query::colfind::oned::find_2d (1 samples, 0.13%)</title><rect x="10.3535%" y="309" width="0.1263%" height="15" fill="rgb(233,213,13)"/><text x="10.6035%" y="319.50"></text></g><g><title>broccoli::query::colfind::oned::find (1 samples, 0.13%)</title><rect x="10.3535%" y="293" width="0.1263%" height="15" fill="rgb(233,141,41)"/><text x="10.6035%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (1 samples, 0.13%)</title><rect x="10.3535%" y="277" width="0.1263%" height="15" fill="rgb(239,167,4)"/><text x="10.6035%" y="287.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (2 samples, 0.25%)</title><rect x="10.4798%" y="245" width="0.2525%" height="15" fill="rgb(209,217,16)"/><text x="10.7298%" y="255.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (1 samples, 0.13%)</title><rect x="10.6061%" y="229" width="0.1263%" height="15" fill="rgb(219,88,35)"/><text x="10.8561%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (3 samples, 0.38%)</title><rect x="10.4798%" y="261" width="0.3788%" height="15" fill="rgb(220,193,23)"/><text x="10.7298%" y="271.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.13%)</title><rect x="10.7323%" y="245" width="0.1263%" height="15" fill="rgb(230,90,52)"/><text x="10.9823%" y="255.50"></text></g><g><title>core::ptr::swap (1 samples, 0.13%)</title><rect x="10.7323%" y="229" width="0.1263%" height="15" fill="rgb(252,106,19)"/><text x="10.9823%" y="239.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.13%)</title><rect x="10.7323%" y="213" width="0.1263%" height="15" fill="rgb(206,74,20)"/><text x="10.9823%" y="223.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (4 samples, 0.51%)</title><rect x="10.4798%" y="293" width="0.5051%" height="15" fill="rgb(230,138,44)"/><text x="10.7298%" y="303.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (4 samples, 0.51%)</title><rect x="10.4798%" y="277" width="0.5051%" height="15" fill="rgb(235,182,43)"/><text x="10.7298%" y="287.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.13%)</title><rect x="10.8586%" y="261" width="0.1263%" height="15" fill="rgb(242,16,51)"/><text x="11.1086%" y="271.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.13%)</title><rect x="10.9848%" y="277" width="0.1263%" height="15" fill="rgb(248,9,4)"/><text x="11.2348%" y="287.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.13%)</title><rect x="10.9848%" y="261" width="0.1263%" height="15" fill="rgb(210,31,22)"/><text x="11.2348%" y="271.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.13%)</title><rect x="11.9949%" y="229" width="0.1263%" height="15" fill="rgb(239,54,39)"/><text x="12.2449%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (6 samples, 0.76%)</title><rect x="11.4899%" y="261" width="0.7576%" height="15" fill="rgb(230,99,41)"/><text x="11.7399%" y="271.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (3 samples, 0.38%)</title><rect x="11.8687%" y="245" width="0.3788%" height="15" fill="rgb(253,106,12)"/><text x="12.1187%" y="255.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.13%)</title><rect x="12.1212%" y="229" width="0.1263%" height="15" fill="rgb(213,46,41)"/><text x="12.3712%" y="239.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (1 samples, 0.13%)</title><rect x="12.2475%" y="261" width="0.1263%" height="15" fill="rgb(215,133,35)"/><text x="12.4975%" y="271.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (1 samples, 0.13%)</title><rect x="12.2475%" y="245" width="0.1263%" height="15" fill="rgb(213,28,5)"/><text x="12.4975%" y="255.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (16 samples, 2.02%)</title><rect x="10.4798%" y="309" width="2.0202%" height="15" fill="rgb(215,77,49)"/><text x="10.7298%" y="319.50">&lt;..</text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (12 samples, 1.52%)</title><rect x="10.9848%" y="293" width="1.5152%" height="15" fill="rgb(248,100,22)"/><text x="11.2348%" y="303.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (11 samples, 1.39%)</title><rect x="11.1111%" y="277" width="1.3889%" height="15" fill="rgb(208,67,9)"/><text x="11.3611%" y="287.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.13%)</title><rect x="12.3737%" y="261" width="0.1263%" height="15" fill="rgb(219,133,21)"/><text x="12.6237%" y="271.50"></text></g><g><title>broccoli::pmut::PMut&lt;broccoli::node::Node&lt;T&gt;&gt;::into_range (1 samples, 0.13%)</title><rect x="12.5000%" y="277" width="0.1263%" height="15" fill="rgb(246,46,29)"/><text x="12.7500%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (1 samples, 0.13%)</title><rect x="12.6263%" y="245" width="0.1263%" height="15" fill="rgb(246,185,52)"/><text x="12.8763%" y="255.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.13%)</title><rect x="12.6263%" y="229" width="0.1263%" height="15" fill="rgb(252,136,11)"/><text x="12.8763%" y="239.50"></text></g><g><title>core::ptr::swap (1 samples, 0.13%)</title><rect x="12.6263%" y="213" width="0.1263%" height="15" fill="rgb(219,138,53)"/><text x="12.8763%" y="223.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.13%)</title><rect x="12.6263%" y="197" width="0.1263%" height="15" fill="rgb(211,51,23)"/><text x="12.8763%" y="207.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (19 samples, 2.40%)</title><rect x="10.4798%" y="325" width="2.3990%" height="15" fill="rgb(247,221,28)"/><text x="10.7298%" y="335.50">br..</text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (3 samples, 0.38%)</title><rect x="12.5000%" y="309" width="0.3788%" height="15" fill="rgb(251,222,45)"/><text x="12.7500%" y="319.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (3 samples, 0.38%)</title><rect x="12.5000%" y="293" width="0.3788%" height="15" fill="rgb(217,162,53)"/><text x="12.7500%" y="303.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (2 samples, 0.25%)</title><rect x="12.6263%" y="277" width="0.2525%" height="15" fill="rgb(229,93,14)"/><text x="12.8763%" y="287.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (2 samples, 0.25%)</title><rect x="12.6263%" y="261" width="0.2525%" height="15" fill="rgb(209,67,49)"/><text x="12.8763%" y="271.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.13%)</title><rect x="12.7525%" y="245" width="0.1263%" height="15" fill="rgb(213,87,29)"/><text x="13.0025%" y="255.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.13%)</title><rect x="13.1313%" y="261" width="0.1263%" height="15" fill="rgb(205,151,52)"/><text x="13.3813%" y="271.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.13%)</title><rect x="13.1313%" y="245" width="0.1263%" height="15" fill="rgb(253,215,39)"/><text x="13.3813%" y="255.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (1 samples, 0.13%)</title><rect x="13.1313%" y="229" width="0.1263%" height="15" fill="rgb(221,220,41)"/><text x="13.3813%" y="239.50"></text></g><g><title>data_gen::main::{{closure}}::{{closure}} (1 samples, 0.13%)</title><rect x="13.1313%" y="213" width="0.1263%" height="15" fill="rgb(218,133,21)"/><text x="13.3813%" y="223.50"></text></g><g><title>broccoli::query::colfind::inner::ColFindRecurser&lt;T,K,S&gt;::recurse_seq (34 samples, 4.29%)</title><rect x="9.0909%" y="341" width="4.2929%" height="15" fill="rgb(221,193,43)"/><text x="9.3409%" y="351.50">brocc..</text></g><g><title>broccoli::query::colfind::oned::find_2d (4 samples, 0.51%)</title><rect x="12.8788%" y="325" width="0.5051%" height="15" fill="rgb(240,128,52)"/><text x="13.1288%" y="335.50"></text></g><g><title>broccoli::query::colfind::oned::find (4 samples, 0.51%)</title><rect x="12.8788%" y="309" width="0.5051%" height="15" fill="rgb(253,114,12)"/><text x="13.1288%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (4 samples, 0.51%)</title><rect x="12.8788%" y="293" width="0.5051%" height="15" fill="rgb(215,223,47)"/><text x="13.1288%" y="303.50"></text></g><g><title>broccoli::query::colfind::oned::find::{{closure}} (2 samples, 0.25%)</title><rect x="13.1313%" y="277" width="0.2525%" height="15" fill="rgb(248,225,23)"/><text x="13.3813%" y="287.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.13%)</title><rect x="13.2576%" y="261" width="0.1263%" height="15" fill="rgb(250,108,0)"/><text x="13.5076%" y="271.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFn&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (5 samples, 0.63%)</title><rect x="13.8889%" y="229" width="0.6313%" height="15" fill="rgb(228,208,7)"/><text x="14.1389%" y="239.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut_par::{{closure}} (5 samples, 0.63%)</title><rect x="13.8889%" y="213" width="0.6313%" height="15" fill="rgb(244,45,10)"/><text x="14.1389%" y="223.50"></text></g><g><title>data_gen::colfind::colfind::handle_bench_inner::{{closure}}::{{closure}}::{{closure}} (5 samples, 0.63%)</title><rect x="13.8889%" y="197" width="0.6313%" height="15" fill="rgb(207,125,25)"/><text x="14.1389%" y="207.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (8 samples, 1.01%)</title><rect x="13.6364%" y="245" width="1.0101%" height="15" fill="rgb(210,195,18)"/><text x="13.8864%" y="255.50"></text></g><g><title>axgeom::range::Range&lt;T&gt;::intersects (1 samples, 0.13%)</title><rect x="14.5202%" y="229" width="0.1263%" height="15" fill="rgb(249,80,12)"/><text x="14.7702%" y="239.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::le (1 samples, 0.13%)</title><rect x="14.5202%" y="213" width="0.1263%" height="15" fill="rgb(221,65,9)"/><text x="14.7702%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (13 samples, 1.64%)</title><rect x="13.3838%" y="277" width="1.6414%" height="15" fill="rgb(235,49,36)"/><text x="13.6338%" y="287.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (12 samples, 1.52%)</title><rect x="13.5101%" y="261" width="1.5152%" height="15" fill="rgb(225,32,20)"/><text x="13.7601%" y="271.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (3 samples, 0.38%)</title><rect x="14.6465%" y="245" width="0.3788%" height="15" fill="rgb(215,141,46)"/><text x="14.8965%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.13%)</title><rect x="15.0253%" y="277" width="0.1263%" height="15" fill="rgb(250,160,47)"/><text x="15.2753%" y="287.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::lt (1 samples, 0.13%)</title><rect x="15.1515%" y="277" width="0.1263%" height="15" fill="rgb(216,222,40)"/><text x="15.4015%" y="287.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (16 samples, 2.02%)</title><rect x="13.3838%" y="309" width="2.0202%" height="15" fill="rgb(234,217,39)"/><text x="13.6338%" y="319.50">b..</text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (16 samples, 2.02%)</title><rect x="13.3838%" y="293" width="2.0202%" height="15" fill="rgb(207,178,40)"/><text x="13.6338%" y="303.50">b..</text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.13%)</title><rect x="15.2778%" y="277" width="0.1263%" height="15" fill="rgb(221,136,13)"/><text x="15.5278%" y="287.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.13%)</title><rect x="15.4040%" y="293" width="0.1263%" height="15" fill="rgb(249,199,10)"/><text x="15.6540%" y="303.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.13%)</title><rect x="15.4040%" y="277" width="0.1263%" height="15" fill="rgb(249,222,13)"/><text x="15.6540%" y="287.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.13%)</title><rect x="17.0455%" y="229" width="0.1263%" height="15" fill="rgb(244,185,38)"/><text x="17.2955%" y="239.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (1 samples, 0.13%)</title><rect x="17.0455%" y="213" width="0.1263%" height="15" fill="rgb(236,202,9)"/><text x="17.2955%" y="223.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.13%)</title><rect x="17.0455%" y="197" width="0.1263%" height="15" fill="rgb(250,229,37)"/><text x="17.2955%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (9 samples, 1.14%)</title><rect x="16.1616%" y="277" width="1.1364%" height="15" fill="rgb(206,174,23)"/><text x="16.4116%" y="287.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (7 samples, 0.88%)</title><rect x="16.4141%" y="261" width="0.8838%" height="15" fill="rgb(211,33,43)"/><text x="16.6641%" y="271.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (6 samples, 0.76%)</title><rect x="16.5404%" y="245" width="0.7576%" height="15" fill="rgb(245,58,50)"/><text x="16.7904%" y="255.50"></text></g><g><title>axgeom::range::Range&lt;T&gt;::intersects (1 samples, 0.13%)</title><rect x="17.1717%" y="229" width="0.1263%" height="15" fill="rgb(244,68,36)"/><text x="17.4217%" y="239.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::le (1 samples, 0.13%)</title><rect x="17.1717%" y="213" width="0.1263%" height="15" fill="rgb(232,229,15)"/><text x="17.4217%" y="223.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::lt (1 samples, 0.13%)</title><rect x="17.2980%" y="277" width="0.1263%" height="15" fill="rgb(254,30,23)"/><text x="17.5480%" y="287.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (2 samples, 0.25%)</title><rect x="17.4242%" y="277" width="0.2525%" height="15" fill="rgb(235,160,14)"/><text x="17.6742%" y="287.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (2 samples, 0.25%)</title><rect x="17.4242%" y="261" width="0.2525%" height="15" fill="rgb(212,155,44)"/><text x="17.6742%" y="271.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek::{{closure}} (1 samples, 0.13%)</title><rect x="17.5505%" y="245" width="0.1263%" height="15" fill="rgb(226,2,50)"/><text x="17.8005%" y="255.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.13%)</title><rect x="17.5505%" y="229" width="0.1263%" height="15" fill="rgb(234,177,6)"/><text x="17.8005%" y="239.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.13%)</title><rect x="17.5505%" y="213" width="0.1263%" height="15" fill="rgb(217,24,9)"/><text x="17.8005%" y="223.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (20 samples, 2.53%)</title><rect x="15.4040%" y="309" width="2.5253%" height="15" fill="rgb(220,13,46)"/><text x="15.6540%" y="319.50">br..</text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (19 samples, 2.40%)</title><rect x="15.5303%" y="293" width="2.3990%" height="15" fill="rgb(239,221,27)"/><text x="15.7803%" y="303.50">br..</text></g><g><title>core::option::Option&lt;T&gt;::unwrap (2 samples, 0.25%)</title><rect x="17.6768%" y="277" width="0.2525%" height="15" fill="rgb(222,198,25)"/><text x="17.9268%" y="287.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (37 samples, 4.67%)</title><rect x="13.3838%" y="325" width="4.6717%" height="15" fill="rgb(211,99,13)"/><text x="13.6338%" y="335.50">&lt;broc..</text></g><g><title>broccoli::query::colfind::oned::get_section_mut (1 samples, 0.13%)</title><rect x="17.9293%" y="309" width="0.1263%" height="15" fill="rgb(232,111,31)"/><text x="18.1793%" y="319.50"></text></g><g><title>broccoli::pmut::PMut&lt;[T]&gt;::truncate_from (1 samples, 0.13%)</title><rect x="17.9293%" y="293" width="0.1263%" height="15" fill="rgb(245,82,37)"/><text x="18.1793%" y="303.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1 samples, 0.13%)</title><rect x="17.9293%" y="277" width="0.1263%" height="15" fill="rgb(227,149,46)"/><text x="18.1793%" y="287.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.13%)</title><rect x="17.9293%" y="261" width="0.1263%" height="15" fill="rgb(218,36,50)"/><text x="18.1793%" y="271.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (1 samples, 0.13%)</title><rect x="18.1818%" y="229" width="0.1263%" height="15" fill="rgb(226,80,48)"/><text x="18.4318%" y="239.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (5 samples, 0.63%)</title><rect x="18.3081%" y="229" width="0.6313%" height="15" fill="rgb(238,224,15)"/><text x="18.5581%" y="239.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFn&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.13%)</title><rect x="18.8131%" y="213" width="0.1263%" height="15" fill="rgb(241,136,10)"/><text x="19.0631%" y="223.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut_par::{{closure}} (1 samples, 0.13%)</title><rect x="18.8131%" y="197" width="0.1263%" height="15" fill="rgb(208,32,45)"/><text x="19.0631%" y="207.50"></text></g><g><title>data_gen::colfind::colfind::handle_bench_inner::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.13%)</title><rect x="18.8131%" y="181" width="0.1263%" height="15" fill="rgb(207,135,9)"/><text x="19.0631%" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (8 samples, 1.01%)</title><rect x="18.0556%" y="261" width="1.0101%" height="15" fill="rgb(206,86,44)"/><text x="18.3056%" y="271.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (7 samples, 0.88%)</title><rect x="18.1818%" y="245" width="0.8838%" height="15" fill="rgb(245,177,15)"/><text x="18.4318%" y="255.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.13%)</title><rect x="18.9394%" y="229" width="0.1263%" height="15" fill="rgb(206,64,50)"/><text x="19.1894%" y="239.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (9 samples, 1.14%)</title><rect x="18.0556%" y="293" width="1.1364%" height="15" fill="rgb(234,36,40)"/><text x="18.3056%" y="303.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (9 samples, 1.14%)</title><rect x="18.0556%" y="277" width="1.1364%" height="15" fill="rgb(213,64,8)"/><text x="18.3056%" y="287.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (1 samples, 0.13%)</title><rect x="19.0657%" y="261" width="0.1263%" height="15" fill="rgb(210,75,36)"/><text x="19.3157%" y="271.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (1 samples, 0.13%)</title><rect x="19.0657%" y="245" width="0.1263%" height="15" fill="rgb(229,88,21)"/><text x="19.3157%" y="255.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek::{{closure}} (1 samples, 0.13%)</title><rect x="19.0657%" y="229" width="0.1263%" height="15" fill="rgb(252,204,47)"/><text x="19.3157%" y="239.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.13%)</title><rect x="19.0657%" y="213" width="0.1263%" height="15" fill="rgb(208,77,27)"/><text x="19.3157%" y="223.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.13%)</title><rect x="19.0657%" y="197" width="0.1263%" height="15" fill="rgb(221,76,26)"/><text x="19.3157%" y="207.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (2 samples, 0.25%)</title><rect x="19.5707%" y="245" width="0.2525%" height="15" fill="rgb(225,139,18)"/><text x="19.8207%" y="255.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.13%)</title><rect x="19.6970%" y="229" width="0.1263%" height="15" fill="rgb(230,137,11)"/><text x="19.9470%" y="239.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.13%)</title><rect x="19.6970%" y="213" width="0.1263%" height="15" fill="rgb(212,28,1)"/><text x="19.9470%" y="223.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (1 samples, 0.13%)</title><rect x="19.6970%" y="197" width="0.1263%" height="15" fill="rgb(248,164,17)"/><text x="19.9470%" y="207.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.13%)</title><rect x="19.6970%" y="181" width="0.1263%" height="15" fill="rgb(222,171,42)"/><text x="19.9470%" y="191.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (52 samples, 6.57%)</title><rect x="13.3838%" y="341" width="6.5657%" height="15" fill="rgb(243,84,45)"/><text x="13.6338%" y="351.50">broccoli:..</text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (15 samples, 1.89%)</title><rect x="18.0556%" y="325" width="1.8939%" height="15" fill="rgb(252,49,23)"/><text x="18.3056%" y="335.50">b..</text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (15 samples, 1.89%)</title><rect x="18.0556%" y="309" width="1.8939%" height="15" fill="rgb(215,19,7)"/><text x="18.3056%" y="319.50">&lt;..</text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (6 samples, 0.76%)</title><rect x="19.1919%" y="293" width="0.7576%" height="15" fill="rgb(238,81,41)"/><text x="19.4419%" y="303.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (6 samples, 0.76%)</title><rect x="19.1919%" y="277" width="0.7576%" height="15" fill="rgb(210,199,37)"/><text x="19.4419%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (3 samples, 0.38%)</title><rect x="19.5707%" y="261" width="0.3788%" height="15" fill="rgb(244,192,49)"/><text x="19.8207%" y="271.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.13%)</title><rect x="19.8232%" y="245" width="0.1263%" height="15" fill="rgb(226,211,11)"/><text x="20.0732%" y="255.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.13%)</title><rect x="19.8232%" y="229" width="0.1263%" height="15" fill="rgb(236,162,54)"/><text x="20.0732%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="19.8232%" y="213" width="0.1263%" height="15" fill="rgb(220,229,9)"/><text x="20.0732%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="19.8232%" y="197" width="0.1263%" height="15" fill="rgb(250,87,22)"/><text x="20.0732%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="19.8232%" y="181" width="0.1263%" height="15" fill="rgb(239,43,17)"/><text x="20.0732%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="19.8232%" y="165" width="0.1263%" height="15" fill="rgb(231,177,25)"/><text x="20.0732%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="19.8232%" y="149" width="0.1263%" height="15" fill="rgb(219,179,1)"/><text x="20.0732%" y="159.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.13%)</title><rect x="19.9495%" y="277" width="0.1263%" height="15" fill="rgb(238,219,53)"/><text x="20.1995%" y="287.50"></text></g><g><title>broccoli::query::colfind::inner::ColFindRecurser&lt;T,K,S&gt;::recurse_seq (91 samples, 11.49%)</title><rect x="8.7121%" y="357" width="11.4899%" height="15" fill="rgb(232,167,36)"/><text x="8.9621%" y="367.50">broccoli::query::..</text></g><g><title>broccoli::query::colfind::oned::find_2d (2 samples, 0.25%)</title><rect x="19.9495%" y="341" width="0.2525%" height="15" fill="rgb(244,19,51)"/><text x="20.1995%" y="351.50"></text></g><g><title>broccoli::query::colfind::oned::find (2 samples, 0.25%)</title><rect x="19.9495%" y="325" width="0.2525%" height="15" fill="rgb(224,6,22)"/><text x="20.1995%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (2 samples, 0.25%)</title><rect x="19.9495%" y="309" width="0.2525%" height="15" fill="rgb(224,145,5)"/><text x="20.1995%" y="319.50"></text></g><g><title>broccoli::query::colfind::oned::find::{{closure}} (2 samples, 0.25%)</title><rect x="19.9495%" y="293" width="0.2525%" height="15" fill="rgb(234,130,49)"/><text x="20.1995%" y="303.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.13%)</title><rect x="20.0758%" y="277" width="0.1263%" height="15" fill="rgb(254,6,2)"/><text x="20.3258%" y="287.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (7 samples, 0.88%)</title><rect x="20.3283%" y="261" width="0.8838%" height="15" fill="rgb(208,96,46)"/><text x="20.5783%" y="271.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFn&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (2 samples, 0.25%)</title><rect x="20.9596%" y="245" width="0.2525%" height="15" fill="rgb(239,3,39)"/><text x="21.2096%" y="255.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut_par::{{closure}} (2 samples, 0.25%)</title><rect x="20.9596%" y="229" width="0.2525%" height="15" fill="rgb(233,210,1)"/><text x="21.2096%" y="239.50"></text></g><g><title>data_gen::colfind::colfind::handle_bench_inner::{{closure}}::{{closure}}::{{closure}} (2 samples, 0.25%)</title><rect x="20.9596%" y="213" width="0.2525%" height="15" fill="rgb(244,137,37)"/><text x="21.2096%" y="223.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (9 samples, 1.14%)</title><rect x="20.3283%" y="277" width="1.1364%" height="15" fill="rgb(240,136,2)"/><text x="20.5783%" y="287.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (2 samples, 0.25%)</title><rect x="21.2121%" y="261" width="0.2525%" height="15" fill="rgb(239,18,37)"/><text x="21.4621%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (11 samples, 1.39%)</title><rect x="20.3283%" y="293" width="1.3889%" height="15" fill="rgb(218,185,22)"/><text x="20.5783%" y="303.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (2 samples, 0.25%)</title><rect x="21.4646%" y="277" width="0.2525%" height="15" fill="rgb(225,218,4)"/><text x="21.7146%" y="287.50"></text></g><g><title>core::ptr::swap (2 samples, 0.25%)</title><rect x="21.4646%" y="261" width="0.2525%" height="15" fill="rgb(230,182,32)"/><text x="21.7146%" y="271.50"></text></g><g><title>core::intrinsics::copy (2 samples, 0.25%)</title><rect x="21.4646%" y="245" width="0.2525%" height="15" fill="rgb(242,56,43)"/><text x="21.7146%" y="255.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (14 samples, 1.77%)</title><rect x="20.2020%" y="325" width="1.7677%" height="15" fill="rgb(233,99,24)"/><text x="20.4520%" y="335.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (14 samples, 1.77%)</title><rect x="20.2020%" y="309" width="1.7677%" height="15" fill="rgb(234,209,42)"/><text x="20.4520%" y="319.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (2 samples, 0.25%)</title><rect x="21.7172%" y="293" width="0.2525%" height="15" fill="rgb(227,7,12)"/><text x="21.9672%" y="303.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (5 samples, 0.63%)</title><rect x="24.7475%" y="245" width="0.6313%" height="15" fill="rgb(245,203,43)"/><text x="24.9975%" y="255.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (5 samples, 0.63%)</title><rect x="24.7475%" y="229" width="0.6313%" height="15" fill="rgb(238,205,33)"/><text x="24.9975%" y="239.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (5 samples, 0.63%)</title><rect x="24.7475%" y="213" width="0.6313%" height="15" fill="rgb(231,56,7)"/><text x="24.9975%" y="223.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (17 samples, 2.15%)</title><rect x="23.3586%" y="277" width="2.1465%" height="15" fill="rgb(244,186,29)"/><text x="23.6086%" y="287.50">b..</text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (13 samples, 1.64%)</title><rect x="23.8636%" y="261" width="1.6414%" height="15" fill="rgb(234,111,31)"/><text x="24.1136%" y="271.50"></text></g><g><title>axgeom::range::Range&lt;T&gt;::intersects (1 samples, 0.13%)</title><rect x="25.3788%" y="245" width="0.1263%" height="15" fill="rgb(241,149,10)"/><text x="25.6288%" y="255.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::le (1 samples, 0.13%)</title><rect x="25.3788%" y="229" width="0.1263%" height="15" fill="rgb(249,206,44)"/><text x="25.6288%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (22 samples, 2.78%)</title><rect x="22.9798%" y="293" width="2.7778%" height="15" fill="rgb(251,153,30)"/><text x="23.2298%" y="303.50">&lt;a..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.25%)</title><rect x="25.5051%" y="277" width="0.2525%" height="15" fill="rgb(239,152,38)"/><text x="25.7551%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.13%)</title><rect x="25.7576%" y="293" width="0.1263%" height="15" fill="rgb(249,139,47)"/><text x="26.0076%" y="303.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::lt (1 samples, 0.13%)</title><rect x="25.8838%" y="293" width="0.1263%" height="15" fill="rgb(244,64,35)"/><text x="26.1338%" y="303.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.13%)</title><rect x="26.0101%" y="277" width="0.1263%" height="15" fill="rgb(216,46,15)"/><text x="26.2601%" y="287.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (40 samples, 5.05%)</title><rect x="21.9697%" y="325" width="5.0505%" height="15" fill="rgb(250,74,19)"/><text x="22.2197%" y="335.50">brocco..</text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (40 samples, 5.05%)</title><rect x="21.9697%" y="309" width="5.0505%" height="15" fill="rgb(249,42,33)"/><text x="22.2197%" y="319.50">brocco..</text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (8 samples, 1.01%)</title><rect x="26.0101%" y="293" width="1.0101%" height="15" fill="rgb(242,149,17)"/><text x="26.2601%" y="303.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (7 samples, 0.88%)</title><rect x="26.1364%" y="277" width="0.8838%" height="15" fill="rgb(244,29,21)"/><text x="26.3864%" y="287.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek::{{closure}} (6 samples, 0.76%)</title><rect x="26.2626%" y="261" width="0.7576%" height="15" fill="rgb(220,130,37)"/><text x="26.5126%" y="271.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.76%)</title><rect x="26.2626%" y="245" width="0.7576%" height="15" fill="rgb(211,67,2)"/><text x="26.5126%" y="255.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.76%)</title><rect x="26.2626%" y="229" width="0.7576%" height="15" fill="rgb(235,68,52)"/><text x="26.5126%" y="239.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (55 samples, 6.94%)</title><rect x="20.2020%" y="341" width="6.9444%" height="15" fill="rgb(246,142,3)"/><text x="20.4520%" y="351.50">&lt;broccoli..</text></g><g><title>broccoli::query::colfind::oned::get_section_mut (1 samples, 0.13%)</title><rect x="27.0202%" y="325" width="0.1263%" height="15" fill="rgb(241,25,7)"/><text x="27.2702%" y="335.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::ge (1 samples, 0.13%)</title><rect x="27.0202%" y="309" width="0.1263%" height="15" fill="rgb(242,119,39)"/><text x="27.2702%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::truncate (1 samples, 0.13%)</title><rect x="27.3990%" y="261" width="0.1263%" height="15" fill="rgb(241,98,45)"/><text x="27.6490%" y="271.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (1 samples, 0.13%)</title><rect x="27.5253%" y="245" width="0.1263%" height="15" fill="rgb(254,28,30)"/><text x="27.7753%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (12 samples, 1.52%)</title><rect x="27.1465%" y="277" width="1.5152%" height="15" fill="rgb(241,142,54)"/><text x="27.3965%" y="287.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (9 samples, 1.14%)</title><rect x="27.5253%" y="261" width="1.1364%" height="15" fill="rgb(222,85,15)"/><text x="27.7753%" y="271.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (8 samples, 1.01%)</title><rect x="27.6515%" y="245" width="1.0101%" height="15" fill="rgb(210,85,47)"/><text x="27.9015%" y="255.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFn&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.13%)</title><rect x="28.5354%" y="229" width="0.1263%" height="15" fill="rgb(224,206,25)"/><text x="28.7854%" y="239.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut_par::{{closure}} (1 samples, 0.13%)</title><rect x="28.5354%" y="213" width="0.1263%" height="15" fill="rgb(243,201,19)"/><text x="28.7854%" y="223.50"></text></g><g><title>data_gen::colfind::colfind::handle_bench_inner::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.13%)</title><rect x="28.5354%" y="197" width="0.1263%" height="15" fill="rgb(236,59,4)"/><text x="28.7854%" y="207.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (14 samples, 1.77%)</title><rect x="27.1465%" y="309" width="1.7677%" height="15" fill="rgb(254,179,45)"/><text x="27.3965%" y="319.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (14 samples, 1.77%)</title><rect x="27.1465%" y="293" width="1.7677%" height="15" fill="rgb(226,14,10)"/><text x="27.3965%" y="303.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (2 samples, 0.25%)</title><rect x="28.6616%" y="277" width="0.2525%" height="15" fill="rgb(244,27,41)"/><text x="28.9116%" y="287.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (1 samples, 0.13%)</title><rect x="29.4192%" y="245" width="0.1263%" height="15" fill="rgb(235,35,32)"/><text x="29.6692%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (5 samples, 0.63%)</title><rect x="29.0404%" y="277" width="0.6313%" height="15" fill="rgb(218,68,31)"/><text x="29.2904%" y="287.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (2 samples, 0.25%)</title><rect x="29.4192%" y="261" width="0.2525%" height="15" fill="rgb(207,120,37)"/><text x="29.6692%" y="271.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.13%)</title><rect x="29.5455%" y="245" width="0.1263%" height="15" fill="rgb(227,98,0)"/><text x="29.7955%" y="255.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.13%)</title><rect x="29.5455%" y="229" width="0.1263%" height="15" fill="rgb(207,7,3)"/><text x="29.7955%" y="239.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (1 samples, 0.13%)</title><rect x="29.5455%" y="213" width="0.1263%" height="15" fill="rgb(206,98,19)"/><text x="29.7955%" y="223.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.13%)</title><rect x="29.5455%" y="197" width="0.1263%" height="15" fill="rgb(217,5,26)"/><text x="29.7955%" y="207.50"></text></g><g><title>broccoli::util::PreVecMut&lt;T&gt;::get_empty_vec_mut (1 samples, 0.13%)</title><rect x="29.6717%" y="277" width="0.1263%" height="15" fill="rgb(235,190,38)"/><text x="29.9217%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::clear (1 samples, 0.13%)</title><rect x="29.6717%" y="261" width="0.1263%" height="15" fill="rgb(247,86,24)"/><text x="29.9217%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::truncate (1 samples, 0.13%)</title><rect x="29.6717%" y="245" width="0.1263%" height="15" fill="rgb(205,101,16)"/><text x="29.9217%" y="255.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (22 samples, 2.78%)</title><rect x="27.1465%" y="325" width="2.7778%" height="15" fill="rgb(246,168,33)"/><text x="27.3965%" y="335.50">&lt;b..</text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (8 samples, 1.01%)</title><rect x="28.9141%" y="309" width="1.0101%" height="15" fill="rgb(231,114,1)"/><text x="29.1641%" y="319.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (8 samples, 1.01%)</title><rect x="28.9141%" y="293" width="1.0101%" height="15" fill="rgb(207,184,53)"/><text x="29.1641%" y="303.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.13%)</title><rect x="29.7980%" y="277" width="0.1263%" height="15" fill="rgb(224,95,51)"/><text x="30.0480%" y="287.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (23 samples, 2.90%)</title><rect x="27.1465%" y="341" width="2.9040%" height="15" fill="rgb(212,188,45)"/><text x="27.3965%" y="351.50">br..</text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (1 samples, 0.13%)</title><rect x="29.9242%" y="325" width="0.1263%" height="15" fill="rgb(223,154,38)"/><text x="30.1742%" y="335.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (1 samples, 0.13%)</title><rect x="29.9242%" y="309" width="0.1263%" height="15" fill="rgb(251,22,52)"/><text x="30.1742%" y="319.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (1 samples, 0.13%)</title><rect x="29.9242%" y="293" width="0.1263%" height="15" fill="rgb(229,209,22)"/><text x="30.1742%" y="303.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (1 samples, 0.13%)</title><rect x="29.9242%" y="277" width="0.1263%" height="15" fill="rgb(234,138,34)"/><text x="30.1742%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (1 samples, 0.13%)</title><rect x="29.9242%" y="261" width="0.1263%" height="15" fill="rgb(212,95,11)"/><text x="30.1742%" y="271.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (79 samples, 9.97%)</title><rect x="20.2020%" y="357" width="9.9747%" height="15" fill="rgb(240,179,47)"/><text x="20.4520%" y="367.50">broccoli::quer..</text></g><g><title>broccoli::query::colfind::node_handle::DestructuredNode&lt;T,AnchorAxis&gt;::cont (1 samples, 0.13%)</title><rect x="30.0505%" y="341" width="0.1263%" height="15" fill="rgb(240,163,11)"/><text x="30.3005%" y="351.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.13%)</title><rect x="30.0505%" y="325" width="0.1263%" height="15" fill="rgb(236,37,12)"/><text x="30.3005%" y="335.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (1 samples, 0.13%)</title><rect x="31.1869%" y="293" width="0.1263%" height="15" fill="rgb(232,164,16)"/><text x="31.4369%" y="303.50"></text></g><g><title>broccoli::query::colfind::oned::find::{{closure}} (8 samples, 1.01%)</title><rect x="30.9343%" y="309" width="1.0101%" height="15" fill="rgb(244,205,15)"/><text x="31.1843%" y="319.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (5 samples, 0.63%)</title><rect x="31.3131%" y="293" width="0.6313%" height="15" fill="rgb(223,117,47)"/><text x="31.5631%" y="303.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (3 samples, 0.38%)</title><rect x="31.5657%" y="277" width="0.3788%" height="15" fill="rgb(244,107,35)"/><text x="31.8157%" y="287.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (3 samples, 0.38%)</title><rect x="31.5657%" y="261" width="0.3788%" height="15" fill="rgb(205,140,8)"/><text x="31.8157%" y="271.50"></text></g><g><title>data_gen::main::{{closure}}::{{closure}} (3 samples, 0.38%)</title><rect x="31.5657%" y="245" width="0.3788%" height="15" fill="rgb(228,84,46)"/><text x="31.8157%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (15 samples, 1.89%)</title><rect x="30.1768%" y="325" width="1.8939%" height="15" fill="rgb(254,188,9)"/><text x="30.4268%" y="335.50">&lt;..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.13%)</title><rect x="31.9444%" y="309" width="0.1263%" height="15" fill="rgb(206,112,54)"/><text x="32.1944%" y="319.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.13%)</title><rect x="31.9444%" y="293" width="0.1263%" height="15" fill="rgb(216,84,49)"/><text x="32.1944%" y="303.50"></text></g><g><title>broccoli::query::colfind::inner::ColFindRecurser&lt;T,K,S&gt;::recurse_seq (192 samples, 24.24%)</title><rect x="7.9545%" y="373" width="24.2424%" height="15" fill="rgb(214,194,35)"/><text x="8.2045%" y="383.50">broccoli::query::colfind::inner::ColFin..</text></g><g><title>broccoli::query::colfind::oned::find_2d (16 samples, 2.02%)</title><rect x="30.1768%" y="357" width="2.0202%" height="15" fill="rgb(249,28,3)"/><text x="30.4268%" y="367.50">b..</text></g><g><title>broccoli::query::colfind::oned::find (16 samples, 2.02%)</title><rect x="30.1768%" y="341" width="2.0202%" height="15" fill="rgb(222,56,52)"/><text x="30.4268%" y="351.50">b..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.13%)</title><rect x="32.0707%" y="325" width="0.1263%" height="15" fill="rgb(245,217,50)"/><text x="32.3207%" y="335.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (3 samples, 0.38%)</title><rect x="33.0808%" y="277" width="0.3788%" height="15" fill="rgb(213,201,24)"/><text x="33.3308%" y="287.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (3 samples, 0.38%)</title><rect x="33.4596%" y="277" width="0.3788%" height="15" fill="rgb(248,116,28)"/><text x="33.7096%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (14 samples, 1.77%)</title><rect x="32.1970%" y="309" width="1.7677%" height="15" fill="rgb(219,72,43)"/><text x="32.4470%" y="319.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (11 samples, 1.39%)</title><rect x="32.5758%" y="293" width="1.3889%" height="15" fill="rgb(209,138,14)"/><text x="32.8258%" y="303.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.13%)</title><rect x="33.8384%" y="277" width="0.1263%" height="15" fill="rgb(222,18,33)"/><text x="34.0884%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.13%)</title><rect x="33.9646%" y="309" width="0.1263%" height="15" fill="rgb(213,199,7)"/><text x="34.2146%" y="319.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::lt (1 samples, 0.13%)</title><rect x="34.0909%" y="309" width="0.1263%" height="15" fill="rgb(250,110,10)"/><text x="34.3409%" y="319.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (18 samples, 2.27%)</title><rect x="32.1970%" y="341" width="2.2727%" height="15" fill="rgb(248,123,6)"/><text x="32.4470%" y="351.50">b..</text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (18 samples, 2.27%)</title><rect x="32.1970%" y="325" width="2.2727%" height="15" fill="rgb(206,91,31)"/><text x="32.4470%" y="335.50">b..</text></g><g><title>core::option::Option&lt;T&gt;::unwrap (2 samples, 0.25%)</title><rect x="34.2172%" y="309" width="0.2525%" height="15" fill="rgb(211,154,13)"/><text x="34.4672%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::truncate (1 samples, 0.13%)</title><rect x="36.4899%" y="293" width="0.1263%" height="15" fill="rgb(225,148,7)"/><text x="36.7399%" y="303.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (4 samples, 0.51%)</title><rect x="36.6162%" y="277" width="0.5051%" height="15" fill="rgb(220,160,43)"/><text x="36.8662%" y="287.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (11 samples, 1.39%)</title><rect x="37.1212%" y="277" width="1.3889%" height="15" fill="rgb(213,52,39)"/><text x="37.3712%" y="287.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (7 samples, 0.88%)</title><rect x="37.6263%" y="261" width="0.8838%" height="15" fill="rgb(243,137,7)"/><text x="37.8763%" y="271.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (7 samples, 0.88%)</title><rect x="37.6263%" y="245" width="0.8838%" height="15" fill="rgb(230,79,13)"/><text x="37.8763%" y="255.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (7 samples, 0.88%)</title><rect x="37.6263%" y="229" width="0.8838%" height="15" fill="rgb(247,105,23)"/><text x="37.8763%" y="239.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (16 samples, 2.02%)</title><rect x="36.6162%" y="293" width="2.0202%" height="15" fill="rgb(223,179,41)"/><text x="36.8662%" y="303.50">b..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.13%)</title><rect x="38.5101%" y="277" width="0.1263%" height="15" fill="rgb(218,9,34)"/><text x="38.7601%" y="287.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.13%)</title><rect x="38.6364%" y="293" width="0.1263%" height="15" fill="rgb(222,106,8)"/><text x="38.8864%" y="303.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.13%)</title><rect x="38.6364%" y="277" width="0.1263%" height="15" fill="rgb(211,220,0)"/><text x="38.8864%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (24 samples, 3.03%)</title><rect x="35.8586%" y="309" width="3.0303%" height="15" fill="rgb(229,52,16)"/><text x="36.1086%" y="319.50">&lt;al..</text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.13%)</title><rect x="38.7626%" y="293" width="0.1263%" height="15" fill="rgb(212,155,18)"/><text x="39.0126%" y="303.50"></text></g><g><title>core::ptr::swap (1 samples, 0.13%)</title><rect x="38.7626%" y="277" width="0.1263%" height="15" fill="rgb(242,21,14)"/><text x="39.0126%" y="287.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.13%)</title><rect x="38.7626%" y="261" width="0.1263%" height="15" fill="rgb(222,19,48)"/><text x="39.0126%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (2 samples, 0.25%)</title><rect x="38.8889%" y="309" width="0.2525%" height="15" fill="rgb(232,45,27)"/><text x="39.1389%" y="319.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::lt (1 samples, 0.13%)</title><rect x="39.1414%" y="309" width="0.1263%" height="15" fill="rgb(249,103,42)"/><text x="39.3914%" y="319.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (1 samples, 0.13%)</title><rect x="39.2677%" y="309" width="0.1263%" height="15" fill="rgb(246,81,33)"/><text x="39.5177%" y="319.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (1 samples, 0.13%)</title><rect x="39.2677%" y="293" width="0.1263%" height="15" fill="rgb(252,33,42)"/><text x="39.5177%" y="303.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek::{{closure}} (1 samples, 0.13%)</title><rect x="39.2677%" y="277" width="0.1263%" height="15" fill="rgb(209,212,41)"/><text x="39.5177%" y="287.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.13%)</title><rect x="39.2677%" y="261" width="0.1263%" height="15" fill="rgb(207,154,6)"/><text x="39.5177%" y="271.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.13%)</title><rect x="39.2677%" y="245" width="0.1263%" height="15" fill="rgb(223,64,47)"/><text x="39.5177%" y="255.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (40 samples, 5.05%)</title><rect x="34.4697%" y="341" width="5.0505%" height="15" fill="rgb(211,161,38)"/><text x="34.7197%" y="351.50">brocco..</text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (39 samples, 4.92%)</title><rect x="34.5960%" y="325" width="4.9242%" height="15" fill="rgb(219,138,40)"/><text x="34.8460%" y="335.50">brocco..</text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.13%)</title><rect x="39.3939%" y="309" width="0.1263%" height="15" fill="rgb(241,228,46)"/><text x="39.6439%" y="319.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (60 samples, 7.58%)</title><rect x="32.1970%" y="357" width="7.5758%" height="15" fill="rgb(223,209,38)"/><text x="32.4470%" y="367.50">&lt;broccoli:..</text></g><g><title>broccoli::query::colfind::oned::get_section_mut (2 samples, 0.25%)</title><rect x="39.5202%" y="341" width="0.2525%" height="15" fill="rgb(236,164,45)"/><text x="39.7702%" y="351.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (2 samples, 0.25%)</title><rect x="41.1616%" y="261" width="0.2525%" height="15" fill="rgb(231,15,5)"/><text x="41.4116%" y="271.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFn&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.13%)</title><rect x="41.5404%" y="245" width="0.1263%" height="15" fill="rgb(252,35,15)"/><text x="41.7904%" y="255.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut_par::{{closure}} (1 samples, 0.13%)</title><rect x="41.5404%" y="229" width="0.1263%" height="15" fill="rgb(248,181,18)"/><text x="41.7904%" y="239.50"></text></g><g><title>data_gen::colfind::colfind::handle_bench_inner::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.13%)</title><rect x="41.5404%" y="213" width="0.1263%" height="15" fill="rgb(233,39,42)"/><text x="41.7904%" y="223.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (3 samples, 0.38%)</title><rect x="41.4141%" y="261" width="0.3788%" height="15" fill="rgb(238,110,33)"/><text x="41.6641%" y="271.50"></text></g><g><title>axgeom::range::Range&lt;T&gt;::intersects (1 samples, 0.13%)</title><rect x="41.6667%" y="245" width="0.1263%" height="15" fill="rgb(233,195,10)"/><text x="41.9167%" y="255.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::le (1 samples, 0.13%)</title><rect x="41.6667%" y="229" width="0.1263%" height="15" fill="rgb(254,105,3)"/><text x="41.9167%" y="239.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (8 samples, 1.01%)</title><rect x="41.0354%" y="277" width="1.0101%" height="15" fill="rgb(221,225,9)"/><text x="41.2854%" y="287.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (2 samples, 0.25%)</title><rect x="41.7929%" y="261" width="0.2525%" height="15" fill="rgb(224,227,45)"/><text x="42.0429%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (14 samples, 1.77%)</title><rect x="40.4040%" y="293" width="1.7677%" height="15" fill="rgb(229,198,43)"/><text x="40.6540%" y="303.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.13%)</title><rect x="42.0455%" y="277" width="0.1263%" height="15" fill="rgb(206,209,35)"/><text x="42.2955%" y="287.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.13%)</title><rect x="42.0455%" y="261" width="0.1263%" height="15" fill="rgb(245,195,53)"/><text x="42.2955%" y="271.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::lt (1 samples, 0.13%)</title><rect x="42.1717%" y="293" width="0.1263%" height="15" fill="rgb(240,92,26)"/><text x="42.4217%" y="303.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (20 samples, 2.53%)</title><rect x="39.8990%" y="325" width="2.5253%" height="15" fill="rgb(207,40,23)"/><text x="40.1490%" y="335.50">br..</text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (20 samples, 2.53%)</title><rect x="39.8990%" y="309" width="2.5253%" height="15" fill="rgb(223,111,35)"/><text x="40.1490%" y="319.50">br..</text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.13%)</title><rect x="42.2980%" y="293" width="0.1263%" height="15" fill="rgb(229,147,28)"/><text x="42.5480%" y="303.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (4 samples, 0.51%)</title><rect x="43.0556%" y="277" width="0.5051%" height="15" fill="rgb(211,29,28)"/><text x="43.3056%" y="287.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (3 samples, 0.38%)</title><rect x="43.1818%" y="261" width="0.3788%" height="15" fill="rgb(228,72,33)"/><text x="43.4318%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (9 samples, 1.14%)</title><rect x="42.5505%" y="293" width="1.1364%" height="15" fill="rgb(205,214,31)"/><text x="42.8005%" y="303.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.13%)</title><rect x="43.5606%" y="277" width="0.1263%" height="15" fill="rgb(224,111,15)"/><text x="43.8106%" y="287.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (31 samples, 3.91%)</title><rect x="39.8990%" y="341" width="3.9141%" height="15" fill="rgb(253,21,26)"/><text x="40.1490%" y="351.50">&lt;bro..</text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (11 samples, 1.39%)</title><rect x="42.4242%" y="325" width="1.3889%" height="15" fill="rgb(245,139,43)"/><text x="42.6742%" y="335.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (11 samples, 1.39%)</title><rect x="42.4242%" y="309" width="1.3889%" height="15" fill="rgb(252,170,7)"/><text x="42.6742%" y="319.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (1 samples, 0.13%)</title><rect x="43.6869%" y="293" width="0.1263%" height="15" fill="rgb(231,118,14)"/><text x="43.9369%" y="303.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (1 samples, 0.13%)</title><rect x="43.6869%" y="277" width="0.1263%" height="15" fill="rgb(238,83,0)"/><text x="43.9369%" y="287.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (1 samples, 0.13%)</title><rect x="44.0657%" y="245" width="0.1263%" height="15" fill="rgb(221,39,39)"/><text x="44.3157%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (4 samples, 0.51%)</title><rect x="43.8131%" y="277" width="0.5051%" height="15" fill="rgb(222,119,46)"/><text x="44.0631%" y="287.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (3 samples, 0.38%)</title><rect x="43.9394%" y="261" width="0.3788%" height="15" fill="rgb(222,165,49)"/><text x="44.1894%" y="271.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.13%)</title><rect x="44.1919%" y="245" width="0.1263%" height="15" fill="rgb(219,113,52)"/><text x="44.4419%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.13%)</title><rect x="44.3182%" y="277" width="0.1263%" height="15" fill="rgb(214,7,15)"/><text x="44.5682%" y="287.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (6 samples, 0.76%)</title><rect x="43.8131%" y="309" width="0.7576%" height="15" fill="rgb(235,32,4)"/><text x="44.0631%" y="319.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (6 samples, 0.76%)</title><rect x="43.8131%" y="293" width="0.7576%" height="15" fill="rgb(238,90,54)"/><text x="44.0631%" y="303.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.13%)</title><rect x="44.4444%" y="277" width="0.1263%" height="15" fill="rgb(213,208,19)"/><text x="44.6944%" y="287.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (7 samples, 0.88%)</title><rect x="43.8131%" y="325" width="0.8838%" height="15" fill="rgb(233,156,4)"/><text x="44.0631%" y="335.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (1 samples, 0.13%)</title><rect x="44.5707%" y="309" width="0.1263%" height="15" fill="rgb(207,194,5)"/><text x="44.8207%" y="319.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (1 samples, 0.13%)</title><rect x="44.5707%" y="293" width="0.1263%" height="15" fill="rgb(206,111,30)"/><text x="44.8207%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (1 samples, 0.13%)</title><rect x="44.5707%" y="277" width="0.1263%" height="15" fill="rgb(243,70,54)"/><text x="44.8207%" y="287.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (1 samples, 0.13%)</title><rect x="44.5707%" y="261" width="0.1263%" height="15" fill="rgb(242,28,8)"/><text x="44.8207%" y="271.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.13%)</title><rect x="44.5707%" y="245" width="0.1263%" height="15" fill="rgb(219,106,18)"/><text x="44.8207%" y="255.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.13%)</title><rect x="44.5707%" y="229" width="0.1263%" height="15" fill="rgb(244,222,10)"/><text x="44.8207%" y="239.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (1 samples, 0.13%)</title><rect x="44.5707%" y="213" width="0.1263%" height="15" fill="rgb(236,179,52)"/><text x="44.8207%" y="223.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.13%)</title><rect x="44.5707%" y="197" width="0.1263%" height="15" fill="rgb(213,23,39)"/><text x="44.8207%" y="207.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (100 samples, 12.63%)</title><rect x="32.1970%" y="373" width="12.6263%" height="15" fill="rgb(238,48,10)"/><text x="32.4470%" y="383.50">broccoli::query::co..</text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (40 samples, 5.05%)</title><rect x="39.7727%" y="357" width="5.0505%" height="15" fill="rgb(251,196,23)"/><text x="40.0227%" y="367.50">brocco..</text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (8 samples, 1.01%)</title><rect x="43.8131%" y="341" width="1.0101%" height="15" fill="rgb(250,152,24)"/><text x="44.0631%" y="351.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (1 samples, 0.13%)</title><rect x="44.6970%" y="325" width="0.1263%" height="15" fill="rgb(209,150,17)"/><text x="44.9470%" y="335.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (1 samples, 0.13%)</title><rect x="44.6970%" y="309" width="0.1263%" height="15" fill="rgb(234,202,34)"/><text x="44.9470%" y="319.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (1 samples, 0.13%)</title><rect x="44.6970%" y="293" width="0.1263%" height="15" fill="rgb(253,148,53)"/><text x="44.9470%" y="303.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (1 samples, 0.13%)</title><rect x="44.6970%" y="277" width="0.1263%" height="15" fill="rgb(218,129,16)"/><text x="44.9470%" y="287.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (1 samples, 0.13%)</title><rect x="44.6970%" y="261" width="0.1263%" height="15" fill="rgb(216,85,19)"/><text x="44.9470%" y="271.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.13%)</title><rect x="44.6970%" y="245" width="0.1263%" height="15" fill="rgb(235,228,7)"/><text x="44.9470%" y="255.50"></text></g><g><title>broccoli::query::colfind::inner::ColFindRecurser&lt;T,K,S&gt;::recurse_seq (309 samples, 39.02%)</title><rect x="7.0707%" y="389" width="39.0152%" height="15" fill="rgb(245,175,0)"/><text x="7.3207%" y="399.50">broccoli::query::colfind::inner::ColFindRecurser&lt;T,K,S&gt;::recurse..</text></g><g><title>broccoli::query::colfind::oned::find_2d (10 samples, 1.26%)</title><rect x="44.8232%" y="373" width="1.2626%" height="15" fill="rgb(208,168,36)"/><text x="45.0732%" y="383.50"></text></g><g><title>broccoli::query::colfind::oned::find (10 samples, 1.26%)</title><rect x="44.8232%" y="357" width="1.2626%" height="15" fill="rgb(246,171,24)"/><text x="45.0732%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (10 samples, 1.26%)</title><rect x="44.8232%" y="341" width="1.2626%" height="15" fill="rgb(215,142,24)"/><text x="45.0732%" y="351.50"></text></g><g><title>broccoli::query::colfind::oned::find::{{closure}} (7 samples, 0.88%)</title><rect x="45.2020%" y="325" width="0.8838%" height="15" fill="rgb(250,187,7)"/><text x="45.4520%" y="335.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (6 samples, 0.76%)</title><rect x="45.3283%" y="309" width="0.7576%" height="15" fill="rgb(228,66,33)"/><text x="45.5783%" y="319.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (4 samples, 0.51%)</title><rect x="45.5808%" y="293" width="0.5051%" height="15" fill="rgb(234,215,21)"/><text x="45.8308%" y="303.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (4 samples, 0.51%)</title><rect x="45.5808%" y="277" width="0.5051%" height="15" fill="rgb(222,191,20)"/><text x="45.8308%" y="287.50"></text></g><g><title>data_gen::main::{{closure}}::{{closure}} (4 samples, 0.51%)</title><rect x="45.5808%" y="261" width="0.5051%" height="15" fill="rgb(245,79,54)"/><text x="45.8308%" y="271.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (1 samples, 0.13%)</title><rect x="46.4646%" y="293" width="0.1263%" height="15" fill="rgb(240,10,37)"/><text x="46.7146%" y="303.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.13%)</title><rect x="46.5909%" y="293" width="0.1263%" height="15" fill="rgb(214,192,32)"/><text x="46.8409%" y="303.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFn&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.13%)</title><rect x="46.5909%" y="277" width="0.1263%" height="15" fill="rgb(209,36,54)"/><text x="46.8409%" y="287.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut_par::{{closure}} (1 samples, 0.13%)</title><rect x="46.5909%" y="261" width="0.1263%" height="15" fill="rgb(220,10,11)"/><text x="46.8409%" y="271.50"></text></g><g><title>data_gen::colfind::colfind::handle_bench_inner::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.13%)</title><rect x="46.5909%" y="245" width="0.1263%" height="15" fill="rgb(221,106,17)"/><text x="46.8409%" y="255.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (3 samples, 0.38%)</title><rect x="46.4646%" y="309" width="0.3788%" height="15" fill="rgb(251,142,44)"/><text x="46.7146%" y="319.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.13%)</title><rect x="46.7172%" y="293" width="0.1263%" height="15" fill="rgb(238,13,15)"/><text x="46.9672%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (7 samples, 0.88%)</title><rect x="46.2121%" y="325" width="0.8838%" height="15" fill="rgb(208,107,27)"/><text x="46.4621%" y="335.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (2 samples, 0.25%)</title><rect x="46.8434%" y="309" width="0.2525%" height="15" fill="rgb(205,136,37)"/><text x="47.0934%" y="319.50"></text></g><g><title>core::ptr::swap (2 samples, 0.25%)</title><rect x="46.8434%" y="293" width="0.2525%" height="15" fill="rgb(250,205,27)"/><text x="47.0934%" y="303.50"></text></g><g><title>core::intrinsics::copy (2 samples, 0.25%)</title><rect x="46.8434%" y="277" width="0.2525%" height="15" fill="rgb(210,80,43)"/><text x="47.0934%" y="287.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (9 samples, 1.14%)</title><rect x="46.0859%" y="357" width="1.1364%" height="15" fill="rgb(247,160,36)"/><text x="46.3359%" y="367.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (9 samples, 1.14%)</title><rect x="46.0859%" y="341" width="1.1364%" height="15" fill="rgb(234,13,49)"/><text x="46.3359%" y="351.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.13%)</title><rect x="47.0960%" y="325" width="0.1263%" height="15" fill="rgb(234,122,0)"/><text x="47.3460%" y="335.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.13%)</title><rect x="47.2222%" y="341" width="0.1263%" height="15" fill="rgb(207,146,38)"/><text x="47.4722%" y="351.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.13%)</title><rect x="47.2222%" y="325" width="0.1263%" height="15" fill="rgb(207,177,25)"/><text x="47.4722%" y="335.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (1 samples, 0.13%)</title><rect x="47.2222%" y="309" width="0.1263%" height="15" fill="rgb(211,178,42)"/><text x="47.4722%" y="319.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.13%)</title><rect x="47.2222%" y="293" width="0.1263%" height="15" fill="rgb(230,69,54)"/><text x="47.4722%" y="303.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (4 samples, 0.51%)</title><rect x="48.7374%" y="309" width="0.5051%" height="15" fill="rgb(214,135,41)"/><text x="48.9874%" y="319.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (4 samples, 0.51%)</title><rect x="48.7374%" y="293" width="0.5051%" height="15" fill="rgb(237,67,25)"/><text x="48.9874%" y="303.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.13%)</title><rect x="49.1162%" y="277" width="0.1263%" height="15" fill="rgb(222,189,50)"/><text x="49.3662%" y="287.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (1 samples, 0.13%)</title><rect x="49.1162%" y="261" width="0.1263%" height="15" fill="rgb(245,148,34)"/><text x="49.3662%" y="271.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.13%)</title><rect x="49.1162%" y="245" width="0.1263%" height="15" fill="rgb(222,29,6)"/><text x="49.3662%" y="255.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.25%)</title><rect x="49.2424%" y="309" width="0.2525%" height="15" fill="rgb(221,189,43)"/><text x="49.4924%" y="319.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (2 samples, 0.25%)</title><rect x="49.2424%" y="293" width="0.2525%" height="15" fill="rgb(207,36,27)"/><text x="49.4924%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (13 samples, 1.64%)</title><rect x="47.9798%" y="325" width="1.6414%" height="15" fill="rgb(217,90,24)"/><text x="48.2298%" y="335.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.13%)</title><rect x="49.4949%" y="309" width="0.1263%" height="15" fill="rgb(224,66,35)"/><text x="49.7449%" y="319.50"></text></g><g><title>core::ptr::swap (1 samples, 0.13%)</title><rect x="49.4949%" y="293" width="0.1263%" height="15" fill="rgb(221,13,50)"/><text x="49.7449%" y="303.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.13%)</title><rect x="49.4949%" y="277" width="0.1263%" height="15" fill="rgb(236,68,49)"/><text x="49.7449%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.13%)</title><rect x="49.6212%" y="325" width="0.1263%" height="15" fill="rgb(229,146,28)"/><text x="49.8712%" y="335.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::lt (1 samples, 0.13%)</title><rect x="49.7475%" y="325" width="0.1263%" height="15" fill="rgb(225,31,38)"/><text x="49.9975%" y="335.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.13%)</title><rect x="49.8737%" y="309" width="0.1263%" height="15" fill="rgb(250,208,3)"/><text x="50.1237%" y="319.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (5 samples, 0.63%)</title><rect x="49.8737%" y="325" width="0.6313%" height="15" fill="rgb(246,54,23)"/><text x="50.1237%" y="335.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (4 samples, 0.51%)</title><rect x="50.0000%" y="309" width="0.5051%" height="15" fill="rgb(243,76,11)"/><text x="50.2500%" y="319.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek::{{closure}} (4 samples, 0.51%)</title><rect x="50.0000%" y="293" width="0.5051%" height="15" fill="rgb(245,21,50)"/><text x="50.2500%" y="303.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.51%)</title><rect x="50.0000%" y="277" width="0.5051%" height="15" fill="rgb(228,9,43)"/><text x="50.2500%" y="287.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.51%)</title><rect x="50.0000%" y="261" width="0.5051%" height="15" fill="rgb(208,100,47)"/><text x="50.2500%" y="271.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (27 samples, 3.41%)</title><rect x="47.2222%" y="357" width="3.4091%" height="15" fill="rgb(232,26,8)"/><text x="47.4722%" y="367.50">bro..</text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (26 samples, 3.28%)</title><rect x="47.3485%" y="341" width="3.2828%" height="15" fill="rgb(216,166,38)"/><text x="47.5985%" y="351.50">bro..</text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.13%)</title><rect x="50.5051%" y="325" width="0.1263%" height="15" fill="rgb(251,202,51)"/><text x="50.7551%" y="335.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (39 samples, 4.92%)</title><rect x="46.0859%" y="373" width="4.9242%" height="15" fill="rgb(254,216,34)"/><text x="46.3359%" y="383.50">&lt;brocc..</text></g><g><title>broccoli::query::colfind::oned::get_section_mut (3 samples, 0.38%)</title><rect x="50.6313%" y="357" width="0.3788%" height="15" fill="rgb(251,32,27)"/><text x="50.8813%" y="367.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (1 samples, 0.13%)</title><rect x="52.6515%" y="277" width="0.1263%" height="15" fill="rgb(208,127,28)"/><text x="52.9015%" y="287.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (8 samples, 1.01%)</title><rect x="52.7778%" y="277" width="1.0101%" height="15" fill="rgb(224,137,22)"/><text x="53.0278%" y="287.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFn&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (7 samples, 0.88%)</title><rect x="52.9040%" y="261" width="0.8838%" height="15" fill="rgb(254,70,32)"/><text x="53.1540%" y="271.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut_par::{{closure}} (7 samples, 0.88%)</title><rect x="52.9040%" y="245" width="0.8838%" height="15" fill="rgb(229,75,37)"/><text x="53.1540%" y="255.50"></text></g><g><title>data_gen::colfind::colfind::handle_bench_inner::{{closure}}::{{closure}}::{{closure}} (7 samples, 0.88%)</title><rect x="52.9040%" y="229" width="0.8838%" height="15" fill="rgb(252,64,23)"/><text x="53.1540%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (18 samples, 2.27%)</title><rect x="51.6414%" y="309" width="2.2727%" height="15" fill="rgb(232,162,48)"/><text x="51.8914%" y="319.50">&lt;..</text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (13 samples, 1.64%)</title><rect x="52.2727%" y="293" width="1.6414%" height="15" fill="rgb(246,160,12)"/><text x="52.5227%" y="303.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.13%)</title><rect x="53.7879%" y="277" width="0.1263%" height="15" fill="rgb(247,166,0)"/><text x="54.0379%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.13%)</title><rect x="53.9141%" y="309" width="0.1263%" height="15" fill="rgb(249,219,21)"/><text x="54.1641%" y="319.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (25 samples, 3.16%)</title><rect x="51.0101%" y="341" width="3.1566%" height="15" fill="rgb(205,209,3)"/><text x="51.2601%" y="351.50">bro..</text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (25 samples, 3.16%)</title><rect x="51.0101%" y="325" width="3.1566%" height="15" fill="rgb(243,44,1)"/><text x="51.2601%" y="335.50">bro..</text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.13%)</title><rect x="54.0404%" y="309" width="0.1263%" height="15" fill="rgb(206,159,16)"/><text x="54.2904%" y="319.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (6 samples, 0.76%)</title><rect x="54.6717%" y="277" width="0.7576%" height="15" fill="rgb(244,77,30)"/><text x="54.9217%" y="287.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (2 samples, 0.25%)</title><rect x="55.1768%" y="261" width="0.2525%" height="15" fill="rgb(218,69,12)"/><text x="55.4268%" y="271.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (2 samples, 0.25%)</title><rect x="55.1768%" y="245" width="0.2525%" height="15" fill="rgb(212,87,7)"/><text x="55.4268%" y="255.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (2 samples, 0.25%)</title><rect x="55.1768%" y="229" width="0.2525%" height="15" fill="rgb(245,114,25)"/><text x="55.4268%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (11 samples, 1.39%)</title><rect x="54.1667%" y="309" width="1.3889%" height="15" fill="rgb(210,61,42)"/><text x="54.4167%" y="319.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (9 samples, 1.14%)</title><rect x="54.4192%" y="293" width="1.1364%" height="15" fill="rgb(211,52,33)"/><text x="54.6692%" y="303.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.13%)</title><rect x="55.4293%" y="277" width="0.1263%" height="15" fill="rgb(234,58,33)"/><text x="55.6793%" y="287.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (12 samples, 1.52%)</title><rect x="54.1667%" y="341" width="1.5152%" height="15" fill="rgb(220,115,36)"/><text x="54.4167%" y="351.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (12 samples, 1.52%)</title><rect x="54.1667%" y="325" width="1.5152%" height="15" fill="rgb(243,153,54)"/><text x="54.4167%" y="335.50"></text></g><g><title>broccoli::util::PreVecMut&lt;T&gt;::get_empty_vec_mut (1 samples, 0.13%)</title><rect x="55.5556%" y="309" width="0.1263%" height="15" fill="rgb(251,47,18)"/><text x="55.8056%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::clear (1 samples, 0.13%)</title><rect x="55.5556%" y="293" width="0.1263%" height="15" fill="rgb(242,102,42)"/><text x="55.8056%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::truncate (1 samples, 0.13%)</title><rect x="55.5556%" y="277" width="0.1263%" height="15" fill="rgb(234,31,38)"/><text x="55.8056%" y="287.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (40 samples, 5.05%)</title><rect x="51.0101%" y="357" width="5.0505%" height="15" fill="rgb(221,117,51)"/><text x="51.2601%" y="367.50">&lt;brocc..</text></g><g><title>broccoli::query::colfind::oned::get_section_mut (3 samples, 0.38%)</title><rect x="55.6818%" y="341" width="0.3788%" height="15" fill="rgb(212,20,18)"/><text x="55.9318%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::truncate (1 samples, 0.13%)</title><rect x="56.4394%" y="277" width="0.1263%" height="15" fill="rgb(245,133,36)"/><text x="56.6894%" y="287.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (3 samples, 0.38%)</title><rect x="56.5657%" y="261" width="0.3788%" height="15" fill="rgb(212,6,19)"/><text x="56.8157%" y="271.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFn&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.13%)</title><rect x="56.8182%" y="245" width="0.1263%" height="15" fill="rgb(218,1,36)"/><text x="57.0682%" y="255.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut_par::{{closure}} (1 samples, 0.13%)</title><rect x="56.8182%" y="229" width="0.1263%" height="15" fill="rgb(246,84,54)"/><text x="57.0682%" y="239.50"></text></g><g><title>data_gen::colfind::colfind::handle_bench_inner::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.13%)</title><rect x="56.8182%" y="213" width="0.1263%" height="15" fill="rgb(242,110,6)"/><text x="57.0682%" y="223.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (4 samples, 0.51%)</title><rect x="56.5657%" y="277" width="0.5051%" height="15" fill="rgb(214,47,5)"/><text x="56.8157%" y="287.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.13%)</title><rect x="56.9444%" y="261" width="0.1263%" height="15" fill="rgb(218,159,25)"/><text x="57.1944%" y="271.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (10 samples, 1.26%)</title><rect x="56.0606%" y="325" width="1.2626%" height="15" fill="rgb(215,211,28)"/><text x="56.3106%" y="335.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (10 samples, 1.26%)</title><rect x="56.0606%" y="309" width="1.2626%" height="15" fill="rgb(238,59,32)"/><text x="56.3106%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (8 samples, 1.01%)</title><rect x="56.3131%" y="293" width="1.0101%" height="15" fill="rgb(226,82,3)"/><text x="56.5631%" y="303.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (2 samples, 0.25%)</title><rect x="57.0707%" y="277" width="0.2525%" height="15" fill="rgb(240,164,32)"/><text x="57.3207%" y="287.50"></text></g><g><title>core::ptr::swap (2 samples, 0.25%)</title><rect x="57.0707%" y="261" width="0.2525%" height="15" fill="rgb(232,46,7)"/><text x="57.3207%" y="271.50"></text></g><g><title>core::intrinsics::copy (2 samples, 0.25%)</title><rect x="57.0707%" y="245" width="0.2525%" height="15" fill="rgb(229,129,53)"/><text x="57.3207%" y="255.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (12 samples, 1.52%)</title><rect x="56.0606%" y="341" width="1.5152%" height="15" fill="rgb(234,188,29)"/><text x="56.3106%" y="351.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (2 samples, 0.25%)</title><rect x="57.3232%" y="325" width="0.2525%" height="15" fill="rgb(246,141,4)"/><text x="57.5732%" y="335.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (2 samples, 0.25%)</title><rect x="57.3232%" y="309" width="0.2525%" height="15" fill="rgb(229,23,39)"/><text x="57.5732%" y="319.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (1 samples, 0.13%)</title><rect x="57.4495%" y="293" width="0.1263%" height="15" fill="rgb(206,12,3)"/><text x="57.6995%" y="303.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (1 samples, 0.13%)</title><rect x="57.4495%" y="277" width="0.1263%" height="15" fill="rgb(252,226,20)"/><text x="57.6995%" y="287.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (2 samples, 0.25%)</title><rect x="57.8283%" y="261" width="0.2525%" height="15" fill="rgb(216,123,35)"/><text x="58.0783%" y="271.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (1 samples, 0.13%)</title><rect x="57.9545%" y="245" width="0.1263%" height="15" fill="rgb(212,68,40)"/><text x="58.2045%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (4 samples, 0.51%)</title><rect x="57.7020%" y="277" width="0.5051%" height="15" fill="rgb(254,125,32)"/><text x="57.9520%" y="287.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.13%)</title><rect x="58.0808%" y="261" width="0.1263%" height="15" fill="rgb(253,97,22)"/><text x="58.3308%" y="271.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (98 samples, 12.37%)</title><rect x="46.0859%" y="389" width="12.3737%" height="15" fill="rgb(241,101,14)"/><text x="46.3359%" y="399.50">broccoli::query::c..</text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (59 samples, 7.45%)</title><rect x="51.0101%" y="373" width="7.4495%" height="15" fill="rgb(238,103,29)"/><text x="51.2601%" y="383.50">broccoli::..</text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (19 samples, 2.40%)</title><rect x="56.0606%" y="357" width="2.3990%" height="15" fill="rgb(233,195,47)"/><text x="56.3106%" y="367.50">br..</text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (7 samples, 0.88%)</title><rect x="57.5758%" y="341" width="0.8838%" height="15" fill="rgb(246,218,30)"/><text x="57.8258%" y="351.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (7 samples, 0.88%)</title><rect x="57.5758%" y="325" width="0.8838%" height="15" fill="rgb(219,145,47)"/><text x="57.8258%" y="335.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (7 samples, 0.88%)</title><rect x="57.5758%" y="309" width="0.8838%" height="15" fill="rgb(243,12,26)"/><text x="57.8258%" y="319.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (7 samples, 0.88%)</title><rect x="57.5758%" y="293" width="0.8838%" height="15" fill="rgb(214,87,16)"/><text x="57.8258%" y="303.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (2 samples, 0.25%)</title><rect x="58.2071%" y="277" width="0.2525%" height="15" fill="rgb(208,99,42)"/><text x="58.4571%" y="287.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (2 samples, 0.25%)</title><rect x="58.2071%" y="261" width="0.2525%" height="15" fill="rgb(253,99,2)"/><text x="58.4571%" y="271.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek::{{closure}} (2 samples, 0.25%)</title><rect x="58.2071%" y="245" width="0.2525%" height="15" fill="rgb(220,168,23)"/><text x="58.4571%" y="255.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.25%)</title><rect x="58.2071%" y="229" width="0.2525%" height="15" fill="rgb(242,38,24)"/><text x="58.4571%" y="239.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.25%)</title><rect x="58.2071%" y="213" width="0.2525%" height="15" fill="rgb(225,182,9)"/><text x="58.4571%" y="223.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (1 samples, 0.13%)</title><rect x="58.7121%" y="325" width="0.1263%" height="15" fill="rgb(243,178,37)"/><text x="58.9621%" y="335.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (3 samples, 0.38%)</title><rect x="58.8384%" y="325" width="0.3788%" height="15" fill="rgb(232,139,19)"/><text x="59.0884%" y="335.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (2 samples, 0.25%)</title><rect x="58.9646%" y="309" width="0.2525%" height="15" fill="rgb(225,201,24)"/><text x="59.2146%" y="319.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (2 samples, 0.25%)</title><rect x="58.9646%" y="293" width="0.2525%" height="15" fill="rgb(221,47,46)"/><text x="59.2146%" y="303.50"></text></g><g><title>data_gen::main::{{closure}}::{{closure}} (2 samples, 0.25%)</title><rect x="58.9646%" y="277" width="0.2525%" height="15" fill="rgb(249,23,13)"/><text x="59.2146%" y="287.50"></text></g><g><title>broccoli::query::colfind::oned::find::{{closure}} (5 samples, 0.63%)</title><rect x="58.7121%" y="341" width="0.6313%" height="15" fill="rgb(219,9,5)"/><text x="58.9621%" y="351.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.13%)</title><rect x="59.2172%" y="325" width="0.1263%" height="15" fill="rgb(254,171,16)"/><text x="59.4672%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (8 samples, 1.01%)</title><rect x="58.4596%" y="357" width="1.0101%" height="15" fill="rgb(230,171,20)"/><text x="58.7096%" y="367.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.13%)</title><rect x="59.3434%" y="341" width="0.1263%" height="15" fill="rgb(210,71,41)"/><text x="59.5934%" y="351.50"></text></g><g><title>core::ptr::swap (1 samples, 0.13%)</title><rect x="59.3434%" y="325" width="0.1263%" height="15" fill="rgb(206,173,20)"/><text x="59.5934%" y="335.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.13%)</title><rect x="59.3434%" y="309" width="0.1263%" height="15" fill="rgb(233,88,34)"/><text x="59.5934%" y="319.50"></text></g><g><title>broccoli::query::colfind::inner::ColFindRecurser&lt;T,K,S&gt;::recurse_seq (422 samples, 53.28%)</title><rect x="6.3131%" y="405" width="53.2828%" height="15" fill="rgb(223,209,46)"/><text x="6.5631%" y="415.50">broccoli::query::colfind::inner::ColFindRecurser&lt;T,K,S&gt;::recurse_seq</text></g><g><title>broccoli::query::colfind::oned::find_2d (9 samples, 1.14%)</title><rect x="58.4596%" y="389" width="1.1364%" height="15" fill="rgb(250,43,18)"/><text x="58.7096%" y="399.50"></text></g><g><title>broccoli::query::colfind::oned::find (9 samples, 1.14%)</title><rect x="58.4596%" y="373" width="1.1364%" height="15" fill="rgb(208,13,10)"/><text x="58.7096%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.13%)</title><rect x="59.4697%" y="357" width="0.1263%" height="15" fill="rgb(212,200,36)"/><text x="59.7197%" y="367.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.13%)</title><rect x="59.8485%" y="309" width="0.1263%" height="15" fill="rgb(225,90,30)"/><text x="60.0985%" y="319.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFn&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.13%)</title><rect x="59.8485%" y="293" width="0.1263%" height="15" fill="rgb(236,182,39)"/><text x="60.0985%" y="303.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut_par::{{closure}} (1 samples, 0.13%)</title><rect x="59.8485%" y="277" width="0.1263%" height="15" fill="rgb(212,144,35)"/><text x="60.0985%" y="287.50"></text></g><g><title>data_gen::colfind::colfind::handle_bench_inner::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.13%)</title><rect x="59.8485%" y="261" width="0.1263%" height="15" fill="rgb(228,63,44)"/><text x="60.0985%" y="271.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (5 samples, 0.63%)</title><rect x="59.5960%" y="373" width="0.6313%" height="15" fill="rgb(228,109,6)"/><text x="59.8460%" y="383.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (5 samples, 0.63%)</title><rect x="59.5960%" y="357" width="0.6313%" height="15" fill="rgb(238,117,24)"/><text x="59.8460%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (3 samples, 0.38%)</title><rect x="59.8485%" y="341" width="0.3788%" height="15" fill="rgb(242,26,26)"/><text x="60.0985%" y="351.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (3 samples, 0.38%)</title><rect x="59.8485%" y="325" width="0.3788%" height="15" fill="rgb(221,92,48)"/><text x="60.0985%" y="335.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (2 samples, 0.25%)</title><rect x="59.9747%" y="309" width="0.2525%" height="15" fill="rgb(209,209,32)"/><text x="60.2247%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (7 samples, 0.88%)</title><rect x="60.8586%" y="341" width="0.8838%" height="15" fill="rgb(221,70,22)"/><text x="61.1086%" y="351.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (3 samples, 0.38%)</title><rect x="61.3636%" y="325" width="0.3788%" height="15" fill="rgb(248,145,5)"/><text x="61.6136%" y="335.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (3 samples, 0.38%)</title><rect x="61.3636%" y="309" width="0.3788%" height="15" fill="rgb(226,116,26)"/><text x="61.6136%" y="319.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (2 samples, 0.25%)</title><rect x="61.4899%" y="293" width="0.2525%" height="15" fill="rgb(244,5,17)"/><text x="61.7399%" y="303.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (2 samples, 0.25%)</title><rect x="61.4899%" y="277" width="0.2525%" height="15" fill="rgb(252,159,33)"/><text x="61.7399%" y="287.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (2 samples, 0.25%)</title><rect x="61.4899%" y="261" width="0.2525%" height="15" fill="rgb(206,71,0)"/><text x="61.7399%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (2 samples, 0.25%)</title><rect x="61.7424%" y="341" width="0.2525%" height="15" fill="rgb(233,118,54)"/><text x="61.9924%" y="351.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::lt (1 samples, 0.13%)</title><rect x="61.9949%" y="341" width="0.1263%" height="15" fill="rgb(234,83,48)"/><text x="62.2449%" y="351.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (17 samples, 2.15%)</title><rect x="60.2273%" y="373" width="2.1465%" height="15" fill="rgb(228,3,54)"/><text x="60.4773%" y="383.50">b..</text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (17 samples, 2.15%)</title><rect x="60.2273%" y="357" width="2.1465%" height="15" fill="rgb(226,155,13)"/><text x="60.4773%" y="367.50">b..</text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (2 samples, 0.25%)</title><rect x="62.1212%" y="341" width="0.2525%" height="15" fill="rgb(241,28,37)"/><text x="62.3712%" y="351.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (2 samples, 0.25%)</title><rect x="62.1212%" y="325" width="0.2525%" height="15" fill="rgb(233,93,10)"/><text x="62.3712%" y="335.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek::{{closure}} (1 samples, 0.13%)</title><rect x="62.2475%" y="309" width="0.1263%" height="15" fill="rgb(225,113,19)"/><text x="62.4975%" y="319.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.13%)</title><rect x="62.2475%" y="293" width="0.1263%" height="15" fill="rgb(241,2,18)"/><text x="62.4975%" y="303.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.13%)</title><rect x="62.2475%" y="277" width="0.1263%" height="15" fill="rgb(228,207,21)"/><text x="62.4975%" y="287.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (23 samples, 2.90%)</title><rect x="59.5960%" y="389" width="2.9040%" height="15" fill="rgb(213,211,35)"/><text x="59.8460%" y="399.50">&lt;b..</text></g><g><title>broccoli::query::colfind::oned::get_section_mut (1 samples, 0.13%)</title><rect x="62.3737%" y="373" width="0.1263%" height="15" fill="rgb(209,83,10)"/><text x="62.6237%" y="383.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (3 samples, 0.38%)</title><rect x="63.0051%" y="293" width="0.3788%" height="15" fill="rgb(209,164,1)"/><text x="63.2551%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (8 samples, 1.01%)</title><rect x="62.6263%" y="325" width="1.0101%" height="15" fill="rgb(213,184,43)"/><text x="62.8763%" y="335.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (6 samples, 0.76%)</title><rect x="62.8788%" y="309" width="0.7576%" height="15" fill="rgb(231,61,34)"/><text x="63.1288%" y="319.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (2 samples, 0.25%)</title><rect x="63.3838%" y="293" width="0.2525%" height="15" fill="rgb(235,75,3)"/><text x="63.6338%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (2 samples, 0.25%)</title><rect x="63.6364%" y="325" width="0.2525%" height="15" fill="rgb(220,106,47)"/><text x="63.8864%" y="335.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (12 samples, 1.52%)</title><rect x="62.5000%" y="357" width="1.5152%" height="15" fill="rgb(210,196,33)"/><text x="62.7500%" y="367.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (12 samples, 1.52%)</title><rect x="62.5000%" y="341" width="1.5152%" height="15" fill="rgb(229,154,42)"/><text x="62.7500%" y="351.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.13%)</title><rect x="63.8889%" y="325" width="0.1263%" height="15" fill="rgb(228,114,26)"/><text x="64.1389%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::truncate (1 samples, 0.13%)</title><rect x="64.5202%" y="309" width="0.1263%" height="15" fill="rgb(208,144,1)"/><text x="64.7702%" y="319.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (1 samples, 0.13%)</title><rect x="64.6465%" y="293" width="0.1263%" height="15" fill="rgb(239,112,37)"/><text x="64.8965%" y="303.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (3 samples, 0.38%)</title><rect x="64.6465%" y="309" width="0.3788%" height="15" fill="rgb(210,96,50)"/><text x="64.8965%" y="319.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (2 samples, 0.25%)</title><rect x="64.7727%" y="293" width="0.2525%" height="15" fill="rgb(222,178,2)"/><text x="65.0227%" y="303.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (2 samples, 0.25%)</title><rect x="64.7727%" y="277" width="0.2525%" height="15" fill="rgb(226,74,18)"/><text x="65.0227%" y="287.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (2 samples, 0.25%)</title><rect x="64.7727%" y="261" width="0.2525%" height="15" fill="rgb(225,67,54)"/><text x="65.0227%" y="271.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (2 samples, 0.25%)</title><rect x="64.7727%" y="245" width="0.2525%" height="15" fill="rgb(251,92,32)"/><text x="65.0227%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (6 samples, 0.76%)</title><rect x="64.3939%" y="325" width="0.7576%" height="15" fill="rgb(228,149,22)"/><text x="64.6439%" y="335.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.13%)</title><rect x="65.0253%" y="309" width="0.1263%" height="15" fill="rgb(243,54,13)"/><text x="65.2753%" y="319.50"></text></g><g><title>core::ptr::swap (1 samples, 0.13%)</title><rect x="65.0253%" y="293" width="0.1263%" height="15" fill="rgb(243,180,28)"/><text x="65.2753%" y="303.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.13%)</title><rect x="65.0253%" y="277" width="0.1263%" height="15" fill="rgb(208,167,24)"/><text x="65.2753%" y="287.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (1 samples, 0.13%)</title><rect x="65.1515%" y="325" width="0.1263%" height="15" fill="rgb(245,73,45)"/><text x="65.4015%" y="335.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (1 samples, 0.13%)</title><rect x="65.1515%" y="309" width="0.1263%" height="15" fill="rgb(237,203,48)"/><text x="65.4015%" y="319.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek::{{closure}} (1 samples, 0.13%)</title><rect x="65.1515%" y="293" width="0.1263%" height="15" fill="rgb(211,197,16)"/><text x="65.4015%" y="303.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.13%)</title><rect x="65.1515%" y="277" width="0.1263%" height="15" fill="rgb(243,99,51)"/><text x="65.4015%" y="287.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.13%)</title><rect x="65.1515%" y="261" width="0.1263%" height="15" fill="rgb(215,123,29)"/><text x="65.4015%" y="271.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (23 samples, 2.90%)</title><rect x="62.5000%" y="373" width="2.9040%" height="15" fill="rgb(239,186,37)"/><text x="62.7500%" y="383.50">&lt;b..</text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (11 samples, 1.39%)</title><rect x="64.0152%" y="357" width="1.3889%" height="15" fill="rgb(252,136,39)"/><text x="64.2652%" y="367.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (11 samples, 1.39%)</title><rect x="64.0152%" y="341" width="1.3889%" height="15" fill="rgb(223,213,32)"/><text x="64.2652%" y="351.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.13%)</title><rect x="65.2778%" y="325" width="0.1263%" height="15" fill="rgb(233,115,5)"/><text x="65.5278%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::truncate (1 samples, 0.13%)</title><rect x="65.9091%" y="293" width="0.1263%" height="15" fill="rgb(207,226,44)"/><text x="66.1591%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (9 samples, 1.14%)</title><rect x="65.4040%" y="309" width="1.1364%" height="15" fill="rgb(208,126,0)"/><text x="65.6540%" y="319.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (4 samples, 0.51%)</title><rect x="66.0354%" y="293" width="0.5051%" height="15" fill="rgb(244,66,21)"/><text x="66.2854%" y="303.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (3 samples, 0.38%)</title><rect x="66.1616%" y="277" width="0.3788%" height="15" fill="rgb(222,97,12)"/><text x="66.4116%" y="287.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (10 samples, 1.26%)</title><rect x="65.4040%" y="341" width="1.2626%" height="15" fill="rgb(219,213,19)"/><text x="65.6540%" y="351.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (10 samples, 1.26%)</title><rect x="65.4040%" y="325" width="1.2626%" height="15" fill="rgb(252,169,30)"/><text x="65.6540%" y="335.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::lt (1 samples, 0.13%)</title><rect x="66.5404%" y="309" width="0.1263%" height="15" fill="rgb(206,32,51)"/><text x="66.7904%" y="319.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (11 samples, 1.39%)</title><rect x="65.4040%" y="357" width="1.3889%" height="15" fill="rgb(250,172,42)"/><text x="65.6540%" y="367.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (1 samples, 0.13%)</title><rect x="66.6667%" y="341" width="0.1263%" height="15" fill="rgb(209,34,43)"/><text x="66.9167%" y="351.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (1 samples, 0.13%)</title><rect x="66.6667%" y="325" width="0.1263%" height="15" fill="rgb(223,11,35)"/><text x="66.9167%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (1 samples, 0.13%)</title><rect x="66.6667%" y="309" width="0.1263%" height="15" fill="rgb(251,219,26)"/><text x="66.9167%" y="319.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (1 samples, 0.13%)</title><rect x="66.6667%" y="293" width="0.1263%" height="15" fill="rgb(231,119,3)"/><text x="66.9167%" y="303.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.13%)</title><rect x="66.6667%" y="277" width="0.1263%" height="15" fill="rgb(216,97,11)"/><text x="66.9167%" y="287.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.13%)</title><rect x="66.6667%" y="261" width="0.1263%" height="15" fill="rgb(223,59,9)"/><text x="66.9167%" y="271.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (1 samples, 0.13%)</title><rect x="66.6667%" y="245" width="0.1263%" height="15" fill="rgb(233,93,31)"/><text x="66.9167%" y="255.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.13%)</title><rect x="66.6667%" y="229" width="0.1263%" height="15" fill="rgb(239,81,33)"/><text x="66.9167%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (1 samples, 0.13%)</title><rect x="66.9192%" y="293" width="0.1263%" height="15" fill="rgb(213,120,34)"/><text x="67.1692%" y="303.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (3 samples, 0.38%)</title><rect x="66.7929%" y="325" width="0.3788%" height="15" fill="rgb(243,49,53)"/><text x="67.0429%" y="335.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (3 samples, 0.38%)</title><rect x="66.7929%" y="309" width="0.3788%" height="15" fill="rgb(247,216,33)"/><text x="67.0429%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.13%)</title><rect x="67.0455%" y="293" width="0.1263%" height="15" fill="rgb(226,26,14)"/><text x="67.2955%" y="303.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (61 samples, 7.70%)</title><rect x="59.5960%" y="405" width="7.7020%" height="15" fill="rgb(215,49,53)"/><text x="59.8460%" y="415.50">broccoli::q..</text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (38 samples, 4.80%)</title><rect x="62.5000%" y="389" width="4.7980%" height="15" fill="rgb(245,162,40)"/><text x="62.7500%" y="399.50">brocco..</text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (15 samples, 1.89%)</title><rect x="65.4040%" y="373" width="1.8939%" height="15" fill="rgb(229,68,17)"/><text x="65.6540%" y="383.50">b..</text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (4 samples, 0.51%)</title><rect x="66.7929%" y="357" width="0.5051%" height="15" fill="rgb(213,182,10)"/><text x="67.0429%" y="367.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (4 samples, 0.51%)</title><rect x="66.7929%" y="341" width="0.5051%" height="15" fill="rgb(245,125,30)"/><text x="67.0429%" y="351.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (1 samples, 0.13%)</title><rect x="67.1717%" y="325" width="0.1263%" height="15" fill="rgb(232,202,2)"/><text x="67.4217%" y="335.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (1 samples, 0.13%)</title><rect x="67.1717%" y="309" width="0.1263%" height="15" fill="rgb(237,140,51)"/><text x="67.4217%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (1 samples, 0.13%)</title><rect x="67.1717%" y="293" width="0.1263%" height="15" fill="rgb(236,157,25)"/><text x="67.4217%" y="303.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (1 samples, 0.13%)</title><rect x="67.1717%" y="277" width="0.1263%" height="15" fill="rgb(219,209,0)"/><text x="67.4217%" y="287.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.13%)</title><rect x="67.1717%" y="261" width="0.1263%" height="15" fill="rgb(240,116,54)"/><text x="67.4217%" y="271.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.13%)</title><rect x="67.1717%" y="245" width="0.1263%" height="15" fill="rgb(216,10,36)"/><text x="67.4217%" y="255.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (1 samples, 0.13%)</title><rect x="67.1717%" y="229" width="0.1263%" height="15" fill="rgb(222,72,44)"/><text x="67.4217%" y="239.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.13%)</title><rect x="67.1717%" y="213" width="0.1263%" height="15" fill="rgb(232,159,9)"/><text x="67.4217%" y="223.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (1 samples, 0.13%)</title><rect x="67.6768%" y="341" width="0.1263%" height="15" fill="rgb(210,39,32)"/><text x="67.9268%" y="351.50"></text></g><g><title>broccoli::query::colfind::inner::ColFindRecurser&lt;T,K,S&gt;::recurse_seq (491 samples, 61.99%)</title><rect x="6.0606%" y="421" width="61.9949%" height="15" fill="rgb(216,194,45)"/><text x="6.3106%" y="431.50">broccoli::query::colfind::inner::ColFindRecurser&lt;T,K,S&gt;::recurse_seq</text></g><g><title>broccoli::query::colfind::oned::find_2d (6 samples, 0.76%)</title><rect x="67.2980%" y="405" width="0.7576%" height="15" fill="rgb(218,18,35)"/><text x="67.5480%" y="415.50"></text></g><g><title>broccoli::query::colfind::oned::find (6 samples, 0.76%)</title><rect x="67.2980%" y="389" width="0.7576%" height="15" fill="rgb(207,83,51)"/><text x="67.5480%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (6 samples, 0.76%)</title><rect x="67.2980%" y="373" width="0.7576%" height="15" fill="rgb(225,63,43)"/><text x="67.5480%" y="383.50"></text></g><g><title>broccoli::query::colfind::oned::find::{{closure}} (4 samples, 0.51%)</title><rect x="67.5505%" y="357" width="0.5051%" height="15" fill="rgb(207,57,36)"/><text x="67.8005%" y="367.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (2 samples, 0.25%)</title><rect x="67.8030%" y="341" width="0.2525%" height="15" fill="rgb(216,99,33)"/><text x="68.0530%" y="351.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (2 samples, 0.25%)</title><rect x="67.8030%" y="325" width="0.2525%" height="15" fill="rgb(225,42,16)"/><text x="68.0530%" y="335.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (2 samples, 0.25%)</title><rect x="67.8030%" y="309" width="0.2525%" height="15" fill="rgb(220,201,45)"/><text x="68.0530%" y="319.50"></text></g><g><title>data_gen::main::{{closure}}::{{closure}} (2 samples, 0.25%)</title><rect x="67.8030%" y="293" width="0.2525%" height="15" fill="rgb(225,33,4)"/><text x="68.0530%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (5 samples, 0.63%)</title><rect x="68.0556%" y="357" width="0.6313%" height="15" fill="rgb(224,33,50)"/><text x="68.3056%" y="367.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (4 samples, 0.51%)</title><rect x="68.1818%" y="341" width="0.5051%" height="15" fill="rgb(246,198,51)"/><text x="68.4318%" y="351.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (3 samples, 0.38%)</title><rect x="68.3081%" y="325" width="0.3788%" height="15" fill="rgb(205,22,4)"/><text x="68.5581%" y="335.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (2 samples, 0.25%)</title><rect x="68.4343%" y="309" width="0.2525%" height="15" fill="rgb(206,3,8)"/><text x="68.6843%" y="319.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (2 samples, 0.25%)</title><rect x="68.4343%" y="293" width="0.2525%" height="15" fill="rgb(251,23,15)"/><text x="68.6843%" y="303.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (2 samples, 0.25%)</title><rect x="68.4343%" y="277" width="0.2525%" height="15" fill="rgb(252,88,28)"/><text x="68.6843%" y="287.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (6 samples, 0.76%)</title><rect x="68.0556%" y="389" width="0.7576%" height="15" fill="rgb(212,127,14)"/><text x="68.3056%" y="399.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (6 samples, 0.76%)</title><rect x="68.0556%" y="373" width="0.7576%" height="15" fill="rgb(247,145,37)"/><text x="68.3056%" y="383.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.13%)</title><rect x="68.6869%" y="357" width="0.1263%" height="15" fill="rgb(209,117,53)"/><text x="68.9369%" y="367.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (7 samples, 0.88%)</title><rect x="68.0556%" y="405" width="0.8838%" height="15" fill="rgb(212,90,42)"/><text x="68.3056%" y="415.50"></text></g><g><title>broccoli::query::colfind::oned::get_section_mut (1 samples, 0.13%)</title><rect x="68.8131%" y="389" width="0.1263%" height="15" fill="rgb(218,164,37)"/><text x="69.0631%" y="399.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (2 samples, 0.25%)</title><rect x="68.9394%" y="373" width="0.2525%" height="15" fill="rgb(246,65,34)"/><text x="69.1894%" y="383.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (2 samples, 0.25%)</title><rect x="68.9394%" y="357" width="0.2525%" height="15" fill="rgb(231,100,33)"/><text x="69.1894%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (1 samples, 0.13%)</title><rect x="69.1919%" y="341" width="0.1263%" height="15" fill="rgb(228,126,14)"/><text x="69.4419%" y="351.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (1 samples, 0.13%)</title><rect x="69.1919%" y="325" width="0.1263%" height="15" fill="rgb(215,173,21)"/><text x="69.4419%" y="335.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (4 samples, 0.51%)</title><rect x="68.9394%" y="389" width="0.5051%" height="15" fill="rgb(210,6,40)"/><text x="69.1894%" y="399.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (2 samples, 0.25%)</title><rect x="69.1919%" y="373" width="0.2525%" height="15" fill="rgb(212,48,18)"/><text x="69.4419%" y="383.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (2 samples, 0.25%)</title><rect x="69.1919%" y="357" width="0.2525%" height="15" fill="rgb(230,214,11)"/><text x="69.4419%" y="367.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (1 samples, 0.13%)</title><rect x="69.3182%" y="341" width="0.1263%" height="15" fill="rgb(254,105,39)"/><text x="69.5682%" y="351.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (1 samples, 0.13%)</title><rect x="69.3182%" y="325" width="0.1263%" height="15" fill="rgb(245,158,5)"/><text x="69.5682%" y="335.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (2 samples, 0.25%)</title><rect x="70.3283%" y="293" width="0.2525%" height="15" fill="rgb(249,208,11)"/><text x="70.5783%" y="303.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.13%)</title><rect x="70.5808%" y="293" width="0.1263%" height="15" fill="rgb(210,39,28)"/><text x="70.8308%" y="303.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (11 samples, 1.39%)</title><rect x="69.4444%" y="357" width="1.3889%" height="15" fill="rgb(211,56,53)"/><text x="69.6944%" y="367.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (11 samples, 1.39%)</title><rect x="69.4444%" y="341" width="1.3889%" height="15" fill="rgb(226,201,30)"/><text x="69.6944%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (6 samples, 0.76%)</title><rect x="70.0758%" y="325" width="0.7576%" height="15" fill="rgb(239,101,34)"/><text x="70.3258%" y="335.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (6 samples, 0.76%)</title><rect x="70.0758%" y="309" width="0.7576%" height="15" fill="rgb(226,209,5)"/><text x="70.3258%" y="319.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.13%)</title><rect x="70.7071%" y="293" width="0.1263%" height="15" fill="rgb(250,105,47)"/><text x="70.9571%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (1 samples, 0.13%)</title><rect x="70.9596%" y="325" width="0.1263%" height="15" fill="rgb(230,72,3)"/><text x="71.2096%" y="335.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (1 samples, 0.13%)</title><rect x="70.9596%" y="309" width="0.1263%" height="15" fill="rgb(232,218,39)"/><text x="71.2096%" y="319.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.13%)</title><rect x="70.9596%" y="293" width="0.1263%" height="15" fill="rgb(248,166,6)"/><text x="71.2096%" y="303.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.13%)</title><rect x="70.9596%" y="277" width="0.1263%" height="15" fill="rgb(247,89,20)"/><text x="71.2096%" y="287.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (1 samples, 0.13%)</title><rect x="70.9596%" y="261" width="0.1263%" height="15" fill="rgb(248,130,54)"/><text x="71.2096%" y="271.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.13%)</title><rect x="70.9596%" y="245" width="0.1263%" height="15" fill="rgb(234,196,4)"/><text x="71.2096%" y="255.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (16 samples, 2.02%)</title><rect x="69.4444%" y="373" width="2.0202%" height="15" fill="rgb(250,143,31)"/><text x="69.6944%" y="383.50">&lt;..</text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (5 samples, 0.63%)</title><rect x="70.8333%" y="357" width="0.6313%" height="15" fill="rgb(211,110,34)"/><text x="71.0833%" y="367.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (5 samples, 0.63%)</title><rect x="70.8333%" y="341" width="0.6313%" height="15" fill="rgb(215,124,48)"/><text x="71.0833%" y="351.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (3 samples, 0.38%)</title><rect x="71.0859%" y="325" width="0.3788%" height="15" fill="rgb(216,46,13)"/><text x="71.3359%" y="335.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (3 samples, 0.38%)</title><rect x="71.0859%" y="309" width="0.3788%" height="15" fill="rgb(205,184,25)"/><text x="71.3359%" y="319.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek::{{closure}} (3 samples, 0.38%)</title><rect x="71.0859%" y="293" width="0.3788%" height="15" fill="rgb(228,1,10)"/><text x="71.3359%" y="303.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.38%)</title><rect x="71.0859%" y="277" width="0.3788%" height="15" fill="rgb(213,116,27)"/><text x="71.3359%" y="287.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.38%)</title><rect x="71.0859%" y="261" width="0.3788%" height="15" fill="rgb(241,95,50)"/><text x="71.3359%" y="271.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (3 samples, 0.38%)</title><rect x="71.4646%" y="277" width="0.3788%" height="15" fill="rgb(238,48,32)"/><text x="71.7146%" y="287.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFn&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (2 samples, 0.25%)</title><rect x="71.5909%" y="261" width="0.2525%" height="15" fill="rgb(235,113,49)"/><text x="71.8409%" y="271.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut_par::{{closure}} (2 samples, 0.25%)</title><rect x="71.5909%" y="245" width="0.2525%" height="15" fill="rgb(205,127,43)"/><text x="71.8409%" y="255.50"></text></g><g><title>data_gen::colfind::colfind::handle_bench_inner::{{closure}}::{{closure}}::{{closure}} (2 samples, 0.25%)</title><rect x="71.5909%" y="229" width="0.2525%" height="15" fill="rgb(250,162,2)"/><text x="71.8409%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (4 samples, 0.51%)</title><rect x="71.4646%" y="309" width="0.5051%" height="15" fill="rgb(220,13,41)"/><text x="71.7146%" y="319.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (4 samples, 0.51%)</title><rect x="71.4646%" y="293" width="0.5051%" height="15" fill="rgb(249,221,25)"/><text x="71.7146%" y="303.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.13%)</title><rect x="71.8434%" y="277" width="0.1263%" height="15" fill="rgb(215,208,19)"/><text x="72.0934%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.13%)</title><rect x="71.9697%" y="309" width="0.1263%" height="15" fill="rgb(236,175,2)"/><text x="72.2197%" y="319.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (6 samples, 0.76%)</title><rect x="71.4646%" y="341" width="0.7576%" height="15" fill="rgb(241,52,2)"/><text x="71.7146%" y="351.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (6 samples, 0.76%)</title><rect x="71.4646%" y="325" width="0.7576%" height="15" fill="rgb(248,140,14)"/><text x="71.7146%" y="335.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (1 samples, 0.13%)</title><rect x="72.0960%" y="309" width="0.1263%" height="15" fill="rgb(253,22,42)"/><text x="72.3460%" y="319.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (1 samples, 0.13%)</title><rect x="72.0960%" y="293" width="0.1263%" height="15" fill="rgb(234,61,47)"/><text x="72.3460%" y="303.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek::{{closure}} (1 samples, 0.13%)</title><rect x="72.0960%" y="277" width="0.1263%" height="15" fill="rgb(208,226,15)"/><text x="72.3460%" y="287.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.13%)</title><rect x="72.0960%" y="261" width="0.1263%" height="15" fill="rgb(217,221,4)"/><text x="72.3460%" y="271.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.13%)</title><rect x="72.0960%" y="245" width="0.1263%" height="15" fill="rgb(212,174,34)"/><text x="72.3460%" y="255.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (8 samples, 1.01%)</title><rect x="71.4646%" y="357" width="1.0101%" height="15" fill="rgb(253,83,4)"/><text x="71.7146%" y="367.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (2 samples, 0.25%)</title><rect x="72.2222%" y="341" width="0.2525%" height="15" fill="rgb(250,195,49)"/><text x="72.4722%" y="351.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (2 samples, 0.25%)</title><rect x="72.2222%" y="325" width="0.2525%" height="15" fill="rgb(241,192,25)"/><text x="72.4722%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (2 samples, 0.25%)</title><rect x="72.2222%" y="309" width="0.2525%" height="15" fill="rgb(208,124,10)"/><text x="72.4722%" y="319.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (2 samples, 0.25%)</title><rect x="72.2222%" y="293" width="0.2525%" height="15" fill="rgb(222,33,0)"/><text x="72.4722%" y="303.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (2 samples, 0.25%)</title><rect x="72.2222%" y="277" width="0.2525%" height="15" fill="rgb(234,209,28)"/><text x="72.4722%" y="287.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.13%)</title><rect x="72.3485%" y="261" width="0.1263%" height="15" fill="rgb(224,11,23)"/><text x="72.5985%" y="271.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (1 samples, 0.13%)</title><rect x="72.3485%" y="245" width="0.1263%" height="15" fill="rgb(232,99,1)"/><text x="72.5985%" y="255.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.13%)</title><rect x="72.3485%" y="229" width="0.1263%" height="15" fill="rgb(237,95,45)"/><text x="72.5985%" y="239.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut (533 samples, 67.30%)</title><rect x="5.4293%" y="469" width="67.2980%" height="15" fill="rgb(208,109,11)"/><text x="5.6793%" y="479.50">broccoli::query::Queries::find_colliding_pairs_mut</text></g><g><title>broccoli::query::colfind::QueryBuilder&lt;A,T&gt;::query_seq (533 samples, 67.30%)</title><rect x="5.4293%" y="453" width="67.2980%" height="15" fill="rgb(216,190,48)"/><text x="5.6793%" y="463.50">broccoli::query::colfind::QueryBuilder&lt;A,T&gt;::query_seq</text></g><g><title>broccoli::query::colfind::inner::ColFindRecurser&lt;T,K,S&gt;::recurse_seq (533 samples, 67.30%)</title><rect x="5.4293%" y="437" width="67.2980%" height="15" fill="rgb(251,171,36)"/><text x="5.6793%" y="447.50">broccoli::query::colfind::inner::ColFindRecurser&lt;T,K,S&gt;::recurse_seq</text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (37 samples, 4.67%)</title><rect x="68.0556%" y="421" width="4.6717%" height="15" fill="rgb(230,62,22)"/><text x="68.3056%" y="431.50">brocc..</text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (30 samples, 3.79%)</title><rect x="68.9394%" y="405" width="3.7879%" height="15" fill="rgb(225,114,35)"/><text x="69.1894%" y="415.50">broc..</text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (26 samples, 3.28%)</title><rect x="69.4444%" y="389" width="3.2828%" height="15" fill="rgb(215,118,42)"/><text x="69.6944%" y="399.50">bro..</text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (10 samples, 1.26%)</title><rect x="71.4646%" y="373" width="1.2626%" height="15" fill="rgb(243,119,21)"/><text x="71.7146%" y="383.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (2 samples, 0.25%)</title><rect x="72.4747%" y="357" width="0.2525%" height="15" fill="rgb(252,177,53)"/><text x="72.7247%" y="367.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (2 samples, 0.25%)</title><rect x="72.4747%" y="341" width="0.2525%" height="15" fill="rgb(237,209,29)"/><text x="72.7247%" y="351.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (2 samples, 0.25%)</title><rect x="72.4747%" y="325" width="0.2525%" height="15" fill="rgb(212,65,23)"/><text x="72.7247%" y="335.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (2 samples, 0.25%)</title><rect x="72.4747%" y="309" width="0.2525%" height="15" fill="rgb(230,222,46)"/><text x="72.7247%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (2 samples, 0.25%)</title><rect x="72.4747%" y="293" width="0.2525%" height="15" fill="rgb(215,135,32)"/><text x="72.7247%" y="303.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (2 samples, 0.25%)</title><rect x="72.4747%" y="277" width="0.2525%" height="15" fill="rgb(246,101,22)"/><text x="72.7247%" y="287.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (2 samples, 0.25%)</title><rect x="72.4747%" y="261" width="0.2525%" height="15" fill="rgb(206,107,13)"/><text x="72.7247%" y="271.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFn&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (2 samples, 0.25%)</title><rect x="72.4747%" y="245" width="0.2525%" height="15" fill="rgb(250,100,44)"/><text x="72.7247%" y="255.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut_par::{{closure}} (2 samples, 0.25%)</title><rect x="72.4747%" y="229" width="0.2525%" height="15" fill="rgb(231,147,38)"/><text x="72.7247%" y="239.50"></text></g><g><title>data_gen::colfind::colfind::handle_bench_inner::{{closure}}::{{closure}}::{{closure}} (2 samples, 0.25%)</title><rect x="72.4747%" y="213" width="0.2525%" height="15" fill="rgb(229,8,40)"/><text x="72.7247%" y="223.50"></text></g><g><title>broccoli::tree::analyze::builder::NonLeafFinisher&lt;A,T&gt;::finish (1 samples, 0.13%)</title><rect x="72.7273%" y="405" width="0.1263%" height="15" fill="rgb(221,135,30)"/><text x="72.9773%" y="415.50"></text></g><g><title>&lt;broccoli::tree::analyze::DefaultSorter as broccoli::tree::analyze::Sorter&gt;::sort (1 samples, 0.13%)</title><rect x="72.7273%" y="389" width="0.1263%" height="15" fill="rgb(249,193,18)"/><text x="72.9773%" y="399.50"></text></g><g><title>broccoli::tree::analyze::oned::sweeper_update (1 samples, 0.13%)</title><rect x="72.7273%" y="373" width="0.1263%" height="15" fill="rgb(209,133,39)"/><text x="72.9773%" y="383.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by (1 samples, 0.13%)</title><rect x="72.7273%" y="357" width="0.1263%" height="15" fill="rgb(232,100,14)"/><text x="72.9773%" y="367.50"></text></g><g><title>core::slice::sort::quicksort (1 samples, 0.13%)</title><rect x="72.7273%" y="341" width="0.1263%" height="15" fill="rgb(224,185,1)"/><text x="72.9773%" y="351.50"></text></g><g><title>core::slice::sort::recurse (1 samples, 0.13%)</title><rect x="72.7273%" y="325" width="0.1263%" height="15" fill="rgb(223,139,8)"/><text x="72.9773%" y="335.50"></text></g><g><title>core::slice::sort::recurse (1 samples, 0.13%)</title><rect x="72.7273%" y="309" width="0.1263%" height="15" fill="rgb(232,213,38)"/><text x="72.9773%" y="319.50"></text></g><g><title>core::slice::sort::recurse (1 samples, 0.13%)</title><rect x="72.7273%" y="293" width="0.1263%" height="15" fill="rgb(207,94,22)"/><text x="72.9773%" y="303.50"></text></g><g><title>core::slice::sort::insertion_sort (1 samples, 0.13%)</title><rect x="72.7273%" y="277" width="0.1263%" height="15" fill="rgb(219,183,54)"/><text x="72.9773%" y="287.50"></text></g><g><title>core::slice::sort::shift_tail (1 samples, 0.13%)</title><rect x="72.7273%" y="261" width="0.1263%" height="15" fill="rgb(216,185,54)"/><text x="72.9773%" y="271.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.13%)</title><rect x="72.7273%" y="245" width="0.1263%" height="15" fill="rgb(254,217,39)"/><text x="72.9773%" y="255.50"></text></g><g><title>axgeom::range::Range&lt;T&gt;::contains_ext (2 samples, 0.25%)</title><rect x="73.2323%" y="357" width="0.2525%" height="15" fill="rgb(240,178,23)"/><text x="73.4823%" y="367.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.25%)</title><rect x="73.4848%" y="357" width="0.2525%" height="15" fill="rgb(218,11,47)"/><text x="73.7348%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (2 samples, 0.25%)</title><rect x="73.4848%" y="341" width="0.2525%" height="15" fill="rgb(218,51,51)"/><text x="73.7348%" y="351.50"></text></g><g><title>broccoli::tree::analyze::oned::bin_middle_left_right (8 samples, 1.01%)</title><rect x="72.8535%" y="373" width="1.0101%" height="15" fill="rgb(238,126,27)"/><text x="73.1035%" y="383.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.13%)</title><rect x="73.7374%" y="357" width="0.1263%" height="15" fill="rgb(249,202,22)"/><text x="73.9874%" y="367.50"></text></g><g><title>core::ptr::swap (1 samples, 0.13%)</title><rect x="73.7374%" y="341" width="0.1263%" height="15" fill="rgb(254,195,49)"/><text x="73.9874%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.13%)</title><rect x="73.7374%" y="325" width="0.1263%" height="15" fill="rgb(208,123,14)"/><text x="73.9874%" y="335.50"></text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::create_non_leaf (17 samples, 2.15%)</title><rect x="72.8535%" y="405" width="2.1465%" height="15" fill="rgb(224,200,8)"/><text x="73.1035%" y="415.50">b..</text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf (17 samples, 2.15%)</title><rect x="72.8535%" y="389" width="2.1465%" height="15" fill="rgb(217,61,36)"/><text x="73.1035%" y="399.50">b..</text></g><g><title>pdqselect::select_by (9 samples, 1.14%)</title><rect x="73.8636%" y="373" width="1.1364%" height="15" fill="rgb(206,35,45)"/><text x="74.1136%" y="383.50"></text></g><g><title>pdqselect::quickselect (9 samples, 1.14%)</title><rect x="73.8636%" y="357" width="1.1364%" height="15" fill="rgb(217,65,33)"/><text x="74.1136%" y="367.50"></text></g><g><title>pdqselect::recurse (9 samples, 1.14%)</title><rect x="73.8636%" y="341" width="1.1364%" height="15" fill="rgb(222,158,48)"/><text x="74.1136%" y="351.50"></text></g><g><title>pdqselect::partition (9 samples, 1.14%)</title><rect x="73.8636%" y="325" width="1.1364%" height="15" fill="rgb(254,2,54)"/><text x="74.1136%" y="335.50"></text></g><g><title>pdqselect::partition_in_blocks (7 samples, 0.88%)</title><rect x="74.1162%" y="309" width="0.8838%" height="15" fill="rgb(250,143,38)"/><text x="74.3662%" y="319.50"></text></g><g><title>pdqselect::select_by::{{closure}} (2 samples, 0.25%)</title><rect x="74.7475%" y="293" width="0.2525%" height="15" fill="rgb(248,25,0)"/><text x="74.9975%" y="303.50"></text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf::{{closure}} (2 samples, 0.25%)</title><rect x="74.7475%" y="277" width="0.2525%" height="15" fill="rgb(206,152,27)"/><text x="74.9975%" y="287.50"></text></g><g><title>broccoli::tree::analyze::oned::compare_bots (2 samples, 0.25%)</title><rect x="74.7475%" y="261" width="0.2525%" height="15" fill="rgb(240,77,30)"/><text x="74.9975%" y="271.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (2 samples, 0.25%)</title><rect x="74.7475%" y="245" width="0.2525%" height="15" fill="rgb(231,5,3)"/><text x="74.9975%" y="255.50"></text></g><g><title>broccoli::tree::analyze::builder::NonLeafFinisher&lt;A,T&gt;::finish (1 samples, 0.13%)</title><rect x="75.0000%" y="389" width="0.1263%" height="15" fill="rgb(207,226,32)"/><text x="75.2500%" y="399.50"></text></g><g><title>&lt;broccoli::tree::analyze::DefaultSorter as broccoli::tree::analyze::Sorter&gt;::sort (1 samples, 0.13%)</title><rect x="75.0000%" y="373" width="0.1263%" height="15" fill="rgb(222,207,47)"/><text x="75.2500%" y="383.50"></text></g><g><title>broccoli::tree::analyze::oned::sweeper_update (1 samples, 0.13%)</title><rect x="75.0000%" y="357" width="0.1263%" height="15" fill="rgb(229,115,45)"/><text x="75.2500%" y="367.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by (1 samples, 0.13%)</title><rect x="75.0000%" y="341" width="0.1263%" height="15" fill="rgb(224,191,6)"/><text x="75.2500%" y="351.50"></text></g><g><title>core::slice::sort::quicksort (1 samples, 0.13%)</title><rect x="75.0000%" y="325" width="0.1263%" height="15" fill="rgb(230,227,24)"/><text x="75.2500%" y="335.50"></text></g><g><title>core::slice::sort::recurse (1 samples, 0.13%)</title><rect x="75.0000%" y="309" width="0.1263%" height="15" fill="rgb(228,80,19)"/><text x="75.2500%" y="319.50"></text></g><g><title>core::slice::sort::recurse (1 samples, 0.13%)</title><rect x="75.0000%" y="293" width="0.1263%" height="15" fill="rgb(247,229,0)"/><text x="75.2500%" y="303.50"></text></g><g><title>core::slice::sort::recurse (1 samples, 0.13%)</title><rect x="75.0000%" y="277" width="0.1263%" height="15" fill="rgb(237,194,15)"/><text x="75.2500%" y="287.50"></text></g><g><title>core::slice::sort::partial_insertion_sort (1 samples, 0.13%)</title><rect x="75.0000%" y="261" width="0.1263%" height="15" fill="rgb(219,203,20)"/><text x="75.2500%" y="271.50"></text></g><g><title>axgeom::range::Range&lt;T&gt;::contains_ext (3 samples, 0.38%)</title><rect x="75.2525%" y="341" width="0.3788%" height="15" fill="rgb(234,128,8)"/><text x="75.5025%" y="351.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.13%)</title><rect x="75.6313%" y="341" width="0.1263%" height="15" fill="rgb(248,202,8)"/><text x="75.8813%" y="351.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.13%)</title><rect x="75.6313%" y="325" width="0.1263%" height="15" fill="rgb(206,104,37)"/><text x="75.8813%" y="335.50"></text></g><g><title>broccoli::tree::analyze::oned::bin_middle_left_right (6 samples, 0.76%)</title><rect x="75.1263%" y="357" width="0.7576%" height="15" fill="rgb(223,8,27)"/><text x="75.3763%" y="367.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.13%)</title><rect x="75.7576%" y="341" width="0.1263%" height="15" fill="rgb(216,217,28)"/><text x="76.0076%" y="351.50"></text></g><g><title>core::ptr::swap (1 samples, 0.13%)</title><rect x="75.7576%" y="325" width="0.1263%" height="15" fill="rgb(249,199,1)"/><text x="76.0076%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.13%)</title><rect x="75.7576%" y="309" width="0.1263%" height="15" fill="rgb(240,85,17)"/><text x="76.0076%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.13%)</title><rect x="76.1364%" y="277" width="0.1263%" height="15" fill="rgb(206,108,45)"/><text x="76.3864%" y="287.50"></text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::create_non_leaf (11 samples, 1.39%)</title><rect x="75.1263%" y="389" width="1.3889%" height="15" fill="rgb(245,210,41)"/><text x="75.3763%" y="399.50"></text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf (11 samples, 1.39%)</title><rect x="75.1263%" y="373" width="1.3889%" height="15" fill="rgb(206,13,37)"/><text x="75.3763%" y="383.50"></text></g><g><title>pdqselect::select_by (5 samples, 0.63%)</title><rect x="75.8838%" y="357" width="0.6313%" height="15" fill="rgb(250,61,18)"/><text x="76.1338%" y="367.50"></text></g><g><title>pdqselect::quickselect (5 samples, 0.63%)</title><rect x="75.8838%" y="341" width="0.6313%" height="15" fill="rgb(235,172,48)"/><text x="76.1338%" y="351.50"></text></g><g><title>pdqselect::recurse (5 samples, 0.63%)</title><rect x="75.8838%" y="325" width="0.6313%" height="15" fill="rgb(249,201,17)"/><text x="76.1338%" y="335.50"></text></g><g><title>pdqselect::partition (5 samples, 0.63%)</title><rect x="75.8838%" y="309" width="0.6313%" height="15" fill="rgb(219,208,6)"/><text x="76.1338%" y="319.50"></text></g><g><title>pdqselect::partition_in_blocks (5 samples, 0.63%)</title><rect x="75.8838%" y="293" width="0.6313%" height="15" fill="rgb(248,31,23)"/><text x="76.1338%" y="303.50"></text></g><g><title>pdqselect::select_by::{{closure}} (2 samples, 0.25%)</title><rect x="76.2626%" y="277" width="0.2525%" height="15" fill="rgb(245,15,42)"/><text x="76.5126%" y="287.50"></text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf::{{closure}} (2 samples, 0.25%)</title><rect x="76.2626%" y="261" width="0.2525%" height="15" fill="rgb(222,217,39)"/><text x="76.5126%" y="271.50"></text></g><g><title>broccoli::tree::analyze::oned::compare_bots (2 samples, 0.25%)</title><rect x="76.2626%" y="245" width="0.2525%" height="15" fill="rgb(210,219,27)"/><text x="76.5126%" y="255.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.13%)</title><rect x="76.3889%" y="229" width="0.1263%" height="15" fill="rgb(252,166,36)"/><text x="76.6389%" y="239.50"></text></g><g><title>core::slice::sort::partition (1 samples, 0.13%)</title><rect x="76.5152%" y="277" width="0.1263%" height="15" fill="rgb(245,132,34)"/><text x="76.7652%" y="287.50"></text></g><g><title>core::slice::sort::partition_in_blocks (1 samples, 0.13%)</title><rect x="76.5152%" y="261" width="0.1263%" height="15" fill="rgb(236,54,3)"/><text x="76.7652%" y="271.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by::{{closure}} (1 samples, 0.13%)</title><rect x="76.5152%" y="245" width="0.1263%" height="15" fill="rgb(241,173,43)"/><text x="76.7652%" y="255.50"></text></g><g><title>broccoli::tree::analyze::oned::sweeper_update::{{closure}} (1 samples, 0.13%)</title><rect x="76.5152%" y="229" width="0.1263%" height="15" fill="rgb(215,190,9)"/><text x="76.7652%" y="239.50"></text></g><g><title>broccoli::tree::analyze::oned::compare_bots (1 samples, 0.13%)</title><rect x="76.5152%" y="213" width="0.1263%" height="15" fill="rgb(242,101,16)"/><text x="76.7652%" y="223.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.13%)</title><rect x="76.5152%" y="197" width="0.1263%" height="15" fill="rgb(223,190,21)"/><text x="76.7652%" y="207.50"></text></g><g><title>broccoli::tree::analyze::builder::NonLeafFinisher&lt;A,T&gt;::finish (2 samples, 0.25%)</title><rect x="76.5152%" y="373" width="0.2525%" height="15" fill="rgb(215,228,25)"/><text x="76.7652%" y="383.50"></text></g><g><title>&lt;broccoli::tree::analyze::DefaultSorter as broccoli::tree::analyze::Sorter&gt;::sort (2 samples, 0.25%)</title><rect x="76.5152%" y="357" width="0.2525%" height="15" fill="rgb(225,36,22)"/><text x="76.7652%" y="367.50"></text></g><g><title>broccoli::tree::analyze::oned::sweeper_update (2 samples, 0.25%)</title><rect x="76.5152%" y="341" width="0.2525%" height="15" fill="rgb(251,106,46)"/><text x="76.7652%" y="351.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by (2 samples, 0.25%)</title><rect x="76.5152%" y="325" width="0.2525%" height="15" fill="rgb(208,90,1)"/><text x="76.7652%" y="335.50"></text></g><g><title>core::slice::sort::quicksort (2 samples, 0.25%)</title><rect x="76.5152%" y="309" width="0.2525%" height="15" fill="rgb(243,10,4)"/><text x="76.7652%" y="319.50"></text></g><g><title>core::slice::sort::recurse (2 samples, 0.25%)</title><rect x="76.5152%" y="293" width="0.2525%" height="15" fill="rgb(212,137,27)"/><text x="76.7652%" y="303.50"></text></g><g><title>core::slice::sort::recurse (1 samples, 0.13%)</title><rect x="76.6414%" y="277" width="0.1263%" height="15" fill="rgb(231,220,49)"/><text x="76.8914%" y="287.50"></text></g><g><title>core::slice::sort::insertion_sort (1 samples, 0.13%)</title><rect x="76.6414%" y="261" width="0.1263%" height="15" fill="rgb(237,96,20)"/><text x="76.8914%" y="271.50"></text></g><g><title>core::slice::sort::shift_tail (1 samples, 0.13%)</title><rect x="76.6414%" y="245" width="0.1263%" height="15" fill="rgb(239,229,30)"/><text x="76.8914%" y="255.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by::{{closure}} (1 samples, 0.13%)</title><rect x="76.6414%" y="229" width="0.1263%" height="15" fill="rgb(219,65,33)"/><text x="76.8914%" y="239.50"></text></g><g><title>broccoli::tree::analyze::oned::sweeper_update::{{closure}} (1 samples, 0.13%)</title><rect x="76.6414%" y="213" width="0.1263%" height="15" fill="rgb(243,134,7)"/><text x="76.8914%" y="223.50"></text></g><g><title>broccoli::tree::analyze::oned::compare_bots (1 samples, 0.13%)</title><rect x="76.6414%" y="197" width="0.1263%" height="15" fill="rgb(216,177,54)"/><text x="76.8914%" y="207.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.13%)</title><rect x="76.6414%" y="181" width="0.1263%" height="15" fill="rgb(211,160,20)"/><text x="76.8914%" y="191.50"></text></g><g><title>axgeom::range::Range&lt;T&gt;::contains_ext (4 samples, 0.51%)</title><rect x="77.1465%" y="325" width="0.5051%" height="15" fill="rgb(239,85,39)"/><text x="77.3965%" y="335.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.13%)</title><rect x="77.6515%" y="325" width="0.1263%" height="15" fill="rgb(232,125,22)"/><text x="77.9015%" y="335.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.13%)</title><rect x="77.6515%" y="309" width="0.1263%" height="15" fill="rgb(244,57,34)"/><text x="77.9015%" y="319.50"></text></g><g><title>broccoli::tree::analyze::oned::bin_middle_left_right (10 samples, 1.26%)</title><rect x="76.7677%" y="341" width="1.2626%" height="15" fill="rgb(214,203,32)"/><text x="77.0177%" y="351.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (2 samples, 0.25%)</title><rect x="77.7778%" y="325" width="0.2525%" height="15" fill="rgb(207,58,43)"/><text x="78.0278%" y="335.50"></text></g><g><title>core::ptr::swap (2 samples, 0.25%)</title><rect x="77.7778%" y="309" width="0.2525%" height="15" fill="rgb(215,193,15)"/><text x="78.0278%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.25%)</title><rect x="77.7778%" y="293" width="0.2525%" height="15" fill="rgb(232,15,44)"/><text x="78.0278%" y="303.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.13%)</title><rect x="78.5354%" y="261" width="0.1263%" height="15" fill="rgb(212,3,48)"/><text x="78.7854%" y="271.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (1 samples, 0.13%)</title><rect x="78.5354%" y="245" width="0.1263%" height="15" fill="rgb(218,128,7)"/><text x="78.7854%" y="255.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (1 samples, 0.13%)</title><rect x="78.5354%" y="229" width="0.1263%" height="15" fill="rgb(226,216,39)"/><text x="78.7854%" y="239.50"></text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::create_non_leaf (16 samples, 2.02%)</title><rect x="76.7677%" y="373" width="2.0202%" height="15" fill="rgb(243,47,51)"/><text x="77.0177%" y="383.50">b..</text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf (16 samples, 2.02%)</title><rect x="76.7677%" y="357" width="2.0202%" height="15" fill="rgb(241,183,40)"/><text x="77.0177%" y="367.50">b..</text></g><g><title>pdqselect::select_by (6 samples, 0.76%)</title><rect x="78.0303%" y="341" width="0.7576%" height="15" fill="rgb(231,217,32)"/><text x="78.2803%" y="351.50"></text></g><g><title>pdqselect::quickselect (6 samples, 0.76%)</title><rect x="78.0303%" y="325" width="0.7576%" height="15" fill="rgb(229,61,38)"/><text x="78.2803%" y="335.50"></text></g><g><title>pdqselect::recurse (6 samples, 0.76%)</title><rect x="78.0303%" y="309" width="0.7576%" height="15" fill="rgb(225,210,5)"/><text x="78.2803%" y="319.50"></text></g><g><title>pdqselect::partition (6 samples, 0.76%)</title><rect x="78.0303%" y="293" width="0.7576%" height="15" fill="rgb(231,79,45)"/><text x="78.2803%" y="303.50"></text></g><g><title>pdqselect::partition_in_blocks (4 samples, 0.51%)</title><rect x="78.2828%" y="277" width="0.5051%" height="15" fill="rgb(224,100,7)"/><text x="78.5328%" y="287.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.13%)</title><rect x="78.6616%" y="261" width="0.1263%" height="15" fill="rgb(241,198,18)"/><text x="78.9116%" y="271.50"></text></g><g><title>broccoli::tree::analyze::oned::bin_middle_left_right (3 samples, 0.38%)</title><rect x="78.7879%" y="325" width="0.3788%" height="15" fill="rgb(252,97,53)"/><text x="79.0379%" y="335.50"></text></g><g><title>axgeom::range::Range&lt;T&gt;::contains_ext (1 samples, 0.13%)</title><rect x="79.0404%" y="309" width="0.1263%" height="15" fill="rgb(220,88,7)"/><text x="79.2904%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.25%)</title><rect x="79.4192%" y="245" width="0.2525%" height="15" fill="rgb(213,176,14)"/><text x="79.6692%" y="255.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.13%)</title><rect x="79.6717%" y="245" width="0.1263%" height="15" fill="rgb(246,73,7)"/><text x="79.9217%" y="255.50"></text></g><g><title>core::ptr::swap (1 samples, 0.13%)</title><rect x="79.7980%" y="245" width="0.1263%" height="15" fill="rgb(245,64,36)"/><text x="80.0480%" y="255.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.13%)</title><rect x="79.7980%" y="229" width="0.1263%" height="15" fill="rgb(245,80,10)"/><text x="80.0480%" y="239.50"></text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::create_non_leaf (13 samples, 1.64%)</title><rect x="78.7879%" y="357" width="1.6414%" height="15" fill="rgb(232,107,50)"/><text x="79.0379%" y="367.50"></text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf (13 samples, 1.64%)</title><rect x="78.7879%" y="341" width="1.6414%" height="15" fill="rgb(253,3,0)"/><text x="79.0379%" y="351.50"></text></g><g><title>pdqselect::select_by (10 samples, 1.26%)</title><rect x="79.1667%" y="325" width="1.2626%" height="15" fill="rgb(212,99,53)"/><text x="79.4167%" y="335.50"></text></g><g><title>pdqselect::quickselect (10 samples, 1.26%)</title><rect x="79.1667%" y="309" width="1.2626%" height="15" fill="rgb(249,111,54)"/><text x="79.4167%" y="319.50"></text></g><g><title>pdqselect::recurse (10 samples, 1.26%)</title><rect x="79.1667%" y="293" width="1.2626%" height="15" fill="rgb(249,55,30)"/><text x="79.4167%" y="303.50"></text></g><g><title>pdqselect::partition (10 samples, 1.26%)</title><rect x="79.1667%" y="277" width="1.2626%" height="15" fill="rgb(237,47,42)"/><text x="79.4167%" y="287.50"></text></g><g><title>pdqselect::partition_in_blocks (9 samples, 1.14%)</title><rect x="79.2929%" y="261" width="1.1364%" height="15" fill="rgb(211,20,18)"/><text x="79.5429%" y="271.50"></text></g><g><title>pdqselect::select_by::{{closure}} (4 samples, 0.51%)</title><rect x="79.9242%" y="245" width="0.5051%" height="15" fill="rgb(231,203,46)"/><text x="80.1742%" y="255.50"></text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf::{{closure}} (4 samples, 0.51%)</title><rect x="79.9242%" y="229" width="0.5051%" height="15" fill="rgb(237,142,3)"/><text x="80.1742%" y="239.50"></text></g><g><title>broccoli::tree::analyze::oned::compare_bots (4 samples, 0.51%)</title><rect x="79.9242%" y="213" width="0.5051%" height="15" fill="rgb(241,107,1)"/><text x="80.1742%" y="223.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.13%)</title><rect x="80.3030%" y="197" width="0.1263%" height="15" fill="rgb(229,83,13)"/><text x="80.5530%" y="207.50"></text></g><g><title>broccoli::tree::analyze::builder::NonLeafFinisher&lt;A,T&gt;::finish (2 samples, 0.25%)</title><rect x="80.4293%" y="341" width="0.2525%" height="15" fill="rgb(241,91,40)"/><text x="80.6793%" y="351.50"></text></g><g><title>broccoli::tree::analyze::builder::create_cont (2 samples, 0.25%)</title><rect x="80.4293%" y="325" width="0.2525%" height="15" fill="rgb(225,3,45)"/><text x="80.6793%" y="335.50"></text></g><g><title>axgeom::range::Range&lt;T&gt;::contains_ext (2 samples, 0.25%)</title><rect x="80.6818%" y="293" width="0.2525%" height="15" fill="rgb(244,223,14)"/><text x="80.9318%" y="303.50"></text></g><g><title>broccoli::tree::analyze::oned::bin_middle_left_right (4 samples, 0.51%)</title><rect x="80.6818%" y="309" width="0.5051%" height="15" fill="rgb(224,124,37)"/><text x="80.9318%" y="319.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (2 samples, 0.25%)</title><rect x="80.9343%" y="293" width="0.2525%" height="15" fill="rgb(251,171,30)"/><text x="81.1843%" y="303.50"></text></g><g><title>core::ptr::swap (2 samples, 0.25%)</title><rect x="80.9343%" y="277" width="0.2525%" height="15" fill="rgb(236,46,54)"/><text x="81.1843%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.25%)</title><rect x="80.9343%" y="261" width="0.2525%" height="15" fill="rgb(245,213,5)"/><text x="81.1843%" y="271.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.13%)</title><rect x="81.1869%" y="229" width="0.1263%" height="15" fill="rgb(230,144,27)"/><text x="81.4369%" y="239.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.25%)</title><rect x="81.3131%" y="229" width="0.2525%" height="15" fill="rgb(220,86,6)"/><text x="81.5631%" y="239.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (1 samples, 0.13%)</title><rect x="81.4394%" y="213" width="0.1263%" height="15" fill="rgb(240,20,13)"/><text x="81.6894%" y="223.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (1 samples, 0.13%)</title><rect x="81.4394%" y="197" width="0.1263%" height="15" fill="rgb(217,89,34)"/><text x="81.6894%" y="207.50"></text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::create_non_leaf (9 samples, 1.14%)</title><rect x="80.6818%" y="341" width="1.1364%" height="15" fill="rgb(229,13,5)"/><text x="80.9318%" y="351.50"></text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf (9 samples, 1.14%)</title><rect x="80.6818%" y="325" width="1.1364%" height="15" fill="rgb(244,67,35)"/><text x="80.9318%" y="335.50"></text></g><g><title>pdqselect::select_by (5 samples, 0.63%)</title><rect x="81.1869%" y="309" width="0.6313%" height="15" fill="rgb(221,40,2)"/><text x="81.4369%" y="319.50"></text></g><g><title>pdqselect::quickselect (5 samples, 0.63%)</title><rect x="81.1869%" y="293" width="0.6313%" height="15" fill="rgb(237,157,21)"/><text x="81.4369%" y="303.50"></text></g><g><title>pdqselect::recurse (5 samples, 0.63%)</title><rect x="81.1869%" y="277" width="0.6313%" height="15" fill="rgb(222,94,11)"/><text x="81.4369%" y="287.50"></text></g><g><title>pdqselect::partition (5 samples, 0.63%)</title><rect x="81.1869%" y="261" width="0.6313%" height="15" fill="rgb(249,113,6)"/><text x="81.4369%" y="271.50"></text></g><g><title>pdqselect::partition_in_blocks (5 samples, 0.63%)</title><rect x="81.1869%" y="245" width="0.6313%" height="15" fill="rgb(238,137,36)"/><text x="81.4369%" y="255.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (2 samples, 0.25%)</title><rect x="81.5657%" y="229" width="0.2525%" height="15" fill="rgb(210,102,26)"/><text x="81.8157%" y="239.50"></text></g><g><title>core::slice::sort::insertion_sort (1 samples, 0.13%)</title><rect x="81.9444%" y="229" width="0.1263%" height="15" fill="rgb(218,30,30)"/><text x="82.1944%" y="239.50"></text></g><g><title>core::slice::sort::shift_tail (1 samples, 0.13%)</title><rect x="81.9444%" y="213" width="0.1263%" height="15" fill="rgb(214,67,26)"/><text x="82.1944%" y="223.50"></text></g><g><title>core::slice::sort::partition (1 samples, 0.13%)</title><rect x="82.0707%" y="229" width="0.1263%" height="15" fill="rgb(251,9,53)"/><text x="82.3207%" y="239.50"></text></g><g><title>core::slice::sort::partition_in_blocks (1 samples, 0.13%)</title><rect x="82.0707%" y="213" width="0.1263%" height="15" fill="rgb(228,204,25)"/><text x="82.3207%" y="223.50"></text></g><g><title>&lt;broccoli::tree::analyze::DefaultSorter as broccoli::tree::analyze::Sorter&gt;::sort (4 samples, 0.51%)</title><rect x="81.8182%" y="309" width="0.5051%" height="15" fill="rgb(207,153,8)"/><text x="82.0682%" y="319.50"></text></g><g><title>broccoli::tree::analyze::oned::sweeper_update (4 samples, 0.51%)</title><rect x="81.8182%" y="293" width="0.5051%" height="15" fill="rgb(242,9,16)"/><text x="82.0682%" y="303.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by (4 samples, 0.51%)</title><rect x="81.8182%" y="277" width="0.5051%" height="15" fill="rgb(217,211,10)"/><text x="82.0682%" y="287.50"></text></g><g><title>core::slice::sort::quicksort (4 samples, 0.51%)</title><rect x="81.8182%" y="261" width="0.5051%" height="15" fill="rgb(219,228,52)"/><text x="82.0682%" y="271.50"></text></g><g><title>core::slice::sort::recurse (4 samples, 0.51%)</title><rect x="81.8182%" y="245" width="0.5051%" height="15" fill="rgb(231,92,29)"/><text x="82.0682%" y="255.50"></text></g><g><title>core::slice::sort::recurse (1 samples, 0.13%)</title><rect x="82.1970%" y="229" width="0.1263%" height="15" fill="rgb(232,8,23)"/><text x="82.4470%" y="239.50"></text></g><g><title>core::slice::sort::insertion_sort (1 samples, 0.13%)</title><rect x="82.1970%" y="213" width="0.1263%" height="15" fill="rgb(216,211,34)"/><text x="82.4470%" y="223.50"></text></g><g><title>core::slice::sort::shift_tail (1 samples, 0.13%)</title><rect x="82.1970%" y="197" width="0.1263%" height="15" fill="rgb(236,151,0)"/><text x="82.4470%" y="207.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by::{{closure}} (1 samples, 0.13%)</title><rect x="82.1970%" y="181" width="0.1263%" height="15" fill="rgb(209,168,3)"/><text x="82.4470%" y="191.50"></text></g><g><title>broccoli::tree::analyze::oned::sweeper_update::{{closure}} (1 samples, 0.13%)</title><rect x="82.1970%" y="165" width="0.1263%" height="15" fill="rgb(208,129,28)"/><text x="82.4470%" y="175.50"></text></g><g><title>broccoli::tree::analyze::oned::compare_bots (1 samples, 0.13%)</title><rect x="82.1970%" y="149" width="0.1263%" height="15" fill="rgb(229,78,22)"/><text x="82.4470%" y="159.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.13%)</title><rect x="82.1970%" y="133" width="0.1263%" height="15" fill="rgb(228,187,13)"/><text x="82.4470%" y="143.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="82.1970%" y="117" width="0.1263%" height="15" fill="rgb(240,119,24)"/><text x="82.4470%" y="127.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="82.1970%" y="101" width="0.1263%" height="15" fill="rgb(209,194,42)"/><text x="82.4470%" y="111.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="82.1970%" y="85" width="0.1263%" height="15" fill="rgb(247,200,46)"/><text x="82.4470%" y="95.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="82.1970%" y="69" width="0.1263%" height="15" fill="rgb(218,76,16)"/><text x="82.4470%" y="79.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="82.1970%" y="53" width="0.1263%" height="15" fill="rgb(225,21,48)"/><text x="82.4470%" y="63.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="82.1970%" y="37" width="0.1263%" height="15" fill="rgb(239,223,50)"/><text x="82.4470%" y="47.50"></text></g><g><title>broccoli::tree::analyze::builder::NonLeafFinisher&lt;A,T&gt;::finish (5 samples, 0.63%)</title><rect x="81.8182%" y="325" width="0.6313%" height="15" fill="rgb(244,45,21)"/><text x="82.0682%" y="335.50"></text></g><g><title>broccoli::tree::analyze::builder::create_cont (1 samples, 0.13%)</title><rect x="82.3232%" y="309" width="0.1263%" height="15" fill="rgb(232,33,43)"/><text x="82.5732%" y="319.50"></text></g><g><title>axgeom::range::Range&lt;T&gt;::contains_ext (2 samples, 0.25%)</title><rect x="82.5758%" y="277" width="0.2525%" height="15" fill="rgb(209,8,3)"/><text x="82.8258%" y="287.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::lt (1 samples, 0.13%)</title><rect x="82.7020%" y="261" width="0.1263%" height="15" fill="rgb(214,25,53)"/><text x="82.9520%" y="271.50"></text></g><g><title>broccoli::tree::analyze::oned::bin_middle_left_right (5 samples, 0.63%)</title><rect x="82.4495%" y="293" width="0.6313%" height="15" fill="rgb(254,186,54)"/><text x="82.6995%" y="303.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (2 samples, 0.25%)</title><rect x="82.8283%" y="277" width="0.2525%" height="15" fill="rgb(208,174,49)"/><text x="83.0783%" y="287.50"></text></g><g><title>pdqselect::choose_pivot (3 samples, 0.38%)</title><rect x="83.0808%" y="245" width="0.3788%" height="15" fill="rgb(233,191,51)"/><text x="83.3308%" y="255.50"></text></g><g><title>pdqselect::choose_pivot::{{closure}} (2 samples, 0.25%)</title><rect x="83.2071%" y="229" width="0.2525%" height="15" fill="rgb(222,134,10)"/><text x="83.4571%" y="239.50"></text></g><g><title>pdqselect::choose_pivot::{{closure}} (2 samples, 0.25%)</title><rect x="83.2071%" y="213" width="0.2525%" height="15" fill="rgb(230,226,20)"/><text x="83.4571%" y="223.50"></text></g><g><title>pdqselect::choose_pivot::{{closure}} (1 samples, 0.13%)</title><rect x="83.3333%" y="197" width="0.1263%" height="15" fill="rgb(251,111,25)"/><text x="83.5833%" y="207.50"></text></g><g><title>pdqselect::select_by::{{closure}} (1 samples, 0.13%)</title><rect x="83.3333%" y="181" width="0.1263%" height="15" fill="rgb(224,40,46)"/><text x="83.5833%" y="191.50"></text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf::{{closure}} (1 samples, 0.13%)</title><rect x="83.3333%" y="165" width="0.1263%" height="15" fill="rgb(236,108,47)"/><text x="83.5833%" y="175.50"></text></g><g><title>broccoli::tree::analyze::oned::compare_bots (1 samples, 0.13%)</title><rect x="83.3333%" y="149" width="0.1263%" height="15" fill="rgb(234,93,0)"/><text x="83.5833%" y="159.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.13%)</title><rect x="83.7121%" y="213" width="0.1263%" height="15" fill="rgb(224,213,32)"/><text x="83.9621%" y="223.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (2 samples, 0.25%)</title><rect x="83.8384%" y="213" width="0.2525%" height="15" fill="rgb(251,11,48)"/><text x="84.0884%" y="223.50"></text></g><g><title>core::ptr::swap (1 samples, 0.13%)</title><rect x="84.0909%" y="213" width="0.1263%" height="15" fill="rgb(236,173,5)"/><text x="84.3409%" y="223.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.13%)</title><rect x="84.0909%" y="197" width="0.1263%" height="15" fill="rgb(230,95,12)"/><text x="84.3409%" y="207.50"></text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::create_non_leaf (17 samples, 2.15%)</title><rect x="82.4495%" y="325" width="2.1465%" height="15" fill="rgb(232,209,1)"/><text x="82.6995%" y="335.50">b..</text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf (17 samples, 2.15%)</title><rect x="82.4495%" y="309" width="2.1465%" height="15" fill="rgb(232,6,1)"/><text x="82.6995%" y="319.50">b..</text></g><g><title>pdqselect::select_by (12 samples, 1.52%)</title><rect x="83.0808%" y="293" width="1.5152%" height="15" fill="rgb(210,224,50)"/><text x="83.3308%" y="303.50"></text></g><g><title>pdqselect::quickselect (12 samples, 1.52%)</title><rect x="83.0808%" y="277" width="1.5152%" height="15" fill="rgb(228,127,35)"/><text x="83.3308%" y="287.50"></text></g><g><title>pdqselect::recurse (12 samples, 1.52%)</title><rect x="83.0808%" y="261" width="1.5152%" height="15" fill="rgb(245,102,45)"/><text x="83.3308%" y="271.50"></text></g><g><title>pdqselect::partition (9 samples, 1.14%)</title><rect x="83.4596%" y="245" width="1.1364%" height="15" fill="rgb(214,1,49)"/><text x="83.7096%" y="255.50"></text></g><g><title>pdqselect::partition_in_blocks (9 samples, 1.14%)</title><rect x="83.4596%" y="229" width="1.1364%" height="15" fill="rgb(226,163,40)"/><text x="83.7096%" y="239.50"></text></g><g><title>pdqselect::select_by::{{closure}} (3 samples, 0.38%)</title><rect x="84.2172%" y="213" width="0.3788%" height="15" fill="rgb(239,212,28)"/><text x="84.4672%" y="223.50"></text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf::{{closure}} (3 samples, 0.38%)</title><rect x="84.2172%" y="197" width="0.3788%" height="15" fill="rgb(220,20,13)"/><text x="84.4672%" y="207.50"></text></g><g><title>broccoli::tree::analyze::oned::compare_bots (3 samples, 0.38%)</title><rect x="84.2172%" y="181" width="0.3788%" height="15" fill="rgb(210,164,35)"/><text x="84.4672%" y="191.50"></text></g><g><title>core::slice::sort::insertion_sort (1 samples, 0.13%)</title><rect x="84.5960%" y="213" width="0.1263%" height="15" fill="rgb(248,109,41)"/><text x="84.8460%" y="223.50"></text></g><g><title>core::slice::sort::shift_tail (1 samples, 0.13%)</title><rect x="84.5960%" y="197" width="0.1263%" height="15" fill="rgb(238,23,50)"/><text x="84.8460%" y="207.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="84.5960%" y="181" width="0.1263%" height="15" fill="rgb(211,48,49)"/><text x="84.8460%" y="191.50"></text></g><g><title>&lt;core::slice::sort::CopyOnDrop&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.13%)</title><rect x="84.5960%" y="165" width="0.1263%" height="15" fill="rgb(223,36,21)"/><text x="84.8460%" y="175.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.13%)</title><rect x="84.5960%" y="149" width="0.1263%" height="15" fill="rgb(207,123,46)"/><text x="84.8460%" y="159.50"></text></g><g><title>broccoli::tree::analyze::builder::NonLeafFinisher&lt;A,T&gt;::finish (2 samples, 0.25%)</title><rect x="84.5960%" y="309" width="0.2525%" height="15" fill="rgb(240,218,32)"/><text x="84.8460%" y="319.50"></text></g><g><title>&lt;broccoli::tree::analyze::DefaultSorter as broccoli::tree::analyze::Sorter&gt;::sort (2 samples, 0.25%)</title><rect x="84.5960%" y="293" width="0.2525%" height="15" fill="rgb(252,5,43)"/><text x="84.8460%" y="303.50"></text></g><g><title>broccoli::tree::analyze::oned::sweeper_update (2 samples, 0.25%)</title><rect x="84.5960%" y="277" width="0.2525%" height="15" fill="rgb(252,84,19)"/><text x="84.8460%" y="287.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by (2 samples, 0.25%)</title><rect x="84.5960%" y="261" width="0.2525%" height="15" fill="rgb(243,152,39)"/><text x="84.8460%" y="271.50"></text></g><g><title>core::slice::sort::quicksort (2 samples, 0.25%)</title><rect x="84.5960%" y="245" width="0.2525%" height="15" fill="rgb(234,160,15)"/><text x="84.8460%" y="255.50"></text></g><g><title>core::slice::sort::recurse (2 samples, 0.25%)</title><rect x="84.5960%" y="229" width="0.2525%" height="15" fill="rgb(237,34,20)"/><text x="84.8460%" y="239.50"></text></g><g><title>core::slice::sort::partition (1 samples, 0.13%)</title><rect x="84.7222%" y="213" width="0.1263%" height="15" fill="rgb(229,97,13)"/><text x="84.9722%" y="223.50"></text></g><g><title>core::slice::sort::partition_in_blocks (1 samples, 0.13%)</title><rect x="84.7222%" y="197" width="0.1263%" height="15" fill="rgb(234,71,50)"/><text x="84.9722%" y="207.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.13%)</title><rect x="84.7222%" y="181" width="0.1263%" height="15" fill="rgb(253,155,4)"/><text x="84.9722%" y="191.50"></text></g><g><title>axgeom::range::Range&lt;T&gt;::contains_ext (1 samples, 0.13%)</title><rect x="84.8485%" y="261" width="0.1263%" height="15" fill="rgb(222,185,37)"/><text x="85.0985%" y="271.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.25%)</title><rect x="84.9747%" y="261" width="0.2525%" height="15" fill="rgb(251,177,13)"/><text x="85.2247%" y="271.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (2 samples, 0.25%)</title><rect x="84.9747%" y="245" width="0.2525%" height="15" fill="rgb(250,179,40)"/><text x="85.2247%" y="255.50"></text></g><g><title>broccoli::tree::analyze::oned::bin_middle_left_right (4 samples, 0.51%)</title><rect x="84.8485%" y="277" width="0.5051%" height="15" fill="rgb(242,44,2)"/><text x="85.0985%" y="287.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.13%)</title><rect x="85.2273%" y="261" width="0.1263%" height="15" fill="rgb(216,177,13)"/><text x="85.4773%" y="271.50"></text></g><g><title>core::ptr::swap (1 samples, 0.13%)</title><rect x="85.2273%" y="245" width="0.1263%" height="15" fill="rgb(216,106,43)"/><text x="85.4773%" y="255.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.13%)</title><rect x="85.2273%" y="229" width="0.1263%" height="15" fill="rgb(216,183,2)"/><text x="85.4773%" y="239.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.13%)</title><rect x="85.3535%" y="213" width="0.1263%" height="15" fill="rgb(249,75,3)"/><text x="85.6035%" y="223.50"></text></g><g><title>core::ptr::swap (1 samples, 0.13%)</title><rect x="85.3535%" y="197" width="0.1263%" height="15" fill="rgb(219,67,39)"/><text x="85.6035%" y="207.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.13%)</title><rect x="85.3535%" y="181" width="0.1263%" height="15" fill="rgb(253,228,2)"/><text x="85.6035%" y="191.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.51%)</title><rect x="85.7323%" y="197" width="0.5051%" height="15" fill="rgb(235,138,27)"/><text x="85.9823%" y="207.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.13%)</title><rect x="86.2374%" y="197" width="0.1263%" height="15" fill="rgb(236,97,51)"/><text x="86.4874%" y="207.50"></text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::create_non_leaf (13 samples, 1.64%)</title><rect x="84.8485%" y="309" width="1.6414%" height="15" fill="rgb(240,80,30)"/><text x="85.0985%" y="319.50"></text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf (13 samples, 1.64%)</title><rect x="84.8485%" y="293" width="1.6414%" height="15" fill="rgb(230,178,19)"/><text x="85.0985%" y="303.50"></text></g><g><title>pdqselect::select_by (9 samples, 1.14%)</title><rect x="85.3535%" y="277" width="1.1364%" height="15" fill="rgb(210,190,27)"/><text x="85.6035%" y="287.50"></text></g><g><title>pdqselect::quickselect (9 samples, 1.14%)</title><rect x="85.3535%" y="261" width="1.1364%" height="15" fill="rgb(222,107,31)"/><text x="85.6035%" y="271.50"></text></g><g><title>pdqselect::recurse (9 samples, 1.14%)</title><rect x="85.3535%" y="245" width="1.1364%" height="15" fill="rgb(216,127,34)"/><text x="85.6035%" y="255.50"></text></g><g><title>pdqselect::partition (9 samples, 1.14%)</title><rect x="85.3535%" y="229" width="1.1364%" height="15" fill="rgb(234,116,52)"/><text x="85.6035%" y="239.50"></text></g><g><title>pdqselect::partition_in_blocks (8 samples, 1.01%)</title><rect x="85.4798%" y="213" width="1.0101%" height="15" fill="rgb(222,124,15)"/><text x="85.7298%" y="223.50"></text></g><g><title>pdqselect::select_by::{{closure}} (1 samples, 0.13%)</title><rect x="86.3636%" y="197" width="0.1263%" height="15" fill="rgb(231,179,28)"/><text x="86.6136%" y="207.50"></text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf::{{closure}} (1 samples, 0.13%)</title><rect x="86.3636%" y="181" width="0.1263%" height="15" fill="rgb(226,93,45)"/><text x="86.6136%" y="191.50"></text></g><g><title>broccoli::tree::analyze::oned::compare_bots (1 samples, 0.13%)</title><rect x="86.3636%" y="165" width="0.1263%" height="15" fill="rgb(215,8,51)"/><text x="86.6136%" y="175.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.13%)</title><rect x="86.3636%" y="149" width="0.1263%" height="15" fill="rgb(223,106,5)"/><text x="86.6136%" y="159.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.13%)</title><rect x="86.7424%" y="165" width="0.1263%" height="15" fill="rgb(250,191,5)"/><text x="86.9924%" y="175.50"></text></g><g><title>broccoli::tree::analyze::builder::NonLeafFinisher&lt;A,T&gt;::finish (4 samples, 0.51%)</title><rect x="86.4899%" y="293" width="0.5051%" height="15" fill="rgb(242,132,44)"/><text x="86.7399%" y="303.50"></text></g><g><title>&lt;broccoli::tree::analyze::DefaultSorter as broccoli::tree::analyze::Sorter&gt;::sort (4 samples, 0.51%)</title><rect x="86.4899%" y="277" width="0.5051%" height="15" fill="rgb(251,152,29)"/><text x="86.7399%" y="287.50"></text></g><g><title>broccoli::tree::analyze::oned::sweeper_update (4 samples, 0.51%)</title><rect x="86.4899%" y="261" width="0.5051%" height="15" fill="rgb(218,179,5)"/><text x="86.7399%" y="271.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by (4 samples, 0.51%)</title><rect x="86.4899%" y="245" width="0.5051%" height="15" fill="rgb(227,67,19)"/><text x="86.7399%" y="255.50"></text></g><g><title>core::slice::sort::quicksort (4 samples, 0.51%)</title><rect x="86.4899%" y="229" width="0.5051%" height="15" fill="rgb(233,119,31)"/><text x="86.7399%" y="239.50"></text></g><g><title>core::slice::sort::recurse (4 samples, 0.51%)</title><rect x="86.4899%" y="213" width="0.5051%" height="15" fill="rgb(241,120,22)"/><text x="86.7399%" y="223.50"></text></g><g><title>core::slice::sort::insertion_sort (3 samples, 0.38%)</title><rect x="86.6162%" y="197" width="0.3788%" height="15" fill="rgb(224,102,30)"/><text x="86.8662%" y="207.50"></text></g><g><title>core::slice::sort::shift_tail (3 samples, 0.38%)</title><rect x="86.6162%" y="181" width="0.3788%" height="15" fill="rgb(210,164,37)"/><text x="86.8662%" y="191.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="86.8687%" y="165" width="0.1263%" height="15" fill="rgb(226,191,16)"/><text x="87.1187%" y="175.50"></text></g><g><title>&lt;core::slice::sort::CopyOnDrop&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.13%)</title><rect x="86.8687%" y="149" width="0.1263%" height="15" fill="rgb(214,40,45)"/><text x="87.1187%" y="159.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.13%)</title><rect x="86.8687%" y="133" width="0.1263%" height="15" fill="rgb(244,29,26)"/><text x="87.1187%" y="143.50"></text></g><g><title>axgeom::range::Range&lt;T&gt;::contains_ext (1 samples, 0.13%)</title><rect x="87.1212%" y="245" width="0.1263%" height="15" fill="rgb(216,16,5)"/><text x="87.3712%" y="255.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.25%)</title><rect x="87.2475%" y="245" width="0.2525%" height="15" fill="rgb(249,76,35)"/><text x="87.4975%" y="255.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (2 samples, 0.25%)</title><rect x="87.2475%" y="229" width="0.2525%" height="15" fill="rgb(207,11,44)"/><text x="87.4975%" y="239.50"></text></g><g><title>broccoli::tree::analyze::oned::bin_middle_left_right (5 samples, 0.63%)</title><rect x="86.9949%" y="261" width="0.6313%" height="15" fill="rgb(228,190,49)"/><text x="87.2449%" y="271.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.13%)</title><rect x="87.5000%" y="245" width="0.1263%" height="15" fill="rgb(214,173,12)"/><text x="87.7500%" y="255.50"></text></g><g><title>pdqselect::insertion_sort (1 samples, 0.13%)</title><rect x="87.6263%" y="213" width="0.1263%" height="15" fill="rgb(218,26,35)"/><text x="87.8763%" y="223.50"></text></g><g><title>pdqselect::shift_tail (1 samples, 0.13%)</title><rect x="87.6263%" y="197" width="0.1263%" height="15" fill="rgb(220,200,19)"/><text x="87.8763%" y="207.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="87.6263%" y="181" width="0.1263%" height="15" fill="rgb(239,95,49)"/><text x="87.8763%" y="191.50"></text></g><g><title>&lt;pdqselect::CopyOnDrop&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.13%)</title><rect x="87.6263%" y="165" width="0.1263%" height="15" fill="rgb(235,85,53)"/><text x="87.8763%" y="175.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.13%)</title><rect x="87.6263%" y="149" width="0.1263%" height="15" fill="rgb(233,133,31)"/><text x="87.8763%" y="159.50"></text></g><g><title>core::ptr::read (1 samples, 0.13%)</title><rect x="87.7525%" y="197" width="0.1263%" height="15" fill="rgb(218,25,20)"/><text x="88.0025%" y="207.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.25%)</title><rect x="88.0051%" y="181" width="0.2525%" height="15" fill="rgb(252,210,38)"/><text x="88.2551%" y="191.50"></text></g><g><title>pdqselect::partition_in_blocks::width (1 samples, 0.13%)</title><rect x="88.2576%" y="181" width="0.1263%" height="15" fill="rgb(242,134,21)"/><text x="88.5076%" y="191.50"></text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::create_non_leaf (12 samples, 1.52%)</title><rect x="86.9949%" y="293" width="1.5152%" height="15" fill="rgb(213,28,48)"/><text x="87.2449%" y="303.50"></text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf (12 samples, 1.52%)</title><rect x="86.9949%" y="277" width="1.5152%" height="15" fill="rgb(250,196,2)"/><text x="87.2449%" y="287.50"></text></g><g><title>pdqselect::select_by (7 samples, 0.88%)</title><rect x="87.6263%" y="261" width="0.8838%" height="15" fill="rgb(227,5,17)"/><text x="87.8763%" y="271.50"></text></g><g><title>pdqselect::quickselect (7 samples, 0.88%)</title><rect x="87.6263%" y="245" width="0.8838%" height="15" fill="rgb(221,226,24)"/><text x="87.8763%" y="255.50"></text></g><g><title>pdqselect::recurse (7 samples, 0.88%)</title><rect x="87.6263%" y="229" width="0.8838%" height="15" fill="rgb(211,5,48)"/><text x="87.8763%" y="239.50"></text></g><g><title>pdqselect::partition (6 samples, 0.76%)</title><rect x="87.7525%" y="213" width="0.7576%" height="15" fill="rgb(219,150,6)"/><text x="88.0025%" y="223.50"></text></g><g><title>pdqselect::partition_in_blocks (5 samples, 0.63%)</title><rect x="87.8788%" y="197" width="0.6313%" height="15" fill="rgb(251,46,16)"/><text x="88.1288%" y="207.50"></text></g><g><title>pdqselect::select_by::{{closure}} (1 samples, 0.13%)</title><rect x="88.3838%" y="181" width="0.1263%" height="15" fill="rgb(220,204,40)"/><text x="88.6338%" y="191.50"></text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf::{{closure}} (1 samples, 0.13%)</title><rect x="88.3838%" y="165" width="0.1263%" height="15" fill="rgb(211,85,2)"/><text x="88.6338%" y="175.50"></text></g><g><title>broccoli::tree::analyze::oned::compare_bots (1 samples, 0.13%)</title><rect x="88.3838%" y="149" width="0.1263%" height="15" fill="rgb(229,17,7)"/><text x="88.6338%" y="159.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.13%)</title><rect x="88.3838%" y="133" width="0.1263%" height="15" fill="rgb(239,72,28)"/><text x="88.6338%" y="143.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.25%)</title><rect x="88.7626%" y="149" width="0.2525%" height="15" fill="rgb(230,47,54)"/><text x="89.0126%" y="159.50"></text></g><g><title>core::slice::sort::insertion_sort (3 samples, 0.38%)</title><rect x="88.7626%" y="181" width="0.3788%" height="15" fill="rgb(214,50,8)"/><text x="89.0126%" y="191.50"></text></g><g><title>core::slice::sort::shift_tail (3 samples, 0.38%)</title><rect x="88.7626%" y="165" width="0.3788%" height="15" fill="rgb(216,198,43)"/><text x="89.0126%" y="175.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="89.0152%" y="149" width="0.1263%" height="15" fill="rgb(234,20,35)"/><text x="89.2652%" y="159.50"></text></g><g><title>&lt;core::slice::sort::CopyOnDrop&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.13%)</title><rect x="89.0152%" y="133" width="0.1263%" height="15" fill="rgb(254,45,19)"/><text x="89.2652%" y="143.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.13%)</title><rect x="89.0152%" y="117" width="0.1263%" height="15" fill="rgb(219,14,44)"/><text x="89.2652%" y="127.50"></text></g><g><title>&lt;broccoli::tree::analyze::DefaultSorter as broccoli::tree::analyze::Sorter&gt;::sort (4 samples, 0.51%)</title><rect x="88.7626%" y="261" width="0.5051%" height="15" fill="rgb(217,220,26)"/><text x="89.0126%" y="271.50"></text></g><g><title>broccoli::tree::analyze::oned::sweeper_update (4 samples, 0.51%)</title><rect x="88.7626%" y="245" width="0.5051%" height="15" fill="rgb(213,158,28)"/><text x="89.0126%" y="255.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by (4 samples, 0.51%)</title><rect x="88.7626%" y="229" width="0.5051%" height="15" fill="rgb(252,51,52)"/><text x="89.0126%" y="239.50"></text></g><g><title>core::slice::sort::quicksort (4 samples, 0.51%)</title><rect x="88.7626%" y="213" width="0.5051%" height="15" fill="rgb(246,89,16)"/><text x="89.0126%" y="223.50"></text></g><g><title>core::slice::sort::recurse (4 samples, 0.51%)</title><rect x="88.7626%" y="197" width="0.5051%" height="15" fill="rgb(216,158,49)"/><text x="89.0126%" y="207.50"></text></g><g><title>core::slice::sort::partition (1 samples, 0.13%)</title><rect x="89.1414%" y="181" width="0.1263%" height="15" fill="rgb(236,107,19)"/><text x="89.3914%" y="191.50"></text></g><g><title>core::slice::sort::partition_in_blocks (1 samples, 0.13%)</title><rect x="89.1414%" y="165" width="0.1263%" height="15" fill="rgb(228,185,30)"/><text x="89.3914%" y="175.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.13%)</title><rect x="89.1414%" y="149" width="0.1263%" height="15" fill="rgb(246,134,8)"/><text x="89.3914%" y="159.50"></text></g><g><title>broccoli::tree::analyze::builder::NonLeafFinisher&lt;A,T&gt;::finish (5 samples, 0.63%)</title><rect x="88.7626%" y="277" width="0.6313%" height="15" fill="rgb(214,143,50)"/><text x="89.0126%" y="287.50"></text></g><g><title>broccoli::tree::analyze::builder::create_cont (1 samples, 0.13%)</title><rect x="89.2677%" y="261" width="0.1263%" height="15" fill="rgb(228,75,8)"/><text x="89.5177%" y="271.50"></text></g><g><title>broccoli::tree::analyze::oned::bin_middle_left_right (5 samples, 0.63%)</title><rect x="89.3939%" y="245" width="0.6313%" height="15" fill="rgb(207,175,4)"/><text x="89.6439%" y="255.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (4 samples, 0.51%)</title><rect x="89.5202%" y="229" width="0.5051%" height="15" fill="rgb(205,108,24)"/><text x="89.7702%" y="239.50"></text></g><g><title>core::ptr::swap (2 samples, 0.25%)</title><rect x="89.7727%" y="213" width="0.2525%" height="15" fill="rgb(244,120,49)"/><text x="90.0227%" y="223.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.25%)</title><rect x="89.7727%" y="197" width="0.2525%" height="15" fill="rgb(223,47,38)"/><text x="90.0227%" y="207.50"></text></g><g><title>pdqselect::choose_pivot (1 samples, 0.13%)</title><rect x="90.0253%" y="197" width="0.1263%" height="15" fill="rgb(229,179,11)"/><text x="90.2753%" y="207.50"></text></g><g><title>pdqselect::choose_pivot::{{closure}} (1 samples, 0.13%)</title><rect x="90.0253%" y="181" width="0.1263%" height="15" fill="rgb(231,122,1)"/><text x="90.2753%" y="191.50"></text></g><g><title>pdqselect::choose_pivot::{{closure}} (1 samples, 0.13%)</title><rect x="90.0253%" y="165" width="0.1263%" height="15" fill="rgb(245,119,9)"/><text x="90.2753%" y="175.50"></text></g><g><title>pdqselect::choose_pivot::{{closure}} (1 samples, 0.13%)</title><rect x="90.0253%" y="149" width="0.1263%" height="15" fill="rgb(241,163,25)"/><text x="90.2753%" y="159.50"></text></g><g><title>pdqselect::insertion_sort (1 samples, 0.13%)</title><rect x="90.1515%" y="197" width="0.1263%" height="15" fill="rgb(217,214,3)"/><text x="90.4015%" y="207.50"></text></g><g><title>pdqselect::shift_tail (1 samples, 0.13%)</title><rect x="90.1515%" y="181" width="0.1263%" height="15" fill="rgb(240,86,28)"/><text x="90.4015%" y="191.50"></text></g><g><title>core::ptr::read (1 samples, 0.13%)</title><rect x="90.1515%" y="165" width="0.1263%" height="15" fill="rgb(215,47,9)"/><text x="90.4015%" y="175.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.13%)</title><rect x="90.4040%" y="165" width="0.1263%" height="15" fill="rgb(252,25,45)"/><text x="90.6540%" y="175.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.13%)</title><rect x="90.5303%" y="165" width="0.1263%" height="15" fill="rgb(251,164,9)"/><text x="90.7803%" y="175.50"></text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::create_non_leaf (11 samples, 1.39%)</title><rect x="89.3939%" y="277" width="1.3889%" height="15" fill="rgb(233,194,0)"/><text x="89.6439%" y="287.50"></text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf (11 samples, 1.39%)</title><rect x="89.3939%" y="261" width="1.3889%" height="15" fill="rgb(249,111,24)"/><text x="89.6439%" y="271.50"></text></g><g><title>pdqselect::select_by (6 samples, 0.76%)</title><rect x="90.0253%" y="245" width="0.7576%" height="15" fill="rgb(250,223,3)"/><text x="90.2753%" y="255.50"></text></g><g><title>pdqselect::quickselect (6 samples, 0.76%)</title><rect x="90.0253%" y="229" width="0.7576%" height="15" fill="rgb(236,178,37)"/><text x="90.2753%" y="239.50"></text></g><g><title>pdqselect::recurse (6 samples, 0.76%)</title><rect x="90.0253%" y="213" width="0.7576%" height="15" fill="rgb(241,158,50)"/><text x="90.2753%" y="223.50"></text></g><g><title>pdqselect::partition (4 samples, 0.51%)</title><rect x="90.2778%" y="197" width="0.5051%" height="15" fill="rgb(213,121,41)"/><text x="90.5278%" y="207.50"></text></g><g><title>pdqselect::partition_in_blocks (3 samples, 0.38%)</title><rect x="90.4040%" y="181" width="0.3788%" height="15" fill="rgb(240,92,3)"/><text x="90.6540%" y="191.50"></text></g><g><title>pdqselect::select_by::{{closure}} (1 samples, 0.13%)</title><rect x="90.6566%" y="165" width="0.1263%" height="15" fill="rgb(205,123,3)"/><text x="90.9066%" y="175.50"></text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf::{{closure}} (1 samples, 0.13%)</title><rect x="90.6566%" y="149" width="0.1263%" height="15" fill="rgb(205,97,47)"/><text x="90.9066%" y="159.50"></text></g><g><title>broccoli::tree::analyze::oned::compare_bots (1 samples, 0.13%)</title><rect x="90.6566%" y="133" width="0.1263%" height="15" fill="rgb(247,152,14)"/><text x="90.9066%" y="143.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.13%)</title><rect x="90.6566%" y="117" width="0.1263%" height="15" fill="rgb(248,195,53)"/><text x="90.9066%" y="127.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.13%)</title><rect x="91.0354%" y="133" width="0.1263%" height="15" fill="rgb(226,201,16)"/><text x="91.2854%" y="143.50"></text></g><g><title>core::slice::sort::insertion_sort (3 samples, 0.38%)</title><rect x="90.9091%" y="165" width="0.3788%" height="15" fill="rgb(205,98,0)"/><text x="91.1591%" y="175.50"></text></g><g><title>core::slice::sort::shift_tail (3 samples, 0.38%)</title><rect x="90.9091%" y="149" width="0.3788%" height="15" fill="rgb(214,191,48)"/><text x="91.1591%" y="159.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="91.1616%" y="133" width="0.1263%" height="15" fill="rgb(237,112,39)"/><text x="91.4116%" y="143.50"></text></g><g><title>&lt;core::slice::sort::CopyOnDrop&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.13%)</title><rect x="91.1616%" y="117" width="0.1263%" height="15" fill="rgb(247,203,27)"/><text x="91.4116%" y="127.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.13%)</title><rect x="91.1616%" y="101" width="0.1263%" height="15" fill="rgb(235,124,28)"/><text x="91.4116%" y="111.50"></text></g><g><title>&lt;broccoli::tree::analyze::DefaultSorter as broccoli::tree::analyze::Sorter&gt;::sort (4 samples, 0.51%)</title><rect x="90.9091%" y="245" width="0.5051%" height="15" fill="rgb(208,207,46)"/><text x="91.1591%" y="255.50"></text></g><g><title>broccoli::tree::analyze::oned::sweeper_update (4 samples, 0.51%)</title><rect x="90.9091%" y="229" width="0.5051%" height="15" fill="rgb(234,176,4)"/><text x="91.1591%" y="239.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by (4 samples, 0.51%)</title><rect x="90.9091%" y="213" width="0.5051%" height="15" fill="rgb(230,133,28)"/><text x="91.1591%" y="223.50"></text></g><g><title>core::slice::sort::quicksort (4 samples, 0.51%)</title><rect x="90.9091%" y="197" width="0.5051%" height="15" fill="rgb(211,137,40)"/><text x="91.1591%" y="207.50"></text></g><g><title>core::slice::sort::recurse (4 samples, 0.51%)</title><rect x="90.9091%" y="181" width="0.5051%" height="15" fill="rgb(254,35,13)"/><text x="91.1591%" y="191.50"></text></g><g><title>core::slice::sort::partition (1 samples, 0.13%)</title><rect x="91.2879%" y="165" width="0.1263%" height="15" fill="rgb(225,49,51)"/><text x="91.5379%" y="175.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.13%)</title><rect x="91.2879%" y="149" width="0.1263%" height="15" fill="rgb(251,10,15)"/><text x="91.5379%" y="159.50"></text></g><g><title>core::ptr::swap (1 samples, 0.13%)</title><rect x="91.2879%" y="133" width="0.1263%" height="15" fill="rgb(228,207,15)"/><text x="91.5379%" y="143.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.13%)</title><rect x="91.2879%" y="117" width="0.1263%" height="15" fill="rgb(241,99,19)"/><text x="91.5379%" y="127.50"></text></g><g><title>broccoli::tree::analyze::builder::NonLeafFinisher&lt;A,T&gt;::finish (6 samples, 0.76%)</title><rect x="90.9091%" y="261" width="0.7576%" height="15" fill="rgb(207,104,49)"/><text x="91.1591%" y="271.50"></text></g><g><title>broccoli::tree::analyze::builder::create_cont (2 samples, 0.25%)</title><rect x="91.4141%" y="245" width="0.2525%" height="15" fill="rgb(234,99,18)"/><text x="91.6641%" y="255.50"></text></g><g><title>axgeom::range::Range&lt;T&gt;::contains_ext (1 samples, 0.13%)</title><rect x="91.6667%" y="213" width="0.1263%" height="15" fill="rgb(213,191,49)"/><text x="91.9167%" y="223.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::lt (1 samples, 0.13%)</title><rect x="91.6667%" y="197" width="0.1263%" height="15" fill="rgb(210,226,19)"/><text x="91.9167%" y="207.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.13%)</title><rect x="91.7929%" y="213" width="0.1263%" height="15" fill="rgb(229,97,18)"/><text x="92.0429%" y="223.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.13%)</title><rect x="91.7929%" y="197" width="0.1263%" height="15" fill="rgb(211,167,15)"/><text x="92.0429%" y="207.50"></text></g><g><title>broccoli::tree::analyze::oned::bin_middle_left_right (9 samples, 1.14%)</title><rect x="91.6667%" y="229" width="1.1364%" height="15" fill="rgb(210,169,34)"/><text x="91.9167%" y="239.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (7 samples, 0.88%)</title><rect x="91.9192%" y="213" width="0.8838%" height="15" fill="rgb(241,121,31)"/><text x="92.1692%" y="223.50"></text></g><g><title>core::ptr::swap (4 samples, 0.51%)</title><rect x="92.2980%" y="197" width="0.5051%" height="15" fill="rgb(232,40,11)"/><text x="92.5480%" y="207.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.51%)</title><rect x="92.2980%" y="181" width="0.5051%" height="15" fill="rgb(205,86,26)"/><text x="92.5480%" y="191.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.13%)</title><rect x="92.9293%" y="149" width="0.1263%" height="15" fill="rgb(231,126,28)"/><text x="93.1793%" y="159.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="93.0556%" y="149" width="0.1263%" height="15" fill="rgb(219,221,18)"/><text x="93.3056%" y="159.50"></text></g><g><title>&lt;pdqselect::CopyOnDrop&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.13%)</title><rect x="93.0556%" y="133" width="0.1263%" height="15" fill="rgb(211,40,0)"/><text x="93.3056%" y="143.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.13%)</title><rect x="93.0556%" y="117" width="0.1263%" height="15" fill="rgb(239,85,43)"/><text x="93.3056%" y="127.50"></text></g><g><title>pdqselect::insertion_sort (5 samples, 0.63%)</title><rect x="92.9293%" y="181" width="0.6313%" height="15" fill="rgb(231,55,21)"/><text x="93.1793%" y="191.50"></text></g><g><title>pdqselect::shift_tail (5 samples, 0.63%)</title><rect x="92.9293%" y="165" width="0.6313%" height="15" fill="rgb(225,184,43)"/><text x="93.1793%" y="175.50"></text></g><g><title>pdqselect::select_by::{{closure}} (3 samples, 0.38%)</title><rect x="93.1818%" y="149" width="0.3788%" height="15" fill="rgb(251,158,41)"/><text x="93.4318%" y="159.50"></text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf::{{closure}} (3 samples, 0.38%)</title><rect x="93.1818%" y="133" width="0.3788%" height="15" fill="rgb(234,159,37)"/><text x="93.4318%" y="143.50"></text></g><g><title>broccoli::tree::analyze::oned::compare_bots (3 samples, 0.38%)</title><rect x="93.1818%" y="117" width="0.3788%" height="15" fill="rgb(216,204,22)"/><text x="93.4318%" y="127.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (3 samples, 0.38%)</title><rect x="93.1818%" y="101" width="0.3788%" height="15" fill="rgb(214,17,3)"/><text x="93.4318%" y="111.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.13%)</title><rect x="93.6869%" y="165" width="0.1263%" height="15" fill="rgb(212,111,17)"/><text x="93.9369%" y="175.50"></text></g><g><title>core::ptr::swap (1 samples, 0.13%)</title><rect x="93.6869%" y="149" width="0.1263%" height="15" fill="rgb(221,157,24)"/><text x="93.9369%" y="159.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.13%)</title><rect x="93.6869%" y="133" width="0.1263%" height="15" fill="rgb(252,16,13)"/><text x="93.9369%" y="143.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.13%)</title><rect x="94.1919%" y="149" width="0.1263%" height="15" fill="rgb(221,62,2)"/><text x="94.4419%" y="159.50"></text></g><g><title>core::ptr::swap (1 samples, 0.13%)</title><rect x="94.3182%" y="149" width="0.1263%" height="15" fill="rgb(247,87,22)"/><text x="94.5682%" y="159.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.13%)</title><rect x="94.3182%" y="133" width="0.1263%" height="15" fill="rgb(215,73,9)"/><text x="94.5682%" y="143.50"></text></g><g><title>pdqselect::partition_in_blocks::width (1 samples, 0.13%)</title><rect x="94.4444%" y="149" width="0.1263%" height="15" fill="rgb(207,175,33)"/><text x="94.6944%" y="159.50"></text></g><g><title>pdqselect::partition_in_blocks (8 samples, 1.01%)</title><rect x="93.8131%" y="165" width="1.0101%" height="15" fill="rgb(243,129,54)"/><text x="94.0631%" y="175.50"></text></g><g><title>pdqselect::select_by::{{closure}} (2 samples, 0.25%)</title><rect x="94.5707%" y="149" width="0.2525%" height="15" fill="rgb(227,119,45)"/><text x="94.8207%" y="159.50"></text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf::{{closure}} (2 samples, 0.25%)</title><rect x="94.5707%" y="133" width="0.2525%" height="15" fill="rgb(205,109,36)"/><text x="94.8207%" y="143.50"></text></g><g><title>broccoli::tree::analyze::oned::compare_bots (2 samples, 0.25%)</title><rect x="94.5707%" y="117" width="0.2525%" height="15" fill="rgb(205,6,39)"/><text x="94.8207%" y="127.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (2 samples, 0.25%)</title><rect x="94.5707%" y="101" width="0.2525%" height="15" fill="rgb(221,32,16)"/><text x="94.8207%" y="111.50"></text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::create_non_leaf (26 samples, 3.28%)</title><rect x="91.6667%" y="261" width="3.2828%" height="15" fill="rgb(228,144,50)"/><text x="91.9167%" y="271.50">bro..</text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf (26 samples, 3.28%)</title><rect x="91.6667%" y="245" width="3.2828%" height="15" fill="rgb(229,201,53)"/><text x="91.9167%" y="255.50">bro..</text></g><g><title>pdqselect::select_by (17 samples, 2.15%)</title><rect x="92.8030%" y="229" width="2.1465%" height="15" fill="rgb(249,153,27)"/><text x="93.0530%" y="239.50">p..</text></g><g><title>pdqselect::quickselect (17 samples, 2.15%)</title><rect x="92.8030%" y="213" width="2.1465%" height="15" fill="rgb(227,106,25)"/><text x="93.0530%" y="223.50">p..</text></g><g><title>pdqselect::recurse (17 samples, 2.15%)</title><rect x="92.8030%" y="197" width="2.1465%" height="15" fill="rgb(230,65,29)"/><text x="93.0530%" y="207.50">p..</text></g><g><title>pdqselect::partition (11 samples, 1.39%)</title><rect x="93.5606%" y="181" width="1.3889%" height="15" fill="rgb(221,57,46)"/><text x="93.8106%" y="191.50"></text></g><g><title>pdqselect::select_by::{{closure}} (1 samples, 0.13%)</title><rect x="94.8232%" y="165" width="0.1263%" height="15" fill="rgb(229,161,17)"/><text x="95.0732%" y="175.50"></text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf::{{closure}} (1 samples, 0.13%)</title><rect x="94.8232%" y="149" width="0.1263%" height="15" fill="rgb(222,213,11)"/><text x="95.0732%" y="159.50"></text></g><g><title>broccoli::tree::analyze::oned::compare_bots (1 samples, 0.13%)</title><rect x="94.8232%" y="133" width="0.1263%" height="15" fill="rgb(235,35,13)"/><text x="95.0732%" y="143.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.25%)</title><rect x="95.0758%" y="133" width="0.2525%" height="15" fill="rgb(233,158,34)"/><text x="95.3258%" y="143.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (1 samples, 0.13%)</title><rect x="95.2020%" y="117" width="0.1263%" height="15" fill="rgb(215,151,48)"/><text x="95.4520%" y="127.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (1 samples, 0.13%)</title><rect x="95.2020%" y="101" width="0.1263%" height="15" fill="rgb(229,84,14)"/><text x="95.4520%" y="111.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.25%)</title><rect x="95.4545%" y="117" width="0.2525%" height="15" fill="rgb(229,68,14)"/><text x="95.7045%" y="127.50"></text></g><g><title>core::slice::sort::insertion_sort (7 samples, 0.88%)</title><rect x="95.0758%" y="149" width="0.8838%" height="15" fill="rgb(243,106,26)"/><text x="95.3258%" y="159.50"></text></g><g><title>core::slice::sort::shift_tail (5 samples, 0.63%)</title><rect x="95.3283%" y="133" width="0.6313%" height="15" fill="rgb(206,45,38)"/><text x="95.5783%" y="143.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by::{{closure}} (2 samples, 0.25%)</title><rect x="95.7071%" y="117" width="0.2525%" height="15" fill="rgb(226,6,15)"/><text x="95.9571%" y="127.50"></text></g><g><title>broccoli::tree::analyze::oned::sweeper_update::{{closure}} (2 samples, 0.25%)</title><rect x="95.7071%" y="101" width="0.2525%" height="15" fill="rgb(232,22,54)"/><text x="95.9571%" y="111.50"></text></g><g><title>broccoli::tree::analyze::oned::compare_bots (2 samples, 0.25%)</title><rect x="95.7071%" y="85" width="0.2525%" height="15" fill="rgb(229,222,32)"/><text x="95.9571%" y="95.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.13%)</title><rect x="95.8333%" y="69" width="0.1263%" height="15" fill="rgb(228,62,29)"/><text x="96.0833%" y="79.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by::{{closure}} (1 samples, 0.13%)</title><rect x="96.0859%" y="133" width="0.1263%" height="15" fill="rgb(251,103,34)"/><text x="96.3359%" y="143.50"></text></g><g><title>broccoli::tree::analyze::oned::sweeper_update::{{closure}} (1 samples, 0.13%)</title><rect x="96.0859%" y="117" width="0.1263%" height="15" fill="rgb(233,12,30)"/><text x="96.3359%" y="127.50"></text></g><g><title>broccoli::tree::analyze::oned::compare_bots (1 samples, 0.13%)</title><rect x="96.0859%" y="101" width="0.1263%" height="15" fill="rgb(238,52,0)"/><text x="96.3359%" y="111.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.13%)</title><rect x="96.0859%" y="85" width="0.1263%" height="15" fill="rgb(223,98,5)"/><text x="96.3359%" y="95.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.13%)</title><rect x="96.2121%" y="117" width="0.1263%" height="15" fill="rgb(228,75,37)"/><text x="96.4621%" y="127.50"></text></g><g><title>core::slice::sort::partition (4 samples, 0.51%)</title><rect x="95.9596%" y="149" width="0.5051%" height="15" fill="rgb(205,115,49)"/><text x="96.2096%" y="159.50"></text></g><g><title>core::slice::sort::partition_in_blocks (2 samples, 0.25%)</title><rect x="96.2121%" y="133" width="0.2525%" height="15" fill="rgb(250,154,43)"/><text x="96.4621%" y="143.50"></text></g><g><title>core::ptr::swap (1 samples, 0.13%)</title><rect x="96.3384%" y="117" width="0.1263%" height="15" fill="rgb(226,43,29)"/><text x="96.5884%" y="127.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.13%)</title><rect x="96.3384%" y="101" width="0.1263%" height="15" fill="rgb(249,228,39)"/><text x="96.5884%" y="111.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.13%)</title><rect x="96.4646%" y="101" width="0.1263%" height="15" fill="rgb(216,79,43)"/><text x="96.7146%" y="111.50"></text></g><g><title>&lt;broccoli::tree::analyze::DefaultSorter as broccoli::tree::analyze::Sorter&gt;::sort (16 samples, 2.02%)</title><rect x="94.9495%" y="229" width="2.0202%" height="15" fill="rgb(228,95,12)"/><text x="95.1995%" y="239.50">&lt;..</text></g><g><title>broccoli::tree::analyze::oned::sweeper_update (16 samples, 2.02%)</title><rect x="94.9495%" y="213" width="2.0202%" height="15" fill="rgb(249,221,15)"/><text x="95.1995%" y="223.50">b..</text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by (16 samples, 2.02%)</title><rect x="94.9495%" y="197" width="2.0202%" height="15" fill="rgb(233,34,13)"/><text x="95.1995%" y="207.50">c..</text></g><g><title>core::slice::sort::quicksort (16 samples, 2.02%)</title><rect x="94.9495%" y="181" width="2.0202%" height="15" fill="rgb(214,103,39)"/><text x="95.1995%" y="191.50">c..</text></g><g><title>core::slice::sort::recurse (16 samples, 2.02%)</title><rect x="94.9495%" y="165" width="2.0202%" height="15" fill="rgb(251,126,39)"/><text x="95.1995%" y="175.50">c..</text></g><g><title>core::slice::sort::recurse (4 samples, 0.51%)</title><rect x="96.4646%" y="149" width="0.5051%" height="15" fill="rgb(214,216,36)"/><text x="96.7146%" y="159.50"></text></g><g><title>core::slice::sort::insertion_sort (4 samples, 0.51%)</title><rect x="96.4646%" y="133" width="0.5051%" height="15" fill="rgb(220,221,8)"/><text x="96.7146%" y="143.50"></text></g><g><title>core::slice::sort::shift_tail (4 samples, 0.51%)</title><rect x="96.4646%" y="117" width="0.5051%" height="15" fill="rgb(240,216,3)"/><text x="96.7146%" y="127.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by::{{closure}} (3 samples, 0.38%)</title><rect x="96.5909%" y="101" width="0.3788%" height="15" fill="rgb(232,218,17)"/><text x="96.8409%" y="111.50"></text></g><g><title>broccoli::tree::analyze::oned::sweeper_update::{{closure}} (3 samples, 0.38%)</title><rect x="96.5909%" y="85" width="0.3788%" height="15" fill="rgb(229,163,45)"/><text x="96.8409%" y="95.50"></text></g><g><title>broccoli::tree::analyze::oned::compare_bots (3 samples, 0.38%)</title><rect x="96.5909%" y="69" width="0.3788%" height="15" fill="rgb(231,110,42)"/><text x="96.8409%" y="79.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (3 samples, 0.38%)</title><rect x="96.5909%" y="53" width="0.3788%" height="15" fill="rgb(208,170,48)"/><text x="96.8409%" y="63.50"></text></g><g><title>data_gen::support::bench_closure (728 samples, 91.92%)</title><rect x="5.4293%" y="517" width="91.9192%" height="15" fill="rgb(239,116,25)"/><text x="5.6793%" y="527.50">data_gen::support::bench_closure</text></g><g><title>data_gen::support::bench_closure_ret (728 samples, 91.92%)</title><rect x="5.4293%" y="501" width="91.9192%" height="15" fill="rgb(219,200,50)"/><text x="5.6793%" y="511.50">data_gen::support::bench_closure_ret</text></g><g><title>data_gen::main::{{closure}} (728 samples, 91.92%)</title><rect x="5.4293%" y="485" width="91.9192%" height="15" fill="rgb(245,200,0)"/><text x="5.6793%" y="495.50">data_gen::main::{{closure}}</text></g><g><title>broccoli::tree::new (195 samples, 24.62%)</title><rect x="72.7273%" y="469" width="24.6212%" height="15" fill="rgb(245,119,33)"/><text x="72.9773%" y="479.50">broccoli::tree::new</text></g><g><title>broccoli::tree::analyze::builder::TreeBuilder&lt;A,T&gt;::build_seq (195 samples, 24.62%)</title><rect x="72.7273%" y="453" width="24.6212%" height="15" fill="rgb(231,125,12)"/><text x="72.9773%" y="463.50">broccoli::tree::analyze::builder::TreeB..</text></g><g><title>broccoli::tree::analyze::builder::create_tree_seq (195 samples, 24.62%)</title><rect x="72.7273%" y="437" width="24.6212%" height="15" fill="rgb(216,96,41)"/><text x="72.9773%" y="447.50">broccoli::tree::analyze::builder::creat..</text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::recurse_preorder_seq (195 samples, 24.62%)</title><rect x="72.7273%" y="421" width="24.6212%" height="15" fill="rgb(248,43,45)"/><text x="72.9773%" y="431.50">broccoli::tree::analyze::builder::Recur..</text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::recurse_preorder_seq (177 samples, 22.35%)</title><rect x="75.0000%" y="405" width="22.3485%" height="15" fill="rgb(217,222,7)"/><text x="75.2500%" y="415.50">broccoli::tree::analyze::builder::R..</text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::recurse_preorder_seq (165 samples, 20.83%)</title><rect x="76.5152%" y="389" width="20.8333%" height="15" fill="rgb(233,28,6)"/><text x="76.7652%" y="399.50">broccoli::tree::analyze::builder:..</text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::recurse_preorder_seq (147 samples, 18.56%)</title><rect x="78.7879%" y="373" width="18.5606%" height="15" fill="rgb(231,218,15)"/><text x="79.0379%" y="383.50">broccoli::tree::analyze::buil..</text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::recurse_preorder_seq (134 samples, 16.92%)</title><rect x="80.4293%" y="357" width="16.9192%" height="15" fill="rgb(226,171,48)"/><text x="80.6793%" y="367.50">broccoli::tree::analyze::b..</text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::recurse_preorder_seq (123 samples, 15.53%)</title><rect x="81.8182%" y="341" width="15.5303%" height="15" fill="rgb(235,201,9)"/><text x="82.0682%" y="351.50">broccoli::tree::analyze:..</text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::recurse_preorder_seq (101 samples, 12.75%)</title><rect x="84.5960%" y="325" width="12.7525%" height="15" fill="rgb(217,80,15)"/><text x="84.8460%" y="335.50">broccoli::tree::ana..</text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::recurse_preorder_seq (86 samples, 10.86%)</title><rect x="86.4899%" y="309" width="10.8586%" height="15" fill="rgb(219,152,8)"/><text x="86.7399%" y="319.50">broccoli::tree::..</text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::recurse_preorder_seq (70 samples, 8.84%)</title><rect x="88.5101%" y="293" width="8.8384%" height="15" fill="rgb(243,107,38)"/><text x="88.7601%" y="303.50">broccoli::tr..</text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::recurse_preorder_seq (52 samples, 6.57%)</title><rect x="90.7828%" y="277" width="6.5657%" height="15" fill="rgb(231,17,5)"/><text x="91.0328%" y="287.50">broccoli:..</text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::recurse_preorder_seq (19 samples, 2.40%)</title><rect x="94.9495%" y="261" width="2.3990%" height="15" fill="rgb(209,25,54)"/><text x="95.1995%" y="271.50">br..</text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::create_leaf (19 samples, 2.40%)</title><rect x="94.9495%" y="245" width="2.3990%" height="15" fill="rgb(219,0,2)"/><text x="95.1995%" y="255.50">br..</text></g><g><title>broccoli::tree::analyze::builder::create_cont (3 samples, 0.38%)</title><rect x="96.9697%" y="229" width="0.3788%" height="15" fill="rgb(246,9,5)"/><text x="97.2197%" y="239.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.13%)</title><rect x="97.2222%" y="213" width="0.1263%" height="15" fill="rgb(226,159,4)"/><text x="97.4722%" y="223.50"></text></g><g><title>do_cos (1 samples, 0.13%)</title><rect x="97.6010%" y="261" width="0.1263%" height="15" fill="rgb(219,175,34)"/><text x="97.8510%" y="271.50"></text></g><g><title>&lt;core::iter::sources::RepeatWith&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.51%)</title><rect x="97.3485%" y="325" width="0.5051%" height="15" fill="rgb(236,10,46)"/><text x="97.5985%" y="335.50"></text></g><g><title>dists::spiral_iter::{{closure}} (4 samples, 0.51%)</title><rect x="97.3485%" y="309" width="0.5051%" height="15" fill="rgb(240,211,16)"/><text x="97.5985%" y="319.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::cos (4 samples, 0.51%)</title><rect x="97.3485%" y="293" width="0.5051%" height="15" fill="rgb(205,3,43)"/><text x="97.5985%" y="303.50"></text></g><g><title>__sincos (4 samples, 0.51%)</title><rect x="97.3485%" y="277" width="0.5051%" height="15" fill="rgb(245,7,22)"/><text x="97.5985%" y="287.50"></text></g><g><title>do_sin (1 samples, 0.13%)</title><rect x="97.7273%" y="261" width="0.1263%" height="15" fill="rgb(239,132,32)"/><text x="97.9773%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.63%)</title><rect x="97.3485%" y="373" width="0.6313%" height="15" fill="rgb(228,202,34)"/><text x="97.5985%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (5 samples, 0.63%)</title><rect x="97.3485%" y="357" width="0.6313%" height="15" fill="rgb(254,200,22)"/><text x="97.5985%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.63%)</title><rect x="97.3485%" y="341" width="0.6313%" height="15" fill="rgb(219,10,39)"/><text x="97.5985%" y="351.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.13%)</title><rect x="97.8535%" y="325" width="0.1263%" height="15" fill="rgb(226,210,39)"/><text x="98.1035%" y="335.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.13%)</title><rect x="97.8535%" y="309" width="0.1263%" height="15" fill="rgb(208,219,16)"/><text x="98.1035%" y="319.50"></text></g><g><title>data_gen::support::abspiral_f64::{{closure}} (1 samples, 0.13%)</title><rect x="97.8535%" y="293" width="0.1263%" height="15" fill="rgb(216,158,51)"/><text x="98.1035%" y="303.50"></text></g><g><title>axgeom::rect::Rect&lt;T&gt;::from_point (1 samples, 0.13%)</title><rect x="97.8535%" y="277" width="0.1263%" height="15" fill="rgb(233,14,44)"/><text x="98.1035%" y="287.50"></text></g><g><title>axgeom::range::Range&lt;T&gt;::from_point (1 samples, 0.13%)</title><rect x="97.8535%" y="261" width="0.1263%" height="15" fill="rgb(237,97,39)"/><text x="98.1035%" y="271.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (1 samples, 0.13%)</title><rect x="97.8535%" y="245" width="0.1263%" height="15" fill="rgb(218,198,43)"/><text x="98.1035%" y="255.50"></text></g><g><title>data_gen::support::distribute (6 samples, 0.76%)</title><rect x="97.3485%" y="517" width="0.7576%" height="15" fill="rgb(231,104,20)"/><text x="97.5985%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (6 samples, 0.76%)</title><rect x="97.3485%" y="501" width="0.7576%" height="15" fill="rgb(254,36,13)"/><text x="97.5985%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (6 samples, 0.76%)</title><rect x="97.3485%" y="485" width="0.7576%" height="15" fill="rgb(248,14,50)"/><text x="97.5985%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.76%)</title><rect x="97.3485%" y="469" width="0.7576%" height="15" fill="rgb(217,107,29)"/><text x="97.5985%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (6 samples, 0.76%)</title><rect x="97.3485%" y="453" width="0.7576%" height="15" fill="rgb(251,169,33)"/><text x="97.5985%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (6 samples, 0.76%)</title><rect x="97.3485%" y="437" width="0.7576%" height="15" fill="rgb(217,108,32)"/><text x="97.5985%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (6 samples, 0.76%)</title><rect x="97.3485%" y="421" width="0.7576%" height="15" fill="rgb(219,66,42)"/><text x="97.5985%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.76%)</title><rect x="97.3485%" y="405" width="0.7576%" height="15" fill="rgb(206,180,7)"/><text x="97.5985%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (6 samples, 0.76%)</title><rect x="97.3485%" y="389" width="0.7576%" height="15" fill="rgb(208,226,31)"/><text x="97.5985%" y="399.50"></text></g><g><title>core::iter::adapters::map_fold::{{closure}} (1 samples, 0.13%)</title><rect x="97.9798%" y="373" width="0.1263%" height="15" fill="rgb(218,26,49)"/><text x="98.2298%" y="383.50"></text></g><g><title>data_gen::support::distribute::{{closure}} (1 samples, 0.13%)</title><rect x="97.9798%" y="357" width="0.1263%" height="15" fill="rgb(233,197,48)"/><text x="98.2298%" y="367.50"></text></g><g><title>data_gen::colfind::float_vs_integer::handle_bench::{{closure}} (1 samples, 0.13%)</title><rect x="97.9798%" y="341" width="0.1263%" height="15" fill="rgb(252,181,51)"/><text x="98.2298%" y="351.50"></text></g><g><title>data_gen::support::RectConv::to_f32n (1 samples, 0.13%)</title><rect x="97.9798%" y="325" width="0.1263%" height="15" fill="rgb(253,90,19)"/><text x="98.2298%" y="335.50"></text></g><g><title>axgeom::rect::Rect&lt;T&gt;::inner_as (1 samples, 0.13%)</title><rect x="97.9798%" y="309" width="0.1263%" height="15" fill="rgb(215,171,30)"/><text x="98.2298%" y="319.50"></text></g><g><title>num_cpus::get_physical (1 samples, 0.13%)</title><rect x="98.1061%" y="517" width="0.1263%" height="15" fill="rgb(214,222,9)"/><text x="98.3561%" y="527.50"></text></g><g><title>num_cpus::linux::get_num_physical_cpus (1 samples, 0.13%)</title><rect x="98.1061%" y="501" width="0.1263%" height="15" fill="rgb(223,3,22)"/><text x="98.3561%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.13%)</title><rect x="98.1061%" y="485" width="0.1263%" height="15" fill="rgb(225,196,46)"/><text x="98.3561%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (1 samples, 0.13%)</title><rect x="98.1061%" y="469" width="0.1263%" height="15" fill="rgb(209,110,37)"/><text x="98.3561%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.13%)</title><rect x="98.1061%" y="453" width="0.1263%" height="15" fill="rgb(249,89,12)"/><text x="98.3561%" y="463.50"></text></g><g><title>&lt;std::io::Lines&lt;B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.13%)</title><rect x="98.1061%" y="437" width="0.1263%" height="15" fill="rgb(226,27,33)"/><text x="98.3561%" y="447.50"></text></g><g><title>std::io::BufRead::read_line (1 samples, 0.13%)</title><rect x="98.1061%" y="421" width="0.1263%" height="15" fill="rgb(213,82,22)"/><text x="98.3561%" y="431.50"></text></g><g><title>std::io::append_to_string (1 samples, 0.13%)</title><rect x="98.1061%" y="405" width="0.1263%" height="15" fill="rgb(248,140,0)"/><text x="98.3561%" y="415.50"></text></g><g><title>std::io::BufRead::read_line::{{closure}} (1 samples, 0.13%)</title><rect x="98.1061%" y="389" width="0.1263%" height="15" fill="rgb(228,106,3)"/><text x="98.3561%" y="399.50"></text></g><g><title>std::io::read_until (1 samples, 0.13%)</title><rect x="98.1061%" y="373" width="0.1263%" height="15" fill="rgb(209,23,37)"/><text x="98.3561%" y="383.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::BufRead&gt;::fill_buf (1 samples, 0.13%)</title><rect x="98.1061%" y="357" width="0.1263%" height="15" fill="rgb(241,93,50)"/><text x="98.3561%" y="367.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read (1 samples, 0.13%)</title><rect x="98.1061%" y="341" width="0.1263%" height="15" fill="rgb(253,46,43)"/><text x="98.3561%" y="351.50"></text></g><g><title>std::sys::unix::fs::File::read (1 samples, 0.13%)</title><rect x="98.1061%" y="325" width="0.1263%" height="15" fill="rgb(226,206,43)"/><text x="98.3561%" y="335.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read (1 samples, 0.13%)</title><rect x="98.1061%" y="309" width="0.1263%" height="15" fill="rgb(217,54,7)"/><text x="98.3561%" y="319.50"></text></g><g><title>__GI___libc_read (1 samples, 0.13%)</title><rect x="98.1061%" y="293" width="0.1263%" height="15" fill="rgb(223,5,52)"/><text x="98.3561%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="98.1061%" y="277" width="0.1263%" height="15" fill="rgb(206,52,46)"/><text x="98.3561%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="98.1061%" y="261" width="0.1263%" height="15" fill="rgb(253,136,11)"/><text x="98.3561%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="98.1061%" y="245" width="0.1263%" height="15" fill="rgb(208,106,33)"/><text x="98.3561%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="98.1061%" y="229" width="0.1263%" height="15" fill="rgb(206,54,4)"/><text x="98.3561%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="98.1061%" y="213" width="0.1263%" height="15" fill="rgb(213,3,15)"/><text x="98.3561%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="98.1061%" y="197" width="0.1263%" height="15" fill="rgb(252,211,39)"/><text x="98.3561%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="98.1061%" y="181" width="0.1263%" height="15" fill="rgb(223,6,36)"/><text x="98.3561%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="98.1061%" y="165" width="0.1263%" height="15" fill="rgb(252,169,45)"/><text x="98.3561%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="98.1061%" y="149" width="0.1263%" height="15" fill="rgb(212,48,26)"/><text x="98.3561%" y="159.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="98.1061%" y="133" width="0.1263%" height="15" fill="rgb(251,102,48)"/><text x="98.3561%" y="143.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="98.1061%" y="117" width="0.1263%" height="15" fill="rgb(243,208,16)"/><text x="98.3561%" y="127.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="98.1061%" y="101" width="0.1263%" height="15" fill="rgb(219,96,24)"/><text x="98.3561%" y="111.50"></text></g><g><title>rayon_core::ThreadPoolBuilder&lt;S&gt;::build_global (6 samples, 0.76%)</title><rect x="98.2323%" y="517" width="0.7576%" height="15" fill="rgb(219,33,29)"/><text x="98.4823%" y="527.50"></text></g><g><title>rayon_core::registry::Registry::wait_until_primed (6 samples, 0.76%)</title><rect x="98.2323%" y="501" width="0.7576%" height="15" fill="rgb(223,176,5)"/><text x="98.4823%" y="511.50"></text></g><g><title>rayon_core::latch::LockLatch::wait (6 samples, 0.76%)</title><rect x="98.2323%" y="485" width="0.7576%" height="15" fill="rgb(228,140,14)"/><text x="98.4823%" y="495.50"></text></g><g><title>std::sync::condvar::Condvar::wait (6 samples, 0.76%)</title><rect x="98.2323%" y="469" width="0.7576%" height="15" fill="rgb(217,179,31)"/><text x="98.4823%" y="479.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait (6 samples, 0.76%)</title><rect x="98.2323%" y="453" width="0.7576%" height="15" fill="rgb(230,9,30)"/><text x="98.4823%" y="463.50"></text></g><g><title>std::sys::unix::condvar::Condvar::wait (6 samples, 0.76%)</title><rect x="98.2323%" y="437" width="0.7576%" height="15" fill="rgb(230,136,20)"/><text x="98.4823%" y="447.50"></text></g><g><title>__pthread_cond_wait (6 samples, 0.76%)</title><rect x="98.2323%" y="421" width="0.7576%" height="15" fill="rgb(215,210,22)"/><text x="98.4823%" y="431.50"></text></g><g><title>__pthread_cond_wait_common (6 samples, 0.76%)</title><rect x="98.2323%" y="405" width="0.7576%" height="15" fill="rgb(218,43,5)"/><text x="98.4823%" y="415.50"></text></g><g><title>futex_wait_cancelable (6 samples, 0.76%)</title><rect x="98.2323%" y="389" width="0.7576%" height="15" fill="rgb(216,11,5)"/><text x="98.4823%" y="399.50"></text></g><g><title>[unknown] (6 samples, 0.76%)</title><rect x="98.2323%" y="373" width="0.7576%" height="15" fill="rgb(209,82,29)"/><text x="98.4823%" y="383.50"></text></g><g><title>[unknown] (6 samples, 0.76%)</title><rect x="98.2323%" y="357" width="0.7576%" height="15" fill="rgb(244,115,12)"/><text x="98.4823%" y="367.50"></text></g><g><title>[unknown] (6 samples, 0.76%)</title><rect x="98.2323%" y="341" width="0.7576%" height="15" fill="rgb(222,82,18)"/><text x="98.4823%" y="351.50"></text></g><g><title>[unknown] (6 samples, 0.76%)</title><rect x="98.2323%" y="325" width="0.7576%" height="15" fill="rgb(249,227,8)"/><text x="98.4823%" y="335.50"></text></g><g><title>[unknown] (6 samples, 0.76%)</title><rect x="98.2323%" y="309" width="0.7576%" height="15" fill="rgb(253,141,45)"/><text x="98.4823%" y="319.50"></text></g><g><title>[unknown] (6 samples, 0.76%)</title><rect x="98.2323%" y="293" width="0.7576%" height="15" fill="rgb(234,184,4)"/><text x="98.4823%" y="303.50"></text></g><g><title>[unknown] (6 samples, 0.76%)</title><rect x="98.2323%" y="277" width="0.7576%" height="15" fill="rgb(218,194,23)"/><text x="98.4823%" y="287.50"></text></g><g><title>[unknown] (6 samples, 0.76%)</title><rect x="98.2323%" y="261" width="0.7576%" height="15" fill="rgb(235,66,41)"/><text x="98.4823%" y="271.50"></text></g><g><title>[unknown] (6 samples, 0.76%)</title><rect x="98.2323%" y="245" width="0.7576%" height="15" fill="rgb(245,217,1)"/><text x="98.4823%" y="255.50"></text></g><g><title>[unknown] (6 samples, 0.76%)</title><rect x="98.2323%" y="229" width="0.7576%" height="15" fill="rgb(229,91,1)"/><text x="98.4823%" y="239.50"></text></g><g><title>[unknown] (6 samples, 0.76%)</title><rect x="98.2323%" y="213" width="0.7576%" height="15" fill="rgb(207,101,30)"/><text x="98.4823%" y="223.50"></text></g><g><title>[unknown] (6 samples, 0.76%)</title><rect x="98.2323%" y="197" width="0.7576%" height="15" fill="rgb(223,82,49)"/><text x="98.4823%" y="207.50"></text></g><g><title>[unknown] (6 samples, 0.76%)</title><rect x="98.2323%" y="181" width="0.7576%" height="15" fill="rgb(218,167,17)"/><text x="98.4823%" y="191.50"></text></g><g><title>[unknown] (6 samples, 0.76%)</title><rect x="98.2323%" y="165" width="0.7576%" height="15" fill="rgb(208,103,14)"/><text x="98.4823%" y="175.50"></text></g><g><title>__libc_start_main (742 samples, 93.69%)</title><rect x="5.4293%" y="693" width="93.6869%" height="15" fill="rgb(238,20,8)"/><text x="5.6793%" y="703.50">__libc_start_main</text></g><g><title>main (742 samples, 93.69%)</title><rect x="5.4293%" y="677" width="93.6869%" height="15" fill="rgb(218,80,54)"/><text x="5.6793%" y="687.50">main</text></g><g><title>std::rt::lang_start_internal (742 samples, 93.69%)</title><rect x="5.4293%" y="661" width="93.6869%" height="15" fill="rgb(240,144,17)"/><text x="5.6793%" y="671.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (742 samples, 93.69%)</title><rect x="5.4293%" y="645" width="93.6869%" height="15" fill="rgb(245,27,50)"/><text x="5.6793%" y="655.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (742 samples, 93.69%)</title><rect x="5.4293%" y="629" width="93.6869%" height="15" fill="rgb(251,51,7)"/><text x="5.6793%" y="639.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (742 samples, 93.69%)</title><rect x="5.4293%" y="613" width="93.6869%" height="15" fill="rgb(245,217,29)"/><text x="5.6793%" y="623.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (742 samples, 93.69%)</title><rect x="5.4293%" y="597" width="93.6869%" height="15" fill="rgb(221,176,29)"/><text x="5.6793%" y="607.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (742 samples, 93.69%)</title><rect x="5.4293%" y="581" width="93.6869%" height="15" fill="rgb(212,180,24)"/><text x="5.6793%" y="591.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (742 samples, 93.69%)</title><rect x="5.4293%" y="565" width="93.6869%" height="15" fill="rgb(254,24,2)"/><text x="5.6793%" y="575.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (742 samples, 93.69%)</title><rect x="5.4293%" y="549" width="93.6869%" height="15" fill="rgb(230,100,2)"/><text x="5.6793%" y="559.50">core::ops::function::FnOnce::call_once</text></g><g><title>data_gen::main (742 samples, 93.69%)</title><rect x="5.4293%" y="533" width="93.6869%" height="15" fill="rgb(219,142,25)"/><text x="5.6793%" y="543.50">data_gen::main</text></g><g><title>std::env::args (1 samples, 0.13%)</title><rect x="98.9899%" y="517" width="0.1263%" height="15" fill="rgb(240,73,43)"/><text x="99.2399%" y="527.50"></text></g><g><title>std::env::args_os (1 samples, 0.13%)</title><rect x="98.9899%" y="501" width="0.1263%" height="15" fill="rgb(214,114,15)"/><text x="99.2399%" y="511.50"></text></g><g><title>std::sys::unix::args::args (1 samples, 0.13%)</title><rect x="98.9899%" y="485" width="0.1263%" height="15" fill="rgb(207,130,4)"/><text x="99.2399%" y="495.50"></text></g><g><title>std::sys::unix::args::imp::args (1 samples, 0.13%)</title><rect x="98.9899%" y="469" width="0.1263%" height="15" fill="rgb(221,25,40)"/><text x="99.2399%" y="479.50"></text></g><g><title>std::sys::unix::args::imp::clone (1 samples, 0.13%)</title><rect x="98.9899%" y="453" width="0.1263%" height="15" fill="rgb(241,184,7)"/><text x="99.2399%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.13%)</title><rect x="98.9899%" y="437" width="0.1263%" height="15" fill="rgb(235,159,4)"/><text x="99.2399%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.13%)</title><rect x="98.9899%" y="421" width="0.1263%" height="15" fill="rgb(214,87,48)"/><text x="99.2399%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.13%)</title><rect x="98.9899%" y="405" width="0.1263%" height="15" fill="rgb(246,198,24)"/><text x="99.2399%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.13%)</title><rect x="98.9899%" y="389" width="0.1263%" height="15" fill="rgb(209,66,40)"/><text x="99.2399%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.13%)</title><rect x="98.9899%" y="373" width="0.1263%" height="15" fill="rgb(233,147,39)"/><text x="99.2399%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.13%)</title><rect x="98.9899%" y="357" width="0.1263%" height="15" fill="rgb(231,145,52)"/><text x="99.2399%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.13%)</title><rect x="98.9899%" y="341" width="0.1263%" height="15" fill="rgb(206,20,26)"/><text x="99.2399%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.13%)</title><rect x="98.9899%" y="325" width="0.1263%" height="15" fill="rgb(238,220,4)"/><text x="99.2399%" y="335.50"></text></g><g><title>core::iter::adapters::map_fold::{{closure}} (1 samples, 0.13%)</title><rect x="98.9899%" y="309" width="0.1263%" height="15" fill="rgb(252,195,42)"/><text x="99.2399%" y="319.50"></text></g><g><title>std::sys::unix::args::imp::clone::{{closure}} (1 samples, 0.13%)</title><rect x="98.9899%" y="293" width="0.1263%" height="15" fill="rgb(209,10,6)"/><text x="99.2399%" y="303.50"></text></g><g><title>data_gen (786 samples, 99.24%)</title><rect x="0.0000%" y="725" width="99.2424%" height="15" fill="rgb(229,3,52)"/><text x="0.2500%" y="735.50">data_gen</text></g><g><title>_start (743 samples, 93.81%)</title><rect x="5.4293%" y="709" width="93.8131%" height="15" fill="rgb(253,49,37)"/><text x="5.6793%" y="719.50">_start</text></g><g><title>_dl_start (1 samples, 0.13%)</title><rect x="99.1162%" y="693" width="0.1263%" height="15" fill="rgb(240,103,49)"/><text x="99.3662%" y="703.50"></text></g><g><title>_dl_start_final (1 samples, 0.13%)</title><rect x="99.1162%" y="677" width="0.1263%" height="15" fill="rgb(250,182,30)"/><text x="99.3662%" y="687.50"></text></g><g><title>_dl_sysdep_start (1 samples, 0.13%)</title><rect x="99.1162%" y="661" width="0.1263%" height="15" fill="rgb(248,8,30)"/><text x="99.3662%" y="671.50"></text></g><g><title>dl_main (1 samples, 0.13%)</title><rect x="99.1162%" y="645" width="0.1263%" height="15" fill="rgb(237,120,30)"/><text x="99.3662%" y="655.50"></text></g><g><title>_dl_map_object_deps (1 samples, 0.13%)</title><rect x="99.1162%" y="629" width="0.1263%" height="15" fill="rgb(221,146,34)"/><text x="99.3662%" y="639.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.13%)</title><rect x="99.1162%" y="613" width="0.1263%" height="15" fill="rgb(242,55,13)"/><text x="99.3662%" y="623.50"></text></g><g><title>openaux (1 samples, 0.13%)</title><rect x="99.1162%" y="597" width="0.1263%" height="15" fill="rgb(242,112,31)"/><text x="99.3662%" y="607.50"></text></g><g><title>_dl_map_object (1 samples, 0.13%)</title><rect x="99.1162%" y="581" width="0.1263%" height="15" fill="rgb(249,192,27)"/><text x="99.3662%" y="591.50"></text></g><g><title>_dl_load_cache_lookup (1 samples, 0.13%)</title><rect x="99.1162%" y="565" width="0.1263%" height="15" fill="rgb(208,204,44)"/><text x="99.3662%" y="575.50"></text></g><g><title>_dl_sysdep_read_whole_file (1 samples, 0.13%)</title><rect x="99.1162%" y="549" width="0.1263%" height="15" fill="rgb(208,93,54)"/><text x="99.3662%" y="559.50"></text></g><g><title>__mmap64 (1 samples, 0.13%)</title><rect x="99.1162%" y="533" width="0.1263%" height="15" fill="rgb(242,1,31)"/><text x="99.3662%" y="543.50"></text></g><g><title>__mmap64 (1 samples, 0.13%)</title><rect x="99.1162%" y="517" width="0.1263%" height="15" fill="rgb(241,83,25)"/><text x="99.3662%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="99.1162%" y="501" width="0.1263%" height="15" fill="rgb(205,169,50)"/><text x="99.3662%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="99.1162%" y="485" width="0.1263%" height="15" fill="rgb(239,186,37)"/><text x="99.3662%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="99.1162%" y="469" width="0.1263%" height="15" fill="rgb(205,221,10)"/><text x="99.3662%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="99.1162%" y="453" width="0.1263%" height="15" fill="rgb(218,196,15)"/><text x="99.3662%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="99.1162%" y="437" width="0.1263%" height="15" fill="rgb(218,196,35)"/><text x="99.3662%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="99.1162%" y="421" width="0.1263%" height="15" fill="rgb(233,63,24)"/><text x="99.3662%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="99.1162%" y="405" width="0.1263%" height="15" fill="rgb(225,8,4)"/><text x="99.3662%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="99.1162%" y="389" width="0.1263%" height="15" fill="rgb(234,105,35)"/><text x="99.3662%" y="399.50"></text></g><g><title>all (792 samples, 100%)</title><rect x="0.0000%" y="741" width="100.0000%" height="15" fill="rgb(236,21,32)"/><text x="0.2500%" y="751.50"></text></g><g><title>perf (6 samples, 0.76%)</title><rect x="99.2424%" y="725" width="0.7576%" height="15" fill="rgb(228,109,6)"/><text x="99.4924%" y="735.50"></text></g><g><title>[unknown] (6 samples, 0.76%)</title><rect x="99.2424%" y="709" width="0.7576%" height="15" fill="rgb(229,215,31)"/><text x="99.4924%" y="719.50"></text></g><g><title>[unknown] (6 samples, 0.76%)</title><rect x="99.2424%" y="693" width="0.7576%" height="15" fill="rgb(221,52,54)"/><text x="99.4924%" y="703.50"></text></g><g><title>[unknown] (6 samples, 0.76%)</title><rect x="99.2424%" y="677" width="0.7576%" height="15" fill="rgb(252,129,43)"/><text x="99.4924%" y="687.50"></text></g><g><title>[unknown] (6 samples, 0.76%)</title><rect x="99.2424%" y="661" width="0.7576%" height="15" fill="rgb(248,183,27)"/><text x="99.4924%" y="671.50"></text></g><g><title>[unknown] (6 samples, 0.76%)</title><rect x="99.2424%" y="645" width="0.7576%" height="15" fill="rgb(250,0,22)"/><text x="99.4924%" y="655.50"></text></g><g><title>[unknown] (6 samples, 0.76%)</title><rect x="99.2424%" y="629" width="0.7576%" height="15" fill="rgb(213,166,10)"/><text x="99.4924%" y="639.50"></text></g><g><title>[unknown] (6 samples, 0.76%)</title><rect x="99.2424%" y="613" width="0.7576%" height="15" fill="rgb(207,163,36)"/><text x="99.4924%" y="623.50"></text></g><g><title>[unknown] (6 samples, 0.76%)</title><rect x="99.2424%" y="597" width="0.7576%" height="15" fill="rgb(208,122,22)"/><text x="99.4924%" y="607.50"></text></g><g><title>[unknown] (6 samples, 0.76%)</title><rect x="99.2424%" y="581" width="0.7576%" height="15" fill="rgb(207,104,49)"/><text x="99.4924%" y="591.50"></text></g><g><title>[unknown] (5 samples, 0.63%)</title><rect x="99.3687%" y="565" width="0.6313%" height="15" fill="rgb(248,211,50)"/><text x="99.6187%" y="575.50"></text></g><g><title>[unknown] (5 samples, 0.63%)</title><rect x="99.3687%" y="549" width="0.6313%" height="15" fill="rgb(217,13,45)"/><text x="99.6187%" y="559.50"></text></g><g><title>[unknown] (5 samples, 0.63%)</title><rect x="99.3687%" y="533" width="0.6313%" height="15" fill="rgb(211,216,49)"/><text x="99.6187%" y="543.50"></text></g><g><title>[unknown] (5 samples, 0.63%)</title><rect x="99.3687%" y="517" width="0.6313%" height="15" fill="rgb(221,58,53)"/><text x="99.6187%" y="527.50"></text></g></svg></svg>