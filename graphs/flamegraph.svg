<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="854" onload="init(evt)" viewBox="0 0 1200 854" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="854" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="837.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="837.00"> </text><svg id="frames" x="10" width="1180"><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (1 samples, 0.11%)</title><rect x="0.0000%" y="757" width="0.1138%" height="15" fill="rgb(227,0,7)"/><text x="0.2500%" y="767.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (1 samples, 0.11%)</title><rect x="0.0000%" y="741" width="0.1138%" height="15" fill="rgb(217,0,24)"/><text x="0.2500%" y="751.50"></text></g><g><title>[[heap]] (2 samples, 0.23%)</title><rect x="0.0000%" y="773" width="0.2275%" height="15" fill="rgb(221,193,54)"/><text x="0.2500%" y="783.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (1 samples, 0.11%)</title><rect x="0.1138%" y="757" width="0.1138%" height="15" fill="rgb(248,212,6)"/><text x="0.3638%" y="767.50"></text></g><g><title>[anon] (1 samples, 0.11%)</title><rect x="0.2275%" y="773" width="0.1138%" height="15" fill="rgb(208,68,35)"/><text x="0.4775%" y="783.50"></text></g><g><title>core::slice::sort::recurse (1 samples, 0.11%)</title><rect x="0.2275%" y="757" width="0.1138%" height="15" fill="rgb(232,128,0)"/><text x="0.4775%" y="767.50"></text></g><g><title>[unknown] (2 samples, 0.23%)</title><rect x="0.3413%" y="757" width="0.2275%" height="15" fill="rgb(207,160,47)"/><text x="0.5913%" y="767.50"></text></g><g><title>[unknown] (2 samples, 0.23%)</title><rect x="0.3413%" y="741" width="0.2275%" height="15" fill="rgb(228,23,34)"/><text x="0.5913%" y="751.50"></text></g><g><title>[unknown] (2 samples, 0.23%)</title><rect x="0.3413%" y="725" width="0.2275%" height="15" fill="rgb(218,30,26)"/><text x="0.5913%" y="735.50"></text></g><g><title>[unknown] (2 samples, 0.23%)</title><rect x="0.3413%" y="709" width="0.2275%" height="15" fill="rgb(220,122,19)"/><text x="0.5913%" y="719.50"></text></g><g><title>[unknown] (2 samples, 0.23%)</title><rect x="0.3413%" y="693" width="0.2275%" height="15" fill="rgb(250,228,42)"/><text x="0.5913%" y="703.50"></text></g><g><title>[unknown] (2 samples, 0.23%)</title><rect x="0.3413%" y="677" width="0.2275%" height="15" fill="rgb(240,193,28)"/><text x="0.5913%" y="687.50"></text></g><g><title>[unknown] (2 samples, 0.23%)</title><rect x="0.3413%" y="661" width="0.2275%" height="15" fill="rgb(216,20,37)"/><text x="0.5913%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="0.4551%" y="645" width="0.1138%" height="15" fill="rgb(206,188,39)"/><text x="0.7051%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="0.4551%" y="629" width="0.1138%" height="15" fill="rgb(217,207,13)"/><text x="0.7051%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="0.4551%" y="613" width="0.1138%" height="15" fill="rgb(231,73,38)"/><text x="0.7051%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="0.4551%" y="597" width="0.1138%" height="15" fill="rgb(225,20,46)"/><text x="0.7051%" y="607.50"></text></g><g><title>[unknown] (3 samples, 0.34%)</title><rect x="0.3413%" y="773" width="0.3413%" height="15" fill="rgb(210,31,41)"/><text x="0.5913%" y="783.50"></text></g><g><title>core::slice::sort::recurse (1 samples, 0.11%)</title><rect x="0.5688%" y="757" width="0.1138%" height="15" fill="rgb(221,200,47)"/><text x="0.8188%" y="767.50"></text></g><g><title>[unknown] (18 samples, 2.05%)</title><rect x="0.6826%" y="757" width="2.0478%" height="15" fill="rgb(226,26,5)"/><text x="0.9326%" y="767.50">[..</text></g><g><title>[unknown] (18 samples, 2.05%)</title><rect x="0.6826%" y="741" width="2.0478%" height="15" fill="rgb(249,33,26)"/><text x="0.9326%" y="751.50">[..</text></g><g><title>[unknown] (18 samples, 2.05%)</title><rect x="0.6826%" y="725" width="2.0478%" height="15" fill="rgb(235,183,28)"/><text x="0.9326%" y="735.50">[..</text></g><g><title>[unknown] (18 samples, 2.05%)</title><rect x="0.6826%" y="709" width="2.0478%" height="15" fill="rgb(221,5,38)"/><text x="0.9326%" y="719.50">[..</text></g><g><title>[unknown] (17 samples, 1.93%)</title><rect x="0.7964%" y="693" width="1.9340%" height="15" fill="rgb(247,18,42)"/><text x="1.0464%" y="703.50">[..</text></g><g><title>[unknown] (17 samples, 1.93%)</title><rect x="0.7964%" y="677" width="1.9340%" height="15" fill="rgb(241,131,45)"/><text x="1.0464%" y="687.50">[..</text></g><g><title>[unknown] (16 samples, 1.82%)</title><rect x="0.9101%" y="661" width="1.8203%" height="15" fill="rgb(249,31,29)"/><text x="1.1601%" y="671.50">[..</text></g><g><title>[unknown] (16 samples, 1.82%)</title><rect x="0.9101%" y="645" width="1.8203%" height="15" fill="rgb(225,111,53)"/><text x="1.1601%" y="655.50">[..</text></g><g><title>&lt;rayon_core::latch::LockLatch as rayon_core::latch::Latch&gt;::set (1 samples, 0.11%)</title><rect x="2.7304%" y="517" width="0.1138%" height="15" fill="rgb(238,160,17)"/><text x="2.9804%" y="527.50"></text></g><g><title>__pthread_cond_broadcast (1 samples, 0.11%)</title><rect x="2.7304%" y="501" width="0.1138%" height="15" fill="rgb(214,148,48)"/><text x="2.9804%" y="511.50"></text></g><g><title>futex_wake (1 samples, 0.11%)</title><rect x="2.7304%" y="485" width="0.1138%" height="15" fill="rgb(232,36,49)"/><text x="2.9804%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="2.7304%" y="469" width="0.1138%" height="15" fill="rgb(209,103,24)"/><text x="2.9804%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="2.7304%" y="453" width="0.1138%" height="15" fill="rgb(229,88,8)"/><text x="2.9804%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="2.7304%" y="437" width="0.1138%" height="15" fill="rgb(213,181,19)"/><text x="2.9804%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="2.7304%" y="421" width="0.1138%" height="15" fill="rgb(254,191,54)"/><text x="2.9804%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="2.7304%" y="405" width="0.1138%" height="15" fill="rgb(241,83,37)"/><text x="2.9804%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="2.7304%" y="389" width="0.1138%" height="15" fill="rgb(233,36,39)"/><text x="2.9804%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="2.7304%" y="373" width="0.1138%" height="15" fill="rgb(226,3,54)"/><text x="2.9804%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="2.7304%" y="357" width="0.1138%" height="15" fill="rgb(245,192,40)"/><text x="2.9804%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="2.7304%" y="341" width="0.1138%" height="15" fill="rgb(238,167,29)"/><text x="2.9804%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="2.7304%" y="325" width="0.1138%" height="15" fill="rgb(232,182,51)"/><text x="2.9804%" y="335.50"></text></g><g><title>rayon_core::job::JobFifo::new (1 samples, 0.11%)</title><rect x="2.8441%" y="517" width="0.1138%" height="15" fill="rgb(231,60,39)"/><text x="3.0941%" y="527.50"></text></g><g><title>crossbeam_deque::deque::Injector&lt;T&gt;::new (1 samples, 0.11%)</title><rect x="2.8441%" y="501" width="0.1138%" height="15" fill="rgb(208,69,12)"/><text x="3.0941%" y="511.50"></text></g><g><title>&lt;crossbeam_deque::deque::Injector&lt;T&gt; as core::default::Default&gt;::default (1 samples, 0.11%)</title><rect x="2.8441%" y="485" width="0.1138%" height="15" fill="rgb(235,93,37)"/><text x="3.0941%" y="495.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.11%)</title><rect x="2.8441%" y="469" width="0.1138%" height="15" fill="rgb(213,116,39)"/><text x="3.0941%" y="479.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.11%)</title><rect x="2.8441%" y="453" width="0.1138%" height="15" fill="rgb(222,207,29)"/><text x="3.0941%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.11%)</title><rect x="2.8441%" y="437" width="0.1138%" height="15" fill="rgb(206,96,30)"/><text x="3.0941%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.11%)</title><rect x="2.8441%" y="421" width="0.1138%" height="15" fill="rgb(218,138,4)"/><text x="3.0941%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.11%)</title><rect x="2.8441%" y="405" width="0.1138%" height="15" fill="rgb(250,191,14)"/><text x="3.0941%" y="415.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="2.8441%" y="389" width="0.1138%" height="15" fill="rgb(239,60,40)"/><text x="3.0941%" y="399.50"></text></g><g><title>_int_malloc (1 samples, 0.11%)</title><rect x="2.8441%" y="373" width="0.1138%" height="15" fill="rgb(206,27,48)"/><text x="3.0941%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="2.8441%" y="357" width="0.1138%" height="15" fill="rgb(225,35,8)"/><text x="3.0941%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="2.8441%" y="341" width="0.1138%" height="15" fill="rgb(250,213,24)"/><text x="3.0941%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="2.8441%" y="325" width="0.1138%" height="15" fill="rgb(247,123,22)"/><text x="3.0941%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="2.8441%" y="309" width="0.1138%" height="15" fill="rgb(231,138,38)"/><text x="3.0941%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="2.8441%" y="293" width="0.1138%" height="15" fill="rgb(231,145,46)"/><text x="3.0941%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="2.8441%" y="277" width="0.1138%" height="15" fill="rgb(251,118,11)"/><text x="3.0941%" y="287.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (3 samples, 0.34%)</title><rect x="2.7304%" y="725" width="0.3413%" height="15" fill="rgb(217,147,25)"/><text x="2.9804%" y="735.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (3 samples, 0.34%)</title><rect x="2.7304%" y="709" width="0.3413%" height="15" fill="rgb(247,81,37)"/><text x="2.9804%" y="719.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (3 samples, 0.34%)</title><rect x="2.7304%" y="693" width="0.3413%" height="15" fill="rgb(209,12,38)"/><text x="2.9804%" y="703.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (3 samples, 0.34%)</title><rect x="2.7304%" y="677" width="0.3413%" height="15" fill="rgb(227,1,9)"/><text x="2.9804%" y="687.50"></text></g><g><title>std::panic::catch_unwind (3 samples, 0.34%)</title><rect x="2.7304%" y="661" width="0.3413%" height="15" fill="rgb(248,47,43)"/><text x="2.9804%" y="671.50"></text></g><g><title>std::panicking::try (3 samples, 0.34%)</title><rect x="2.7304%" y="645" width="0.3413%" height="15" fill="rgb(221,10,30)"/><text x="2.9804%" y="655.50"></text></g><g><title>std::panicking::try::do_call (3 samples, 0.34%)</title><rect x="2.7304%" y="629" width="0.3413%" height="15" fill="rgb(210,229,1)"/><text x="2.9804%" y="639.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (3 samples, 0.34%)</title><rect x="2.7304%" y="613" width="0.3413%" height="15" fill="rgb(222,148,37)"/><text x="2.9804%" y="623.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (3 samples, 0.34%)</title><rect x="2.7304%" y="597" width="0.3413%" height="15" fill="rgb(234,67,33)"/><text x="2.9804%" y="607.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (3 samples, 0.34%)</title><rect x="2.7304%" y="581" width="0.3413%" height="15" fill="rgb(247,98,35)"/><text x="2.9804%" y="591.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (3 samples, 0.34%)</title><rect x="2.7304%" y="565" width="0.3413%" height="15" fill="rgb(247,138,52)"/><text x="2.9804%" y="575.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (3 samples, 0.34%)</title><rect x="2.7304%" y="549" width="0.3413%" height="15" fill="rgb(213,79,30)"/><text x="2.9804%" y="559.50"></text></g><g><title>rayon_core::registry::main_loop (3 samples, 0.34%)</title><rect x="2.7304%" y="533" width="0.3413%" height="15" fill="rgb(246,177,23)"/><text x="2.9804%" y="543.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (1 samples, 0.11%)</title><rect x="2.9579%" y="517" width="0.1138%" height="15" fill="rgb(230,62,27)"/><text x="3.2079%" y="527.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1 samples, 0.11%)</title><rect x="2.9579%" y="501" width="0.1138%" height="15" fill="rgb(216,154,8)"/><text x="3.2079%" y="511.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (1 samples, 0.11%)</title><rect x="2.9579%" y="485" width="0.1138%" height="15" fill="rgb(244,35,45)"/><text x="3.2079%" y="495.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold::{{closure}} (1 samples, 0.11%)</title><rect x="2.9579%" y="469" width="0.1138%" height="15" fill="rgb(251,115,12)"/><text x="3.2079%" y="479.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal (1 samples, 0.11%)</title><rect x="2.9579%" y="453" width="0.1138%" height="15" fill="rgb(240,54,50)"/><text x="3.2079%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (1 samples, 0.11%)</title><rect x="2.9579%" y="437" width="0.1138%" height="15" fill="rgb(233,84,52)"/><text x="3.2079%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.11%)</title><rect x="2.9579%" y="421" width="0.1138%" height="15" fill="rgb(207,117,47)"/><text x="3.2079%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.11%)</title><rect x="2.9579%" y="405" width="0.1138%" height="15" fill="rgb(249,43,39)"/><text x="3.2079%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.11%)</title><rect x="2.9579%" y="389" width="0.1138%" height="15" fill="rgb(209,38,44)"/><text x="3.2079%" y="399.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.11%)</title><rect x="2.9579%" y="373" width="0.1138%" height="15" fill="rgb(236,212,23)"/><text x="3.2079%" y="383.50"></text></g><g><title>core::iter::adapters::filter_try_fold::{{closure}} (1 samples, 0.11%)</title><rect x="2.9579%" y="357" width="0.1138%" height="15" fill="rgb(242,79,21)"/><text x="3.2079%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (1 samples, 0.11%)</title><rect x="2.9579%" y="341" width="0.1138%" height="15" fill="rgb(211,96,35)"/><text x="3.2079%" y="351.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal::{{closure}} (1 samples, 0.11%)</title><rect x="2.9579%" y="325" width="0.1138%" height="15" fill="rgb(253,215,40)"/><text x="3.2079%" y="335.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (1 samples, 0.11%)</title><rect x="2.9579%" y="309" width="0.1138%" height="15" fill="rgb(211,81,21)"/><text x="3.2079%" y="319.50"></text></g><g><title>crossbeam_epoch::default::is_pinned (1 samples, 0.11%)</title><rect x="2.9579%" y="293" width="0.1138%" height="15" fill="rgb(208,190,38)"/><text x="3.2079%" y="303.50"></text></g><g><title>crossbeam_epoch::default::with_handle (1 samples, 0.11%)</title><rect x="2.9579%" y="277" width="0.1138%" height="15" fill="rgb(235,213,38)"/><text x="3.2079%" y="287.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.11%)</title><rect x="2.9579%" y="261" width="0.1138%" height="15" fill="rgb(237,122,38)"/><text x="3.2079%" y="271.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::try_initialize (1 samples, 0.11%)</title><rect x="2.9579%" y="245" width="0.1138%" height="15" fill="rgb(244,218,35)"/><text x="3.2079%" y="255.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::try_register_dtor (1 samples, 0.11%)</title><rect x="2.9579%" y="229" width="0.1138%" height="15" fill="rgb(240,68,47)"/><text x="3.2079%" y="239.50"></text></g><g><title>__cxa_thread_atexit_impl (1 samples, 0.11%)</title><rect x="2.9579%" y="213" width="0.1138%" height="15" fill="rgb(210,16,53)"/><text x="3.2079%" y="223.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.11%)</title><rect x="2.9579%" y="197" width="0.1138%" height="15" fill="rgb(235,124,12)"/><text x="3.2079%" y="207.50"></text></g><g><title>__GI___mmap64 (3 samples, 0.34%)</title><rect x="3.0717%" y="661" width="0.3413%" height="15" fill="rgb(224,169,11)"/><text x="3.3217%" y="671.50"></text></g><g><title>__GI___mmap64 (3 samples, 0.34%)</title><rect x="3.0717%" y="645" width="0.3413%" height="15" fill="rgb(250,166,2)"/><text x="3.3217%" y="655.50"></text></g><g><title>[unknown] (3 samples, 0.34%)</title><rect x="3.0717%" y="629" width="0.3413%" height="15" fill="rgb(242,216,29)"/><text x="3.3217%" y="639.50"></text></g><g><title>[unknown] (3 samples, 0.34%)</title><rect x="3.0717%" y="613" width="0.3413%" height="15" fill="rgb(230,116,27)"/><text x="3.3217%" y="623.50"></text></g><g><title>[unknown] (3 samples, 0.34%)</title><rect x="3.0717%" y="597" width="0.3413%" height="15" fill="rgb(228,99,48)"/><text x="3.3217%" y="607.50"></text></g><g><title>[unknown] (3 samples, 0.34%)</title><rect x="3.0717%" y="581" width="0.3413%" height="15" fill="rgb(253,11,6)"/><text x="3.3217%" y="591.50"></text></g><g><title>[unknown] (3 samples, 0.34%)</title><rect x="3.0717%" y="565" width="0.3413%" height="15" fill="rgb(247,143,39)"/><text x="3.3217%" y="575.50"></text></g><g><title>[unknown] (3 samples, 0.34%)</title><rect x="3.0717%" y="549" width="0.3413%" height="15" fill="rgb(236,97,10)"/><text x="3.3217%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="3.2992%" y="533" width="0.1138%" height="15" fill="rgb(233,208,19)"/><text x="3.5492%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="3.2992%" y="517" width="0.1138%" height="15" fill="rgb(216,164,2)"/><text x="3.5492%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="3.2992%" y="501" width="0.1138%" height="15" fill="rgb(220,129,5)"/><text x="3.5492%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="3.2992%" y="485" width="0.1138%" height="15" fill="rgb(242,17,10)"/><text x="3.5492%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="3.2992%" y="469" width="0.1138%" height="15" fill="rgb(242,107,0)"/><text x="3.5492%" y="479.50"></text></g><g><title>__GI___clone (25 samples, 2.84%)</title><rect x="0.6826%" y="773" width="2.8441%" height="15" fill="rgb(251,28,31)"/><text x="0.9326%" y="783.50">__..</text></g><g><title>start_thread (7 samples, 0.80%)</title><rect x="2.7304%" y="757" width="0.7964%" height="15" fill="rgb(233,223,10)"/><text x="2.9804%" y="767.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (7 samples, 0.80%)</title><rect x="2.7304%" y="741" width="0.7964%" height="15" fill="rgb(215,21,27)"/><text x="2.9804%" y="751.50"></text></g><g><title>std::sys::unix::stack_overflow::Handler::new (4 samples, 0.46%)</title><rect x="3.0717%" y="725" width="0.4551%" height="15" fill="rgb(232,23,21)"/><text x="3.3217%" y="735.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (4 samples, 0.46%)</title><rect x="3.0717%" y="709" width="0.4551%" height="15" fill="rgb(244,5,23)"/><text x="3.3217%" y="719.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (4 samples, 0.46%)</title><rect x="3.0717%" y="693" width="0.4551%" height="15" fill="rgb(226,81,46)"/><text x="3.3217%" y="703.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (4 samples, 0.46%)</title><rect x="3.0717%" y="677" width="0.4551%" height="15" fill="rgb(247,70,30)"/><text x="3.3217%" y="687.50"></text></g><g><title>__GI___mprotect (1 samples, 0.11%)</title><rect x="3.4130%" y="661" width="0.1138%" height="15" fill="rgb(212,68,19)"/><text x="3.6630%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="3.4130%" y="645" width="0.1138%" height="15" fill="rgb(240,187,13)"/><text x="3.6630%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="3.4130%" y="629" width="0.1138%" height="15" fill="rgb(223,113,26)"/><text x="3.6630%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="3.4130%" y="613" width="0.1138%" height="15" fill="rgb(206,192,2)"/><text x="3.6630%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="3.4130%" y="597" width="0.1138%" height="15" fill="rgb(241,108,4)"/><text x="3.6630%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="3.4130%" y="581" width="0.1138%" height="15" fill="rgb(247,173,49)"/><text x="3.6630%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="3.4130%" y="565" width="0.1138%" height="15" fill="rgb(224,114,35)"/><text x="3.6630%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="3.4130%" y="549" width="0.1138%" height="15" fill="rgb(245,159,27)"/><text x="3.6630%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="3.4130%" y="533" width="0.1138%" height="15" fill="rgb(245,172,44)"/><text x="3.6630%" y="543.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_node (2 samples, 0.23%)</title><rect x="3.5267%" y="485" width="0.2275%" height="15" fill="rgb(236,23,11)"/><text x="3.7767%" y="495.50"></text></g><g><title>broccoli::query::colfind::oned::find_2d (2 samples, 0.23%)</title><rect x="3.5267%" y="469" width="0.2275%" height="15" fill="rgb(205,117,38)"/><text x="3.7767%" y="479.50"></text></g><g><title>broccoli::query::colfind::oned::find (2 samples, 0.23%)</title><rect x="3.5267%" y="453" width="0.2275%" height="15" fill="rgb(237,72,25)"/><text x="3.7767%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (2 samples, 0.23%)</title><rect x="3.5267%" y="437" width="0.2275%" height="15" fill="rgb(244,70,9)"/><text x="3.7767%" y="447.50"></text></g><g><title>broccoli::query::colfind::oned::find::{{closure}} (2 samples, 0.23%)</title><rect x="3.5267%" y="421" width="0.2275%" height="15" fill="rgb(217,125,39)"/><text x="3.7767%" y="431.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (2 samples, 0.23%)</title><rect x="3.5267%" y="405" width="0.2275%" height="15" fill="rgb(235,36,10)"/><text x="3.7767%" y="415.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (2 samples, 0.23%)</title><rect x="3.5267%" y="389" width="0.2275%" height="15" fill="rgb(251,123,47)"/><text x="3.7767%" y="399.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (2 samples, 0.23%)</title><rect x="3.5267%" y="373" width="0.2275%" height="15" fill="rgb(221,13,13)"/><text x="3.7767%" y="383.50"></text></g><g><title>data_gen::main::{{closure}}::{{closure}} (2 samples, 0.23%)</title><rect x="3.5267%" y="357" width="0.2275%" height="15" fill="rgb(238,131,9)"/><text x="3.7767%" y="367.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFn&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (2 samples, 0.23%)</title><rect x="4.2093%" y="373" width="0.2275%" height="15" fill="rgb(211,50,8)"/><text x="4.4593%" y="383.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut_par::{{closure}} (2 samples, 0.23%)</title><rect x="4.2093%" y="357" width="0.2275%" height="15" fill="rgb(245,182,24)"/><text x="4.4593%" y="367.50"></text></g><g><title>data_gen::colfind::float_vs_integer::handle_bench::{{closure}}::{{closure}} (2 samples, 0.23%)</title><rect x="4.2093%" y="341" width="0.2275%" height="15" fill="rgb(242,14,37)"/><text x="4.4593%" y="351.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (7 samples, 0.80%)</title><rect x="3.7543%" y="389" width="0.7964%" height="15" fill="rgb(246,228,12)"/><text x="4.0043%" y="399.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.11%)</title><rect x="4.4369%" y="373" width="0.1138%" height="15" fill="rgb(213,55,15)"/><text x="4.6869%" y="383.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (1 samples, 0.11%)</title><rect x="4.4369%" y="357" width="0.1138%" height="15" fill="rgb(209,9,3)"/><text x="4.6869%" y="367.50"></text></g><g><title>data_gen::main::{{closure}}::{{closure}} (1 samples, 0.11%)</title><rect x="4.4369%" y="341" width="0.1138%" height="15" fill="rgb(230,59,30)"/><text x="4.6869%" y="351.50"></text></g><g><title>broccoli::query::colfind::oned::find::{{closure}} (9 samples, 1.02%)</title><rect x="3.7543%" y="405" width="1.0239%" height="15" fill="rgb(209,121,21)"/><text x="4.0043%" y="415.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (2 samples, 0.23%)</title><rect x="4.5506%" y="389" width="0.2275%" height="15" fill="rgb(220,109,13)"/><text x="4.8006%" y="399.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_node (10 samples, 1.14%)</title><rect x="3.7543%" y="469" width="1.1377%" height="15" fill="rgb(232,18,1)"/><text x="4.0043%" y="479.50"></text></g><g><title>broccoli::query::colfind::oned::find_2d (10 samples, 1.14%)</title><rect x="3.7543%" y="453" width="1.1377%" height="15" fill="rgb(215,41,42)"/><text x="4.0043%" y="463.50"></text></g><g><title>broccoli::query::colfind::oned::find (10 samples, 1.14%)</title><rect x="3.7543%" y="437" width="1.1377%" height="15" fill="rgb(224,123,36)"/><text x="4.0043%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (10 samples, 1.14%)</title><rect x="3.7543%" y="421" width="1.1377%" height="15" fill="rgb(240,125,3)"/><text x="4.0043%" y="431.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.11%)</title><rect x="4.7782%" y="405" width="0.1138%" height="15" fill="rgb(205,98,50)"/><text x="5.0282%" y="415.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (1 samples, 0.11%)</title><rect x="4.8919%" y="373" width="0.1138%" height="15" fill="rgb(205,185,37)"/><text x="5.1419%" y="383.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFn&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (2 samples, 0.23%)</title><rect x="5.0057%" y="357" width="0.2275%" height="15" fill="rgb(238,207,15)"/><text x="5.2557%" y="367.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut_par::{{closure}} (2 samples, 0.23%)</title><rect x="5.0057%" y="341" width="0.2275%" height="15" fill="rgb(213,199,42)"/><text x="5.2557%" y="351.50"></text></g><g><title>data_gen::colfind::float_vs_integer::handle_bench::{{closure}}::{{closure}} (2 samples, 0.23%)</title><rect x="5.0057%" y="325" width="0.2275%" height="15" fill="rgb(235,201,11)"/><text x="5.2557%" y="335.50"></text></g><g><title>broccoli::query::colfind::oned::find::{{closure}} (6 samples, 0.68%)</title><rect x="4.8919%" y="389" width="0.6826%" height="15" fill="rgb(207,46,11)"/><text x="5.1419%" y="399.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (5 samples, 0.57%)</title><rect x="5.0057%" y="373" width="0.5688%" height="15" fill="rgb(241,35,35)"/><text x="5.2557%" y="383.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (3 samples, 0.34%)</title><rect x="5.2332%" y="357" width="0.3413%" height="15" fill="rgb(243,32,47)"/><text x="5.4832%" y="367.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (3 samples, 0.34%)</title><rect x="5.2332%" y="341" width="0.3413%" height="15" fill="rgb(247,202,23)"/><text x="5.4832%" y="351.50"></text></g><g><title>data_gen::main::{{closure}}::{{closure}} (3 samples, 0.34%)</title><rect x="5.2332%" y="325" width="0.3413%" height="15" fill="rgb(219,102,11)"/><text x="5.4832%" y="335.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.11%)</title><rect x="5.5745%" y="389" width="0.1138%" height="15" fill="rgb(243,110,44)"/><text x="5.8245%" y="399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.11%)</title><rect x="5.5745%" y="373" width="0.1138%" height="15" fill="rgb(222,74,54)"/><text x="5.8245%" y="383.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_node (8 samples, 0.91%)</title><rect x="4.8919%" y="453" width="0.9101%" height="15" fill="rgb(216,99,12)"/><text x="5.1419%" y="463.50"></text></g><g><title>broccoli::query::colfind::oned::find_2d (8 samples, 0.91%)</title><rect x="4.8919%" y="437" width="0.9101%" height="15" fill="rgb(226,22,26)"/><text x="5.1419%" y="447.50"></text></g><g><title>broccoli::query::colfind::oned::find (8 samples, 0.91%)</title><rect x="4.8919%" y="421" width="0.9101%" height="15" fill="rgb(217,163,10)"/><text x="5.1419%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (8 samples, 0.91%)</title><rect x="4.8919%" y="405" width="0.9101%" height="15" fill="rgb(213,25,53)"/><text x="5.1419%" y="415.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.11%)</title><rect x="5.6883%" y="389" width="0.1138%" height="15" fill="rgb(252,105,26)"/><text x="5.9383%" y="399.50"></text></g><g><title>core::ptr::swap (1 samples, 0.11%)</title><rect x="5.6883%" y="373" width="0.1138%" height="15" fill="rgb(220,39,43)"/><text x="5.9383%" y="383.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.11%)</title><rect x="5.6883%" y="357" width="0.1138%" height="15" fill="rgb(229,68,48)"/><text x="5.9383%" y="367.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFn&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.11%)</title><rect x="5.9158%" y="341" width="0.1138%" height="15" fill="rgb(252,8,32)"/><text x="6.1658%" y="351.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut_par::{{closure}} (1 samples, 0.11%)</title><rect x="5.9158%" y="325" width="0.1138%" height="15" fill="rgb(223,20,43)"/><text x="6.1658%" y="335.50"></text></g><g><title>data_gen::colfind::float_vs_integer::handle_bench::{{closure}}::{{closure}} (1 samples, 0.11%)</title><rect x="5.9158%" y="309" width="0.1138%" height="15" fill="rgb(229,81,49)"/><text x="6.1658%" y="319.50"></text></g><g><title>broccoli::query::colfind::oned::find::{{closure}} (3 samples, 0.34%)</title><rect x="5.8020%" y="373" width="0.3413%" height="15" fill="rgb(236,28,36)"/><text x="6.0520%" y="383.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (3 samples, 0.34%)</title><rect x="5.8020%" y="357" width="0.3413%" height="15" fill="rgb(249,185,26)"/><text x="6.0520%" y="367.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.11%)</title><rect x="6.0296%" y="341" width="0.1138%" height="15" fill="rgb(249,174,33)"/><text x="6.2796%" y="351.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (1 samples, 0.11%)</title><rect x="6.0296%" y="325" width="0.1138%" height="15" fill="rgb(233,201,37)"/><text x="6.2796%" y="335.50"></text></g><g><title>data_gen::main::{{closure}}::{{closure}} (1 samples, 0.11%)</title><rect x="6.0296%" y="309" width="0.1138%" height="15" fill="rgb(221,78,26)"/><text x="6.2796%" y="319.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_node (4 samples, 0.46%)</title><rect x="5.8020%" y="437" width="0.4551%" height="15" fill="rgb(250,127,30)"/><text x="6.0520%" y="447.50"></text></g><g><title>broccoli::query::colfind::oned::find_2d (4 samples, 0.46%)</title><rect x="5.8020%" y="421" width="0.4551%" height="15" fill="rgb(230,49,44)"/><text x="6.0520%" y="431.50"></text></g><g><title>broccoli::query::colfind::oned::find (4 samples, 0.46%)</title><rect x="5.8020%" y="405" width="0.4551%" height="15" fill="rgb(229,67,23)"/><text x="6.0520%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (4 samples, 0.46%)</title><rect x="5.8020%" y="389" width="0.4551%" height="15" fill="rgb(249,83,47)"/><text x="6.0520%" y="399.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.11%)</title><rect x="6.1433%" y="373" width="0.1138%" height="15" fill="rgb(215,43,3)"/><text x="6.3933%" y="383.50"></text></g><g><title>core::ptr::swap (1 samples, 0.11%)</title><rect x="6.1433%" y="357" width="0.1138%" height="15" fill="rgb(238,154,13)"/><text x="6.3933%" y="367.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.11%)</title><rect x="6.1433%" y="341" width="0.1138%" height="15" fill="rgb(219,56,2)"/><text x="6.3933%" y="351.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (1 samples, 0.11%)</title><rect x="6.2571%" y="341" width="0.1138%" height="15" fill="rgb(233,0,4)"/><text x="6.5071%" y="351.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (5 samples, 0.57%)</title><rect x="6.3709%" y="341" width="0.5688%" height="15" fill="rgb(235,30,7)"/><text x="6.6209%" y="351.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (3 samples, 0.34%)</title><rect x="6.5984%" y="325" width="0.3413%" height="15" fill="rgb(250,79,13)"/><text x="6.8484%" y="335.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (3 samples, 0.34%)</title><rect x="6.5984%" y="309" width="0.3413%" height="15" fill="rgb(211,146,34)"/><text x="6.8484%" y="319.50"></text></g><g><title>data_gen::main::{{closure}}::{{closure}} (3 samples, 0.34%)</title><rect x="6.5984%" y="293" width="0.3413%" height="15" fill="rgb(228,22,38)"/><text x="6.8484%" y="303.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_node (7 samples, 0.80%)</title><rect x="6.2571%" y="421" width="0.7964%" height="15" fill="rgb(235,168,5)"/><text x="6.5071%" y="431.50"></text></g><g><title>broccoli::query::colfind::oned::find_2d (7 samples, 0.80%)</title><rect x="6.2571%" y="405" width="0.7964%" height="15" fill="rgb(221,155,16)"/><text x="6.5071%" y="415.50"></text></g><g><title>broccoli::query::colfind::oned::find (7 samples, 0.80%)</title><rect x="6.2571%" y="389" width="0.7964%" height="15" fill="rgb(215,215,53)"/><text x="6.5071%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (7 samples, 0.80%)</title><rect x="6.2571%" y="373" width="0.7964%" height="15" fill="rgb(223,4,10)"/><text x="6.5071%" y="383.50"></text></g><g><title>broccoli::query::colfind::oned::find::{{closure}} (7 samples, 0.80%)</title><rect x="6.2571%" y="357" width="0.7964%" height="15" fill="rgb(234,103,6)"/><text x="6.5071%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.11%)</title><rect x="6.9397%" y="341" width="0.1138%" height="15" fill="rgb(227,97,0)"/><text x="7.1897%" y="351.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_node (3 samples, 0.34%)</title><rect x="7.0535%" y="405" width="0.3413%" height="15" fill="rgb(234,150,53)"/><text x="7.3035%" y="415.50"></text></g><g><title>broccoli::query::colfind::oned::find_2d (3 samples, 0.34%)</title><rect x="7.0535%" y="389" width="0.3413%" height="15" fill="rgb(228,201,54)"/><text x="7.3035%" y="399.50"></text></g><g><title>broccoli::query::colfind::oned::find (3 samples, 0.34%)</title><rect x="7.0535%" y="373" width="0.3413%" height="15" fill="rgb(222,22,37)"/><text x="7.3035%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (3 samples, 0.34%)</title><rect x="7.0535%" y="357" width="0.3413%" height="15" fill="rgb(237,53,32)"/><text x="7.3035%" y="367.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_node (1 samples, 0.11%)</title><rect x="7.3948%" y="389" width="0.1138%" height="15" fill="rgb(233,25,53)"/><text x="7.6448%" y="399.50"></text></g><g><title>broccoli::query::colfind::oned::find_2d (1 samples, 0.11%)</title><rect x="7.3948%" y="373" width="0.1138%" height="15" fill="rgb(210,40,34)"/><text x="7.6448%" y="383.50"></text></g><g><title>broccoli::query::colfind::oned::find (1 samples, 0.11%)</title><rect x="7.3948%" y="357" width="0.1138%" height="15" fill="rgb(241,220,44)"/><text x="7.6448%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.11%)</title><rect x="7.3948%" y="341" width="0.1138%" height="15" fill="rgb(235,28,35)"/><text x="7.6448%" y="351.50"></text></g><g><title>core::ptr::write (1 samples, 0.11%)</title><rect x="7.3948%" y="325" width="0.1138%" height="15" fill="rgb(210,56,17)"/><text x="7.6448%" y="335.50"></text></g><g><title>broccoli::query::colfind::oned::find_2d (3 samples, 0.34%)</title><rect x="7.5085%" y="373" width="0.3413%" height="15" fill="rgb(224,130,29)"/><text x="7.7585%" y="383.50"></text></g><g><title>broccoli::query::colfind::oned::find (3 samples, 0.34%)</title><rect x="7.5085%" y="357" width="0.3413%" height="15" fill="rgb(235,212,8)"/><text x="7.7585%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (3 samples, 0.34%)</title><rect x="7.5085%" y="341" width="0.3413%" height="15" fill="rgb(223,33,50)"/><text x="7.7585%" y="351.50"></text></g><g><title>broccoli::query::colfind::oned::find::{{closure}} (2 samples, 0.23%)</title><rect x="7.6223%" y="325" width="0.2275%" height="15" fill="rgb(219,149,13)"/><text x="7.8723%" y="335.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (2 samples, 0.23%)</title><rect x="7.6223%" y="309" width="0.2275%" height="15" fill="rgb(250,156,29)"/><text x="7.8723%" y="319.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFn&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (2 samples, 0.23%)</title><rect x="7.6223%" y="293" width="0.2275%" height="15" fill="rgb(216,193,19)"/><text x="7.8723%" y="303.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut_par::{{closure}} (2 samples, 0.23%)</title><rect x="7.6223%" y="277" width="0.2275%" height="15" fill="rgb(216,135,14)"/><text x="7.8723%" y="287.50"></text></g><g><title>data_gen::colfind::float_vs_integer::handle_bench::{{closure}}::{{closure}} (2 samples, 0.23%)</title><rect x="7.6223%" y="261" width="0.2275%" height="15" fill="rgb(241,47,5)"/><text x="7.8723%" y="271.50"></text></g><g><title>broccoli::query::colfind::inner::ColFindRecurser&lt;T,K,S&gt;::recurse_seq (4 samples, 0.46%)</title><rect x="7.5085%" y="389" width="0.4551%" height="15" fill="rgb(233,42,35)"/><text x="7.7585%" y="399.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (1 samples, 0.11%)</title><rect x="7.8498%" y="373" width="0.1138%" height="15" fill="rgb(231,13,6)"/><text x="8.0998%" y="383.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (1 samples, 0.11%)</title><rect x="7.8498%" y="357" width="0.1138%" height="15" fill="rgb(207,181,40)"/><text x="8.0998%" y="367.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.11%)</title><rect x="7.8498%" y="341" width="0.1138%" height="15" fill="rgb(254,173,49)"/><text x="8.0998%" y="351.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (1 samples, 0.11%)</title><rect x="7.9636%" y="373" width="0.1138%" height="15" fill="rgb(221,1,38)"/><text x="8.2136%" y="383.50"></text></g><g><title>broccoli::query::colfind::node_handle::DestructuredNodeLeaf&lt;T,AnchorAxis&gt;::new (1 samples, 0.11%)</title><rect x="7.9636%" y="357" width="0.1138%" height="15" fill="rgb(206,124,46)"/><text x="8.2136%" y="367.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (1 samples, 0.11%)</title><rect x="7.9636%" y="341" width="0.1138%" height="15" fill="rgb(249,21,11)"/><text x="8.2136%" y="351.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::push_second (1 samples, 0.11%)</title><rect x="8.0774%" y="341" width="0.1138%" height="15" fill="rgb(222,201,40)"/><text x="8.3274%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.11%)</title><rect x="8.0774%" y="325" width="0.1138%" height="15" fill="rgb(235,61,29)"/><text x="8.3274%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::as_mut_ptr (1 samples, 0.11%)</title><rect x="8.0774%" y="309" width="0.1138%" height="15" fill="rgb(219,207,3)"/><text x="8.3274%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.11%)</title><rect x="8.0774%" y="293" width="0.1138%" height="15" fill="rgb(222,56,46)"/><text x="8.3274%" y="303.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.11%)</title><rect x="8.1911%" y="309" width="0.1138%" height="15" fill="rgb(239,76,54)"/><text x="8.4411%" y="319.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::retain_first_mut_unordered (2 samples, 0.23%)</title><rect x="8.1911%" y="341" width="0.2275%" height="15" fill="rgb(231,124,27)"/><text x="8.4411%" y="351.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (2 samples, 0.23%)</title><rect x="8.1911%" y="325" width="0.2275%" height="15" fill="rgb(249,195,6)"/><text x="8.4411%" y="335.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.11%)</title><rect x="8.3049%" y="309" width="0.1138%" height="15" fill="rgb(237,174,47)"/><text x="8.5549%" y="319.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (7 samples, 0.80%)</title><rect x="7.9636%" y="389" width="0.7964%" height="15" fill="rgb(206,201,31)"/><text x="8.2136%" y="399.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (6 samples, 0.68%)</title><rect x="8.0774%" y="373" width="0.6826%" height="15" fill="rgb(231,57,52)"/><text x="8.3274%" y="383.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (6 samples, 0.68%)</title><rect x="8.0774%" y="357" width="0.6826%" height="15" fill="rgb(248,177,22)"/><text x="8.3274%" y="367.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::retain_second_mut_unordered (3 samples, 0.34%)</title><rect x="8.4187%" y="341" width="0.3413%" height="15" fill="rgb(215,211,37)"/><text x="8.6687%" y="351.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (1 samples, 0.11%)</title><rect x="8.6462%" y="325" width="0.1138%" height="15" fill="rgb(241,128,51)"/><text x="8.8962%" y="335.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (1 samples, 0.11%)</title><rect x="8.6462%" y="309" width="0.1138%" height="15" fill="rgb(227,165,31)"/><text x="8.8962%" y="319.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (2 samples, 0.23%)</title><rect x="9.1013%" y="325" width="0.2275%" height="15" fill="rgb(228,167,24)"/><text x="9.3513%" y="335.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFn&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.11%)</title><rect x="9.2150%" y="309" width="0.1138%" height="15" fill="rgb(228,143,12)"/><text x="9.4650%" y="319.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut_par::{{closure}} (1 samples, 0.11%)</title><rect x="9.2150%" y="293" width="0.1138%" height="15" fill="rgb(249,149,8)"/><text x="9.4650%" y="303.50"></text></g><g><title>data_gen::colfind::float_vs_integer::handle_bench::{{closure}}::{{closure}} (1 samples, 0.11%)</title><rect x="9.2150%" y="277" width="0.1138%" height="15" fill="rgb(243,35,44)"/><text x="9.4650%" y="287.50"></text></g><g><title>broccoli::query::colfind::oned::find::{{closure}} (5 samples, 0.57%)</title><rect x="8.8737%" y="341" width="0.5688%" height="15" fill="rgb(246,89,9)"/><text x="9.1237%" y="351.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.11%)</title><rect x="9.3288%" y="325" width="0.1138%" height="15" fill="rgb(233,213,13)"/><text x="9.5788%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (7 samples, 0.80%)</title><rect x="8.7600%" y="357" width="0.7964%" height="15" fill="rgb(233,141,41)"/><text x="9.0100%" y="367.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.11%)</title><rect x="9.4425%" y="341" width="0.1138%" height="15" fill="rgb(239,167,4)"/><text x="9.6925%" y="351.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.11%)</title><rect x="9.4425%" y="325" width="0.1138%" height="15" fill="rgb(209,217,16)"/><text x="9.6925%" y="335.50"></text></g><g><title>broccoli::query::colfind::oned::find_2d (8 samples, 0.91%)</title><rect x="8.7600%" y="389" width="0.9101%" height="15" fill="rgb(219,88,35)"/><text x="9.0100%" y="399.50"></text></g><g><title>broccoli::query::colfind::oned::find (8 samples, 0.91%)</title><rect x="8.7600%" y="373" width="0.9101%" height="15" fill="rgb(220,193,23)"/><text x="9.0100%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.11%)</title><rect x="9.5563%" y="357" width="0.1138%" height="15" fill="rgb(230,90,52)"/><text x="9.8063%" y="367.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::push_second (1 samples, 0.11%)</title><rect x="9.6701%" y="357" width="0.1138%" height="15" fill="rgb(252,106,19)"/><text x="9.9201%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.11%)</title><rect x="9.6701%" y="341" width="0.1138%" height="15" fill="rgb(206,74,20)"/><text x="9.9201%" y="351.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (1 samples, 0.11%)</title><rect x="10.0114%" y="341" width="0.1138%" height="15" fill="rgb(230,138,44)"/><text x="10.2614%" y="351.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (1 samples, 0.11%)</title><rect x="10.0114%" y="325" width="0.1138%" height="15" fill="rgb(235,182,43)"/><text x="10.2614%" y="335.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::retain_first_mut_unordered (4 samples, 0.46%)</title><rect x="9.7838%" y="357" width="0.4551%" height="15" fill="rgb(242,16,51)"/><text x="10.0338%" y="367.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::truncate_first (1 samples, 0.11%)</title><rect x="10.1251%" y="341" width="0.1138%" height="15" fill="rgb(248,9,4)"/><text x="10.3751%" y="351.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.11%)</title><rect x="10.2389%" y="325" width="0.1138%" height="15" fill="rgb(210,31,22)"/><text x="10.4889%" y="335.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (7 samples, 0.80%)</title><rect x="9.6701%" y="389" width="0.7964%" height="15" fill="rgb(239,54,39)"/><text x="9.9201%" y="399.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (7 samples, 0.80%)</title><rect x="9.6701%" y="373" width="0.7964%" height="15" fill="rgb(230,99,41)"/><text x="9.9201%" y="383.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::retain_second_mut_unordered (2 samples, 0.23%)</title><rect x="10.2389%" y="357" width="0.2275%" height="15" fill="rgb(253,106,12)"/><text x="10.4889%" y="367.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (2 samples, 0.23%)</title><rect x="10.2389%" y="341" width="0.2275%" height="15" fill="rgb(213,46,41)"/><text x="10.4889%" y="351.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.11%)</title><rect x="10.3527%" y="325" width="0.1138%" height="15" fill="rgb(215,133,35)"/><text x="10.6027%" y="335.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::push_second (1 samples, 0.11%)</title><rect x="10.8077%" y="357" width="0.1138%" height="15" fill="rgb(213,28,5)"/><text x="11.0577%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.11%)</title><rect x="10.8077%" y="341" width="0.1138%" height="15" fill="rgb(215,77,49)"/><text x="11.0577%" y="351.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (1 samples, 0.11%)</title><rect x="10.9215%" y="325" width="0.1138%" height="15" fill="rgb(248,100,22)"/><text x="11.1715%" y="335.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.11%)</title><rect x="11.0353%" y="325" width="0.1138%" height="15" fill="rgb(208,67,9)"/><text x="11.2853%" y="335.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (3 samples, 0.34%)</title><rect x="10.9215%" y="341" width="0.3413%" height="15" fill="rgb(219,133,21)"/><text x="11.1715%" y="351.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.11%)</title><rect x="11.1490%" y="325" width="0.1138%" height="15" fill="rgb(246,46,29)"/><text x="11.3990%" y="335.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::retain_first_mut_unordered (4 samples, 0.46%)</title><rect x="10.9215%" y="357" width="0.4551%" height="15" fill="rgb(246,185,52)"/><text x="11.1715%" y="367.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::get_first_mut (1 samples, 0.11%)</title><rect x="11.2628%" y="341" width="0.1138%" height="15" fill="rgb(252,136,11)"/><text x="11.5128%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1 samples, 0.11%)</title><rect x="11.2628%" y="325" width="0.1138%" height="15" fill="rgb(219,138,53)"/><text x="11.5128%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.11%)</title><rect x="11.2628%" y="309" width="0.1138%" height="15" fill="rgb(211,51,23)"/><text x="11.5128%" y="319.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::retain_second_mut_unordered (2 samples, 0.23%)</title><rect x="11.3766%" y="357" width="0.2275%" height="15" fill="rgb(247,221,28)"/><text x="11.6266%" y="367.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (1 samples, 0.11%)</title><rect x="11.4903%" y="341" width="0.1138%" height="15" fill="rgb(251,222,45)"/><text x="11.7403%" y="351.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.11%)</title><rect x="11.4903%" y="325" width="0.1138%" height="15" fill="rgb(217,162,53)"/><text x="11.7403%" y="335.50"></text></g><g><title>axgeom::range::Range&lt;T&gt;::intersects (1 samples, 0.11%)</title><rect x="11.4903%" y="309" width="0.1138%" height="15" fill="rgb(229,93,14)"/><text x="11.7403%" y="319.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::le (1 samples, 0.11%)</title><rect x="11.4903%" y="293" width="0.1138%" height="15" fill="rgb(209,67,49)"/><text x="11.7403%" y="303.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::lt (1 samples, 0.11%)</title><rect x="11.6041%" y="357" width="0.1138%" height="15" fill="rgb(213,87,29)"/><text x="11.8541%" y="367.50"></text></g><g><title>broccoli::query::colfind::inner::ColFindRecurser&lt;T,K,S&gt;::recurse_seq (41 samples, 4.66%)</title><rect x="7.3948%" y="405" width="4.6644%" height="15" fill="rgb(205,151,52)"/><text x="7.6448%" y="415.50">brocc..</text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (14 samples, 1.59%)</title><rect x="10.4664%" y="389" width="1.5927%" height="15" fill="rgb(253,215,39)"/><text x="10.7164%" y="399.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (13 samples, 1.48%)</title><rect x="10.5802%" y="373" width="1.4790%" height="15" fill="rgb(221,220,41)"/><text x="10.8302%" y="383.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (3 samples, 0.34%)</title><rect x="11.7179%" y="357" width="0.3413%" height="15" fill="rgb(218,133,21)"/><text x="11.9679%" y="367.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (3 samples, 0.34%)</title><rect x="11.7179%" y="341" width="0.3413%" height="15" fill="rgb(221,193,43)"/><text x="11.9679%" y="351.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek::{{closure}} (2 samples, 0.23%)</title><rect x="11.8316%" y="325" width="0.2275%" height="15" fill="rgb(240,128,52)"/><text x="12.0816%" y="335.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.23%)</title><rect x="11.8316%" y="309" width="0.2275%" height="15" fill="rgb(253,114,12)"/><text x="12.0816%" y="319.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.23%)</title><rect x="11.8316%" y="293" width="0.2275%" height="15" fill="rgb(215,223,47)"/><text x="12.0816%" y="303.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::push_second (1 samples, 0.11%)</title><rect x="12.0592%" y="341" width="0.1138%" height="15" fill="rgb(248,225,23)"/><text x="12.3092%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.11%)</title><rect x="12.0592%" y="325" width="0.1138%" height="15" fill="rgb(250,108,0)"/><text x="12.3092%" y="335.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::retain_first_mut_unordered (1 samples, 0.11%)</title><rect x="12.1729%" y="341" width="0.1138%" height="15" fill="rgb(228,208,7)"/><text x="12.4229%" y="351.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (1 samples, 0.11%)</title><rect x="12.1729%" y="325" width="0.1138%" height="15" fill="rgb(244,45,10)"/><text x="12.4229%" y="335.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.11%)</title><rect x="12.1729%" y="309" width="0.1138%" height="15" fill="rgb(207,125,25)"/><text x="12.4229%" y="319.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.11%)</title><rect x="12.1729%" y="293" width="0.1138%" height="15" fill="rgb(210,195,18)"/><text x="12.4229%" y="303.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (1 samples, 0.11%)</title><rect x="12.1729%" y="277" width="0.1138%" height="15" fill="rgb(249,80,12)"/><text x="12.4229%" y="287.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.11%)</title><rect x="12.1729%" y="261" width="0.1138%" height="15" fill="rgb(221,65,9)"/><text x="12.4229%" y="271.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (3 samples, 0.34%)</title><rect x="12.0592%" y="373" width="0.3413%" height="15" fill="rgb(235,49,36)"/><text x="12.3092%" y="383.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (3 samples, 0.34%)</title><rect x="12.0592%" y="357" width="0.3413%" height="15" fill="rgb(225,32,20)"/><text x="12.3092%" y="367.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (1 samples, 0.11%)</title><rect x="12.2867%" y="341" width="0.1138%" height="15" fill="rgb(215,141,46)"/><text x="12.5367%" y="351.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (1 samples, 0.11%)</title><rect x="12.2867%" y="325" width="0.1138%" height="15" fill="rgb(250,160,47)"/><text x="12.5367%" y="335.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek::{{closure}} (1 samples, 0.11%)</title><rect x="12.2867%" y="309" width="0.1138%" height="15" fill="rgb(216,222,40)"/><text x="12.5367%" y="319.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="12.2867%" y="293" width="0.1138%" height="15" fill="rgb(234,217,39)"/><text x="12.5367%" y="303.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="12.2867%" y="277" width="0.1138%" height="15" fill="rgb(207,178,40)"/><text x="12.5367%" y="287.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (4 samples, 0.46%)</title><rect x="12.0592%" y="389" width="0.4551%" height="15" fill="rgb(221,136,13)"/><text x="12.3092%" y="399.50"></text></g><g><title>broccoli::query::colfind::oned::get_section_mut (1 samples, 0.11%)</title><rect x="12.4005%" y="373" width="0.1138%" height="15" fill="rgb(249,199,10)"/><text x="12.6505%" y="383.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (1 samples, 0.11%)</title><rect x="12.5142%" y="389" width="0.1138%" height="15" fill="rgb(249,222,13)"/><text x="12.7642%" y="399.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (1 samples, 0.11%)</title><rect x="12.5142%" y="373" width="0.1138%" height="15" fill="rgb(244,185,38)"/><text x="12.7642%" y="383.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (1 samples, 0.11%)</title><rect x="12.5142%" y="357" width="0.1138%" height="15" fill="rgb(236,202,9)"/><text x="12.7642%" y="367.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (1 samples, 0.11%)</title><rect x="12.5142%" y="341" width="0.1138%" height="15" fill="rgb(250,229,37)"/><text x="12.7642%" y="351.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (1 samples, 0.11%)</title><rect x="12.5142%" y="325" width="0.1138%" height="15" fill="rgb(206,174,23)"/><text x="12.7642%" y="335.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek::{{closure}} (1 samples, 0.11%)</title><rect x="12.5142%" y="309" width="0.1138%" height="15" fill="rgb(211,33,43)"/><text x="12.7642%" y="319.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="12.5142%" y="293" width="0.1138%" height="15" fill="rgb(245,58,50)"/><text x="12.7642%" y="303.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="12.5142%" y="277" width="0.1138%" height="15" fill="rgb(244,68,36)"/><text x="12.7642%" y="287.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (1 samples, 0.11%)</title><rect x="12.6280%" y="389" width="0.1138%" height="15" fill="rgb(232,229,15)"/><text x="12.8780%" y="399.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (1 samples, 0.11%)</title><rect x="12.6280%" y="373" width="0.1138%" height="15" fill="rgb(254,30,23)"/><text x="12.8780%" y="383.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::retain_second_mut_unordered (1 samples, 0.11%)</title><rect x="12.6280%" y="357" width="0.1138%" height="15" fill="rgb(235,160,14)"/><text x="12.8780%" y="367.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (1 samples, 0.11%)</title><rect x="12.6280%" y="341" width="0.1138%" height="15" fill="rgb(212,155,44)"/><text x="12.8780%" y="351.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (1 samples, 0.11%)</title><rect x="12.6280%" y="325" width="0.1138%" height="15" fill="rgb(226,2,50)"/><text x="12.8780%" y="335.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::push_second (2 samples, 0.23%)</title><rect x="12.7418%" y="357" width="0.2275%" height="15" fill="rgb(234,177,6)"/><text x="12.9918%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (2 samples, 0.23%)</title><rect x="12.7418%" y="341" width="0.2275%" height="15" fill="rgb(217,24,9)"/><text x="12.9918%" y="351.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::retain_first_mut_unordered (1 samples, 0.11%)</title><rect x="12.9693%" y="357" width="0.1138%" height="15" fill="rgb(220,13,46)"/><text x="13.2193%" y="367.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.11%)</title><rect x="12.9693%" y="341" width="0.1138%" height="15" fill="rgb(239,221,27)"/><text x="13.2193%" y="351.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (10 samples, 1.14%)</title><rect x="12.0592%" y="405" width="1.1377%" height="15" fill="rgb(222,198,25)"/><text x="12.3092%" y="415.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (4 samples, 0.46%)</title><rect x="12.7418%" y="389" width="0.4551%" height="15" fill="rgb(211,99,13)"/><text x="12.9918%" y="399.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (4 samples, 0.46%)</title><rect x="12.7418%" y="373" width="0.4551%" height="15" fill="rgb(232,111,31)"/><text x="12.9918%" y="383.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.11%)</title><rect x="13.0830%" y="357" width="0.1138%" height="15" fill="rgb(245,82,37)"/><text x="13.3330%" y="367.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (2 samples, 0.23%)</title><rect x="14.9033%" y="341" width="0.2275%" height="15" fill="rgb(227,149,46)"/><text x="15.1533%" y="351.50"></text></g><g><title>broccoli::query::colfind::oned::find_2d (23 samples, 2.62%)</title><rect x="13.1968%" y="405" width="2.6166%" height="15" fill="rgb(218,36,50)"/><text x="13.4468%" y="415.50">br..</text></g><g><title>broccoli::query::colfind::oned::find (23 samples, 2.62%)</title><rect x="13.1968%" y="389" width="2.6166%" height="15" fill="rgb(226,80,48)"/><text x="13.4468%" y="399.50">br..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (23 samples, 2.62%)</title><rect x="13.1968%" y="373" width="2.6166%" height="15" fill="rgb(238,224,15)"/><text x="13.4468%" y="383.50">&lt;a..</text></g><g><title>broccoli::query::colfind::oned::find::{{closure}} (10 samples, 1.14%)</title><rect x="14.6758%" y="357" width="1.1377%" height="15" fill="rgb(241,136,10)"/><text x="14.9258%" y="367.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (6 samples, 0.68%)</title><rect x="15.1308%" y="341" width="0.6826%" height="15" fill="rgb(208,32,45)"/><text x="15.3808%" y="351.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFn&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (3 samples, 0.34%)</title><rect x="15.4721%" y="325" width="0.3413%" height="15" fill="rgb(207,135,9)"/><text x="15.7221%" y="335.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut_par::{{closure}} (3 samples, 0.34%)</title><rect x="15.4721%" y="309" width="0.3413%" height="15" fill="rgb(206,86,44)"/><text x="15.7221%" y="319.50"></text></g><g><title>data_gen::colfind::float_vs_integer::handle_bench::{{closure}}::{{closure}} (3 samples, 0.34%)</title><rect x="15.4721%" y="293" width="0.3413%" height="15" fill="rgb(245,177,15)"/><text x="15.7221%" y="303.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::push_second (2 samples, 0.23%)</title><rect x="15.8134%" y="373" width="0.2275%" height="15" fill="rgb(206,64,50)"/><text x="16.0634%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (2 samples, 0.23%)</title><rect x="15.8134%" y="357" width="0.2275%" height="15" fill="rgb(234,36,40)"/><text x="16.0634%" y="367.50"></text></g><g><title>core::ptr::write (2 samples, 0.23%)</title><rect x="15.8134%" y="341" width="0.2275%" height="15" fill="rgb(213,64,8)"/><text x="16.0634%" y="351.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::retain_first_mut_unordered (2 samples, 0.23%)</title><rect x="16.0410%" y="373" width="0.2275%" height="15" fill="rgb(210,75,36)"/><text x="16.2910%" y="383.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (2 samples, 0.23%)</title><rect x="16.0410%" y="357" width="0.2275%" height="15" fill="rgb(229,88,21)"/><text x="16.2910%" y="367.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.11%)</title><rect x="16.1547%" y="341" width="0.1138%" height="15" fill="rgb(252,204,47)"/><text x="16.4047%" y="351.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFn&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.11%)</title><rect x="16.1547%" y="325" width="0.1138%" height="15" fill="rgb(208,77,27)"/><text x="16.4047%" y="335.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut_par::{{closure}} (1 samples, 0.11%)</title><rect x="16.1547%" y="309" width="0.1138%" height="15" fill="rgb(221,76,26)"/><text x="16.4047%" y="319.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.11%)</title><rect x="16.1547%" y="293" width="0.1138%" height="15" fill="rgb(225,139,18)"/><text x="16.4047%" y="303.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (2 samples, 0.23%)</title><rect x="16.2685%" y="357" width="0.2275%" height="15" fill="rgb(230,137,11)"/><text x="16.5185%" y="367.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (2 samples, 0.23%)</title><rect x="16.2685%" y="341" width="0.2275%" height="15" fill="rgb(212,28,1)"/><text x="16.5185%" y="351.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFn&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.11%)</title><rect x="16.3823%" y="325" width="0.1138%" height="15" fill="rgb(248,164,17)"/><text x="16.6323%" y="335.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut_par::{{closure}} (1 samples, 0.11%)</title><rect x="16.3823%" y="309" width="0.1138%" height="15" fill="rgb(222,171,42)"/><text x="16.6323%" y="319.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.11%)</title><rect x="16.3823%" y="293" width="0.1138%" height="15" fill="rgb(243,84,45)"/><text x="16.6323%" y="303.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (7 samples, 0.80%)</title><rect x="15.8134%" y="405" width="0.7964%" height="15" fill="rgb(252,49,23)"/><text x="16.0634%" y="415.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (7 samples, 0.80%)</title><rect x="15.8134%" y="389" width="0.7964%" height="15" fill="rgb(215,19,7)"/><text x="16.0634%" y="399.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::retain_second_mut_unordered (3 samples, 0.34%)</title><rect x="16.2685%" y="373" width="0.3413%" height="15" fill="rgb(238,81,41)"/><text x="16.5185%" y="383.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.11%)</title><rect x="16.4960%" y="357" width="0.1138%" height="15" fill="rgb(210,199,37)"/><text x="16.7460%" y="367.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::push_second (2 samples, 0.23%)</title><rect x="16.6098%" y="373" width="0.2275%" height="15" fill="rgb(244,192,49)"/><text x="16.8598%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (2 samples, 0.23%)</title><rect x="16.6098%" y="357" width="0.2275%" height="15" fill="rgb(226,211,11)"/><text x="16.8598%" y="367.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (1 samples, 0.11%)</title><rect x="17.0648%" y="357" width="0.1138%" height="15" fill="rgb(236,162,54)"/><text x="17.3148%" y="367.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::get_first_mut (1 samples, 0.11%)</title><rect x="17.1786%" y="357" width="0.1138%" height="15" fill="rgb(220,229,9)"/><text x="17.4286%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1 samples, 0.11%)</title><rect x="17.1786%" y="341" width="0.1138%" height="15" fill="rgb(250,87,22)"/><text x="17.4286%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.11%)</title><rect x="17.1786%" y="325" width="0.1138%" height="15" fill="rgb(239,43,17)"/><text x="17.4286%" y="335.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::retain_first_mut_unordered (5 samples, 0.57%)</title><rect x="16.8373%" y="373" width="0.5688%" height="15" fill="rgb(231,177,25)"/><text x="17.0873%" y="383.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.11%)</title><rect x="17.2924%" y="357" width="0.1138%" height="15" fill="rgb(219,179,1)"/><text x="17.5424%" y="367.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (3 samples, 0.34%)</title><rect x="17.4061%" y="341" width="0.3413%" height="15" fill="rgb(238,219,53)"/><text x="17.6561%" y="351.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.11%)</title><rect x="17.6337%" y="325" width="0.1138%" height="15" fill="rgb(232,167,36)"/><text x="17.8837%" y="335.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (1 samples, 0.11%)</title><rect x="17.6337%" y="309" width="0.1138%" height="15" fill="rgb(244,19,51)"/><text x="17.8837%" y="319.50"></text></g><g><title>data_gen::main::{{closure}}::{{closure}} (1 samples, 0.11%)</title><rect x="17.6337%" y="293" width="0.1138%" height="15" fill="rgb(224,6,22)"/><text x="17.8837%" y="303.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (4 samples, 0.46%)</title><rect x="17.4061%" y="357" width="0.4551%" height="15" fill="rgb(224,145,5)"/><text x="17.6561%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.11%)</title><rect x="17.7474%" y="341" width="0.1138%" height="15" fill="rgb(234,130,49)"/><text x="17.9974%" y="351.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::retain_second_mut_unordered (5 samples, 0.57%)</title><rect x="17.4061%" y="373" width="0.5688%" height="15" fill="rgb(254,6,2)"/><text x="17.6561%" y="383.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.11%)</title><rect x="17.8612%" y="357" width="0.1138%" height="15" fill="rgb(208,96,46)"/><text x="18.1112%" y="367.50"></text></g><g><title>core::ptr::swap (1 samples, 0.11%)</title><rect x="17.8612%" y="341" width="0.1138%" height="15" fill="rgb(239,3,39)"/><text x="18.1112%" y="351.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.11%)</title><rect x="17.8612%" y="325" width="0.1138%" height="15" fill="rgb(233,210,1)"/><text x="18.1112%" y="335.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::lt (1 samples, 0.11%)</title><rect x="17.9750%" y="373" width="0.1138%" height="15" fill="rgb(244,137,37)"/><text x="18.2250%" y="383.50"></text></g><g><title>broccoli::query::colfind::inner::ColFindRecurser&lt;T,K,S&gt;::recurse_seq (101 samples, 11.49%)</title><rect x="7.0535%" y="421" width="11.4903%" height="15" fill="rgb(240,136,2)"/><text x="7.3035%" y="431.50">broccoli::query::..</text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (17 samples, 1.93%)</title><rect x="16.6098%" y="405" width="1.9340%" height="15" fill="rgb(239,18,37)"/><text x="16.8598%" y="415.50">b..</text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (17 samples, 1.93%)</title><rect x="16.6098%" y="389" width="1.9340%" height="15" fill="rgb(218,185,22)"/><text x="16.8598%" y="399.50">b..</text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (4 samples, 0.46%)</title><rect x="18.0887%" y="373" width="0.4551%" height="15" fill="rgb(225,218,4)"/><text x="18.3387%" y="383.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (4 samples, 0.46%)</title><rect x="18.0887%" y="357" width="0.4551%" height="15" fill="rgb(230,182,32)"/><text x="18.3387%" y="367.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek::{{closure}} (2 samples, 0.23%)</title><rect x="18.3163%" y="341" width="0.2275%" height="15" fill="rgb(242,56,43)"/><text x="18.5663%" y="351.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.23%)</title><rect x="18.3163%" y="325" width="0.2275%" height="15" fill="rgb(233,99,24)"/><text x="18.5663%" y="335.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.23%)</title><rect x="18.3163%" y="309" width="0.2275%" height="15" fill="rgb(234,209,42)"/><text x="18.5663%" y="319.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::retain_first_mut_unordered (1 samples, 0.11%)</title><rect x="18.5438%" y="357" width="0.1138%" height="15" fill="rgb(227,7,12)"/><text x="18.7938%" y="367.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (1 samples, 0.11%)</title><rect x="18.5438%" y="341" width="0.1138%" height="15" fill="rgb(245,203,43)"/><text x="18.7938%" y="351.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (1 samples, 0.11%)</title><rect x="18.5438%" y="325" width="0.1138%" height="15" fill="rgb(238,205,33)"/><text x="18.7938%" y="335.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (3 samples, 0.34%)</title><rect x="18.5438%" y="389" width="0.3413%" height="15" fill="rgb(231,56,7)"/><text x="18.7938%" y="399.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (3 samples, 0.34%)</title><rect x="18.5438%" y="373" width="0.3413%" height="15" fill="rgb(244,186,29)"/><text x="18.7938%" y="383.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::retain_second_mut_unordered (2 samples, 0.23%)</title><rect x="18.6576%" y="357" width="0.2275%" height="15" fill="rgb(234,111,31)"/><text x="18.9076%" y="367.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (1 samples, 0.11%)</title><rect x="18.7713%" y="341" width="0.1138%" height="15" fill="rgb(241,149,10)"/><text x="19.0213%" y="351.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.11%)</title><rect x="18.7713%" y="325" width="0.1138%" height="15" fill="rgb(249,206,44)"/><text x="19.0213%" y="335.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.11%)</title><rect x="18.7713%" y="309" width="0.1138%" height="15" fill="rgb(251,153,30)"/><text x="19.0213%" y="319.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (1 samples, 0.11%)</title><rect x="18.7713%" y="293" width="0.1138%" height="15" fill="rgb(239,152,38)"/><text x="19.0213%" y="303.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.11%)</title><rect x="18.7713%" y="277" width="0.1138%" height="15" fill="rgb(249,139,47)"/><text x="19.0213%" y="287.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (4 samples, 0.46%)</title><rect x="18.5438%" y="405" width="0.4551%" height="15" fill="rgb(244,64,35)"/><text x="18.7938%" y="415.50"></text></g><g><title>broccoli::query::colfind::oned::get_section_mut (1 samples, 0.11%)</title><rect x="18.8851%" y="389" width="0.1138%" height="15" fill="rgb(216,46,15)"/><text x="19.1351%" y="399.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::is_empty (1 samples, 0.11%)</title><rect x="18.8851%" y="373" width="0.1138%" height="15" fill="rgb(250,74,19)"/><text x="19.1351%" y="383.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::push_first (1 samples, 0.11%)</title><rect x="18.9989%" y="373" width="0.1138%" height="15" fill="rgb(249,42,33)"/><text x="19.2489%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.11%)</title><rect x="18.9989%" y="357" width="0.1138%" height="15" fill="rgb(242,149,17)"/><text x="19.2489%" y="367.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::retain_first_mut_unordered (1 samples, 0.11%)</title><rect x="19.1126%" y="373" width="0.1138%" height="15" fill="rgb(244,29,21)"/><text x="19.3626%" y="383.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::get_first_mut (1 samples, 0.11%)</title><rect x="19.1126%" y="357" width="0.1138%" height="15" fill="rgb(220,130,37)"/><text x="19.3626%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1 samples, 0.11%)</title><rect x="19.1126%" y="341" width="0.1138%" height="15" fill="rgb(211,67,2)"/><text x="19.3626%" y="351.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1 samples, 0.11%)</title><rect x="19.1126%" y="325" width="0.1138%" height="15" fill="rgb(235,68,52)"/><text x="19.3626%" y="335.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.11%)</title><rect x="19.1126%" y="309" width="0.1138%" height="15" fill="rgb(246,142,3)"/><text x="19.3626%" y="319.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.11%)</title><rect x="19.1126%" y="293" width="0.1138%" height="15" fill="rgb(241,25,7)"/><text x="19.3626%" y="303.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (1 samples, 0.11%)</title><rect x="19.2264%" y="341" width="0.1138%" height="15" fill="rgb(242,119,39)"/><text x="19.4764%" y="351.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (5 samples, 0.57%)</title><rect x="18.9989%" y="405" width="0.5688%" height="15" fill="rgb(241,98,45)"/><text x="19.2489%" y="415.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (5 samples, 0.57%)</title><rect x="18.9989%" y="389" width="0.5688%" height="15" fill="rgb(254,28,30)"/><text x="19.2489%" y="399.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::retain_second_mut_unordered (3 samples, 0.34%)</title><rect x="19.2264%" y="373" width="0.3413%" height="15" fill="rgb(241,142,54)"/><text x="19.4764%" y="383.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (3 samples, 0.34%)</title><rect x="19.2264%" y="357" width="0.3413%" height="15" fill="rgb(222,85,15)"/><text x="19.4764%" y="367.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (2 samples, 0.23%)</title><rect x="19.3402%" y="341" width="0.2275%" height="15" fill="rgb(210,85,47)"/><text x="19.5902%" y="351.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::push_second (2 samples, 0.23%)</title><rect x="19.5677%" y="373" width="0.2275%" height="15" fill="rgb(224,206,25)"/><text x="19.8177%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (2 samples, 0.23%)</title><rect x="19.5677%" y="357" width="0.2275%" height="15" fill="rgb(243,201,19)"/><text x="19.8177%" y="367.50"></text></g><g><title>core::ptr::write (1 samples, 0.11%)</title><rect x="19.6815%" y="341" width="0.1138%" height="15" fill="rgb(236,59,4)"/><text x="19.9315%" y="351.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (1 samples, 0.11%)</title><rect x="19.7952%" y="357" width="0.1138%" height="15" fill="rgb(254,179,45)"/><text x="20.0452%" y="367.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (1 samples, 0.11%)</title><rect x="19.7952%" y="341" width="0.1138%" height="15" fill="rgb(226,14,10)"/><text x="20.0452%" y="351.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::retain_first_mut_unordered (3 samples, 0.34%)</title><rect x="19.7952%" y="373" width="0.3413%" height="15" fill="rgb(244,27,41)"/><text x="20.0452%" y="383.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::get_first_mut (2 samples, 0.23%)</title><rect x="19.9090%" y="357" width="0.2275%" height="15" fill="rgb(235,35,32)"/><text x="20.1590%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (2 samples, 0.23%)</title><rect x="19.9090%" y="341" width="0.2275%" height="15" fill="rgb(218,68,31)"/><text x="20.1590%" y="351.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (2 samples, 0.23%)</title><rect x="19.9090%" y="325" width="0.2275%" height="15" fill="rgb(207,120,37)"/><text x="20.1590%" y="335.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (2 samples, 0.23%)</title><rect x="19.9090%" y="309" width="0.2275%" height="15" fill="rgb(227,98,0)"/><text x="20.1590%" y="319.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (2 samples, 0.23%)</title><rect x="19.9090%" y="293" width="0.2275%" height="15" fill="rgb(207,7,3)"/><text x="20.1590%" y="303.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::retain_second_mut_unordered (1 samples, 0.11%)</title><rect x="20.1365%" y="373" width="0.1138%" height="15" fill="rgb(206,98,19)"/><text x="20.3865%" y="383.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.11%)</title><rect x="20.1365%" y="357" width="0.1138%" height="15" fill="rgb(217,5,26)"/><text x="20.3865%" y="367.50"></text></g><g><title>core::ptr::swap (1 samples, 0.11%)</title><rect x="20.1365%" y="341" width="0.1138%" height="15" fill="rgb(235,190,38)"/><text x="20.3865%" y="351.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.11%)</title><rect x="20.1365%" y="325" width="0.1138%" height="15" fill="rgb(247,86,24)"/><text x="20.3865%" y="335.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::lt (1 samples, 0.11%)</title><rect x="20.2503%" y="373" width="0.1138%" height="15" fill="rgb(205,101,16)"/><text x="20.5003%" y="383.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.11%)</title><rect x="20.3641%" y="357" width="0.1138%" height="15" fill="rgb(246,168,33)"/><text x="20.6141%" y="367.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (19 samples, 2.16%)</title><rect x="18.5438%" y="421" width="2.1615%" height="15" fill="rgb(231,114,1)"/><text x="18.7938%" y="431.50">b..</text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (10 samples, 1.14%)</title><rect x="19.5677%" y="405" width="1.1377%" height="15" fill="rgb(207,184,53)"/><text x="19.8177%" y="415.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (10 samples, 1.14%)</title><rect x="19.5677%" y="389" width="1.1377%" height="15" fill="rgb(224,95,51)"/><text x="19.8177%" y="399.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (3 samples, 0.34%)</title><rect x="20.3641%" y="373" width="0.3413%" height="15" fill="rgb(212,188,45)"/><text x="20.6141%" y="383.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (2 samples, 0.23%)</title><rect x="20.4778%" y="357" width="0.2275%" height="15" fill="rgb(223,154,38)"/><text x="20.7278%" y="367.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek::{{closure}} (1 samples, 0.11%)</title><rect x="20.5916%" y="341" width="0.1138%" height="15" fill="rgb(251,22,52)"/><text x="20.8416%" y="351.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="20.5916%" y="325" width="0.1138%" height="15" fill="rgb(229,209,22)"/><text x="20.8416%" y="335.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="20.5916%" y="309" width="0.1138%" height="15" fill="rgb(234,138,34)"/><text x="20.8416%" y="319.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (2 samples, 0.23%)</title><rect x="22.8669%" y="357" width="0.2275%" height="15" fill="rgb(212,95,11)"/><text x="23.1169%" y="367.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (17 samples, 1.93%)</title><rect x="23.0944%" y="357" width="1.9340%" height="15" fill="rgb(240,179,47)"/><text x="23.3444%" y="367.50">&lt;..</text></g><g><title>&lt;broccoli::query::colfind::QueryFn&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (8 samples, 0.91%)</title><rect x="24.1183%" y="341" width="0.9101%" height="15" fill="rgb(240,163,11)"/><text x="24.3683%" y="351.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut_par::{{closure}} (8 samples, 0.91%)</title><rect x="24.1183%" y="325" width="0.9101%" height="15" fill="rgb(236,37,12)"/><text x="24.3683%" y="335.50"></text></g><g><title>data_gen::colfind::float_vs_integer::handle_bench::{{closure}}::{{closure}} (8 samples, 0.91%)</title><rect x="24.1183%" y="309" width="0.9101%" height="15" fill="rgb(232,164,16)"/><text x="24.3683%" y="319.50"></text></g><g><title>broccoli::query::colfind::oned::find_2d (41 samples, 4.66%)</title><rect x="20.7053%" y="421" width="4.6644%" height="15" fill="rgb(244,205,15)"/><text x="20.9553%" y="431.50">brocc..</text></g><g><title>broccoli::query::colfind::oned::find (41 samples, 4.66%)</title><rect x="20.7053%" y="405" width="4.6644%" height="15" fill="rgb(223,117,47)"/><text x="20.9553%" y="415.50">brocc..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (41 samples, 4.66%)</title><rect x="20.7053%" y="389" width="4.6644%" height="15" fill="rgb(244,107,35)"/><text x="20.9553%" y="399.50">&lt;allo..</text></g><g><title>broccoli::query::colfind::oned::find::{{closure}} (26 samples, 2.96%)</title><rect x="22.4118%" y="373" width="2.9579%" height="15" fill="rgb(205,140,8)"/><text x="22.6618%" y="383.50">bro..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (3 samples, 0.34%)</title><rect x="25.0284%" y="357" width="0.3413%" height="15" fill="rgb(228,84,46)"/><text x="25.2784%" y="367.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::push_first (1 samples, 0.11%)</title><rect x="25.3697%" y="389" width="0.1138%" height="15" fill="rgb(254,188,9)"/><text x="25.6197%" y="399.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::push_second (2 samples, 0.23%)</title><rect x="25.4835%" y="389" width="0.2275%" height="15" fill="rgb(206,112,54)"/><text x="25.7335%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (2 samples, 0.23%)</title><rect x="25.4835%" y="373" width="0.2275%" height="15" fill="rgb(216,84,49)"/><text x="25.7335%" y="383.50"></text></g><g><title>core::ptr::write (2 samples, 0.23%)</title><rect x="25.4835%" y="357" width="0.2275%" height="15" fill="rgb(214,194,35)"/><text x="25.7335%" y="367.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (2 samples, 0.23%)</title><rect x="25.8248%" y="373" width="0.2275%" height="15" fill="rgb(249,28,3)"/><text x="26.0748%" y="383.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.11%)</title><rect x="25.9386%" y="357" width="0.1138%" height="15" fill="rgb(222,56,52)"/><text x="26.1886%" y="367.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::retain_first_mut_unordered (4 samples, 0.46%)</title><rect x="25.7110%" y="389" width="0.4551%" height="15" fill="rgb(245,217,50)"/><text x="25.9610%" y="399.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.11%)</title><rect x="26.0523%" y="373" width="0.1138%" height="15" fill="rgb(213,201,24)"/><text x="26.3023%" y="383.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.11%)</title><rect x="26.0523%" y="357" width="0.1138%" height="15" fill="rgb(248,116,28)"/><text x="26.3023%" y="367.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (3 samples, 0.34%)</title><rect x="26.3936%" y="357" width="0.3413%" height="15" fill="rgb(219,72,43)"/><text x="26.6436%" y="367.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::retain_second_mut_unordered (6 samples, 0.68%)</title><rect x="26.1661%" y="389" width="0.6826%" height="15" fill="rgb(209,138,14)"/><text x="26.4161%" y="399.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (5 samples, 0.57%)</title><rect x="26.2799%" y="373" width="0.5688%" height="15" fill="rgb(222,18,33)"/><text x="26.5299%" y="383.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.11%)</title><rect x="26.7349%" y="357" width="0.1138%" height="15" fill="rgb(213,199,7)"/><text x="26.9849%" y="367.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (15 samples, 1.71%)</title><rect x="25.3697%" y="421" width="1.7065%" height="15" fill="rgb(250,110,10)"/><text x="25.6197%" y="431.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (15 samples, 1.71%)</title><rect x="25.3697%" y="405" width="1.7065%" height="15" fill="rgb(248,123,6)"/><text x="25.6197%" y="415.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (2 samples, 0.23%)</title><rect x="26.8487%" y="389" width="0.2275%" height="15" fill="rgb(206,91,31)"/><text x="27.0987%" y="399.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (2 samples, 0.23%)</title><rect x="26.8487%" y="373" width="0.2275%" height="15" fill="rgb(211,154,13)"/><text x="27.0987%" y="383.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek::{{closure}} (2 samples, 0.23%)</title><rect x="26.8487%" y="357" width="0.2275%" height="15" fill="rgb(225,148,7)"/><text x="27.0987%" y="367.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.23%)</title><rect x="26.8487%" y="341" width="0.2275%" height="15" fill="rgb(220,160,43)"/><text x="27.0987%" y="351.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.23%)</title><rect x="26.8487%" y="325" width="0.2275%" height="15" fill="rgb(213,52,39)"/><text x="27.0987%" y="335.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::push_second (8 samples, 0.91%)</title><rect x="27.5313%" y="389" width="0.9101%" height="15" fill="rgb(243,137,7)"/><text x="27.7813%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (8 samples, 0.91%)</title><rect x="27.5313%" y="373" width="0.9101%" height="15" fill="rgb(230,79,13)"/><text x="27.7813%" y="383.50"></text></g><g><title>core::ptr::write (2 samples, 0.23%)</title><rect x="28.2139%" y="357" width="0.2275%" height="15" fill="rgb(247,105,23)"/><text x="28.4639%" y="367.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (2 samples, 0.23%)</title><rect x="28.6689%" y="373" width="0.2275%" height="15" fill="rgb(223,179,41)"/><text x="28.9189%" y="383.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.11%)</title><rect x="28.7827%" y="357" width="0.1138%" height="15" fill="rgb(218,9,34)"/><text x="29.0327%" y="367.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::get_first_mut (1 samples, 0.11%)</title><rect x="28.8965%" y="373" width="0.1138%" height="15" fill="rgb(222,106,8)"/><text x="29.1465%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1 samples, 0.11%)</title><rect x="28.8965%" y="357" width="0.1138%" height="15" fill="rgb(211,220,0)"/><text x="29.1465%" y="367.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1 samples, 0.11%)</title><rect x="28.8965%" y="341" width="0.1138%" height="15" fill="rgb(229,52,16)"/><text x="29.1465%" y="351.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.11%)</title><rect x="28.8965%" y="325" width="0.1138%" height="15" fill="rgb(212,155,18)"/><text x="29.1465%" y="335.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.11%)</title><rect x="28.8965%" y="309" width="0.1138%" height="15" fill="rgb(242,21,14)"/><text x="29.1465%" y="319.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::truncate_first (1 samples, 0.11%)</title><rect x="29.0102%" y="373" width="0.1138%" height="15" fill="rgb(222,19,48)"/><text x="29.2602%" y="383.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.11%)</title><rect x="29.0102%" y="357" width="0.1138%" height="15" fill="rgb(232,45,27)"/><text x="29.2602%" y="367.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::retain_first_mut_unordered (7 samples, 0.80%)</title><rect x="28.4414%" y="389" width="0.7964%" height="15" fill="rgb(249,103,42)"/><text x="28.6914%" y="399.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.11%)</title><rect x="29.1240%" y="373" width="0.1138%" height="15" fill="rgb(246,81,33)"/><text x="29.3740%" y="383.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (1 samples, 0.11%)</title><rect x="29.8066%" y="357" width="0.1138%" height="15" fill="rgb(252,33,42)"/><text x="30.0566%" y="367.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (5 samples, 0.57%)</title><rect x="29.5791%" y="373" width="0.5688%" height="15" fill="rgb(209,212,41)"/><text x="29.8291%" y="383.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (2 samples, 0.23%)</title><rect x="29.9204%" y="357" width="0.2275%" height="15" fill="rgb(207,154,6)"/><text x="30.1704%" y="367.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (2 samples, 0.23%)</title><rect x="29.9204%" y="341" width="0.2275%" height="15" fill="rgb(223,64,47)"/><text x="30.1704%" y="351.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (2 samples, 0.23%)</title><rect x="29.9204%" y="325" width="0.2275%" height="15" fill="rgb(211,161,38)"/><text x="30.1704%" y="335.50"></text></g><g><title>data_gen::main::{{closure}}::{{closure}} (2 samples, 0.23%)</title><rect x="29.9204%" y="309" width="0.2275%" height="15" fill="rgb(219,138,40)"/><text x="30.1704%" y="319.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::get_second_mut (1 samples, 0.11%)</title><rect x="30.1479%" y="373" width="0.1138%" height="15" fill="rgb(241,228,46)"/><text x="30.3979%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1 samples, 0.11%)</title><rect x="30.1479%" y="357" width="0.1138%" height="15" fill="rgb(223,209,38)"/><text x="30.3979%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.11%)</title><rect x="30.1479%" y="341" width="0.1138%" height="15" fill="rgb(236,164,45)"/><text x="30.3979%" y="351.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::truncate_second (1 samples, 0.11%)</title><rect x="30.2617%" y="373" width="0.1138%" height="15" fill="rgb(231,15,5)"/><text x="30.5117%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::truncate (1 samples, 0.11%)</title><rect x="30.2617%" y="357" width="0.1138%" height="15" fill="rgb(252,35,15)"/><text x="30.5117%" y="367.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.23%)</title><rect x="30.3754%" y="373" width="0.2275%" height="15" fill="rgb(248,181,18)"/><text x="30.6254%" y="383.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::retain_second_mut_unordered (13 samples, 1.48%)</title><rect x="29.2378%" y="389" width="1.4790%" height="15" fill="rgb(233,39,42)"/><text x="29.4878%" y="399.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.11%)</title><rect x="30.6030%" y="373" width="0.1138%" height="15" fill="rgb(238,110,33)"/><text x="30.8530%" y="383.50"></text></g><g><title>core::ptr::swap (1 samples, 0.11%)</title><rect x="30.6030%" y="357" width="0.1138%" height="15" fill="rgb(233,195,10)"/><text x="30.8530%" y="367.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.11%)</title><rect x="30.6030%" y="341" width="0.1138%" height="15" fill="rgb(254,105,3)"/><text x="30.8530%" y="351.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::lt (2 samples, 0.23%)</title><rect x="30.7167%" y="389" width="0.2275%" height="15" fill="rgb(221,225,9)"/><text x="30.9667%" y="399.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (7 samples, 0.80%)</title><rect x="30.9443%" y="389" width="0.7964%" height="15" fill="rgb(224,227,45)"/><text x="31.1943%" y="399.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (7 samples, 0.80%)</title><rect x="30.9443%" y="373" width="0.7964%" height="15" fill="rgb(229,198,43)"/><text x="31.1943%" y="383.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek::{{closure}} (4 samples, 0.46%)</title><rect x="31.2856%" y="357" width="0.4551%" height="15" fill="rgb(206,209,35)"/><text x="31.5356%" y="367.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.46%)</title><rect x="31.2856%" y="341" width="0.4551%" height="15" fill="rgb(245,195,53)"/><text x="31.5356%" y="351.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.46%)</title><rect x="31.2856%" y="325" width="0.4551%" height="15" fill="rgb(240,92,26)"/><text x="31.5356%" y="335.50"></text></g><g><title>broccoli::query::colfind::inner::ColFindRecurser&lt;T,K,S&gt;::recurse_seq (225 samples, 25.60%)</title><rect x="6.2571%" y="437" width="25.5973%" height="15" fill="rgb(207,40,23)"/><text x="6.5071%" y="447.50">broccoli::query::colfind::inner::ColFindR..</text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (42 samples, 4.78%)</title><rect x="27.0762%" y="421" width="4.7782%" height="15" fill="rgb(223,111,35)"/><text x="27.3262%" y="431.50">brocco..</text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (41 samples, 4.66%)</title><rect x="27.1900%" y="405" width="4.6644%" height="15" fill="rgb(229,147,28)"/><text x="27.4400%" y="415.50">brocc..</text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.11%)</title><rect x="31.7406%" y="389" width="0.1138%" height="15" fill="rgb(211,29,28)"/><text x="31.9906%" y="399.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::retain_first_mut_unordered (1 samples, 0.11%)</title><rect x="31.8544%" y="373" width="0.1138%" height="15" fill="rgb(228,72,33)"/><text x="32.1044%" y="383.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (1 samples, 0.11%)</title><rect x="31.8544%" y="357" width="0.1138%" height="15" fill="rgb(205,214,31)"/><text x="32.1044%" y="367.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (1 samples, 0.11%)</title><rect x="32.1957%" y="341" width="0.1138%" height="15" fill="rgb(224,111,15)"/><text x="32.4457%" y="351.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::retain_second_mut_unordered (5 samples, 0.57%)</title><rect x="31.9681%" y="373" width="0.5688%" height="15" fill="rgb(253,21,26)"/><text x="32.2181%" y="383.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (3 samples, 0.34%)</title><rect x="32.1957%" y="357" width="0.3413%" height="15" fill="rgb(245,139,43)"/><text x="32.4457%" y="367.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (2 samples, 0.23%)</title><rect x="32.3094%" y="341" width="0.2275%" height="15" fill="rgb(252,170,7)"/><text x="32.5594%" y="351.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.11%)</title><rect x="32.4232%" y="325" width="0.1138%" height="15" fill="rgb(231,118,14)"/><text x="32.6732%" y="335.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (1 samples, 0.11%)</title><rect x="32.4232%" y="309" width="0.1138%" height="15" fill="rgb(238,83,0)"/><text x="32.6732%" y="319.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.11%)</title><rect x="32.4232%" y="293" width="0.1138%" height="15" fill="rgb(221,39,39)"/><text x="32.6732%" y="303.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (7 samples, 0.80%)</title><rect x="31.8544%" y="405" width="0.7964%" height="15" fill="rgb(222,119,46)"/><text x="32.1044%" y="415.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (7 samples, 0.80%)</title><rect x="31.8544%" y="389" width="0.7964%" height="15" fill="rgb(222,165,49)"/><text x="32.1044%" y="399.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.11%)</title><rect x="32.5370%" y="373" width="0.1138%" height="15" fill="rgb(219,113,52)"/><text x="32.7870%" y="383.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (10 samples, 1.14%)</title><rect x="31.8544%" y="421" width="1.1377%" height="15" fill="rgb(214,7,15)"/><text x="32.1044%" y="431.50"></text></g><g><title>broccoli::query::colfind::oned::get_section_mut (3 samples, 0.34%)</title><rect x="32.6507%" y="405" width="0.3413%" height="15" fill="rgb(235,32,4)"/><text x="32.9007%" y="415.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (1 samples, 0.11%)</title><rect x="32.9920%" y="389" width="0.1138%" height="15" fill="rgb(238,90,54)"/><text x="33.2420%" y="399.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (1 samples, 0.11%)</title><rect x="32.9920%" y="373" width="0.1138%" height="15" fill="rgb(213,208,19)"/><text x="33.2420%" y="383.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::retain_first_mut_unordered (1 samples, 0.11%)</title><rect x="32.9920%" y="357" width="0.1138%" height="15" fill="rgb(233,156,4)"/><text x="33.2420%" y="367.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (2 samples, 0.23%)</title><rect x="32.9920%" y="405" width="0.2275%" height="15" fill="rgb(207,194,5)"/><text x="33.2420%" y="415.50"></text></g><g><title>broccoli::query::colfind::oned::get_section_mut (1 samples, 0.11%)</title><rect x="33.1058%" y="389" width="0.1138%" height="15" fill="rgb(206,111,30)"/><text x="33.3558%" y="399.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (1 samples, 0.11%)</title><rect x="33.2196%" y="405" width="0.1138%" height="15" fill="rgb(243,70,54)"/><text x="33.4696%" y="415.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (1 samples, 0.11%)</title><rect x="33.2196%" y="389" width="0.1138%" height="15" fill="rgb(242,28,8)"/><text x="33.4696%" y="399.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (1 samples, 0.11%)</title><rect x="33.2196%" y="373" width="0.1138%" height="15" fill="rgb(219,106,18)"/><text x="33.4696%" y="383.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::push_second (1 samples, 0.11%)</title><rect x="33.2196%" y="357" width="0.1138%" height="15" fill="rgb(244,222,10)"/><text x="33.4696%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.11%)</title><rect x="33.2196%" y="341" width="0.1138%" height="15" fill="rgb(236,179,52)"/><text x="33.4696%" y="351.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (2 samples, 0.23%)</title><rect x="33.3333%" y="405" width="0.2275%" height="15" fill="rgb(213,23,39)"/><text x="33.5833%" y="415.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (2 samples, 0.23%)</title><rect x="33.3333%" y="389" width="0.2275%" height="15" fill="rgb(238,48,10)"/><text x="33.5833%" y="399.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::retain_second_mut_unordered (2 samples, 0.23%)</title><rect x="33.3333%" y="373" width="0.2275%" height="15" fill="rgb(251,196,23)"/><text x="33.5833%" y="383.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (1 samples, 0.11%)</title><rect x="33.4471%" y="357" width="0.1138%" height="15" fill="rgb(250,152,24)"/><text x="33.6971%" y="367.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (6 samples, 0.68%)</title><rect x="32.9920%" y="421" width="0.6826%" height="15" fill="rgb(209,150,17)"/><text x="33.2420%" y="431.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (1 samples, 0.11%)</title><rect x="33.5609%" y="405" width="0.1138%" height="15" fill="rgb(234,202,34)"/><text x="33.8109%" y="415.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (1 samples, 0.11%)</title><rect x="33.5609%" y="389" width="0.1138%" height="15" fill="rgb(253,148,53)"/><text x="33.8109%" y="399.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::push_second (1 samples, 0.11%)</title><rect x="33.5609%" y="373" width="0.1138%" height="15" fill="rgb(218,129,16)"/><text x="33.8109%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.11%)</title><rect x="33.5609%" y="357" width="0.1138%" height="15" fill="rgb(216,85,19)"/><text x="33.8109%" y="367.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (2 samples, 0.23%)</title><rect x="33.6746%" y="373" width="0.2275%" height="15" fill="rgb(235,228,7)"/><text x="33.9246%" y="383.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.11%)</title><rect x="33.7884%" y="357" width="0.1138%" height="15" fill="rgb(245,175,0)"/><text x="34.0384%" y="367.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFn&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.11%)</title><rect x="33.7884%" y="341" width="0.1138%" height="15" fill="rgb(208,168,36)"/><text x="34.0384%" y="351.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut_par::{{closure}} (1 samples, 0.11%)</title><rect x="33.7884%" y="325" width="0.1138%" height="15" fill="rgb(246,171,24)"/><text x="34.0384%" y="335.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.11%)</title><rect x="33.7884%" y="309" width="0.1138%" height="15" fill="rgb(215,142,24)"/><text x="34.0384%" y="319.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::retain_first_mut_unordered (3 samples, 0.34%)</title><rect x="33.6746%" y="389" width="0.3413%" height="15" fill="rgb(250,187,7)"/><text x="33.9246%" y="399.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.11%)</title><rect x="33.9022%" y="373" width="0.1138%" height="15" fill="rgb(228,66,33)"/><text x="34.1522%" y="383.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.11%)</title><rect x="33.9022%" y="357" width="0.1138%" height="15" fill="rgb(234,215,21)"/><text x="34.1522%" y="367.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (2 samples, 0.23%)</title><rect x="34.0159%" y="357" width="0.2275%" height="15" fill="rgb(222,191,20)"/><text x="34.2659%" y="367.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (7 samples, 0.80%)</title><rect x="33.6746%" y="421" width="0.7964%" height="15" fill="rgb(245,79,54)"/><text x="33.9246%" y="431.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (7 samples, 0.80%)</title><rect x="33.6746%" y="405" width="0.7964%" height="15" fill="rgb(240,10,37)"/><text x="33.9246%" y="415.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::retain_second_mut_unordered (4 samples, 0.46%)</title><rect x="34.0159%" y="389" width="0.4551%" height="15" fill="rgb(214,192,32)"/><text x="34.2659%" y="399.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (4 samples, 0.46%)</title><rect x="34.0159%" y="373" width="0.4551%" height="15" fill="rgb(209,36,54)"/><text x="34.2659%" y="383.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (2 samples, 0.23%)</title><rect x="34.2435%" y="357" width="0.2275%" height="15" fill="rgb(220,10,11)"/><text x="34.4935%" y="367.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::push_second (2 samples, 0.23%)</title><rect x="34.6985%" y="389" width="0.2275%" height="15" fill="rgb(221,106,17)"/><text x="34.9485%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (2 samples, 0.23%)</title><rect x="34.6985%" y="373" width="0.2275%" height="15" fill="rgb(251,142,44)"/><text x="34.9485%" y="383.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::retain_first_mut_unordered (3 samples, 0.34%)</title><rect x="34.9261%" y="389" width="0.3413%" height="15" fill="rgb(238,13,15)"/><text x="35.1761%" y="399.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::get_first_mut (1 samples, 0.11%)</title><rect x="35.1536%" y="373" width="0.1138%" height="15" fill="rgb(208,107,27)"/><text x="35.4036%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1 samples, 0.11%)</title><rect x="35.1536%" y="357" width="0.1138%" height="15" fill="rgb(205,136,37)"/><text x="35.4036%" y="367.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1 samples, 0.11%)</title><rect x="35.1536%" y="341" width="0.1138%" height="15" fill="rgb(250,205,27)"/><text x="35.4036%" y="351.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.11%)</title><rect x="35.1536%" y="325" width="0.1138%" height="15" fill="rgb(210,80,43)"/><text x="35.4036%" y="335.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.11%)</title><rect x="35.1536%" y="309" width="0.1138%" height="15" fill="rgb(247,160,36)"/><text x="35.4036%" y="319.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::retain_second_mut_unordered (2 samples, 0.23%)</title><rect x="35.2673%" y="389" width="0.2275%" height="15" fill="rgb(234,13,49)"/><text x="35.5173%" y="399.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (2 samples, 0.23%)</title><rect x="35.2673%" y="373" width="0.2275%" height="15" fill="rgb(234,122,0)"/><text x="35.5173%" y="383.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (1 samples, 0.11%)</title><rect x="35.3811%" y="357" width="0.1138%" height="15" fill="rgb(207,146,38)"/><text x="35.6311%" y="367.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (3 samples, 0.34%)</title><rect x="35.4949%" y="389" width="0.3413%" height="15" fill="rgb(207,177,25)"/><text x="35.7449%" y="399.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (3 samples, 0.34%)</title><rect x="35.4949%" y="373" width="0.3413%" height="15" fill="rgb(211,178,42)"/><text x="35.7449%" y="383.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek::{{closure}} (3 samples, 0.34%)</title><rect x="35.4949%" y="357" width="0.3413%" height="15" fill="rgb(230,69,54)"/><text x="35.7449%" y="367.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.34%)</title><rect x="35.4949%" y="341" width="0.3413%" height="15" fill="rgb(214,135,41)"/><text x="35.7449%" y="351.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.34%)</title><rect x="35.4949%" y="325" width="0.3413%" height="15" fill="rgb(237,67,25)"/><text x="35.7449%" y="335.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (37 samples, 4.21%)</title><rect x="31.8544%" y="437" width="4.2093%" height="15" fill="rgb(222,189,50)"/><text x="32.1044%" y="447.50">brocc..</text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (14 samples, 1.59%)</title><rect x="34.4710%" y="421" width="1.5927%" height="15" fill="rgb(245,148,34)"/><text x="34.7210%" y="431.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (14 samples, 1.59%)</title><rect x="34.4710%" y="405" width="1.5927%" height="15" fill="rgb(222,29,6)"/><text x="34.7210%" y="415.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (2 samples, 0.23%)</title><rect x="35.8362%" y="389" width="0.2275%" height="15" fill="rgb(221,189,43)"/><text x="36.0862%" y="399.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (2 samples, 0.23%)</title><rect x="38.9078%" y="373" width="0.2275%" height="15" fill="rgb(207,36,27)"/><text x="39.1578%" y="383.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (21 samples, 2.39%)</title><rect x="39.1354%" y="373" width="2.3891%" height="15" fill="rgb(217,90,24)"/><text x="39.3854%" y="383.50">&lt;b..</text></g><g><title>&lt;broccoli::query::colfind::QueryFn&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (12 samples, 1.37%)</title><rect x="40.1593%" y="357" width="1.3652%" height="15" fill="rgb(224,66,35)"/><text x="40.4093%" y="367.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut_par::{{closure}} (12 samples, 1.37%)</title><rect x="40.1593%" y="341" width="1.3652%" height="15" fill="rgb(221,13,50)"/><text x="40.4093%" y="351.50"></text></g><g><title>data_gen::colfind::float_vs_integer::handle_bench::{{closure}}::{{closure}} (12 samples, 1.37%)</title><rect x="40.1593%" y="325" width="1.3652%" height="15" fill="rgb(236,68,49)"/><text x="40.4093%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (50 samples, 5.69%)</title><rect x="36.0637%" y="405" width="5.6883%" height="15" fill="rgb(229,146,28)"/><text x="36.3137%" y="415.50">&lt;alloc:..</text></g><g><title>broccoli::query::colfind::oned::find::{{closure}} (29 samples, 3.30%)</title><rect x="38.4528%" y="389" width="3.2992%" height="15" fill="rgb(225,31,38)"/><text x="38.7028%" y="399.50">bro..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (2 samples, 0.23%)</title><rect x="41.5245%" y="373" width="0.2275%" height="15" fill="rgb(250,208,3)"/><text x="41.7745%" y="383.50"></text></g><g><title>broccoli::query::colfind::oned::find_2d (52 samples, 5.92%)</title><rect x="36.0637%" y="437" width="5.9158%" height="15" fill="rgb(246,54,23)"/><text x="36.3137%" y="447.50">broccoli..</text></g><g><title>broccoli::query::colfind::oned::find (52 samples, 5.92%)</title><rect x="36.0637%" y="421" width="5.9158%" height="15" fill="rgb(243,76,11)"/><text x="36.3137%" y="431.50">broccoli..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (2 samples, 0.23%)</title><rect x="41.7520%" y="405" width="0.2275%" height="15" fill="rgb(245,21,50)"/><text x="42.0020%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.11%)</title><rect x="41.9795%" y="389" width="0.1138%" height="15" fill="rgb(228,9,43)"/><text x="42.2295%" y="399.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::push_first (2 samples, 0.23%)</title><rect x="41.9795%" y="405" width="0.2275%" height="15" fill="rgb(208,100,47)"/><text x="42.2295%" y="415.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.11%)</title><rect x="42.0933%" y="389" width="0.1138%" height="15" fill="rgb(232,26,8)"/><text x="42.3433%" y="399.50"></text></g><g><title>core::ptr::swap (1 samples, 0.11%)</title><rect x="42.0933%" y="373" width="0.1138%" height="15" fill="rgb(216,166,38)"/><text x="42.3433%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.11%)</title><rect x="42.0933%" y="357" width="0.1138%" height="15" fill="rgb(251,202,51)"/><text x="42.3433%" y="367.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::push_second (1 samples, 0.11%)</title><rect x="42.2071%" y="405" width="0.1138%" height="15" fill="rgb(254,216,34)"/><text x="42.4571%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.11%)</title><rect x="42.2071%" y="389" width="0.1138%" height="15" fill="rgb(251,32,27)"/><text x="42.4571%" y="399.50"></text></g><g><title>core::ptr::write (1 samples, 0.11%)</title><rect x="42.2071%" y="373" width="0.1138%" height="15" fill="rgb(208,127,28)"/><text x="42.4571%" y="383.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (1 samples, 0.11%)</title><rect x="42.6621%" y="373" width="0.1138%" height="15" fill="rgb(224,137,22)"/><text x="42.9121%" y="383.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (4 samples, 0.46%)</title><rect x="42.6621%" y="389" width="0.4551%" height="15" fill="rgb(254,70,32)"/><text x="42.9121%" y="399.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (3 samples, 0.34%)</title><rect x="42.7759%" y="373" width="0.3413%" height="15" fill="rgb(229,75,37)"/><text x="43.0259%" y="383.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::truncate_first (1 samples, 0.11%)</title><rect x="43.1172%" y="389" width="0.1138%" height="15" fill="rgb(252,64,23)"/><text x="43.3672%" y="399.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.11%)</title><rect x="43.2309%" y="389" width="0.1138%" height="15" fill="rgb(232,162,48)"/><text x="43.4809%" y="399.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::retain_first_mut_unordered (10 samples, 1.14%)</title><rect x="42.3208%" y="405" width="1.1377%" height="15" fill="rgb(246,160,12)"/><text x="42.5708%" y="415.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.11%)</title><rect x="43.3447%" y="389" width="0.1138%" height="15" fill="rgb(247,166,0)"/><text x="43.5947%" y="399.50"></text></g><g><title>core::ptr::swap (1 samples, 0.11%)</title><rect x="43.3447%" y="373" width="0.1138%" height="15" fill="rgb(249,219,21)"/><text x="43.5947%" y="383.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.11%)</title><rect x="43.3447%" y="357" width="0.1138%" height="15" fill="rgb(205,209,3)"/><text x="43.5947%" y="367.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.11%)</title><rect x="43.6860%" y="373" width="0.1138%" height="15" fill="rgb(243,44,1)"/><text x="43.9360%" y="383.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (17 samples, 1.93%)</title><rect x="41.9795%" y="437" width="1.9340%" height="15" fill="rgb(206,159,16)"/><text x="42.2295%" y="447.50">b..</text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (17 samples, 1.93%)</title><rect x="41.9795%" y="421" width="1.9340%" height="15" fill="rgb(244,77,30)"/><text x="42.2295%" y="431.50">b..</text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::retain_second_mut_unordered (4 samples, 0.46%)</title><rect x="43.4585%" y="405" width="0.4551%" height="15" fill="rgb(218,69,12)"/><text x="43.7085%" y="415.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (3 samples, 0.34%)</title><rect x="43.5722%" y="389" width="0.3413%" height="15" fill="rgb(212,87,7)"/><text x="43.8222%" y="399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.11%)</title><rect x="43.7998%" y="373" width="0.1138%" height="15" fill="rgb(245,114,25)"/><text x="44.0498%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.11%)</title><rect x="44.3686%" y="389" width="0.1138%" height="15" fill="rgb(210,61,42)"/><text x="44.6186%" y="399.50"></text></g><g><title>core::ptr::write (1 samples, 0.11%)</title><rect x="44.3686%" y="373" width="0.1138%" height="15" fill="rgb(211,52,33)"/><text x="44.6186%" y="383.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::push_first (2 samples, 0.23%)</title><rect x="44.3686%" y="405" width="0.2275%" height="15" fill="rgb(234,58,33)"/><text x="44.6186%" y="415.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.11%)</title><rect x="44.4824%" y="389" width="0.1138%" height="15" fill="rgb(220,115,36)"/><text x="44.7324%" y="399.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::push_second (10 samples, 1.14%)</title><rect x="44.5961%" y="405" width="1.1377%" height="15" fill="rgb(243,153,54)"/><text x="44.8461%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (10 samples, 1.14%)</title><rect x="44.5961%" y="389" width="1.1377%" height="15" fill="rgb(251,47,18)"/><text x="44.8461%" y="399.50"></text></g><g><title>core::ptr::write (2 samples, 0.23%)</title><rect x="45.5063%" y="373" width="0.2275%" height="15" fill="rgb(242,102,42)"/><text x="45.7563%" y="383.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (1 samples, 0.11%)</title><rect x="46.3026%" y="373" width="0.1138%" height="15" fill="rgb(234,31,38)"/><text x="46.5526%" y="383.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (5 samples, 0.57%)</title><rect x="45.9613%" y="389" width="0.5688%" height="15" fill="rgb(221,117,51)"/><text x="46.2113%" y="399.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.11%)</title><rect x="46.4164%" y="373" width="0.1138%" height="15" fill="rgb(212,20,18)"/><text x="46.6664%" y="383.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.11%)</title><rect x="46.4164%" y="357" width="0.1138%" height="15" fill="rgb(245,133,36)"/><text x="46.6664%" y="367.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (1 samples, 0.11%)</title><rect x="46.4164%" y="341" width="0.1138%" height="15" fill="rgb(212,6,19)"/><text x="46.6664%" y="351.50"></text></g><g><title>data_gen::main::{{closure}}::{{closure}} (1 samples, 0.11%)</title><rect x="46.4164%" y="325" width="0.1138%" height="15" fill="rgb(218,1,36)"/><text x="46.6664%" y="335.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::get_first_mut (2 samples, 0.23%)</title><rect x="46.5301%" y="389" width="0.2275%" height="15" fill="rgb(246,84,54)"/><text x="46.7801%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (2 samples, 0.23%)</title><rect x="46.5301%" y="373" width="0.2275%" height="15" fill="rgb(242,110,6)"/><text x="46.7801%" y="383.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (2 samples, 0.23%)</title><rect x="46.5301%" y="357" width="0.2275%" height="15" fill="rgb(214,47,5)"/><text x="46.7801%" y="367.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (2 samples, 0.23%)</title><rect x="46.5301%" y="341" width="0.2275%" height="15" fill="rgb(218,159,25)"/><text x="46.7801%" y="351.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (2 samples, 0.23%)</title><rect x="46.5301%" y="325" width="0.2275%" height="15" fill="rgb(215,211,28)"/><text x="46.7801%" y="335.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.11%)</title><rect x="46.7577%" y="389" width="0.1138%" height="15" fill="rgb(238,59,32)"/><text x="47.0077%" y="399.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::retain_first_mut_unordered (11 samples, 1.25%)</title><rect x="45.7338%" y="405" width="1.2514%" height="15" fill="rgb(226,82,3)"/><text x="45.9838%" y="415.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.11%)</title><rect x="46.8714%" y="389" width="0.1138%" height="15" fill="rgb(240,164,32)"/><text x="47.1214%" y="399.50"></text></g><g><title>core::ptr::swap (1 samples, 0.11%)</title><rect x="46.8714%" y="373" width="0.1138%" height="15" fill="rgb(232,46,7)"/><text x="47.1214%" y="383.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.11%)</title><rect x="46.8714%" y="357" width="0.1138%" height="15" fill="rgb(229,129,53)"/><text x="47.1214%" y="367.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (1 samples, 0.11%)</title><rect x="47.6678%" y="373" width="0.1138%" height="15" fill="rgb(234,188,29)"/><text x="47.9178%" y="383.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.11%)</title><rect x="47.7816%" y="373" width="0.1138%" height="15" fill="rgb(246,141,4)"/><text x="48.0316%" y="383.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.11%)</title><rect x="47.7816%" y="357" width="0.1138%" height="15" fill="rgb(229,23,39)"/><text x="48.0316%" y="367.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (1 samples, 0.11%)</title><rect x="47.7816%" y="341" width="0.1138%" height="15" fill="rgb(206,12,3)"/><text x="48.0316%" y="351.50"></text></g><g><title>data_gen::main::{{closure}}::{{closure}} (1 samples, 0.11%)</title><rect x="47.7816%" y="325" width="0.1138%" height="15" fill="rgb(252,226,20)"/><text x="48.0316%" y="335.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (8 samples, 0.91%)</title><rect x="47.3265%" y="389" width="0.9101%" height="15" fill="rgb(216,123,35)"/><text x="47.5765%" y="399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (3 samples, 0.34%)</title><rect x="47.8953%" y="373" width="0.3413%" height="15" fill="rgb(212,68,40)"/><text x="48.1453%" y="383.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::retain_second_mut_unordered (12 samples, 1.37%)</title><rect x="46.9852%" y="405" width="1.3652%" height="15" fill="rgb(254,125,32)"/><text x="47.2352%" y="415.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.11%)</title><rect x="48.2366%" y="389" width="0.1138%" height="15" fill="rgb(253,97,22)"/><text x="48.4866%" y="399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::lt (4 samples, 0.46%)</title><rect x="48.3504%" y="405" width="0.4551%" height="15" fill="rgb(241,101,14)"/><text x="48.6004%" y="415.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (9 samples, 1.02%)</title><rect x="48.8055%" y="405" width="1.0239%" height="15" fill="rgb(238,103,29)"/><text x="49.0555%" y="415.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (9 samples, 1.02%)</title><rect x="48.8055%" y="389" width="1.0239%" height="15" fill="rgb(233,195,47)"/><text x="49.0555%" y="399.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek::{{closure}} (5 samples, 0.57%)</title><rect x="49.2605%" y="373" width="0.5688%" height="15" fill="rgb(246,218,30)"/><text x="49.5105%" y="383.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.57%)</title><rect x="49.2605%" y="357" width="0.5688%" height="15" fill="rgb(219,145,47)"/><text x="49.5105%" y="367.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.57%)</title><rect x="49.2605%" y="341" width="0.5688%" height="15" fill="rgb(243,12,26)"/><text x="49.5105%" y="351.50"></text></g><g><title>broccoli::query::colfind::inner::ColFindRecurser&lt;T,K,S&gt;::recurse_seq (390 samples, 44.37%)</title><rect x="5.8020%" y="453" width="44.3686%" height="15" fill="rgb(214,87,16)"/><text x="6.0520%" y="463.50">broccoli::query::colfind::inner::ColFindRecurser&lt;T,K,S&gt;::recurse_seq</text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (55 samples, 6.26%)</title><rect x="43.9135%" y="437" width="6.2571%" height="15" fill="rgb(208,99,42)"/><text x="44.1635%" y="447.50">broccoli..</text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (54 samples, 6.14%)</title><rect x="44.0273%" y="421" width="6.1433%" height="15" fill="rgb(253,99,2)"/><text x="44.2773%" y="431.50">broccoli..</text></g><g><title>core::option::Option&lt;T&gt;::unwrap (3 samples, 0.34%)</title><rect x="49.8294%" y="405" width="0.3413%" height="15" fill="rgb(220,168,23)"/><text x="50.0794%" y="415.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::push_second (1 samples, 0.11%)</title><rect x="50.2844%" y="389" width="0.1138%" height="15" fill="rgb(242,38,24)"/><text x="50.5344%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.11%)</title><rect x="50.2844%" y="373" width="0.1138%" height="15" fill="rgb(225,182,9)"/><text x="50.5344%" y="383.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (2 samples, 0.23%)</title><rect x="50.2844%" y="421" width="0.2275%" height="15" fill="rgb(243,178,37)"/><text x="50.5344%" y="431.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (2 samples, 0.23%)</title><rect x="50.2844%" y="405" width="0.2275%" height="15" fill="rgb(232,139,19)"/><text x="50.5344%" y="415.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::retain_second_mut_unordered (1 samples, 0.11%)</title><rect x="50.3982%" y="389" width="0.1138%" height="15" fill="rgb(225,201,24)"/><text x="50.6482%" y="399.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (1 samples, 0.11%)</title><rect x="50.3982%" y="373" width="0.1138%" height="15" fill="rgb(221,47,46)"/><text x="50.6482%" y="383.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.11%)</title><rect x="50.3982%" y="357" width="0.1138%" height="15" fill="rgb(249,23,13)"/><text x="50.6482%" y="367.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.11%)</title><rect x="50.3982%" y="341" width="0.1138%" height="15" fill="rgb(219,9,5)"/><text x="50.6482%" y="351.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (1 samples, 0.11%)</title><rect x="50.3982%" y="325" width="0.1138%" height="15" fill="rgb(254,171,16)"/><text x="50.6482%" y="335.50"></text></g><g><title>data_gen::main::{{closure}}::{{closure}} (1 samples, 0.11%)</title><rect x="50.3982%" y="309" width="0.1138%" height="15" fill="rgb(230,171,20)"/><text x="50.6482%" y="319.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (3 samples, 0.34%)</title><rect x="50.2844%" y="437" width="0.3413%" height="15" fill="rgb(210,71,41)"/><text x="50.5344%" y="447.50"></text></g><g><title>broccoli::query::colfind::oned::get_section_mut (1 samples, 0.11%)</title><rect x="50.5119%" y="421" width="0.1138%" height="15" fill="rgb(206,173,20)"/><text x="50.7619%" y="431.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (1 samples, 0.11%)</title><rect x="50.6257%" y="405" width="0.1138%" height="15" fill="rgb(233,88,34)"/><text x="50.8757%" y="415.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (1 samples, 0.11%)</title><rect x="50.6257%" y="389" width="0.1138%" height="15" fill="rgb(223,209,46)"/><text x="50.8757%" y="399.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (1 samples, 0.11%)</title><rect x="50.6257%" y="373" width="0.1138%" height="15" fill="rgb(250,43,18)"/><text x="50.8757%" y="383.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (1 samples, 0.11%)</title><rect x="50.6257%" y="357" width="0.1138%" height="15" fill="rgb(208,13,10)"/><text x="50.8757%" y="367.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (4 samples, 0.46%)</title><rect x="50.6257%" y="421" width="0.4551%" height="15" fill="rgb(212,200,36)"/><text x="50.8757%" y="431.50"></text></g><g><title>broccoli::query::colfind::oned::get_section_mut (3 samples, 0.34%)</title><rect x="50.7395%" y="405" width="0.3413%" height="15" fill="rgb(225,90,30)"/><text x="50.9895%" y="415.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (1 samples, 0.11%)</title><rect x="51.0808%" y="421" width="0.1138%" height="15" fill="rgb(236,182,39)"/><text x="51.3308%" y="431.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (1 samples, 0.11%)</title><rect x="51.0808%" y="405" width="0.1138%" height="15" fill="rgb(212,144,35)"/><text x="51.3308%" y="415.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (1 samples, 0.11%)</title><rect x="51.0808%" y="389" width="0.1138%" height="15" fill="rgb(228,63,44)"/><text x="51.3308%" y="399.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::retain_second_mut_unordered (1 samples, 0.11%)</title><rect x="51.0808%" y="373" width="0.1138%" height="15" fill="rgb(228,109,6)"/><text x="51.3308%" y="383.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (1 samples, 0.11%)</title><rect x="51.0808%" y="357" width="0.1138%" height="15" fill="rgb(238,117,24)"/><text x="51.3308%" y="367.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.11%)</title><rect x="51.0808%" y="341" width="0.1138%" height="15" fill="rgb(242,26,26)"/><text x="51.3308%" y="351.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.11%)</title><rect x="51.0808%" y="325" width="0.1138%" height="15" fill="rgb(221,92,48)"/><text x="51.3308%" y="335.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (1 samples, 0.11%)</title><rect x="51.0808%" y="309" width="0.1138%" height="15" fill="rgb(209,209,32)"/><text x="51.3308%" y="319.50"></text></g><g><title>data_gen::main::{{closure}}::{{closure}} (1 samples, 0.11%)</title><rect x="51.0808%" y="293" width="0.1138%" height="15" fill="rgb(221,70,22)"/><text x="51.3308%" y="303.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::retain_first_mut_unordered (1 samples, 0.11%)</title><rect x="51.1945%" y="389" width="0.1138%" height="15" fill="rgb(248,145,5)"/><text x="51.4445%" y="399.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (1 samples, 0.11%)</title><rect x="51.1945%" y="373" width="0.1138%" height="15" fill="rgb(226,116,26)"/><text x="51.4445%" y="383.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.11%)</title><rect x="51.1945%" y="357" width="0.1138%" height="15" fill="rgb(244,5,17)"/><text x="51.4445%" y="367.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFn&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.11%)</title><rect x="51.1945%" y="341" width="0.1138%" height="15" fill="rgb(252,159,33)"/><text x="51.4445%" y="351.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut_par::{{closure}} (1 samples, 0.11%)</title><rect x="51.1945%" y="325" width="0.1138%" height="15" fill="rgb(206,71,0)"/><text x="51.4445%" y="335.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.11%)</title><rect x="51.1945%" y="309" width="0.1138%" height="15" fill="rgb(233,118,54)"/><text x="51.4445%" y="319.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (3 samples, 0.34%)</title><rect x="51.1945%" y="421" width="0.3413%" height="15" fill="rgb(234,83,48)"/><text x="51.4445%" y="431.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (3 samples, 0.34%)</title><rect x="51.1945%" y="405" width="0.3413%" height="15" fill="rgb(228,3,54)"/><text x="51.4445%" y="415.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::retain_second_mut_unordered (2 samples, 0.23%)</title><rect x="51.3083%" y="389" width="0.2275%" height="15" fill="rgb(226,155,13)"/><text x="51.5583%" y="399.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (2 samples, 0.23%)</title><rect x="51.3083%" y="373" width="0.2275%" height="15" fill="rgb(241,28,37)"/><text x="51.5583%" y="383.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (2 samples, 0.23%)</title><rect x="51.3083%" y="357" width="0.2275%" height="15" fill="rgb(233,93,10)"/><text x="51.5583%" y="367.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::retain_first_mut_unordered (2 samples, 0.23%)</title><rect x="51.6496%" y="389" width="0.2275%" height="15" fill="rgb(225,113,19)"/><text x="51.8996%" y="399.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (1 samples, 0.11%)</title><rect x="51.7634%" y="373" width="0.1138%" height="15" fill="rgb(241,2,18)"/><text x="52.0134%" y="383.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (12 samples, 1.37%)</title><rect x="50.6257%" y="437" width="1.3652%" height="15" fill="rgb(228,207,21)"/><text x="50.8757%" y="447.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (4 samples, 0.46%)</title><rect x="51.5358%" y="421" width="0.4551%" height="15" fill="rgb(213,211,35)"/><text x="51.7858%" y="431.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (3 samples, 0.34%)</title><rect x="51.6496%" y="405" width="0.3413%" height="15" fill="rgb(209,83,10)"/><text x="51.8996%" y="415.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (1 samples, 0.11%)</title><rect x="51.8771%" y="389" width="0.1138%" height="15" fill="rgb(209,164,1)"/><text x="52.1271%" y="399.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (1 samples, 0.11%)</title><rect x="51.8771%" y="373" width="0.1138%" height="15" fill="rgb(213,184,43)"/><text x="52.1271%" y="383.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::push_first (1 samples, 0.11%)</title><rect x="51.9909%" y="405" width="0.1138%" height="15" fill="rgb(231,61,34)"/><text x="52.2409%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.11%)</title><rect x="51.9909%" y="389" width="0.1138%" height="15" fill="rgb(235,75,3)"/><text x="52.2409%" y="399.50"></text></g><g><title>core::ptr::write (1 samples, 0.11%)</title><rect x="51.9909%" y="373" width="0.1138%" height="15" fill="rgb(220,106,47)"/><text x="52.2409%" y="383.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::push_second (1 samples, 0.11%)</title><rect x="52.1047%" y="405" width="0.1138%" height="15" fill="rgb(210,196,33)"/><text x="52.3547%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.11%)</title><rect x="52.1047%" y="389" width="0.1138%" height="15" fill="rgb(229,154,42)"/><text x="52.3547%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::as_mut_ptr (1 samples, 0.11%)</title><rect x="52.1047%" y="373" width="0.1138%" height="15" fill="rgb(228,114,26)"/><text x="52.3547%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.11%)</title><rect x="52.1047%" y="357" width="0.1138%" height="15" fill="rgb(208,144,1)"/><text x="52.3547%" y="367.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::retain_first_mut_unordered (7 samples, 0.80%)</title><rect x="52.2184%" y="405" width="0.7964%" height="15" fill="rgb(239,112,37)"/><text x="52.4684%" y="415.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (7 samples, 0.80%)</title><rect x="52.2184%" y="389" width="0.7964%" height="15" fill="rgb(210,96,50)"/><text x="52.4684%" y="399.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (6 samples, 0.68%)</title><rect x="52.3322%" y="373" width="0.6826%" height="15" fill="rgb(222,178,2)"/><text x="52.5822%" y="383.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFn&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (3 samples, 0.34%)</title><rect x="52.6735%" y="357" width="0.3413%" height="15" fill="rgb(226,74,18)"/><text x="52.9235%" y="367.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut_par::{{closure}} (3 samples, 0.34%)</title><rect x="52.6735%" y="341" width="0.3413%" height="15" fill="rgb(225,67,54)"/><text x="52.9235%" y="351.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (3 samples, 0.34%)</title><rect x="52.6735%" y="325" width="0.3413%" height="15" fill="rgb(251,92,32)"/><text x="52.9235%" y="335.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (4 samples, 0.46%)</title><rect x="53.1286%" y="389" width="0.4551%" height="15" fill="rgb(228,149,22)"/><text x="53.3786%" y="399.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.11%)</title><rect x="53.4699%" y="373" width="0.1138%" height="15" fill="rgb(243,54,13)"/><text x="53.7199%" y="383.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::retain_second_mut_unordered (6 samples, 0.68%)</title><rect x="53.0148%" y="405" width="0.6826%" height="15" fill="rgb(243,180,28)"/><text x="53.2648%" y="415.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::truncate_second (1 samples, 0.11%)</title><rect x="53.5836%" y="389" width="0.1138%" height="15" fill="rgb(208,167,24)"/><text x="53.8336%" y="399.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (16 samples, 1.82%)</title><rect x="51.9909%" y="437" width="1.8203%" height="15" fill="rgb(245,73,45)"/><text x="52.2409%" y="447.50">b..</text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (16 samples, 1.82%)</title><rect x="51.9909%" y="421" width="1.8203%" height="15" fill="rgb(237,203,48)"/><text x="52.2409%" y="431.50">b..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::lt (1 samples, 0.11%)</title><rect x="53.6974%" y="405" width="0.1138%" height="15" fill="rgb(211,197,16)"/><text x="53.9474%" y="415.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::push_first (1 samples, 0.11%)</title><rect x="53.8111%" y="405" width="0.1138%" height="15" fill="rgb(243,99,51)"/><text x="54.0611%" y="415.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.11%)</title><rect x="53.8111%" y="389" width="0.1138%" height="15" fill="rgb(215,123,29)"/><text x="54.0611%" y="399.50"></text></g><g><title>core::ptr::swap (1 samples, 0.11%)</title><rect x="53.8111%" y="373" width="0.1138%" height="15" fill="rgb(239,186,37)"/><text x="54.0611%" y="383.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.11%)</title><rect x="53.8111%" y="357" width="0.1138%" height="15" fill="rgb(252,136,39)"/><text x="54.0611%" y="367.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::push_second (5 samples, 0.57%)</title><rect x="53.9249%" y="405" width="0.5688%" height="15" fill="rgb(223,213,32)"/><text x="54.1749%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (5 samples, 0.57%)</title><rect x="53.9249%" y="389" width="0.5688%" height="15" fill="rgb(233,115,5)"/><text x="54.1749%" y="399.50"></text></g><g><title>core::ptr::write (1 samples, 0.11%)</title><rect x="54.3800%" y="373" width="0.1138%" height="15" fill="rgb(207,226,44)"/><text x="54.6300%" y="383.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (1 samples, 0.11%)</title><rect x="54.6075%" y="373" width="0.1138%" height="15" fill="rgb(208,126,0)"/><text x="54.8575%" y="383.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (3 samples, 0.34%)</title><rect x="54.6075%" y="389" width="0.3413%" height="15" fill="rgb(244,66,21)"/><text x="54.8575%" y="399.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (2 samples, 0.23%)</title><rect x="54.7213%" y="373" width="0.2275%" height="15" fill="rgb(222,97,12)"/><text x="54.9713%" y="383.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.11%)</title><rect x="54.8350%" y="357" width="0.1138%" height="15" fill="rgb(219,213,19)"/><text x="55.0850%" y="367.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (1 samples, 0.11%)</title><rect x="54.8350%" y="341" width="0.1138%" height="15" fill="rgb(252,169,30)"/><text x="55.0850%" y="351.50"></text></g><g><title>data_gen::main::{{closure}}::{{closure}} (1 samples, 0.11%)</title><rect x="54.8350%" y="325" width="0.1138%" height="15" fill="rgb(206,32,51)"/><text x="55.0850%" y="335.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::retain_first_mut_unordered (5 samples, 0.57%)</title><rect x="54.4937%" y="405" width="0.5688%" height="15" fill="rgb(250,172,42)"/><text x="54.7437%" y="415.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.11%)</title><rect x="54.9488%" y="389" width="0.1138%" height="15" fill="rgb(209,34,43)"/><text x="55.1988%" y="399.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (2 samples, 0.23%)</title><rect x="55.2901%" y="373" width="0.2275%" height="15" fill="rgb(223,11,35)"/><text x="55.5401%" y="383.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.11%)</title><rect x="55.4039%" y="357" width="0.1138%" height="15" fill="rgb(251,219,26)"/><text x="55.6539%" y="367.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (1 samples, 0.11%)</title><rect x="55.4039%" y="341" width="0.1138%" height="15" fill="rgb(231,119,3)"/><text x="55.6539%" y="351.50"></text></g><g><title>data_gen::main::{{closure}}::{{closure}} (1 samples, 0.11%)</title><rect x="55.4039%" y="325" width="0.1138%" height="15" fill="rgb(216,97,11)"/><text x="55.6539%" y="335.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::retain_second_mut_unordered (6 samples, 0.68%)</title><rect x="55.0626%" y="405" width="0.6826%" height="15" fill="rgb(223,59,9)"/><text x="55.3126%" y="415.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (6 samples, 0.68%)</title><rect x="55.0626%" y="389" width="0.6826%" height="15" fill="rgb(233,93,31)"/><text x="55.3126%" y="399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (2 samples, 0.23%)</title><rect x="55.5176%" y="373" width="0.2275%" height="15" fill="rgb(239,81,33)"/><text x="55.7676%" y="383.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (52 samples, 5.92%)</title><rect x="50.1706%" y="453" width="5.9158%" height="15" fill="rgb(213,120,34)"/><text x="50.4206%" y="463.50">broccoli..</text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (20 samples, 2.28%)</title><rect x="53.8111%" y="437" width="2.2753%" height="15" fill="rgb(243,49,53)"/><text x="54.0611%" y="447.50">b..</text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (20 samples, 2.28%)</title><rect x="53.8111%" y="421" width="2.2753%" height="15" fill="rgb(247,216,33)"/><text x="54.0611%" y="431.50">b..</text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (3 samples, 0.34%)</title><rect x="55.7452%" y="405" width="0.3413%" height="15" fill="rgb(226,26,14)"/><text x="55.9952%" y="415.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (3 samples, 0.34%)</title><rect x="55.7452%" y="389" width="0.3413%" height="15" fill="rgb(215,49,53)"/><text x="55.9952%" y="399.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek::{{closure}} (2 samples, 0.23%)</title><rect x="55.8589%" y="373" width="0.2275%" height="15" fill="rgb(245,162,40)"/><text x="56.1089%" y="383.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.23%)</title><rect x="55.8589%" y="357" width="0.2275%" height="15" fill="rgb(229,68,17)"/><text x="56.1089%" y="367.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.23%)</title><rect x="55.8589%" y="341" width="0.2275%" height="15" fill="rgb(213,182,10)"/><text x="56.1089%" y="351.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (4 samples, 0.46%)</title><rect x="57.5654%" y="389" width="0.4551%" height="15" fill="rgb(245,125,30)"/><text x="57.8154%" y="399.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (11 samples, 1.25%)</title><rect x="58.0205%" y="389" width="1.2514%" height="15" fill="rgb(232,202,2)"/><text x="58.2705%" y="399.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFn&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (6 samples, 0.68%)</title><rect x="58.5893%" y="373" width="0.6826%" height="15" fill="rgb(237,140,51)"/><text x="58.8393%" y="383.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut_par::{{closure}} (6 samples, 0.68%)</title><rect x="58.5893%" y="357" width="0.6826%" height="15" fill="rgb(236,157,25)"/><text x="58.8393%" y="367.50"></text></g><g><title>data_gen::colfind::float_vs_integer::handle_bench::{{closure}}::{{closure}} (6 samples, 0.68%)</title><rect x="58.5893%" y="341" width="0.6826%" height="15" fill="rgb(219,209,0)"/><text x="58.8393%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (34 samples, 3.87%)</title><rect x="56.0865%" y="421" width="3.8680%" height="15" fill="rgb(240,116,54)"/><text x="56.3365%" y="431.50">&lt;all..</text></g><g><title>broccoli::query::colfind::oned::find::{{closure}} (25 samples, 2.84%)</title><rect x="57.1104%" y="405" width="2.8441%" height="15" fill="rgb(216,10,36)"/><text x="57.3604%" y="415.50">br..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (6 samples, 0.68%)</title><rect x="59.2719%" y="389" width="0.6826%" height="15" fill="rgb(222,72,44)"/><text x="59.5219%" y="399.50"></text></g><g><title>broccoli::query::colfind::oned::find_2d (36 samples, 4.10%)</title><rect x="56.0865%" y="453" width="4.0956%" height="15" fill="rgb(232,159,9)"/><text x="56.3365%" y="463.50">broc..</text></g><g><title>broccoli::query::colfind::oned::find (36 samples, 4.10%)</title><rect x="56.0865%" y="437" width="4.0956%" height="15" fill="rgb(210,39,32)"/><text x="56.3365%" y="447.50">broc..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (2 samples, 0.23%)</title><rect x="59.9545%" y="421" width="0.2275%" height="15" fill="rgb(216,194,45)"/><text x="60.2045%" y="431.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::push_first (1 samples, 0.11%)</title><rect x="60.4096%" y="421" width="0.1138%" height="15" fill="rgb(218,18,35)"/><text x="60.6596%" y="431.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (1 samples, 0.11%)</title><rect x="60.9784%" y="389" width="0.1138%" height="15" fill="rgb(207,83,51)"/><text x="61.2284%" y="399.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::retain_first_mut_unordered (8 samples, 0.91%)</title><rect x="60.5233%" y="421" width="0.9101%" height="15" fill="rgb(225,63,43)"/><text x="60.7733%" y="431.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (7 samples, 0.80%)</title><rect x="60.6371%" y="405" width="0.7964%" height="15" fill="rgb(207,57,36)"/><text x="60.8871%" y="415.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (3 samples, 0.34%)</title><rect x="61.0922%" y="389" width="0.3413%" height="15" fill="rgb(216,99,33)"/><text x="61.3422%" y="399.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFn&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.11%)</title><rect x="61.3197%" y="373" width="0.1138%" height="15" fill="rgb(225,42,16)"/><text x="61.5697%" y="383.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut_par::{{closure}} (1 samples, 0.11%)</title><rect x="61.3197%" y="357" width="0.1138%" height="15" fill="rgb(220,201,45)"/><text x="61.5697%" y="367.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.11%)</title><rect x="61.3197%" y="341" width="0.1138%" height="15" fill="rgb(225,33,4)"/><text x="61.5697%" y="351.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (1 samples, 0.11%)</title><rect x="61.5472%" y="389" width="0.1138%" height="15" fill="rgb(224,33,50)"/><text x="61.7972%" y="399.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (3 samples, 0.34%)</title><rect x="61.5472%" y="405" width="0.3413%" height="15" fill="rgb(246,198,51)"/><text x="61.7972%" y="415.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (2 samples, 0.23%)</title><rect x="61.6610%" y="389" width="0.2275%" height="15" fill="rgb(205,22,4)"/><text x="61.9110%" y="399.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFn&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.11%)</title><rect x="61.7747%" y="373" width="0.1138%" height="15" fill="rgb(206,3,8)"/><text x="62.0247%" y="383.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut_par::{{closure}} (1 samples, 0.11%)</title><rect x="61.7747%" y="357" width="0.1138%" height="15" fill="rgb(251,23,15)"/><text x="62.0247%" y="367.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.11%)</title><rect x="61.7747%" y="341" width="0.1138%" height="15" fill="rgb(252,88,28)"/><text x="62.0247%" y="351.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::retain_second_mut_unordered (6 samples, 0.68%)</title><rect x="61.4334%" y="421" width="0.6826%" height="15" fill="rgb(212,127,14)"/><text x="61.6834%" y="431.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (2 samples, 0.23%)</title><rect x="61.8885%" y="405" width="0.2275%" height="15" fill="rgb(247,145,37)"/><text x="62.1385%" y="415.50"></text></g><g><title>core::ptr::swap (2 samples, 0.23%)</title><rect x="61.8885%" y="389" width="0.2275%" height="15" fill="rgb(209,117,53)"/><text x="62.1385%" y="399.50"></text></g><g><title>core::intrinsics::copy (2 samples, 0.23%)</title><rect x="61.8885%" y="373" width="0.2275%" height="15" fill="rgb(212,90,42)"/><text x="62.1385%" y="383.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (1 samples, 0.11%)</title><rect x="62.1160%" y="421" width="0.1138%" height="15" fill="rgb(218,164,37)"/><text x="62.3660%" y="431.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (1 samples, 0.11%)</title><rect x="62.1160%" y="405" width="0.1138%" height="15" fill="rgb(246,65,34)"/><text x="62.3660%" y="415.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek::{{closure}} (1 samples, 0.11%)</title><rect x="62.1160%" y="389" width="0.1138%" height="15" fill="rgb(231,100,33)"/><text x="62.3660%" y="399.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="62.1160%" y="373" width="0.1138%" height="15" fill="rgb(228,126,14)"/><text x="62.3660%" y="383.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="62.1160%" y="357" width="0.1138%" height="15" fill="rgb(215,173,21)"/><text x="62.3660%" y="367.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (19 samples, 2.16%)</title><rect x="60.1820%" y="453" width="2.1615%" height="15" fill="rgb(210,6,40)"/><text x="60.4320%" y="463.50">b..</text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (19 samples, 2.16%)</title><rect x="60.1820%" y="437" width="2.1615%" height="15" fill="rgb(212,48,18)"/><text x="60.4320%" y="447.50">b..</text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.11%)</title><rect x="62.2298%" y="421" width="0.1138%" height="15" fill="rgb(230,214,11)"/><text x="62.4798%" y="431.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::push_first (3 samples, 0.34%)</title><rect x="62.4573%" y="421" width="0.3413%" height="15" fill="rgb(254,105,39)"/><text x="62.7073%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (3 samples, 0.34%)</title><rect x="62.4573%" y="405" width="0.3413%" height="15" fill="rgb(245,158,5)"/><text x="62.7073%" y="415.50"></text></g><g><title>core::ptr::write (1 samples, 0.11%)</title><rect x="62.6849%" y="389" width="0.1138%" height="15" fill="rgb(249,208,11)"/><text x="62.9349%" y="399.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (2 samples, 0.23%)</title><rect x="62.9124%" y="389" width="0.2275%" height="15" fill="rgb(210,39,28)"/><text x="63.1624%" y="399.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (2 samples, 0.23%)</title><rect x="62.9124%" y="373" width="0.2275%" height="15" fill="rgb(211,56,53)"/><text x="63.1624%" y="383.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (2 samples, 0.23%)</title><rect x="62.9124%" y="357" width="0.2275%" height="15" fill="rgb(226,201,30)"/><text x="63.1624%" y="367.50"></text></g><g><title>data_gen::main::{{closure}}::{{closure}} (2 samples, 0.23%)</title><rect x="62.9124%" y="341" width="0.2275%" height="15" fill="rgb(239,101,34)"/><text x="63.1624%" y="351.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (3 samples, 0.34%)</title><rect x="62.9124%" y="405" width="0.3413%" height="15" fill="rgb(226,209,5)"/><text x="63.1624%" y="415.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.11%)</title><rect x="63.1399%" y="389" width="0.1138%" height="15" fill="rgb(250,105,47)"/><text x="63.3899%" y="399.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::retain_first_mut_unordered (6 samples, 0.68%)</title><rect x="62.7986%" y="421" width="0.6826%" height="15" fill="rgb(230,72,3)"/><text x="63.0486%" y="431.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::get_first_mut (2 samples, 0.23%)</title><rect x="63.2537%" y="405" width="0.2275%" height="15" fill="rgb(232,218,39)"/><text x="63.5037%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (2 samples, 0.23%)</title><rect x="63.2537%" y="389" width="0.2275%" height="15" fill="rgb(248,166,6)"/><text x="63.5037%" y="399.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (2 samples, 0.23%)</title><rect x="63.2537%" y="373" width="0.2275%" height="15" fill="rgb(247,89,20)"/><text x="63.5037%" y="383.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (2 samples, 0.23%)</title><rect x="63.2537%" y="357" width="0.2275%" height="15" fill="rgb(248,130,54)"/><text x="63.5037%" y="367.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (2 samples, 0.23%)</title><rect x="63.2537%" y="341" width="0.2275%" height="15" fill="rgb(234,196,4)"/><text x="63.5037%" y="351.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (2 samples, 0.23%)</title><rect x="63.8225%" y="373" width="0.2275%" height="15" fill="rgb(250,143,31)"/><text x="64.0725%" y="383.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (2 samples, 0.23%)</title><rect x="63.8225%" y="357" width="0.2275%" height="15" fill="rgb(211,110,34)"/><text x="64.0725%" y="367.50"></text></g><g><title>data_gen::main::{{closure}}::{{closure}} (2 samples, 0.23%)</title><rect x="63.8225%" y="341" width="0.2275%" height="15" fill="rgb(215,124,48)"/><text x="64.0725%" y="351.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::retain_second_mut_unordered (6 samples, 0.68%)</title><rect x="63.4812%" y="421" width="0.6826%" height="15" fill="rgb(216,46,13)"/><text x="63.7312%" y="431.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (5 samples, 0.57%)</title><rect x="63.5950%" y="405" width="0.5688%" height="15" fill="rgb(205,184,25)"/><text x="63.8450%" y="415.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (3 samples, 0.34%)</title><rect x="63.8225%" y="389" width="0.3413%" height="15" fill="rgb(228,1,10)"/><text x="64.0725%" y="399.50"></text></g><g><title>axgeom::range::Range&lt;T&gt;::intersects (1 samples, 0.11%)</title><rect x="64.0501%" y="373" width="0.1138%" height="15" fill="rgb(213,116,27)"/><text x="64.3001%" y="383.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::le (1 samples, 0.11%)</title><rect x="64.0501%" y="357" width="0.1138%" height="15" fill="rgb(241,95,50)"/><text x="64.3001%" y="367.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (3 samples, 0.34%)</title><rect x="64.1638%" y="421" width="0.3413%" height="15" fill="rgb(238,48,32)"/><text x="64.4138%" y="431.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (3 samples, 0.34%)</title><rect x="64.1638%" y="405" width="0.3413%" height="15" fill="rgb(235,113,49)"/><text x="64.4138%" y="415.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek::{{closure}} (2 samples, 0.23%)</title><rect x="64.2776%" y="389" width="0.2275%" height="15" fill="rgb(205,127,43)"/><text x="64.5276%" y="399.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.23%)</title><rect x="64.2776%" y="373" width="0.2275%" height="15" fill="rgb(250,162,2)"/><text x="64.5276%" y="383.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.23%)</title><rect x="64.2776%" y="357" width="0.2275%" height="15" fill="rgb(220,13,41)"/><text x="64.5276%" y="367.50"></text></g><g><title>broccoli::query::colfind::inner::ColFindRecurser&lt;T,K,S&gt;::recurse_seq (525 samples, 59.73%)</title><rect x="4.8919%" y="469" width="59.7270%" height="15" fill="rgb(249,221,25)"/><text x="5.1419%" y="479.50">broccoli::query::colfind::inner::ColFindRecurser&lt;T,K,S&gt;::recurse_seq</text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (20 samples, 2.28%)</title><rect x="62.3436%" y="453" width="2.2753%" height="15" fill="rgb(215,208,19)"/><text x="62.5936%" y="463.50">b..</text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (20 samples, 2.28%)</title><rect x="62.3436%" y="437" width="2.2753%" height="15" fill="rgb(236,175,2)"/><text x="62.5936%" y="447.50">b..</text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.11%)</title><rect x="64.5051%" y="421" width="0.1138%" height="15" fill="rgb(241,52,2)"/><text x="64.7551%" y="431.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::retain_first_mut_unordered (1 samples, 0.11%)</title><rect x="64.6189%" y="405" width="0.1138%" height="15" fill="rgb(248,140,14)"/><text x="64.8689%" y="415.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (1 samples, 0.11%)</title><rect x="64.6189%" y="389" width="0.1138%" height="15" fill="rgb(253,22,42)"/><text x="64.8689%" y="399.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (2 samples, 0.23%)</title><rect x="64.6189%" y="453" width="0.2275%" height="15" fill="rgb(234,61,47)"/><text x="64.8689%" y="463.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (2 samples, 0.23%)</title><rect x="64.6189%" y="437" width="0.2275%" height="15" fill="rgb(208,226,15)"/><text x="64.8689%" y="447.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (2 samples, 0.23%)</title><rect x="64.6189%" y="421" width="0.2275%" height="15" fill="rgb(217,221,4)"/><text x="64.8689%" y="431.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (1 samples, 0.11%)</title><rect x="64.7327%" y="405" width="0.1138%" height="15" fill="rgb(212,174,34)"/><text x="64.9827%" y="415.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (1 samples, 0.11%)</title><rect x="64.7327%" y="389" width="0.1138%" height="15" fill="rgb(253,83,4)"/><text x="64.9827%" y="399.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek::{{closure}} (1 samples, 0.11%)</title><rect x="64.7327%" y="373" width="0.1138%" height="15" fill="rgb(250,195,49)"/><text x="64.9827%" y="383.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="64.7327%" y="357" width="0.1138%" height="15" fill="rgb(241,192,25)"/><text x="64.9827%" y="367.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="64.7327%" y="341" width="0.1138%" height="15" fill="rgb(208,124,10)"/><text x="64.9827%" y="351.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (3 samples, 0.34%)</title><rect x="64.8464%" y="437" width="0.3413%" height="15" fill="rgb(222,33,0)"/><text x="65.0964%" y="447.50"></text></g><g><title>broccoli::query::colfind::oned::get_section_mut (3 samples, 0.34%)</title><rect x="64.8464%" y="421" width="0.3413%" height="15" fill="rgb(234,209,28)"/><text x="65.0964%" y="431.50"></text></g><g><title>broccoli::pmut::PMut&lt;[T]&gt;::truncate_from (1 samples, 0.11%)</title><rect x="65.0739%" y="405" width="0.1138%" height="15" fill="rgb(224,11,23)"/><text x="65.3239%" y="415.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1 samples, 0.11%)</title><rect x="65.0739%" y="389" width="0.1138%" height="15" fill="rgb(232,99,1)"/><text x="65.3239%" y="399.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.11%)</title><rect x="65.0739%" y="373" width="0.1138%" height="15" fill="rgb(237,95,45)"/><text x="65.3239%" y="383.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (1 samples, 0.11%)</title><rect x="65.1877%" y="421" width="0.1138%" height="15" fill="rgb(208,109,11)"/><text x="65.4377%" y="431.50"></text></g><g><title>broccoli::query::colfind::oned::get_section_mut (1 samples, 0.11%)</title><rect x="65.1877%" y="405" width="0.1138%" height="15" fill="rgb(216,190,48)"/><text x="65.4377%" y="415.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (3 samples, 0.34%)</title><rect x="65.3015%" y="421" width="0.3413%" height="15" fill="rgb(251,171,36)"/><text x="65.5515%" y="431.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (3 samples, 0.34%)</title><rect x="65.3015%" y="405" width="0.3413%" height="15" fill="rgb(230,62,22)"/><text x="65.5515%" y="415.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::push_first (1 samples, 0.11%)</title><rect x="65.5290%" y="389" width="0.1138%" height="15" fill="rgb(225,114,35)"/><text x="65.7790%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.11%)</title><rect x="65.5290%" y="373" width="0.1138%" height="15" fill="rgb(215,118,42)"/><text x="65.7790%" y="383.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (5 samples, 0.57%)</title><rect x="65.1877%" y="437" width="0.5688%" height="15" fill="rgb(243,119,21)"/><text x="65.4377%" y="447.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (1 samples, 0.11%)</title><rect x="65.6428%" y="421" width="0.1138%" height="15" fill="rgb(252,177,53)"/><text x="65.8928%" y="431.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (1 samples, 0.11%)</title><rect x="65.6428%" y="405" width="0.1138%" height="15" fill="rgb(237,209,29)"/><text x="65.8928%" y="415.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::lt (1 samples, 0.11%)</title><rect x="65.6428%" y="389" width="0.1138%" height="15" fill="rgb(212,65,23)"/><text x="65.8928%" y="399.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::retain_first_mut_unordered (3 samples, 0.34%)</title><rect x="65.7565%" y="405" width="0.3413%" height="15" fill="rgb(230,222,46)"/><text x="66.0065%" y="415.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (2 samples, 0.23%)</title><rect x="65.8703%" y="389" width="0.2275%" height="15" fill="rgb(215,135,32)"/><text x="66.1203%" y="399.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (2 samples, 0.23%)</title><rect x="65.8703%" y="373" width="0.2275%" height="15" fill="rgb(246,101,22)"/><text x="66.1203%" y="383.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFn&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.11%)</title><rect x="65.9841%" y="357" width="0.1138%" height="15" fill="rgb(206,107,13)"/><text x="66.2341%" y="367.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut_par::{{closure}} (1 samples, 0.11%)</title><rect x="65.9841%" y="341" width="0.1138%" height="15" fill="rgb(250,100,44)"/><text x="66.2341%" y="351.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.11%)</title><rect x="65.9841%" y="325" width="0.1138%" height="15" fill="rgb(231,147,38)"/><text x="66.2341%" y="335.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (1 samples, 0.11%)</title><rect x="66.0978%" y="389" width="0.1138%" height="15" fill="rgb(229,8,40)"/><text x="66.3478%" y="399.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.11%)</title><rect x="66.0978%" y="373" width="0.1138%" height="15" fill="rgb(221,135,30)"/><text x="66.3478%" y="383.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFn&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.11%)</title><rect x="66.0978%" y="357" width="0.1138%" height="15" fill="rgb(249,193,18)"/><text x="66.3478%" y="367.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut_par::{{closure}} (1 samples, 0.11%)</title><rect x="66.0978%" y="341" width="0.1138%" height="15" fill="rgb(209,133,39)"/><text x="66.3478%" y="351.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.11%)</title><rect x="66.0978%" y="325" width="0.1138%" height="15" fill="rgb(232,100,14)"/><text x="66.3478%" y="335.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (5 samples, 0.57%)</title><rect x="65.7565%" y="437" width="0.5688%" height="15" fill="rgb(224,185,1)"/><text x="66.0065%" y="447.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (5 samples, 0.57%)</title><rect x="65.7565%" y="421" width="0.5688%" height="15" fill="rgb(223,139,8)"/><text x="66.0065%" y="431.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::retain_second_mut_unordered (2 samples, 0.23%)</title><rect x="66.0978%" y="405" width="0.2275%" height="15" fill="rgb(232,213,38)"/><text x="66.3478%" y="415.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.11%)</title><rect x="66.2116%" y="389" width="0.1138%" height="15" fill="rgb(207,94,22)"/><text x="66.4616%" y="399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.11%)</title><rect x="66.2116%" y="373" width="0.1138%" height="15" fill="rgb(219,183,54)"/><text x="66.4616%" y="383.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::push_second (1 samples, 0.11%)</title><rect x="66.3254%" y="405" width="0.1138%" height="15" fill="rgb(216,185,54)"/><text x="66.5754%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.11%)</title><rect x="66.3254%" y="389" width="0.1138%" height="15" fill="rgb(254,217,39)"/><text x="66.5754%" y="399.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::retain_first_mut_unordered (2 samples, 0.23%)</title><rect x="66.4391%" y="405" width="0.2275%" height="15" fill="rgb(240,178,23)"/><text x="66.6891%" y="415.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::get_first_mut (1 samples, 0.11%)</title><rect x="66.5529%" y="389" width="0.1138%" height="15" fill="rgb(218,11,47)"/><text x="66.8029%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1 samples, 0.11%)</title><rect x="66.5529%" y="373" width="0.1138%" height="15" fill="rgb(218,51,51)"/><text x="66.8029%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.11%)</title><rect x="66.5529%" y="357" width="0.1138%" height="15" fill="rgb(238,126,27)"/><text x="66.8029%" y="367.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::retain_second_mut_unordered (2 samples, 0.23%)</title><rect x="66.6667%" y="405" width="0.2275%" height="15" fill="rgb(249,202,22)"/><text x="66.9167%" y="415.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (1 samples, 0.11%)</title><rect x="66.7804%" y="389" width="0.1138%" height="15" fill="rgb(254,195,49)"/><text x="67.0304%" y="399.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.11%)</title><rect x="66.7804%" y="373" width="0.1138%" height="15" fill="rgb(208,123,14)"/><text x="67.0304%" y="383.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.11%)</title><rect x="66.7804%" y="357" width="0.1138%" height="15" fill="rgb(224,200,8)"/><text x="67.0304%" y="367.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (1 samples, 0.11%)</title><rect x="66.7804%" y="341" width="0.1138%" height="15" fill="rgb(217,61,36)"/><text x="67.0304%" y="351.50"></text></g><g><title>data_gen::main::{{closure}}::{{closure}} (1 samples, 0.11%)</title><rect x="66.7804%" y="325" width="0.1138%" height="15" fill="rgb(206,35,45)"/><text x="67.0304%" y="335.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (19 samples, 2.16%)</title><rect x="64.8464%" y="453" width="2.1615%" height="15" fill="rgb(217,65,33)"/><text x="65.0964%" y="463.50">b..</text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (6 samples, 0.68%)</title><rect x="66.3254%" y="437" width="0.6826%" height="15" fill="rgb(222,158,48)"/><text x="66.5754%" y="447.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (6 samples, 0.68%)</title><rect x="66.3254%" y="421" width="0.6826%" height="15" fill="rgb(254,2,54)"/><text x="66.5754%" y="431.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (1 samples, 0.11%)</title><rect x="66.8942%" y="405" width="0.1138%" height="15" fill="rgb(250,143,38)"/><text x="67.1442%" y="415.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (1 samples, 0.11%)</title><rect x="66.8942%" y="389" width="0.1138%" height="15" fill="rgb(248,25,0)"/><text x="67.1442%" y="399.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::push_first (1 samples, 0.11%)</title><rect x="67.0080%" y="421" width="0.1138%" height="15" fill="rgb(206,152,27)"/><text x="67.2580%" y="431.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::retain_first_mut_unordered (1 samples, 0.11%)</title><rect x="67.1217%" y="421" width="0.1138%" height="15" fill="rgb(240,77,30)"/><text x="67.3717%" y="431.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (1 samples, 0.11%)</title><rect x="67.1217%" y="405" width="0.1138%" height="15" fill="rgb(231,5,3)"/><text x="67.3717%" y="415.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (1 samples, 0.11%)</title><rect x="67.4630%" y="405" width="0.1138%" height="15" fill="rgb(207,226,32)"/><text x="67.7130%" y="415.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.11%)</title><rect x="67.5768%" y="405" width="0.1138%" height="15" fill="rgb(222,207,47)"/><text x="67.8268%" y="415.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (7 samples, 0.80%)</title><rect x="67.0080%" y="453" width="0.7964%" height="15" fill="rgb(229,115,45)"/><text x="67.2580%" y="463.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (7 samples, 0.80%)</title><rect x="67.0080%" y="437" width="0.7964%" height="15" fill="rgb(224,191,6)"/><text x="67.2580%" y="447.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::retain_second_mut_unordered (5 samples, 0.57%)</title><rect x="67.2355%" y="421" width="0.5688%" height="15" fill="rgb(230,227,24)"/><text x="67.4855%" y="431.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.11%)</title><rect x="67.6906%" y="405" width="0.1138%" height="15" fill="rgb(228,80,19)"/><text x="67.9406%" y="415.50"></text></g><g><title>core::ptr::swap (1 samples, 0.11%)</title><rect x="67.6906%" y="389" width="0.1138%" height="15" fill="rgb(247,229,0)"/><text x="67.9406%" y="399.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.11%)</title><rect x="67.6906%" y="373" width="0.1138%" height="15" fill="rgb(237,194,15)"/><text x="67.9406%" y="383.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::push_second (1 samples, 0.11%)</title><rect x="67.9181%" y="421" width="0.1138%" height="15" fill="rgb(219,203,20)"/><text x="68.1681%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.11%)</title><rect x="67.9181%" y="405" width="0.1138%" height="15" fill="rgb(234,128,8)"/><text x="68.1681%" y="415.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (1 samples, 0.11%)</title><rect x="68.0319%" y="405" width="0.1138%" height="15" fill="rgb(248,202,8)"/><text x="68.2819%" y="415.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.11%)</title><rect x="68.0319%" y="389" width="0.1138%" height="15" fill="rgb(206,104,37)"/><text x="68.2819%" y="399.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.11%)</title><rect x="68.0319%" y="373" width="0.1138%" height="15" fill="rgb(223,8,27)"/><text x="68.2819%" y="383.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (1 samples, 0.11%)</title><rect x="68.0319%" y="357" width="0.1138%" height="15" fill="rgb(216,217,28)"/><text x="68.2819%" y="367.50"></text></g><g><title>data_gen::main::{{closure}}::{{closure}} (1 samples, 0.11%)</title><rect x="68.0319%" y="341" width="0.1138%" height="15" fill="rgb(249,199,1)"/><text x="68.2819%" y="351.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::retain_second_mut_unordered (2 samples, 0.23%)</title><rect x="68.0319%" y="421" width="0.2275%" height="15" fill="rgb(240,85,17)"/><text x="68.2819%" y="431.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.11%)</title><rect x="68.1456%" y="405" width="0.1138%" height="15" fill="rgb(206,108,45)"/><text x="68.3956%" y="415.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.11%)</title><rect x="68.1456%" y="389" width="0.1138%" height="15" fill="rgb(245,210,41)"/><text x="68.3956%" y="399.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (34 samples, 3.87%)</title><rect x="64.6189%" y="469" width="3.8680%" height="15" fill="rgb(206,13,37)"/><text x="64.8689%" y="479.50">broc..</text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (6 samples, 0.68%)</title><rect x="67.8043%" y="453" width="0.6826%" height="15" fill="rgb(250,61,18)"/><text x="68.0543%" y="463.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (6 samples, 0.68%)</title><rect x="67.8043%" y="437" width="0.6826%" height="15" fill="rgb(235,172,48)"/><text x="68.0543%" y="447.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (2 samples, 0.23%)</title><rect x="68.2594%" y="421" width="0.2275%" height="15" fill="rgb(249,201,17)"/><text x="68.5094%" y="431.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (2 samples, 0.23%)</title><rect x="68.2594%" y="405" width="0.2275%" height="15" fill="rgb(219,208,6)"/><text x="68.5094%" y="415.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek::{{closure}} (1 samples, 0.11%)</title><rect x="68.3732%" y="389" width="0.1138%" height="15" fill="rgb(248,31,23)"/><text x="68.6232%" y="399.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="68.3732%" y="373" width="0.1138%" height="15" fill="rgb(245,15,42)"/><text x="68.6232%" y="383.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="68.3732%" y="357" width="0.1138%" height="15" fill="rgb(222,217,39)"/><text x="68.6232%" y="367.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (1 samples, 0.11%)</title><rect x="69.6246%" y="405" width="0.1138%" height="15" fill="rgb(210,219,27)"/><text x="69.8746%" y="415.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (4 samples, 0.46%)</title><rect x="69.7383%" y="405" width="0.4551%" height="15" fill="rgb(252,166,36)"/><text x="69.9883%" y="415.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFn&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (3 samples, 0.34%)</title><rect x="69.8521%" y="389" width="0.3413%" height="15" fill="rgb(245,132,34)"/><text x="70.1021%" y="399.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut_par::{{closure}} (3 samples, 0.34%)</title><rect x="69.8521%" y="373" width="0.3413%" height="15" fill="rgb(236,54,3)"/><text x="70.1021%" y="383.50"></text></g><g><title>data_gen::colfind::float_vs_integer::handle_bench::{{closure}}::{{closure}} (3 samples, 0.34%)</title><rect x="69.8521%" y="357" width="0.3413%" height="15" fill="rgb(241,173,43)"/><text x="70.1021%" y="367.50"></text></g><g><title>broccoli::query::colfind::oned::find_2d (18 samples, 2.05%)</title><rect x="68.4869%" y="469" width="2.0478%" height="15" fill="rgb(215,190,9)"/><text x="68.7369%" y="479.50">b..</text></g><g><title>broccoli::query::colfind::oned::find (18 samples, 2.05%)</title><rect x="68.4869%" y="453" width="2.0478%" height="15" fill="rgb(242,101,16)"/><text x="68.7369%" y="463.50">b..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (18 samples, 2.05%)</title><rect x="68.4869%" y="437" width="2.0478%" height="15" fill="rgb(223,190,21)"/><text x="68.7369%" y="447.50">&lt;..</text></g><g><title>broccoli::query::colfind::oned::find::{{closure}} (12 samples, 1.37%)</title><rect x="69.1695%" y="421" width="1.3652%" height="15" fill="rgb(215,228,25)"/><text x="69.4195%" y="431.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (3 samples, 0.34%)</title><rect x="70.1934%" y="405" width="0.3413%" height="15" fill="rgb(225,36,22)"/><text x="70.4434%" y="415.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::retain_first_mut_unordered (1 samples, 0.11%)</title><rect x="70.5347%" y="437" width="0.1138%" height="15" fill="rgb(251,106,46)"/><text x="70.7847%" y="447.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (1 samples, 0.11%)</title><rect x="70.5347%" y="421" width="0.1138%" height="15" fill="rgb(208,90,1)"/><text x="70.7847%" y="431.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.11%)</title><rect x="70.5347%" y="405" width="0.1138%" height="15" fill="rgb(243,10,4)"/><text x="70.7847%" y="415.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (3 samples, 0.34%)</title><rect x="70.5347%" y="469" width="0.3413%" height="15" fill="rgb(212,137,27)"/><text x="70.7847%" y="479.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (3 samples, 0.34%)</title><rect x="70.5347%" y="453" width="0.3413%" height="15" fill="rgb(231,220,49)"/><text x="70.7847%" y="463.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::retain_second_mut_unordered (2 samples, 0.23%)</title><rect x="70.6485%" y="437" width="0.2275%" height="15" fill="rgb(237,96,20)"/><text x="70.8985%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.11%)</title><rect x="70.8760%" y="421" width="0.1138%" height="15" fill="rgb(239,229,30)"/><text x="71.1260%" y="431.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::push_first (2 samples, 0.23%)</title><rect x="70.8760%" y="437" width="0.2275%" height="15" fill="rgb(219,65,33)"/><text x="71.1260%" y="447.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.11%)</title><rect x="70.9898%" y="421" width="0.1138%" height="15" fill="rgb(243,134,7)"/><text x="71.2398%" y="431.50"></text></g><g><title>core::ptr::swap (1 samples, 0.11%)</title><rect x="70.9898%" y="405" width="0.1138%" height="15" fill="rgb(216,177,54)"/><text x="71.2398%" y="415.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.11%)</title><rect x="70.9898%" y="389" width="0.1138%" height="15" fill="rgb(211,160,20)"/><text x="71.2398%" y="399.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::push_second (1 samples, 0.11%)</title><rect x="71.1035%" y="437" width="0.1138%" height="15" fill="rgb(239,85,39)"/><text x="71.3535%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.11%)</title><rect x="71.1035%" y="421" width="0.1138%" height="15" fill="rgb(232,125,22)"/><text x="71.3535%" y="431.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::retain_first_mut_unordered (3 samples, 0.34%)</title><rect x="71.2173%" y="437" width="0.3413%" height="15" fill="rgb(244,57,34)"/><text x="71.4673%" y="447.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (2 samples, 0.23%)</title><rect x="71.3311%" y="421" width="0.2275%" height="15" fill="rgb(214,203,32)"/><text x="71.5811%" y="431.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (2 samples, 0.23%)</title><rect x="71.3311%" y="405" width="0.2275%" height="15" fill="rgb(207,58,43)"/><text x="71.5811%" y="415.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (1 samples, 0.11%)</title><rect x="71.6724%" y="405" width="0.1138%" height="15" fill="rgb(215,193,15)"/><text x="71.9224%" y="415.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::retain_second_mut_unordered (3 samples, 0.34%)</title><rect x="71.5586%" y="437" width="0.3413%" height="15" fill="rgb(232,15,44)"/><text x="71.8086%" y="447.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (2 samples, 0.23%)</title><rect x="71.6724%" y="421" width="0.2275%" height="15" fill="rgb(212,3,48)"/><text x="71.9224%" y="431.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.11%)</title><rect x="71.7861%" y="405" width="0.1138%" height="15" fill="rgb(218,128,7)"/><text x="72.0361%" y="415.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::lt (1 samples, 0.11%)</title><rect x="71.8999%" y="437" width="0.1138%" height="15" fill="rgb(226,216,39)"/><text x="72.1499%" y="447.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (1 samples, 0.11%)</title><rect x="72.0137%" y="437" width="0.1138%" height="15" fill="rgb(243,47,51)"/><text x="72.2637%" y="447.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (1 samples, 0.11%)</title><rect x="72.0137%" y="421" width="0.1138%" height="15" fill="rgb(241,183,40)"/><text x="72.2637%" y="431.50"></text></g><g><title>broccoli::query::colfind::inner::ColFindRecurser&lt;T,K,S&gt;::recurse_seq (602 samples, 68.49%)</title><rect x="3.7543%" y="485" width="68.4869%" height="15" fill="rgb(231,217,32)"/><text x="4.0043%" y="495.50">broccoli::query::colfind::inner::ColFindRecurser&lt;T,K,S&gt;::recurse_seq</text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (12 samples, 1.37%)</title><rect x="70.8760%" y="469" width="1.3652%" height="15" fill="rgb(229,61,38)"/><text x="71.1260%" y="479.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (12 samples, 1.37%)</title><rect x="70.8760%" y="453" width="1.3652%" height="15" fill="rgb(225,210,5)"/><text x="71.1260%" y="463.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.11%)</title><rect x="72.1274%" y="437" width="0.1138%" height="15" fill="rgb(231,79,45)"/><text x="72.3774%" y="447.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (2 samples, 0.23%)</title><rect x="72.2412%" y="453" width="0.2275%" height="15" fill="rgb(224,100,7)"/><text x="72.4912%" y="463.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (2 samples, 0.23%)</title><rect x="72.2412%" y="437" width="0.2275%" height="15" fill="rgb(241,198,18)"/><text x="72.4912%" y="447.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::retain_second_mut_unordered (2 samples, 0.23%)</title><rect x="72.2412%" y="421" width="0.2275%" height="15" fill="rgb(252,97,53)"/><text x="72.4912%" y="431.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (1 samples, 0.11%)</title><rect x="72.3549%" y="405" width="0.1138%" height="15" fill="rgb(220,88,7)"/><text x="72.6049%" y="415.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (1 samples, 0.11%)</title><rect x="72.3549%" y="389" width="0.1138%" height="15" fill="rgb(213,176,14)"/><text x="72.6049%" y="399.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::retain_first_mut_unordered (1 samples, 0.11%)</title><rect x="72.4687%" y="421" width="0.1138%" height="15" fill="rgb(246,73,7)"/><text x="72.7187%" y="431.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (1 samples, 0.11%)</title><rect x="72.4687%" y="405" width="0.1138%" height="15" fill="rgb(245,64,36)"/><text x="72.7187%" y="415.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (2 samples, 0.23%)</title><rect x="72.4687%" y="453" width="0.2275%" height="15" fill="rgb(245,80,10)"/><text x="72.7187%" y="463.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (2 samples, 0.23%)</title><rect x="72.4687%" y="437" width="0.2275%" height="15" fill="rgb(232,107,50)"/><text x="72.7187%" y="447.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (1 samples, 0.11%)</title><rect x="72.5825%" y="421" width="0.1138%" height="15" fill="rgb(253,3,0)"/><text x="72.8325%" y="431.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (1 samples, 0.11%)</title><rect x="72.5825%" y="405" width="0.1138%" height="15" fill="rgb(212,99,53)"/><text x="72.8325%" y="415.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (5 samples, 0.57%)</title><rect x="72.2412%" y="469" width="0.5688%" height="15" fill="rgb(249,111,54)"/><text x="72.4912%" y="479.50"></text></g><g><title>broccoli::query::colfind::oned::get_section_mut (1 samples, 0.11%)</title><rect x="72.6962%" y="453" width="0.1138%" height="15" fill="rgb(249,55,30)"/><text x="72.9462%" y="463.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (1 samples, 0.11%)</title><rect x="72.8100%" y="437" width="0.1138%" height="15" fill="rgb(237,47,42)"/><text x="73.0600%" y="447.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (1 samples, 0.11%)</title><rect x="72.8100%" y="421" width="0.1138%" height="15" fill="rgb(211,20,18)"/><text x="73.0600%" y="431.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::retain_second_mut_unordered (1 samples, 0.11%)</title><rect x="72.8100%" y="405" width="0.1138%" height="15" fill="rgb(231,203,46)"/><text x="73.0600%" y="415.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (1 samples, 0.11%)</title><rect x="72.9238%" y="437" width="0.1138%" height="15" fill="rgb(237,142,3)"/><text x="73.1738%" y="447.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (1 samples, 0.11%)</title><rect x="72.9238%" y="421" width="0.1138%" height="15" fill="rgb(241,107,1)"/><text x="73.1738%" y="431.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (3 samples, 0.34%)</title><rect x="72.8100%" y="453" width="0.3413%" height="15" fill="rgb(229,83,13)"/><text x="73.0600%" y="463.50"></text></g><g><title>broccoli::query::colfind::oned::get_section_mut (1 samples, 0.11%)</title><rect x="73.0375%" y="437" width="0.1138%" height="15" fill="rgb(241,91,40)"/><text x="73.2875%" y="447.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (3 samples, 0.34%)</title><rect x="73.1513%" y="421" width="0.3413%" height="15" fill="rgb(225,3,45)"/><text x="73.4013%" y="431.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (3 samples, 0.34%)</title><rect x="73.1513%" y="405" width="0.3413%" height="15" fill="rgb(244,223,14)"/><text x="73.4013%" y="415.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::retain_second_mut_unordered (3 samples, 0.34%)</title><rect x="73.1513%" y="389" width="0.3413%" height="15" fill="rgb(224,124,37)"/><text x="73.4013%" y="399.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (3 samples, 0.34%)</title><rect x="73.1513%" y="373" width="0.3413%" height="15" fill="rgb(251,171,30)"/><text x="73.4013%" y="383.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.11%)</title><rect x="73.3788%" y="357" width="0.1138%" height="15" fill="rgb(236,46,54)"/><text x="73.6288%" y="367.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.11%)</title><rect x="73.3788%" y="341" width="0.1138%" height="15" fill="rgb(245,213,5)"/><text x="73.6288%" y="351.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (1 samples, 0.11%)</title><rect x="73.3788%" y="325" width="0.1138%" height="15" fill="rgb(230,144,27)"/><text x="73.6288%" y="335.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.11%)</title><rect x="73.3788%" y="309" width="0.1138%" height="15" fill="rgb(220,86,6)"/><text x="73.6288%" y="319.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (4 samples, 0.46%)</title><rect x="73.1513%" y="437" width="0.4551%" height="15" fill="rgb(240,20,13)"/><text x="73.4013%" y="447.50"></text></g><g><title>broccoli::query::colfind::oned::get_section_mut (1 samples, 0.11%)</title><rect x="73.4926%" y="421" width="0.1138%" height="15" fill="rgb(217,89,34)"/><text x="73.7426%" y="431.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::push_first (1 samples, 0.11%)</title><rect x="73.6064%" y="373" width="0.1138%" height="15" fill="rgb(229,13,5)"/><text x="73.8564%" y="383.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (2 samples, 0.23%)</title><rect x="73.6064%" y="405" width="0.2275%" height="15" fill="rgb(244,67,35)"/><text x="73.8564%" y="415.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (2 samples, 0.23%)</title><rect x="73.6064%" y="389" width="0.2275%" height="15" fill="rgb(221,40,2)"/><text x="73.8564%" y="399.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (1 samples, 0.11%)</title><rect x="73.7201%" y="373" width="0.1138%" height="15" fill="rgb(237,157,21)"/><text x="73.9701%" y="383.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (1 samples, 0.11%)</title><rect x="73.7201%" y="357" width="0.1138%" height="15" fill="rgb(222,94,11)"/><text x="73.9701%" y="367.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted&lt;K&gt; as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (3 samples, 0.34%)</title><rect x="73.6064%" y="421" width="0.3413%" height="15" fill="rgb(249,113,6)"/><text x="73.8564%" y="431.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (1 samples, 0.11%)</title><rect x="73.8339%" y="405" width="0.1138%" height="15" fill="rgb(238,137,36)"/><text x="74.0839%" y="415.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (1 samples, 0.11%)</title><rect x="73.8339%" y="389" width="0.1138%" height="15" fill="rgb(210,102,26)"/><text x="74.0839%" y="399.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::retain_second_mut_unordered (1 samples, 0.11%)</title><rect x="73.8339%" y="373" width="0.1138%" height="15" fill="rgb(218,30,30)"/><text x="74.0839%" y="383.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (1 samples, 0.11%)</title><rect x="73.8339%" y="357" width="0.1138%" height="15" fill="rgb(214,67,26)"/><text x="74.0839%" y="367.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (4 samples, 0.46%)</title><rect x="73.6064%" y="437" width="0.4551%" height="15" fill="rgb(251,9,53)"/><text x="73.8564%" y="447.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (1 samples, 0.11%)</title><rect x="73.9477%" y="421" width="0.1138%" height="15" fill="rgb(228,204,25)"/><text x="74.1977%" y="431.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (1 samples, 0.11%)</title><rect x="73.9477%" y="405" width="0.1138%" height="15" fill="rgb(207,153,8)"/><text x="74.1977%" y="415.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::push_second (1 samples, 0.11%)</title><rect x="73.9477%" y="389" width="0.1138%" height="15" fill="rgb(242,9,16)"/><text x="74.1977%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.11%)</title><rect x="73.9477%" y="373" width="0.1138%" height="15" fill="rgb(217,211,10)"/><text x="74.1977%" y="383.50"></text></g><g><title>core::ptr::write (1 samples, 0.11%)</title><rect x="73.9477%" y="357" width="0.1138%" height="15" fill="rgb(219,228,52)"/><text x="74.1977%" y="367.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (1 samples, 0.11%)</title><rect x="74.0614%" y="437" width="0.1138%" height="15" fill="rgb(231,92,29)"/><text x="74.3114%" y="447.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (1 samples, 0.11%)</title><rect x="74.0614%" y="421" width="0.1138%" height="15" fill="rgb(232,8,23)"/><text x="74.3114%" y="431.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::retain_second_mut_unordered (1 samples, 0.11%)</title><rect x="74.0614%" y="405" width="0.1138%" height="15" fill="rgb(216,211,34)"/><text x="74.3114%" y="415.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (1 samples, 0.11%)</title><rect x="74.0614%" y="389" width="0.1138%" height="15" fill="rgb(236,151,0)"/><text x="74.3114%" y="399.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.11%)</title><rect x="74.0614%" y="373" width="0.1138%" height="15" fill="rgb(209,168,3)"/><text x="74.3114%" y="383.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::retain_first_mut_unordered (1 samples, 0.11%)</title><rect x="74.1752%" y="405" width="0.1138%" height="15" fill="rgb(208,129,28)"/><text x="74.4252%" y="415.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (1 samples, 0.11%)</title><rect x="74.1752%" y="389" width="0.1138%" height="15" fill="rgb(229,78,22)"/><text x="74.4252%" y="399.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.11%)</title><rect x="74.1752%" y="373" width="0.1138%" height="15" fill="rgb(228,187,13)"/><text x="74.4252%" y="383.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (1 samples, 0.11%)</title><rect x="74.2890%" y="373" width="0.1138%" height="15" fill="rgb(240,119,24)"/><text x="74.5390%" y="383.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (2 samples, 0.23%)</title><rect x="74.2890%" y="389" width="0.2275%" height="15" fill="rgb(209,194,42)"/><text x="74.5390%" y="399.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.11%)</title><rect x="74.4027%" y="373" width="0.1138%" height="15" fill="rgb(247,200,46)"/><text x="74.6527%" y="383.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::retain_second_mut_unordered (3 samples, 0.34%)</title><rect x="74.2890%" y="405" width="0.3413%" height="15" fill="rgb(218,76,16)"/><text x="74.5390%" y="415.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.11%)</title><rect x="74.5165%" y="389" width="0.1138%" height="15" fill="rgb(225,21,48)"/><text x="74.7665%" y="399.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (14 samples, 1.59%)</title><rect x="73.1513%" y="453" width="1.5927%" height="15" fill="rgb(239,223,50)"/><text x="73.4013%" y="463.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (5 samples, 0.57%)</title><rect x="74.1752%" y="437" width="0.5688%" height="15" fill="rgb(244,45,21)"/><text x="74.4252%" y="447.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (5 samples, 0.57%)</title><rect x="74.1752%" y="421" width="0.5688%" height="15" fill="rgb(232,33,43)"/><text x="74.4252%" y="431.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (1 samples, 0.11%)</title><rect x="74.6303%" y="405" width="0.1138%" height="15" fill="rgb(209,8,3)"/><text x="74.8803%" y="415.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (1 samples, 0.11%)</title><rect x="74.6303%" y="389" width="0.1138%" height="15" fill="rgb(214,25,53)"/><text x="74.8803%" y="399.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::push_first (1 samples, 0.11%)</title><rect x="74.7440%" y="421" width="0.1138%" height="15" fill="rgb(254,186,54)"/><text x="74.9940%" y="431.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.11%)</title><rect x="74.7440%" y="405" width="0.1138%" height="15" fill="rgb(208,174,49)"/><text x="74.9940%" y="415.50"></text></g><g><title>core::ptr::swap (1 samples, 0.11%)</title><rect x="74.7440%" y="389" width="0.1138%" height="15" fill="rgb(233,191,51)"/><text x="74.9940%" y="399.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.11%)</title><rect x="74.7440%" y="373" width="0.1138%" height="15" fill="rgb(222,134,10)"/><text x="74.9940%" y="383.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::retain_first_mut_unordered (2 samples, 0.23%)</title><rect x="74.8578%" y="421" width="0.2275%" height="15" fill="rgb(230,226,20)"/><text x="75.1078%" y="431.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.11%)</title><rect x="74.9716%" y="405" width="0.1138%" height="15" fill="rgb(251,111,25)"/><text x="75.2216%" y="415.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::retain_second_mut_unordered (1 samples, 0.11%)</title><rect x="75.0853%" y="421" width="0.1138%" height="15" fill="rgb(224,40,46)"/><text x="75.3353%" y="431.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.11%)</title><rect x="75.0853%" y="405" width="0.1138%" height="15" fill="rgb(236,108,47)"/><text x="75.3353%" y="415.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.11%)</title><rect x="75.0853%" y="389" width="0.1138%" height="15" fill="rgb(234,93,0)"/><text x="75.3353%" y="399.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (5 samples, 0.57%)</title><rect x="74.7440%" y="453" width="0.5688%" height="15" fill="rgb(224,213,32)"/><text x="74.9940%" y="463.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (5 samples, 0.57%)</title><rect x="74.7440%" y="437" width="0.5688%" height="15" fill="rgb(251,11,48)"/><text x="74.9940%" y="447.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (1 samples, 0.11%)</title><rect x="75.1991%" y="421" width="0.1138%" height="15" fill="rgb(236,173,5)"/><text x="75.4491%" y="431.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (1 samples, 0.11%)</title><rect x="75.1991%" y="405" width="0.1138%" height="15" fill="rgb(230,95,12)"/><text x="75.4491%" y="415.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek::{{closure}} (1 samples, 0.11%)</title><rect x="75.1991%" y="389" width="0.1138%" height="15" fill="rgb(232,209,1)"/><text x="75.4491%" y="399.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="75.1991%" y="373" width="0.1138%" height="15" fill="rgb(232,6,1)"/><text x="75.4491%" y="383.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="75.1991%" y="357" width="0.1138%" height="15" fill="rgb(210,224,50)"/><text x="75.4491%" y="367.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::retain_first_mut_unordered (1 samples, 0.11%)</title><rect x="75.3129%" y="421" width="0.1138%" height="15" fill="rgb(228,127,35)"/><text x="75.5629%" y="431.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (1 samples, 0.11%)</title><rect x="75.3129%" y="405" width="0.1138%" height="15" fill="rgb(245,102,45)"/><text x="75.5629%" y="415.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.11%)</title><rect x="75.3129%" y="389" width="0.1138%" height="15" fill="rgb(214,1,49)"/><text x="75.5629%" y="399.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (1 samples, 0.11%)</title><rect x="75.5404%" y="389" width="0.1138%" height="15" fill="rgb(226,163,40)"/><text x="75.7904%" y="399.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::retain_second_mut_unordered (3 samples, 0.34%)</title><rect x="75.4266%" y="421" width="0.3413%" height="15" fill="rgb(239,212,28)"/><text x="75.6766%" y="431.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (3 samples, 0.34%)</title><rect x="75.4266%" y="405" width="0.3413%" height="15" fill="rgb(220,20,13)"/><text x="75.6766%" y="415.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.11%)</title><rect x="75.6542%" y="389" width="0.1138%" height="15" fill="rgb(210,164,35)"/><text x="75.9042%" y="399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::lt (1 samples, 0.11%)</title><rect x="75.7679%" y="421" width="0.1138%" height="15" fill="rgb(248,109,41)"/><text x="76.0179%" y="431.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (28 samples, 3.19%)</title><rect x="72.8100%" y="469" width="3.1854%" height="15" fill="rgb(238,23,50)"/><text x="73.0600%" y="479.50">bro..</text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (6 samples, 0.68%)</title><rect x="75.3129%" y="453" width="0.6826%" height="15" fill="rgb(211,48,49)"/><text x="75.5629%" y="463.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (6 samples, 0.68%)</title><rect x="75.3129%" y="437" width="0.6826%" height="15" fill="rgb(223,36,21)"/><text x="75.5629%" y="447.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (1 samples, 0.11%)</title><rect x="75.8817%" y="421" width="0.1138%" height="15" fill="rgb(207,123,46)"/><text x="76.1317%" y="431.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (1 samples, 0.11%)</title><rect x="75.8817%" y="405" width="0.1138%" height="15" fill="rgb(240,218,32)"/><text x="76.1317%" y="415.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::retain_first_mut_unordered (3 samples, 0.34%)</title><rect x="75.9954%" y="437" width="0.3413%" height="15" fill="rgb(252,5,43)"/><text x="76.2454%" y="447.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (2 samples, 0.23%)</title><rect x="76.1092%" y="421" width="0.2275%" height="15" fill="rgb(252,84,19)"/><text x="76.3592%" y="431.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (2 samples, 0.23%)</title><rect x="76.1092%" y="405" width="0.2275%" height="15" fill="rgb(243,152,39)"/><text x="76.3592%" y="415.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::retain_second_mut_unordered (1 samples, 0.11%)</title><rect x="76.3367%" y="437" width="0.1138%" height="15" fill="rgb(234,160,15)"/><text x="76.5867%" y="447.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (1 samples, 0.11%)</title><rect x="76.3367%" y="421" width="0.1138%" height="15" fill="rgb(237,34,20)"/><text x="76.5867%" y="431.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.11%)</title><rect x="76.3367%" y="405" width="0.1138%" height="15" fill="rgb(229,97,13)"/><text x="76.5867%" y="415.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFn&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.11%)</title><rect x="76.3367%" y="389" width="0.1138%" height="15" fill="rgb(234,71,50)"/><text x="76.5867%" y="399.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut_par::{{closure}} (1 samples, 0.11%)</title><rect x="76.3367%" y="373" width="0.1138%" height="15" fill="rgb(253,155,4)"/><text x="76.5867%" y="383.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.11%)</title><rect x="76.3367%" y="357" width="0.1138%" height="15" fill="rgb(222,185,37)"/><text x="76.5867%" y="367.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (5 samples, 0.57%)</title><rect x="75.9954%" y="469" width="0.5688%" height="15" fill="rgb(251,177,13)"/><text x="76.2454%" y="479.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (5 samples, 0.57%)</title><rect x="75.9954%" y="453" width="0.5688%" height="15" fill="rgb(250,179,40)"/><text x="76.2454%" y="463.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::lt (1 samples, 0.11%)</title><rect x="76.4505%" y="437" width="0.1138%" height="15" fill="rgb(242,44,2)"/><text x="76.7005%" y="447.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,B&gt;::recurse (39 samples, 4.44%)</title><rect x="72.2412%" y="485" width="4.4369%" height="15" fill="rgb(216,177,13)"/><text x="72.4912%" y="495.50">brocc..</text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (1 samples, 0.11%)</title><rect x="76.5643%" y="469" width="0.1138%" height="15" fill="rgb(216,106,43)"/><text x="76.8143%" y="479.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (1 samples, 0.11%)</title><rect x="76.5643%" y="453" width="0.1138%" height="15" fill="rgb(216,183,2)"/><text x="76.8143%" y="463.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::retain_second_mut_unordered (1 samples, 0.11%)</title><rect x="76.5643%" y="437" width="0.1138%" height="15" fill="rgb(249,75,3)"/><text x="76.8143%" y="447.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (1 samples, 0.11%)</title><rect x="76.6780%" y="421" width="0.1138%" height="15" fill="rgb(219,67,39)"/><text x="76.9280%" y="431.50"></text></g><g><title>broccoli::query::colfind::oned::find_2d (2 samples, 0.23%)</title><rect x="76.6780%" y="485" width="0.2275%" height="15" fill="rgb(253,228,2)"/><text x="76.9280%" y="495.50"></text></g><g><title>broccoli::query::colfind::oned::find (2 samples, 0.23%)</title><rect x="76.6780%" y="469" width="0.2275%" height="15" fill="rgb(235,138,27)"/><text x="76.9280%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (2 samples, 0.23%)</title><rect x="76.6780%" y="453" width="0.2275%" height="15" fill="rgb(236,97,51)"/><text x="76.9280%" y="463.50"></text></g><g><title>broccoli::query::colfind::oned::find::{{closure}} (2 samples, 0.23%)</title><rect x="76.6780%" y="437" width="0.2275%" height="15" fill="rgb(240,80,30)"/><text x="76.9280%" y="447.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.11%)</title><rect x="76.7918%" y="421" width="0.1138%" height="15" fill="rgb(230,178,19)"/><text x="77.0418%" y="431.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFn&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.11%)</title><rect x="76.7918%" y="405" width="0.1138%" height="15" fill="rgb(210,190,27)"/><text x="77.0418%" y="415.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut_par::{{closure}} (1 samples, 0.11%)</title><rect x="76.7918%" y="389" width="0.1138%" height="15" fill="rgb(222,107,31)"/><text x="77.0418%" y="399.50"></text></g><g><title>data_gen::colfind::float_vs_integer::handle_bench::{{closure}}::{{closure}} (1 samples, 0.11%)</title><rect x="76.7918%" y="373" width="0.1138%" height="15" fill="rgb(216,127,34)"/><text x="77.0418%" y="383.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::push_second (1 samples, 0.11%)</title><rect x="76.9056%" y="453" width="0.1138%" height="15" fill="rgb(234,116,52)"/><text x="77.1556%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.11%)</title><rect x="76.9056%" y="437" width="0.1138%" height="15" fill="rgb(222,124,15)"/><text x="77.1556%" y="447.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::retain_first_mut_unordered (2 samples, 0.23%)</title><rect x="77.0193%" y="453" width="0.2275%" height="15" fill="rgb(231,179,28)"/><text x="77.2693%" y="463.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (1 samples, 0.11%)</title><rect x="77.1331%" y="437" width="0.1138%" height="15" fill="rgb(226,93,45)"/><text x="77.3831%" y="447.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (4 samples, 0.46%)</title><rect x="76.9056%" y="485" width="0.4551%" height="15" fill="rgb(215,8,51)"/><text x="77.1556%" y="495.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (4 samples, 0.46%)</title><rect x="76.9056%" y="469" width="0.4551%" height="15" fill="rgb(223,106,5)"/><text x="77.1556%" y="479.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::retain_second_mut_unordered (1 samples, 0.11%)</title><rect x="77.2469%" y="453" width="0.1138%" height="15" fill="rgb(250,191,5)"/><text x="77.4969%" y="463.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (1 samples, 0.11%)</title><rect x="77.2469%" y="437" width="0.1138%" height="15" fill="rgb(242,132,44)"/><text x="77.4969%" y="447.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.11%)</title><rect x="77.2469%" y="421" width="0.1138%" height="15" fill="rgb(251,152,29)"/><text x="77.4969%" y="431.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.11%)</title><rect x="77.3606%" y="437" width="0.1138%" height="15" fill="rgb(218,179,5)"/><text x="77.6106%" y="447.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::retain_first_mut_unordered (2 samples, 0.23%)</title><rect x="77.3606%" y="453" width="0.2275%" height="15" fill="rgb(227,67,19)"/><text x="77.6106%" y="463.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.11%)</title><rect x="77.4744%" y="437" width="0.1138%" height="15" fill="rgb(233,119,31)"/><text x="77.7244%" y="447.50"></text></g><g><title>core::ptr::swap (1 samples, 0.11%)</title><rect x="77.4744%" y="421" width="0.1138%" height="15" fill="rgb(241,120,22)"/><text x="77.7244%" y="431.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.11%)</title><rect x="77.4744%" y="405" width="0.1138%" height="15" fill="rgb(224,102,30)"/><text x="77.7244%" y="415.50"></text></g><g><title>broccoli::query::tools::TwoUnorderedVecs&lt;T&gt;::retain_second_mut_unordered (1 samples, 0.11%)</title><rect x="77.5882%" y="453" width="0.1138%" height="15" fill="rgb(210,164,37)"/><text x="77.8382%" y="463.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (1 samples, 0.11%)</title><rect x="77.5882%" y="437" width="0.1138%" height="15" fill="rgb(226,191,16)"/><text x="77.8382%" y="447.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.11%)</title><rect x="77.5882%" y="421" width="0.1138%" height="15" fill="rgb(214,40,45)"/><text x="77.8382%" y="431.50"></text></g><g><title>&lt;broccoli::query::colfind::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::ColMulti&gt;::collide (1 samples, 0.11%)</title><rect x="77.5882%" y="405" width="0.1138%" height="15" fill="rgb(244,29,26)"/><text x="77.8382%" y="415.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut::{{closure}} (1 samples, 0.11%)</title><rect x="77.5882%" y="389" width="0.1138%" height="15" fill="rgb(216,16,5)"/><text x="77.8382%" y="399.50"></text></g><g><title>data_gen::main::{{closure}}::{{closure}} (1 samples, 0.11%)</title><rect x="77.5882%" y="373" width="0.1138%" height="15" fill="rgb(249,76,35)"/><text x="77.8382%" y="383.50"></text></g><g><title>broccoli::query::colfind::inner::ColFindRecurser&lt;T,K,S&gt;::recurse_seq (653 samples, 74.29%)</title><rect x="3.5267%" y="501" width="74.2890%" height="15" fill="rgb(207,11,44)"/><text x="3.7767%" y="511.50">broccoli::query::colfind::inner::ColFindRecurser&lt;T,K,S&gt;::recurse_seq</text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (4 samples, 0.46%)</title><rect x="77.3606%" y="485" width="0.4551%" height="15" fill="rgb(228,190,49)"/><text x="77.6106%" y="495.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (4 samples, 0.46%)</title><rect x="77.3606%" y="469" width="0.4551%" height="15" fill="rgb(214,173,12)"/><text x="77.6106%" y="479.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.11%)</title><rect x="77.7019%" y="453" width="0.1138%" height="15" fill="rgb(218,26,35)"/><text x="77.9519%" y="463.50"></text></g><g><title>broccoli::query::Queries::find_colliding_pairs_mut (654 samples, 74.40%)</title><rect x="3.5267%" y="533" width="74.4027%" height="15" fill="rgb(220,200,19)"/><text x="3.7767%" y="543.50">broccoli::query::Queries::find_colliding_pairs_mut</text></g><g><title>broccoli::query::colfind::QueryBuilder&lt;A,T&gt;::query_seq (654 samples, 74.40%)</title><rect x="3.5267%" y="517" width="74.4027%" height="15" fill="rgb(239,95,49)"/><text x="3.7767%" y="527.50">broccoli::query::colfind::QueryBuilder&lt;A,T&gt;::query_seq</text></g><g><title>broccoli::query::colfind::oned::find_2d (1 samples, 0.11%)</title><rect x="77.8157%" y="501" width="0.1138%" height="15" fill="rgb(235,85,53)"/><text x="78.0657%" y="511.50"></text></g><g><title>broccoli::query::colfind::oned::find (1 samples, 0.11%)</title><rect x="77.8157%" y="485" width="0.1138%" height="15" fill="rgb(233,133,31)"/><text x="78.0657%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as broccoli::query::tools::RetainMutUnordered&lt;T&gt;&gt;::retain_mut_unordered (1 samples, 0.11%)</title><rect x="77.8157%" y="469" width="0.1138%" height="15" fill="rgb(218,25,20)"/><text x="78.0657%" y="479.50"></text></g><g><title>broccoli::query::colfind::oned::find::{{closure}} (1 samples, 0.11%)</title><rect x="77.8157%" y="453" width="0.1138%" height="15" fill="rgb(252,210,38)"/><text x="78.0657%" y="463.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.11%)</title><rect x="77.8157%" y="437" width="0.1138%" height="15" fill="rgb(242,134,21)"/><text x="78.0657%" y="447.50"></text></g><g><title>broccoli::tree::analyze::builder::NonLeafFinisher&lt;A,T&gt;::finish (1 samples, 0.11%)</title><rect x="77.9295%" y="469" width="0.1138%" height="15" fill="rgb(213,28,48)"/><text x="78.1795%" y="479.50"></text></g><g><title>&lt;broccoli::tree::analyze::DefaultSorter as broccoli::tree::analyze::Sorter&gt;::sort (1 samples, 0.11%)</title><rect x="77.9295%" y="453" width="0.1138%" height="15" fill="rgb(250,196,2)"/><text x="78.1795%" y="463.50"></text></g><g><title>broccoli::tree::analyze::oned::sweeper_update (1 samples, 0.11%)</title><rect x="77.9295%" y="437" width="0.1138%" height="15" fill="rgb(227,5,17)"/><text x="78.1795%" y="447.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by (1 samples, 0.11%)</title><rect x="77.9295%" y="421" width="0.1138%" height="15" fill="rgb(221,226,24)"/><text x="78.1795%" y="431.50"></text></g><g><title>core::slice::sort::quicksort (1 samples, 0.11%)</title><rect x="77.9295%" y="405" width="0.1138%" height="15" fill="rgb(211,5,48)"/><text x="78.1795%" y="415.50"></text></g><g><title>core::slice::sort::recurse (1 samples, 0.11%)</title><rect x="77.9295%" y="389" width="0.1138%" height="15" fill="rgb(219,150,6)"/><text x="78.1795%" y="399.50"></text></g><g><title>core::slice::sort::choose_pivot (1 samples, 0.11%)</title><rect x="77.9295%" y="373" width="0.1138%" height="15" fill="rgb(251,46,16)"/><text x="78.1795%" y="383.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::reverse (1 samples, 0.11%)</title><rect x="77.9295%" y="357" width="0.1138%" height="15" fill="rgb(220,204,40)"/><text x="78.1795%" y="367.50"></text></g><g><title>core::ptr::swap (1 samples, 0.11%)</title><rect x="77.9295%" y="341" width="0.1138%" height="15" fill="rgb(211,85,2)"/><text x="78.1795%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.11%)</title><rect x="77.9295%" y="325" width="0.1138%" height="15" fill="rgb(229,17,7)"/><text x="78.1795%" y="335.50"></text></g><g><title>axgeom::range::Range&lt;T&gt;::contains_ext (1 samples, 0.11%)</title><rect x="78.1570%" y="421" width="0.1138%" height="15" fill="rgb(239,72,28)"/><text x="78.4070%" y="431.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.23%)</title><rect x="78.2708%" y="421" width="0.2275%" height="15" fill="rgb(230,47,54)"/><text x="78.5208%" y="431.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (2 samples, 0.23%)</title><rect x="78.2708%" y="405" width="0.2275%" height="15" fill="rgb(214,50,8)"/><text x="78.5208%" y="415.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.11%)</title><rect x="78.6121%" y="389" width="0.1138%" height="15" fill="rgb(216,198,43)"/><text x="78.8621%" y="399.50"></text></g><g><title>broccoli::tree::analyze::oned::bin_middle_left_right (8 samples, 0.91%)</title><rect x="78.0432%" y="437" width="0.9101%" height="15" fill="rgb(234,20,35)"/><text x="78.2932%" y="447.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (4 samples, 0.46%)</title><rect x="78.4983%" y="421" width="0.4551%" height="15" fill="rgb(254,45,19)"/><text x="78.7483%" y="431.50"></text></g><g><title>core::ptr::swap (3 samples, 0.34%)</title><rect x="78.6121%" y="405" width="0.3413%" height="15" fill="rgb(219,14,44)"/><text x="78.8621%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.23%)</title><rect x="78.7258%" y="389" width="0.2275%" height="15" fill="rgb(217,220,26)"/><text x="78.9758%" y="399.50"></text></g><g><title>pdqselect::partition_in_blocks (3 samples, 0.34%)</title><rect x="79.0671%" y="373" width="0.3413%" height="15" fill="rgb(213,158,28)"/><text x="79.3171%" y="383.50"></text></g><g><title>pdqselect::select_by::{{closure}} (1 samples, 0.11%)</title><rect x="79.2947%" y="357" width="0.1138%" height="15" fill="rgb(252,51,52)"/><text x="79.5447%" y="367.50"></text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf::{{closure}} (1 samples, 0.11%)</title><rect x="79.2947%" y="341" width="0.1138%" height="15" fill="rgb(246,89,16)"/><text x="79.5447%" y="351.50"></text></g><g><title>broccoli::tree::analyze::oned::compare_bots (1 samples, 0.11%)</title><rect x="79.2947%" y="325" width="0.1138%" height="15" fill="rgb(216,158,49)"/><text x="79.5447%" y="335.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.11%)</title><rect x="79.2947%" y="309" width="0.1138%" height="15" fill="rgb(236,107,19)"/><text x="79.5447%" y="319.50"></text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::create_non_leaf (13 samples, 1.48%)</title><rect x="78.0432%" y="469" width="1.4790%" height="15" fill="rgb(228,185,30)"/><text x="78.2932%" y="479.50"></text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf (13 samples, 1.48%)</title><rect x="78.0432%" y="453" width="1.4790%" height="15" fill="rgb(246,134,8)"/><text x="78.2932%" y="463.50"></text></g><g><title>pdqselect::select_by (5 samples, 0.57%)</title><rect x="78.9534%" y="437" width="0.5688%" height="15" fill="rgb(214,143,50)"/><text x="79.2034%" y="447.50"></text></g><g><title>pdqselect::quickselect (5 samples, 0.57%)</title><rect x="78.9534%" y="421" width="0.5688%" height="15" fill="rgb(228,75,8)"/><text x="79.2034%" y="431.50"></text></g><g><title>pdqselect::recurse (5 samples, 0.57%)</title><rect x="78.9534%" y="405" width="0.5688%" height="15" fill="rgb(207,175,4)"/><text x="79.2034%" y="415.50"></text></g><g><title>pdqselect::partition (5 samples, 0.57%)</title><rect x="78.9534%" y="389" width="0.5688%" height="15" fill="rgb(205,108,24)"/><text x="79.2034%" y="399.50"></text></g><g><title>pdqselect::select_by::{{closure}} (1 samples, 0.11%)</title><rect x="79.4084%" y="373" width="0.1138%" height="15" fill="rgb(244,120,49)"/><text x="79.6584%" y="383.50"></text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf::{{closure}} (1 samples, 0.11%)</title><rect x="79.4084%" y="357" width="0.1138%" height="15" fill="rgb(223,47,38)"/><text x="79.6584%" y="367.50"></text></g><g><title>broccoli::tree::analyze::oned::compare_bots (1 samples, 0.11%)</title><rect x="79.4084%" y="341" width="0.1138%" height="15" fill="rgb(229,179,11)"/><text x="79.6584%" y="351.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.11%)</title><rect x="79.4084%" y="325" width="0.1138%" height="15" fill="rgb(231,122,1)"/><text x="79.6584%" y="335.50"></text></g><g><title>broccoli::tree::analyze::oned::bin_middle_left_right (4 samples, 0.46%)</title><rect x="79.5222%" y="421" width="0.4551%" height="15" fill="rgb(245,119,9)"/><text x="79.7722%" y="431.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (3 samples, 0.34%)</title><rect x="79.6359%" y="405" width="0.3413%" height="15" fill="rgb(241,163,25)"/><text x="79.8859%" y="415.50"></text></g><g><title>core::ptr::swap (2 samples, 0.23%)</title><rect x="79.7497%" y="389" width="0.2275%" height="15" fill="rgb(217,214,3)"/><text x="79.9997%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.23%)</title><rect x="79.7497%" y="373" width="0.2275%" height="15" fill="rgb(240,86,28)"/><text x="79.9997%" y="383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.11%)</title><rect x="79.9772%" y="341" width="0.1138%" height="15" fill="rgb(215,47,9)"/><text x="80.2272%" y="351.50"></text></g><g><title>pdqselect::partition_in_blocks (6 samples, 0.68%)</title><rect x="79.9772%" y="357" width="0.6826%" height="15" fill="rgb(252,25,45)"/><text x="80.2272%" y="367.50"></text></g><g><title>pdqselect::select_by::{{closure}} (5 samples, 0.57%)</title><rect x="80.0910%" y="341" width="0.5688%" height="15" fill="rgb(251,164,9)"/><text x="80.3410%" y="351.50"></text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf::{{closure}} (5 samples, 0.57%)</title><rect x="80.0910%" y="325" width="0.5688%" height="15" fill="rgb(233,194,0)"/><text x="80.3410%" y="335.50"></text></g><g><title>broccoli::tree::analyze::oned::compare_bots (5 samples, 0.57%)</title><rect x="80.0910%" y="309" width="0.5688%" height="15" fill="rgb(249,111,24)"/><text x="80.3410%" y="319.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.11%)</title><rect x="80.5461%" y="293" width="0.1138%" height="15" fill="rgb(250,223,3)"/><text x="80.7961%" y="303.50"></text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::create_non_leaf (11 samples, 1.25%)</title><rect x="79.5222%" y="453" width="1.2514%" height="15" fill="rgb(236,178,37)"/><text x="79.7722%" y="463.50"></text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf (11 samples, 1.25%)</title><rect x="79.5222%" y="437" width="1.2514%" height="15" fill="rgb(241,158,50)"/><text x="79.7722%" y="447.50"></text></g><g><title>pdqselect::select_by (7 samples, 0.80%)</title><rect x="79.9772%" y="421" width="0.7964%" height="15" fill="rgb(213,121,41)"/><text x="80.2272%" y="431.50"></text></g><g><title>pdqselect::quickselect (7 samples, 0.80%)</title><rect x="79.9772%" y="405" width="0.7964%" height="15" fill="rgb(240,92,3)"/><text x="80.2272%" y="415.50"></text></g><g><title>pdqselect::recurse (7 samples, 0.80%)</title><rect x="79.9772%" y="389" width="0.7964%" height="15" fill="rgb(205,123,3)"/><text x="80.2272%" y="399.50"></text></g><g><title>pdqselect::partition (7 samples, 0.80%)</title><rect x="79.9772%" y="373" width="0.7964%" height="15" fill="rgb(205,97,47)"/><text x="80.2272%" y="383.50"></text></g><g><title>pdqselect::select_by::{{closure}} (1 samples, 0.11%)</title><rect x="80.6598%" y="357" width="0.1138%" height="15" fill="rgb(247,152,14)"/><text x="80.9098%" y="367.50"></text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf::{{closure}} (1 samples, 0.11%)</title><rect x="80.6598%" y="341" width="0.1138%" height="15" fill="rgb(248,195,53)"/><text x="80.9098%" y="351.50"></text></g><g><title>broccoli::tree::analyze::oned::compare_bots (1 samples, 0.11%)</title><rect x="80.6598%" y="325" width="0.1138%" height="15" fill="rgb(226,201,16)"/><text x="80.9098%" y="335.50"></text></g><g><title>broccoli::tree::analyze::builder::NonLeafFinisher&lt;A,T&gt;::finish (1 samples, 0.11%)</title><rect x="80.7736%" y="437" width="0.1138%" height="15" fill="rgb(205,98,0)"/><text x="81.0236%" y="447.50"></text></g><g><title>&lt;broccoli::tree::analyze::DefaultSorter as broccoli::tree::analyze::Sorter&gt;::sort (1 samples, 0.11%)</title><rect x="80.7736%" y="421" width="0.1138%" height="15" fill="rgb(214,191,48)"/><text x="81.0236%" y="431.50"></text></g><g><title>broccoli::tree::analyze::oned::sweeper_update (1 samples, 0.11%)</title><rect x="80.7736%" y="405" width="0.1138%" height="15" fill="rgb(237,112,39)"/><text x="81.0236%" y="415.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by (1 samples, 0.11%)</title><rect x="80.7736%" y="389" width="0.1138%" height="15" fill="rgb(247,203,27)"/><text x="81.0236%" y="399.50"></text></g><g><title>core::slice::sort::quicksort (1 samples, 0.11%)</title><rect x="80.7736%" y="373" width="0.1138%" height="15" fill="rgb(235,124,28)"/><text x="81.0236%" y="383.50"></text></g><g><title>core::slice::sort::recurse (1 samples, 0.11%)</title><rect x="80.7736%" y="357" width="0.1138%" height="15" fill="rgb(208,207,46)"/><text x="81.0236%" y="367.50"></text></g><g><title>core::slice::sort::recurse (1 samples, 0.11%)</title><rect x="80.7736%" y="341" width="0.1138%" height="15" fill="rgb(234,176,4)"/><text x="81.0236%" y="351.50"></text></g><g><title>core::slice::sort::insertion_sort (1 samples, 0.11%)</title><rect x="80.7736%" y="325" width="0.1138%" height="15" fill="rgb(230,133,28)"/><text x="81.0236%" y="335.50"></text></g><g><title>core::slice::sort::shift_tail (1 samples, 0.11%)</title><rect x="80.7736%" y="309" width="0.1138%" height="15" fill="rgb(211,137,40)"/><text x="81.0236%" y="319.50"></text></g><g><title>core::ptr::read (1 samples, 0.11%)</title><rect x="80.7736%" y="293" width="0.1138%" height="15" fill="rgb(254,35,13)"/><text x="81.0236%" y="303.50"></text></g><g><title>axgeom::range::Range&lt;T&gt;::contains_ext (3 samples, 0.34%)</title><rect x="81.1149%" y="389" width="0.3413%" height="15" fill="rgb(225,49,51)"/><text x="81.3649%" y="399.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.23%)</title><rect x="81.4562%" y="389" width="0.2275%" height="15" fill="rgb(251,10,15)"/><text x="81.7062%" y="399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (2 samples, 0.23%)</title><rect x="81.4562%" y="373" width="0.2275%" height="15" fill="rgb(228,207,15)"/><text x="81.7062%" y="383.50"></text></g><g><title>broccoli::tree::analyze::oned::bin_middle_left_right (10 samples, 1.14%)</title><rect x="80.8874%" y="405" width="1.1377%" height="15" fill="rgb(241,99,19)"/><text x="81.1374%" y="415.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (3 samples, 0.34%)</title><rect x="81.6837%" y="389" width="0.3413%" height="15" fill="rgb(207,104,49)"/><text x="81.9337%" y="399.50"></text></g><g><title>core::ptr::swap (3 samples, 0.34%)</title><rect x="81.6837%" y="373" width="0.3413%" height="15" fill="rgb(234,99,18)"/><text x="81.9337%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.34%)</title><rect x="81.6837%" y="357" width="0.3413%" height="15" fill="rgb(213,191,49)"/><text x="81.9337%" y="367.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.11%)</title><rect x="82.1388%" y="325" width="0.1138%" height="15" fill="rgb(210,226,19)"/><text x="82.3888%" y="335.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (1 samples, 0.11%)</title><rect x="82.1388%" y="309" width="0.1138%" height="15" fill="rgb(229,97,18)"/><text x="82.3888%" y="319.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (1 samples, 0.11%)</title><rect x="82.1388%" y="293" width="0.1138%" height="15" fill="rgb(211,167,15)"/><text x="82.3888%" y="303.50"></text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::create_non_leaf (14 samples, 1.59%)</title><rect x="80.8874%" y="437" width="1.5927%" height="15" fill="rgb(210,169,34)"/><text x="81.1374%" y="447.50"></text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf (14 samples, 1.59%)</title><rect x="80.8874%" y="421" width="1.5927%" height="15" fill="rgb(241,121,31)"/><text x="81.1374%" y="431.50"></text></g><g><title>pdqselect::select_by (4 samples, 0.46%)</title><rect x="82.0250%" y="405" width="0.4551%" height="15" fill="rgb(232,40,11)"/><text x="82.2750%" y="415.50"></text></g><g><title>pdqselect::quickselect (4 samples, 0.46%)</title><rect x="82.0250%" y="389" width="0.4551%" height="15" fill="rgb(205,86,26)"/><text x="82.2750%" y="399.50"></text></g><g><title>pdqselect::recurse (4 samples, 0.46%)</title><rect x="82.0250%" y="373" width="0.4551%" height="15" fill="rgb(231,126,28)"/><text x="82.2750%" y="383.50"></text></g><g><title>pdqselect::partition (4 samples, 0.46%)</title><rect x="82.0250%" y="357" width="0.4551%" height="15" fill="rgb(219,221,18)"/><text x="82.2750%" y="367.50"></text></g><g><title>pdqselect::partition_in_blocks (4 samples, 0.46%)</title><rect x="82.0250%" y="341" width="0.4551%" height="15" fill="rgb(211,40,0)"/><text x="82.2750%" y="351.50"></text></g><g><title>pdqselect::select_by::{{closure}} (2 samples, 0.23%)</title><rect x="82.2526%" y="325" width="0.2275%" height="15" fill="rgb(239,85,43)"/><text x="82.5026%" y="335.50"></text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf::{{closure}} (2 samples, 0.23%)</title><rect x="82.2526%" y="309" width="0.2275%" height="15" fill="rgb(231,55,21)"/><text x="82.5026%" y="319.50"></text></g><g><title>broccoli::tree::analyze::oned::compare_bots (2 samples, 0.23%)</title><rect x="82.2526%" y="293" width="0.2275%" height="15" fill="rgb(225,184,43)"/><text x="82.5026%" y="303.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (2 samples, 0.23%)</title><rect x="82.2526%" y="277" width="0.2275%" height="15" fill="rgb(251,158,41)"/><text x="82.5026%" y="287.50"></text></g><g><title>broccoli::tree::analyze::builder::NonLeafFinisher&lt;A,T&gt;::finish (1 samples, 0.11%)</title><rect x="82.4801%" y="421" width="0.1138%" height="15" fill="rgb(234,159,37)"/><text x="82.7301%" y="431.50"></text></g><g><title>&lt;broccoli::tree::analyze::DefaultSorter as broccoli::tree::analyze::Sorter&gt;::sort (1 samples, 0.11%)</title><rect x="82.4801%" y="405" width="0.1138%" height="15" fill="rgb(216,204,22)"/><text x="82.7301%" y="415.50"></text></g><g><title>broccoli::tree::analyze::oned::sweeper_update (1 samples, 0.11%)</title><rect x="82.4801%" y="389" width="0.1138%" height="15" fill="rgb(214,17,3)"/><text x="82.7301%" y="399.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by (1 samples, 0.11%)</title><rect x="82.4801%" y="373" width="0.1138%" height="15" fill="rgb(212,111,17)"/><text x="82.7301%" y="383.50"></text></g><g><title>core::slice::sort::quicksort (1 samples, 0.11%)</title><rect x="82.4801%" y="357" width="0.1138%" height="15" fill="rgb(221,157,24)"/><text x="82.7301%" y="367.50"></text></g><g><title>core::slice::sort::recurse (1 samples, 0.11%)</title><rect x="82.4801%" y="341" width="0.1138%" height="15" fill="rgb(252,16,13)"/><text x="82.7301%" y="351.50"></text></g><g><title>core::slice::sort::partition (1 samples, 0.11%)</title><rect x="82.4801%" y="325" width="0.1138%" height="15" fill="rgb(221,62,2)"/><text x="82.7301%" y="335.50"></text></g><g><title>core::slice::sort::partition_in_blocks (1 samples, 0.11%)</title><rect x="82.4801%" y="309" width="0.1138%" height="15" fill="rgb(247,87,22)"/><text x="82.7301%" y="319.50"></text></g><g><title>axgeom::range::Range&lt;T&gt;::contains_ext (2 samples, 0.23%)</title><rect x="82.5939%" y="373" width="0.2275%" height="15" fill="rgb(215,73,9)"/><text x="82.8439%" y="383.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::lt (1 samples, 0.11%)</title><rect x="82.7076%" y="357" width="0.1138%" height="15" fill="rgb(207,175,33)"/><text x="82.9576%" y="367.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.11%)</title><rect x="82.8214%" y="373" width="0.1138%" height="15" fill="rgb(243,129,54)"/><text x="83.0714%" y="383.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.11%)</title><rect x="82.8214%" y="357" width="0.1138%" height="15" fill="rgb(227,119,45)"/><text x="83.0714%" y="367.50"></text></g><g><title>core::intrinsics::copy (2 samples, 0.23%)</title><rect x="83.1627%" y="341" width="0.2275%" height="15" fill="rgb(205,109,36)"/><text x="83.4127%" y="351.50"></text></g><g><title>broccoli::tree::analyze::oned::bin_middle_left_right (8 samples, 0.91%)</title><rect x="82.5939%" y="389" width="0.9101%" height="15" fill="rgb(205,6,39)"/><text x="82.8439%" y="399.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (5 samples, 0.57%)</title><rect x="82.9352%" y="373" width="0.5688%" height="15" fill="rgb(221,32,16)"/><text x="83.1852%" y="383.50"></text></g><g><title>core::ptr::swap (3 samples, 0.34%)</title><rect x="83.1627%" y="357" width="0.3413%" height="15" fill="rgb(228,144,50)"/><text x="83.4127%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.11%)</title><rect x="83.3902%" y="341" width="0.1138%" height="15" fill="rgb(229,201,53)"/><text x="83.6402%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.11%)</title><rect x="83.7315%" y="309" width="0.1138%" height="15" fill="rgb(249,153,27)"/><text x="83.9815%" y="319.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (4 samples, 0.46%)</title><rect x="83.8453%" y="309" width="0.4551%" height="15" fill="rgb(227,106,25)"/><text x="84.0953%" y="319.50"></text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::create_non_leaf (20 samples, 2.28%)</title><rect x="82.5939%" y="421" width="2.2753%" height="15" fill="rgb(230,65,29)"/><text x="82.8439%" y="431.50">b..</text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf (20 samples, 2.28%)</title><rect x="82.5939%" y="405" width="2.2753%" height="15" fill="rgb(221,57,46)"/><text x="82.8439%" y="415.50">b..</text></g><g><title>pdqselect::select_by (12 samples, 1.37%)</title><rect x="83.5040%" y="389" width="1.3652%" height="15" fill="rgb(229,161,17)"/><text x="83.7540%" y="399.50"></text></g><g><title>pdqselect::quickselect (12 samples, 1.37%)</title><rect x="83.5040%" y="373" width="1.3652%" height="15" fill="rgb(222,213,11)"/><text x="83.7540%" y="383.50"></text></g><g><title>pdqselect::recurse (12 samples, 1.37%)</title><rect x="83.5040%" y="357" width="1.3652%" height="15" fill="rgb(235,35,13)"/><text x="83.7540%" y="367.50"></text></g><g><title>pdqselect::partition (12 samples, 1.37%)</title><rect x="83.5040%" y="341" width="1.3652%" height="15" fill="rgb(233,158,34)"/><text x="83.7540%" y="351.50"></text></g><g><title>pdqselect::partition_in_blocks (12 samples, 1.37%)</title><rect x="83.5040%" y="325" width="1.3652%" height="15" fill="rgb(215,151,48)"/><text x="83.7540%" y="335.50"></text></g><g><title>pdqselect::select_by::{{closure}} (5 samples, 0.57%)</title><rect x="84.3003%" y="309" width="0.5688%" height="15" fill="rgb(229,84,14)"/><text x="84.5503%" y="319.50"></text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf::{{closure}} (5 samples, 0.57%)</title><rect x="84.3003%" y="293" width="0.5688%" height="15" fill="rgb(229,68,14)"/><text x="84.5503%" y="303.50"></text></g><g><title>broccoli::tree::analyze::oned::compare_bots (5 samples, 0.57%)</title><rect x="84.3003%" y="277" width="0.5688%" height="15" fill="rgb(243,106,26)"/><text x="84.5503%" y="287.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (5 samples, 0.57%)</title><rect x="84.3003%" y="261" width="0.5688%" height="15" fill="rgb(206,45,38)"/><text x="84.5503%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.11%)</title><rect x="84.8692%" y="405" width="0.1138%" height="15" fill="rgb(226,6,15)"/><text x="85.1192%" y="415.50"></text></g><g><title>broccoli::tree::analyze::builder::NonLeafFinisher&lt;A,T&gt;::finish (1 samples, 0.11%)</title><rect x="84.9829%" y="405" width="0.1138%" height="15" fill="rgb(232,22,54)"/><text x="85.2329%" y="415.50"></text></g><g><title>&lt;broccoli::tree::analyze::DefaultSorter as broccoli::tree::analyze::Sorter&gt;::sort (1 samples, 0.11%)</title><rect x="84.9829%" y="389" width="0.1138%" height="15" fill="rgb(229,222,32)"/><text x="85.2329%" y="399.50"></text></g><g><title>broccoli::tree::analyze::oned::sweeper_update (1 samples, 0.11%)</title><rect x="84.9829%" y="373" width="0.1138%" height="15" fill="rgb(228,62,29)"/><text x="85.2329%" y="383.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by (1 samples, 0.11%)</title><rect x="84.9829%" y="357" width="0.1138%" height="15" fill="rgb(251,103,34)"/><text x="85.2329%" y="367.50"></text></g><g><title>core::slice::sort::quicksort (1 samples, 0.11%)</title><rect x="84.9829%" y="341" width="0.1138%" height="15" fill="rgb(233,12,30)"/><text x="85.2329%" y="351.50"></text></g><g><title>core::slice::sort::recurse (1 samples, 0.11%)</title><rect x="84.9829%" y="325" width="0.1138%" height="15" fill="rgb(238,52,0)"/><text x="85.2329%" y="335.50"></text></g><g><title>core::slice::sort::partition (1 samples, 0.11%)</title><rect x="84.9829%" y="309" width="0.1138%" height="15" fill="rgb(223,98,5)"/><text x="85.2329%" y="319.50"></text></g><g><title>core::slice::sort::partition_in_blocks (1 samples, 0.11%)</title><rect x="84.9829%" y="293" width="0.1138%" height="15" fill="rgb(228,75,37)"/><text x="85.2329%" y="303.50"></text></g><g><title>core::ptr::swap (1 samples, 0.11%)</title><rect x="84.9829%" y="277" width="0.1138%" height="15" fill="rgb(205,115,49)"/><text x="85.2329%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.11%)</title><rect x="84.9829%" y="261" width="0.1138%" height="15" fill="rgb(250,154,43)"/><text x="85.2329%" y="271.50"></text></g><g><title>broccoli::tree::analyze::oned::bin_middle_left_right (3 samples, 0.34%)</title><rect x="85.0967%" y="373" width="0.3413%" height="15" fill="rgb(226,43,29)"/><text x="85.3467%" y="383.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.11%)</title><rect x="85.3242%" y="357" width="0.1138%" height="15" fill="rgb(249,228,39)"/><text x="85.5742%" y="367.50"></text></g><g><title>core::ptr::swap (1 samples, 0.11%)</title><rect x="85.3242%" y="341" width="0.1138%" height="15" fill="rgb(216,79,43)"/><text x="85.5742%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.11%)</title><rect x="85.3242%" y="325" width="0.1138%" height="15" fill="rgb(228,95,12)"/><text x="85.5742%" y="335.50"></text></g><g><title>pdqselect::insertion_sort (1 samples, 0.11%)</title><rect x="85.4380%" y="325" width="0.1138%" height="15" fill="rgb(249,221,15)"/><text x="85.6880%" y="335.50"></text></g><g><title>pdqselect::shift_tail (1 samples, 0.11%)</title><rect x="85.4380%" y="309" width="0.1138%" height="15" fill="rgb(233,34,13)"/><text x="85.6880%" y="319.50"></text></g><g><title>pdqselect::select_by::{{closure}} (1 samples, 0.11%)</title><rect x="85.4380%" y="293" width="0.1138%" height="15" fill="rgb(214,103,39)"/><text x="85.6880%" y="303.50"></text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf::{{closure}} (1 samples, 0.11%)</title><rect x="85.4380%" y="277" width="0.1138%" height="15" fill="rgb(251,126,39)"/><text x="85.6880%" y="287.50"></text></g><g><title>broccoli::tree::analyze::oned::compare_bots (1 samples, 0.11%)</title><rect x="85.4380%" y="261" width="0.1138%" height="15" fill="rgb(214,216,36)"/><text x="85.6880%" y="271.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.11%)</title><rect x="85.4380%" y="245" width="0.1138%" height="15" fill="rgb(220,221,8)"/><text x="85.6880%" y="255.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.11%)</title><rect x="85.5518%" y="309" width="0.1138%" height="15" fill="rgb(240,216,3)"/><text x="85.8018%" y="319.50"></text></g><g><title>core::ptr::swap (1 samples, 0.11%)</title><rect x="85.5518%" y="293" width="0.1138%" height="15" fill="rgb(232,218,17)"/><text x="85.8018%" y="303.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.11%)</title><rect x="85.5518%" y="277" width="0.1138%" height="15" fill="rgb(229,163,45)"/><text x="85.8018%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.23%)</title><rect x="85.7793%" y="293" width="0.2275%" height="15" fill="rgb(231,110,42)"/><text x="86.0293%" y="303.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.11%)</title><rect x="86.0068%" y="293" width="0.1138%" height="15" fill="rgb(208,170,48)"/><text x="86.2568%" y="303.50"></text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::create_non_leaf (10 samples, 1.14%)</title><rect x="85.0967%" y="405" width="1.1377%" height="15" fill="rgb(239,116,25)"/><text x="85.3467%" y="415.50"></text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf (10 samples, 1.14%)</title><rect x="85.0967%" y="389" width="1.1377%" height="15" fill="rgb(219,200,50)"/><text x="85.3467%" y="399.50"></text></g><g><title>pdqselect::select_by (7 samples, 0.80%)</title><rect x="85.4380%" y="373" width="0.7964%" height="15" fill="rgb(245,200,0)"/><text x="85.6880%" y="383.50"></text></g><g><title>pdqselect::quickselect (7 samples, 0.80%)</title><rect x="85.4380%" y="357" width="0.7964%" height="15" fill="rgb(245,119,33)"/><text x="85.6880%" y="367.50"></text></g><g><title>pdqselect::recurse (7 samples, 0.80%)</title><rect x="85.4380%" y="341" width="0.7964%" height="15" fill="rgb(231,125,12)"/><text x="85.6880%" y="351.50"></text></g><g><title>pdqselect::partition (6 samples, 0.68%)</title><rect x="85.5518%" y="325" width="0.6826%" height="15" fill="rgb(216,96,41)"/><text x="85.8018%" y="335.50"></text></g><g><title>pdqselect::partition_in_blocks (5 samples, 0.57%)</title><rect x="85.6655%" y="309" width="0.5688%" height="15" fill="rgb(248,43,45)"/><text x="85.9155%" y="319.50"></text></g><g><title>pdqselect::select_by::{{closure}} (1 samples, 0.11%)</title><rect x="86.1206%" y="293" width="0.1138%" height="15" fill="rgb(217,222,7)"/><text x="86.3706%" y="303.50"></text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf::{{closure}} (1 samples, 0.11%)</title><rect x="86.1206%" y="277" width="0.1138%" height="15" fill="rgb(233,28,6)"/><text x="86.3706%" y="287.50"></text></g><g><title>broccoli::tree::analyze::oned::compare_bots (1 samples, 0.11%)</title><rect x="86.1206%" y="261" width="0.1138%" height="15" fill="rgb(231,218,15)"/><text x="86.3706%" y="271.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.11%)</title><rect x="86.1206%" y="245" width="0.1138%" height="15" fill="rgb(226,171,48)"/><text x="86.3706%" y="255.50"></text></g><g><title>core::slice::sort::insertion_sort (1 samples, 0.11%)</title><rect x="86.2344%" y="293" width="0.1138%" height="15" fill="rgb(235,201,9)"/><text x="86.4844%" y="303.50"></text></g><g><title>core::slice::sort::shift_tail (1 samples, 0.11%)</title><rect x="86.2344%" y="277" width="0.1138%" height="15" fill="rgb(217,80,15)"/><text x="86.4844%" y="287.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by::{{closure}} (1 samples, 0.11%)</title><rect x="86.2344%" y="261" width="0.1138%" height="15" fill="rgb(219,152,8)"/><text x="86.4844%" y="271.50"></text></g><g><title>broccoli::tree::analyze::oned::sweeper_update::{{closure}} (1 samples, 0.11%)</title><rect x="86.2344%" y="245" width="0.1138%" height="15" fill="rgb(243,107,38)"/><text x="86.4844%" y="255.50"></text></g><g><title>broccoli::tree::analyze::oned::compare_bots (1 samples, 0.11%)</title><rect x="86.2344%" y="229" width="0.1138%" height="15" fill="rgb(231,17,5)"/><text x="86.4844%" y="239.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.11%)</title><rect x="86.2344%" y="213" width="0.1138%" height="15" fill="rgb(209,25,54)"/><text x="86.4844%" y="223.50"></text></g><g><title>core::slice::sort::partition (1 samples, 0.11%)</title><rect x="86.3481%" y="293" width="0.1138%" height="15" fill="rgb(219,0,2)"/><text x="86.5981%" y="303.50"></text></g><g><title>core::slice::sort::partition_in_blocks (1 samples, 0.11%)</title><rect x="86.3481%" y="277" width="0.1138%" height="15" fill="rgb(246,9,5)"/><text x="86.5981%" y="287.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.11%)</title><rect x="86.3481%" y="261" width="0.1138%" height="15" fill="rgb(226,159,4)"/><text x="86.5981%" y="271.50"></text></g><g><title>broccoli::tree::analyze::builder::NonLeafFinisher&lt;A,T&gt;::finish (3 samples, 0.34%)</title><rect x="86.2344%" y="389" width="0.3413%" height="15" fill="rgb(219,175,34)"/><text x="86.4844%" y="399.50"></text></g><g><title>&lt;broccoli::tree::analyze::DefaultSorter as broccoli::tree::analyze::Sorter&gt;::sort (3 samples, 0.34%)</title><rect x="86.2344%" y="373" width="0.3413%" height="15" fill="rgb(236,10,46)"/><text x="86.4844%" y="383.50"></text></g><g><title>broccoli::tree::analyze::oned::sweeper_update (3 samples, 0.34%)</title><rect x="86.2344%" y="357" width="0.3413%" height="15" fill="rgb(240,211,16)"/><text x="86.4844%" y="367.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by (3 samples, 0.34%)</title><rect x="86.2344%" y="341" width="0.3413%" height="15" fill="rgb(205,3,43)"/><text x="86.4844%" y="351.50"></text></g><g><title>core::slice::sort::quicksort (3 samples, 0.34%)</title><rect x="86.2344%" y="325" width="0.3413%" height="15" fill="rgb(245,7,22)"/><text x="86.4844%" y="335.50"></text></g><g><title>core::slice::sort::recurse (3 samples, 0.34%)</title><rect x="86.2344%" y="309" width="0.3413%" height="15" fill="rgb(239,132,32)"/><text x="86.4844%" y="319.50"></text></g><g><title>core::slice::sort::recurse (1 samples, 0.11%)</title><rect x="86.4619%" y="293" width="0.1138%" height="15" fill="rgb(228,202,34)"/><text x="86.7119%" y="303.50"></text></g><g><title>core::slice::sort::insertion_sort (1 samples, 0.11%)</title><rect x="86.4619%" y="277" width="0.1138%" height="15" fill="rgb(254,200,22)"/><text x="86.7119%" y="287.50"></text></g><g><title>core::slice::sort::shift_tail (1 samples, 0.11%)</title><rect x="86.4619%" y="261" width="0.1138%" height="15" fill="rgb(219,10,39)"/><text x="86.7119%" y="271.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.11%)</title><rect x="86.4619%" y="245" width="0.1138%" height="15" fill="rgb(226,210,39)"/><text x="86.7119%" y="255.50"></text></g><g><title>broccoli::tree::analyze::oned::bin_middle_left_right (1 samples, 0.11%)</title><rect x="86.5757%" y="357" width="0.1138%" height="15" fill="rgb(208,219,16)"/><text x="86.8257%" y="367.50"></text></g><g><title>axgeom::range::Range&lt;T&gt;::contains_ext (1 samples, 0.11%)</title><rect x="86.5757%" y="341" width="0.1138%" height="15" fill="rgb(216,158,51)"/><text x="86.8257%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.11%)</title><rect x="86.8032%" y="277" width="0.1138%" height="15" fill="rgb(233,14,44)"/><text x="87.0532%" y="287.50"></text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::create_non_leaf (8 samples, 0.91%)</title><rect x="86.5757%" y="389" width="0.9101%" height="15" fill="rgb(237,97,39)"/><text x="86.8257%" y="399.50"></text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf (8 samples, 0.91%)</title><rect x="86.5757%" y="373" width="0.9101%" height="15" fill="rgb(218,198,43)"/><text x="86.8257%" y="383.50"></text></g><g><title>pdqselect::select_by (7 samples, 0.80%)</title><rect x="86.6894%" y="357" width="0.7964%" height="15" fill="rgb(231,104,20)"/><text x="86.9394%" y="367.50"></text></g><g><title>pdqselect::quickselect (7 samples, 0.80%)</title><rect x="86.6894%" y="341" width="0.7964%" height="15" fill="rgb(254,36,13)"/><text x="86.9394%" y="351.50"></text></g><g><title>pdqselect::recurse (7 samples, 0.80%)</title><rect x="86.6894%" y="325" width="0.7964%" height="15" fill="rgb(248,14,50)"/><text x="86.9394%" y="335.50"></text></g><g><title>pdqselect::partition (7 samples, 0.80%)</title><rect x="86.6894%" y="309" width="0.7964%" height="15" fill="rgb(217,107,29)"/><text x="86.9394%" y="319.50"></text></g><g><title>pdqselect::partition_in_blocks (7 samples, 0.80%)</title><rect x="86.6894%" y="293" width="0.7964%" height="15" fill="rgb(251,169,33)"/><text x="86.9394%" y="303.50"></text></g><g><title>pdqselect::select_by::{{closure}} (5 samples, 0.57%)</title><rect x="86.9170%" y="277" width="0.5688%" height="15" fill="rgb(217,108,32)"/><text x="87.1670%" y="287.50"></text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf::{{closure}} (5 samples, 0.57%)</title><rect x="86.9170%" y="261" width="0.5688%" height="15" fill="rgb(219,66,42)"/><text x="87.1670%" y="271.50"></text></g><g><title>broccoli::tree::analyze::oned::compare_bots (5 samples, 0.57%)</title><rect x="86.9170%" y="245" width="0.5688%" height="15" fill="rgb(206,180,7)"/><text x="87.1670%" y="255.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (4 samples, 0.46%)</title><rect x="87.0307%" y="229" width="0.4551%" height="15" fill="rgb(208,226,31)"/><text x="87.2807%" y="239.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.11%)</title><rect x="87.4858%" y="245" width="0.1138%" height="15" fill="rgb(218,26,49)"/><text x="87.7358%" y="255.50"></text></g><g><title>&lt;core::slice::sort::CopyOnDrop&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.11%)</title><rect x="87.4858%" y="229" width="0.1138%" height="15" fill="rgb(233,197,48)"/><text x="87.7358%" y="239.50"></text></g><g><title>core::slice::sort::insertion_sort (2 samples, 0.23%)</title><rect x="87.4858%" y="277" width="0.2275%" height="15" fill="rgb(252,181,51)"/><text x="87.7358%" y="287.50"></text></g><g><title>core::slice::sort::shift_tail (2 samples, 0.23%)</title><rect x="87.4858%" y="261" width="0.2275%" height="15" fill="rgb(253,90,19)"/><text x="87.7358%" y="271.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by::{{closure}} (1 samples, 0.11%)</title><rect x="87.5995%" y="245" width="0.1138%" height="15" fill="rgb(215,171,30)"/><text x="87.8495%" y="255.50"></text></g><g><title>broccoli::tree::analyze::oned::sweeper_update::{{closure}} (1 samples, 0.11%)</title><rect x="87.5995%" y="229" width="0.1138%" height="15" fill="rgb(214,222,9)"/><text x="87.8495%" y="239.50"></text></g><g><title>broccoli::tree::analyze::oned::compare_bots (1 samples, 0.11%)</title><rect x="87.5995%" y="213" width="0.1138%" height="15" fill="rgb(223,3,22)"/><text x="87.8495%" y="223.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.11%)</title><rect x="87.5995%" y="197" width="0.1138%" height="15" fill="rgb(225,196,46)"/><text x="87.8495%" y="207.50"></text></g><g><title>core::slice::sort::partition (2 samples, 0.23%)</title><rect x="87.7133%" y="277" width="0.2275%" height="15" fill="rgb(209,110,37)"/><text x="87.9633%" y="287.50"></text></g><g><title>core::slice::sort::partition_in_blocks (2 samples, 0.23%)</title><rect x="87.7133%" y="261" width="0.2275%" height="15" fill="rgb(249,89,12)"/><text x="87.9633%" y="271.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.11%)</title><rect x="87.9408%" y="245" width="0.1138%" height="15" fill="rgb(226,27,33)"/><text x="88.1908%" y="255.50"></text></g><g><title>core::slice::sort::insertion_sort (2 samples, 0.23%)</title><rect x="87.9408%" y="261" width="0.2275%" height="15" fill="rgb(213,82,22)"/><text x="88.1908%" y="271.50"></text></g><g><title>core::slice::sort::shift_tail (1 samples, 0.11%)</title><rect x="88.0546%" y="245" width="0.1138%" height="15" fill="rgb(248,140,0)"/><text x="88.3046%" y="255.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.11%)</title><rect x="88.0546%" y="229" width="0.1138%" height="15" fill="rgb(228,106,3)"/><text x="88.3046%" y="239.50"></text></g><g><title>&lt;core::slice::sort::CopyOnDrop&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.11%)</title><rect x="88.0546%" y="213" width="0.1138%" height="15" fill="rgb(209,23,37)"/><text x="88.3046%" y="223.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.11%)</title><rect x="88.0546%" y="197" width="0.1138%" height="15" fill="rgb(241,93,50)"/><text x="88.3046%" y="207.50"></text></g><g><title>&lt;broccoli::tree::analyze::DefaultSorter as broccoli::tree::analyze::Sorter&gt;::sort (7 samples, 0.80%)</title><rect x="87.4858%" y="357" width="0.7964%" height="15" fill="rgb(253,46,43)"/><text x="87.7358%" y="367.50"></text></g><g><title>broccoli::tree::analyze::oned::sweeper_update (7 samples, 0.80%)</title><rect x="87.4858%" y="341" width="0.7964%" height="15" fill="rgb(226,206,43)"/><text x="87.7358%" y="351.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by (7 samples, 0.80%)</title><rect x="87.4858%" y="325" width="0.7964%" height="15" fill="rgb(217,54,7)"/><text x="87.7358%" y="335.50"></text></g><g><title>core::slice::sort::quicksort (7 samples, 0.80%)</title><rect x="87.4858%" y="309" width="0.7964%" height="15" fill="rgb(223,5,52)"/><text x="87.7358%" y="319.50"></text></g><g><title>core::slice::sort::recurse (7 samples, 0.80%)</title><rect x="87.4858%" y="293" width="0.7964%" height="15" fill="rgb(206,52,46)"/><text x="87.7358%" y="303.50"></text></g><g><title>core::slice::sort::recurse (3 samples, 0.34%)</title><rect x="87.9408%" y="277" width="0.3413%" height="15" fill="rgb(253,136,11)"/><text x="88.1908%" y="287.50"></text></g><g><title>core::slice::sort::recurse (1 samples, 0.11%)</title><rect x="88.1684%" y="261" width="0.1138%" height="15" fill="rgb(208,106,33)"/><text x="88.4184%" y="271.50"></text></g><g><title>core::slice::sort::insertion_sort (1 samples, 0.11%)</title><rect x="88.1684%" y="245" width="0.1138%" height="15" fill="rgb(206,54,4)"/><text x="88.4184%" y="255.50"></text></g><g><title>core::slice::sort::shift_tail (1 samples, 0.11%)</title><rect x="88.1684%" y="229" width="0.1138%" height="15" fill="rgb(213,3,15)"/><text x="88.4184%" y="239.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.11%)</title><rect x="88.1684%" y="213" width="0.1138%" height="15" fill="rgb(252,211,39)"/><text x="88.4184%" y="223.50"></text></g><g><title>&lt;core::slice::sort::CopyOnDrop&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.11%)</title><rect x="88.1684%" y="197" width="0.1138%" height="15" fill="rgb(223,6,36)"/><text x="88.4184%" y="207.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.11%)</title><rect x="88.1684%" y="181" width="0.1138%" height="15" fill="rgb(252,169,45)"/><text x="88.4184%" y="191.50"></text></g><g><title>broccoli::tree::analyze::builder::NonLeafFinisher&lt;A,T&gt;::finish (8 samples, 0.91%)</title><rect x="87.4858%" y="373" width="0.9101%" height="15" fill="rgb(212,48,26)"/><text x="87.7358%" y="383.50"></text></g><g><title>broccoli::tree::analyze::builder::create_cont (1 samples, 0.11%)</title><rect x="88.2821%" y="357" width="0.1138%" height="15" fill="rgb(251,102,48)"/><text x="88.5321%" y="367.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.11%)</title><rect x="88.7372%" y="325" width="0.1138%" height="15" fill="rgb(243,208,16)"/><text x="88.9872%" y="335.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.11%)</title><rect x="88.7372%" y="309" width="0.1138%" height="15" fill="rgb(219,96,24)"/><text x="88.9872%" y="319.50"></text></g><g><title>broccoli::tree::analyze::oned::bin_middle_left_right (5 samples, 0.57%)</title><rect x="88.3959%" y="341" width="0.5688%" height="15" fill="rgb(219,33,29)"/><text x="88.6459%" y="351.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.11%)</title><rect x="88.8510%" y="325" width="0.1138%" height="15" fill="rgb(223,176,5)"/><text x="89.1010%" y="335.50"></text></g><g><title>core::ptr::swap (1 samples, 0.11%)</title><rect x="88.8510%" y="309" width="0.1138%" height="15" fill="rgb(228,140,14)"/><text x="89.1010%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.11%)</title><rect x="88.8510%" y="293" width="0.1138%" height="15" fill="rgb(217,179,31)"/><text x="89.1010%" y="303.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.23%)</title><rect x="89.4198%" y="261" width="0.2275%" height="15" fill="rgb(230,9,30)"/><text x="89.6698%" y="271.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.11%)</title><rect x="89.6473%" y="261" width="0.1138%" height="15" fill="rgb(230,136,20)"/><text x="89.8973%" y="271.50"></text></g><g><title>pdqselect::partition_in_blocks::width (1 samples, 0.11%)</title><rect x="89.7611%" y="261" width="0.1138%" height="15" fill="rgb(215,210,22)"/><text x="90.0111%" y="271.50"></text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::create_non_leaf (15 samples, 1.71%)</title><rect x="88.3959%" y="373" width="1.7065%" height="15" fill="rgb(218,43,5)"/><text x="88.6459%" y="383.50"></text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf (15 samples, 1.71%)</title><rect x="88.3959%" y="357" width="1.7065%" height="15" fill="rgb(216,11,5)"/><text x="88.6459%" y="367.50"></text></g><g><title>pdqselect::select_by (10 samples, 1.14%)</title><rect x="88.9647%" y="341" width="1.1377%" height="15" fill="rgb(209,82,29)"/><text x="89.2147%" y="351.50"></text></g><g><title>pdqselect::quickselect (10 samples, 1.14%)</title><rect x="88.9647%" y="325" width="1.1377%" height="15" fill="rgb(244,115,12)"/><text x="89.2147%" y="335.50"></text></g><g><title>pdqselect::recurse (10 samples, 1.14%)</title><rect x="88.9647%" y="309" width="1.1377%" height="15" fill="rgb(222,82,18)"/><text x="89.2147%" y="319.50"></text></g><g><title>pdqselect::partition (10 samples, 1.14%)</title><rect x="88.9647%" y="293" width="1.1377%" height="15" fill="rgb(249,227,8)"/><text x="89.2147%" y="303.50"></text></g><g><title>pdqselect::partition_in_blocks (10 samples, 1.14%)</title><rect x="88.9647%" y="277" width="1.1377%" height="15" fill="rgb(253,141,45)"/><text x="89.2147%" y="287.50"></text></g><g><title>pdqselect::select_by::{{closure}} (2 samples, 0.23%)</title><rect x="89.8749%" y="261" width="0.2275%" height="15" fill="rgb(234,184,4)"/><text x="90.1249%" y="271.50"></text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf::{{closure}} (2 samples, 0.23%)</title><rect x="89.8749%" y="245" width="0.2275%" height="15" fill="rgb(218,194,23)"/><text x="90.1249%" y="255.50"></text></g><g><title>broccoli::tree::analyze::oned::compare_bots (2 samples, 0.23%)</title><rect x="89.8749%" y="229" width="0.2275%" height="15" fill="rgb(235,66,41)"/><text x="90.1249%" y="239.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (2 samples, 0.23%)</title><rect x="89.8749%" y="213" width="0.2275%" height="15" fill="rgb(245,217,1)"/><text x="90.1249%" y="223.50"></text></g><g><title>broccoli::tree::analyze::builder::NonLeafFinisher&lt;A,T&gt;::finish (1 samples, 0.11%)</title><rect x="90.1024%" y="357" width="0.1138%" height="15" fill="rgb(229,91,1)"/><text x="90.3524%" y="367.50"></text></g><g><title>&lt;broccoli::tree::analyze::DefaultSorter as broccoli::tree::analyze::Sorter&gt;::sort (1 samples, 0.11%)</title><rect x="90.1024%" y="341" width="0.1138%" height="15" fill="rgb(207,101,30)"/><text x="90.3524%" y="351.50"></text></g><g><title>broccoli::tree::analyze::oned::sweeper_update (1 samples, 0.11%)</title><rect x="90.1024%" y="325" width="0.1138%" height="15" fill="rgb(223,82,49)"/><text x="90.3524%" y="335.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by (1 samples, 0.11%)</title><rect x="90.1024%" y="309" width="0.1138%" height="15" fill="rgb(218,167,17)"/><text x="90.3524%" y="319.50"></text></g><g><title>core::slice::sort::quicksort (1 samples, 0.11%)</title><rect x="90.1024%" y="293" width="0.1138%" height="15" fill="rgb(208,103,14)"/><text x="90.3524%" y="303.50"></text></g><g><title>core::slice::sort::recurse (1 samples, 0.11%)</title><rect x="90.1024%" y="277" width="0.1138%" height="15" fill="rgb(238,20,8)"/><text x="90.3524%" y="287.50"></text></g><g><title>core::slice::sort::insertion_sort (1 samples, 0.11%)</title><rect x="90.1024%" y="261" width="0.1138%" height="15" fill="rgb(218,80,54)"/><text x="90.3524%" y="271.50"></text></g><g><title>core::slice::sort::shift_tail (1 samples, 0.11%)</title><rect x="90.1024%" y="245" width="0.1138%" height="15" fill="rgb(240,144,17)"/><text x="90.3524%" y="255.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by::{{closure}} (1 samples, 0.11%)</title><rect x="90.1024%" y="229" width="0.1138%" height="15" fill="rgb(245,27,50)"/><text x="90.3524%" y="239.50"></text></g><g><title>broccoli::tree::analyze::oned::sweeper_update::{{closure}} (1 samples, 0.11%)</title><rect x="90.1024%" y="213" width="0.1138%" height="15" fill="rgb(251,51,7)"/><text x="90.3524%" y="223.50"></text></g><g><title>broccoli::tree::analyze::oned::compare_bots (1 samples, 0.11%)</title><rect x="90.1024%" y="197" width="0.1138%" height="15" fill="rgb(245,217,29)"/><text x="90.3524%" y="207.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.11%)</title><rect x="90.1024%" y="181" width="0.1138%" height="15" fill="rgb(221,176,29)"/><text x="90.3524%" y="191.50"></text></g><g><title>broccoli::tree::analyze::oned::bin_middle_left_right (3 samples, 0.34%)</title><rect x="90.2162%" y="325" width="0.3413%" height="15" fill="rgb(212,180,24)"/><text x="90.4662%" y="335.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.11%)</title><rect x="90.4437%" y="309" width="0.1138%" height="15" fill="rgb(254,24,2)"/><text x="90.6937%" y="319.50"></text></g><g><title>core::ptr::swap (1 samples, 0.11%)</title><rect x="90.4437%" y="293" width="0.1138%" height="15" fill="rgb(230,100,2)"/><text x="90.6937%" y="303.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.11%)</title><rect x="90.4437%" y="277" width="0.1138%" height="15" fill="rgb(219,142,25)"/><text x="90.6937%" y="287.50"></text></g><g><title>pdqselect::choose_pivot (1 samples, 0.11%)</title><rect x="90.6712%" y="277" width="0.1138%" height="15" fill="rgb(240,73,43)"/><text x="90.9212%" y="287.50"></text></g><g><title>pdqselect::choose_pivot::{{closure}} (1 samples, 0.11%)</title><rect x="90.6712%" y="261" width="0.1138%" height="15" fill="rgb(214,114,15)"/><text x="90.9212%" y="271.50"></text></g><g><title>pdqselect::choose_pivot::{{closure}} (1 samples, 0.11%)</title><rect x="90.6712%" y="245" width="0.1138%" height="15" fill="rgb(207,130,4)"/><text x="90.9212%" y="255.50"></text></g><g><title>pdqselect::insertion_sort (1 samples, 0.11%)</title><rect x="90.7850%" y="277" width="0.1138%" height="15" fill="rgb(221,25,40)"/><text x="91.0350%" y="287.50"></text></g><g><title>pdqselect::shift_tail (1 samples, 0.11%)</title><rect x="90.7850%" y="261" width="0.1138%" height="15" fill="rgb(241,184,7)"/><text x="91.0350%" y="271.50"></text></g><g><title>core::ptr::read (1 samples, 0.11%)</title><rect x="90.7850%" y="245" width="0.1138%" height="15" fill="rgb(235,159,4)"/><text x="91.0350%" y="255.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.11%)</title><rect x="91.0125%" y="245" width="0.1138%" height="15" fill="rgb(214,87,48)"/><text x="91.2625%" y="255.50"></text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::create_non_leaf (11 samples, 1.25%)</title><rect x="90.2162%" y="357" width="1.2514%" height="15" fill="rgb(246,198,24)"/><text x="90.4662%" y="367.50"></text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf (11 samples, 1.25%)</title><rect x="90.2162%" y="341" width="1.2514%" height="15" fill="rgb(209,66,40)"/><text x="90.4662%" y="351.50"></text></g><g><title>pdqselect::select_by (8 samples, 0.91%)</title><rect x="90.5575%" y="325" width="0.9101%" height="15" fill="rgb(233,147,39)"/><text x="90.8075%" y="335.50"></text></g><g><title>pdqselect::quickselect (8 samples, 0.91%)</title><rect x="90.5575%" y="309" width="0.9101%" height="15" fill="rgb(231,145,52)"/><text x="90.8075%" y="319.50"></text></g><g><title>pdqselect::recurse (8 samples, 0.91%)</title><rect x="90.5575%" y="293" width="0.9101%" height="15" fill="rgb(206,20,26)"/><text x="90.8075%" y="303.50"></text></g><g><title>pdqselect::partition (5 samples, 0.57%)</title><rect x="90.8987%" y="277" width="0.5688%" height="15" fill="rgb(238,220,4)"/><text x="91.1487%" y="287.50"></text></g><g><title>pdqselect::partition_in_blocks (4 samples, 0.46%)</title><rect x="91.0125%" y="261" width="0.4551%" height="15" fill="rgb(252,195,42)"/><text x="91.2625%" y="271.50"></text></g><g><title>pdqselect::select_by::{{closure}} (3 samples, 0.34%)</title><rect x="91.1263%" y="245" width="0.3413%" height="15" fill="rgb(209,10,6)"/><text x="91.3763%" y="255.50"></text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf::{{closure}} (3 samples, 0.34%)</title><rect x="91.1263%" y="229" width="0.3413%" height="15" fill="rgb(229,3,52)"/><text x="91.3763%" y="239.50"></text></g><g><title>broccoli::tree::analyze::oned::compare_bots (3 samples, 0.34%)</title><rect x="91.1263%" y="213" width="0.3413%" height="15" fill="rgb(253,49,37)"/><text x="91.3763%" y="223.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (2 samples, 0.23%)</title><rect x="91.2400%" y="197" width="0.2275%" height="15" fill="rgb(240,103,49)"/><text x="91.4900%" y="207.50"></text></g><g><title>core::slice::sort::insertion_sort (1 samples, 0.11%)</title><rect x="91.4676%" y="245" width="0.1138%" height="15" fill="rgb(250,182,30)"/><text x="91.7176%" y="255.50"></text></g><g><title>core::slice::sort::shift_tail (1 samples, 0.11%)</title><rect x="91.4676%" y="229" width="0.1138%" height="15" fill="rgb(248,8,30)"/><text x="91.7176%" y="239.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by::{{closure}} (1 samples, 0.11%)</title><rect x="91.4676%" y="213" width="0.1138%" height="15" fill="rgb(237,120,30)"/><text x="91.7176%" y="223.50"></text></g><g><title>broccoli::tree::analyze::oned::sweeper_update::{{closure}} (1 samples, 0.11%)</title><rect x="91.4676%" y="197" width="0.1138%" height="15" fill="rgb(221,146,34)"/><text x="91.7176%" y="207.50"></text></g><g><title>broccoli::tree::analyze::oned::compare_bots (1 samples, 0.11%)</title><rect x="91.4676%" y="181" width="0.1138%" height="15" fill="rgb(242,55,13)"/><text x="91.7176%" y="191.50"></text></g><g><title>core::slice::sort::partition (1 samples, 0.11%)</title><rect x="91.5813%" y="245" width="0.1138%" height="15" fill="rgb(242,112,31)"/><text x="91.8313%" y="255.50"></text></g><g><title>core::slice::sort::partition_in_blocks (1 samples, 0.11%)</title><rect x="91.5813%" y="229" width="0.1138%" height="15" fill="rgb(249,192,27)"/><text x="91.8313%" y="239.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.11%)</title><rect x="91.5813%" y="213" width="0.1138%" height="15" fill="rgb(208,204,44)"/><text x="91.8313%" y="223.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.11%)</title><rect x="91.6951%" y="213" width="0.1138%" height="15" fill="rgb(208,93,54)"/><text x="91.9451%" y="223.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (1 samples, 0.11%)</title><rect x="91.6951%" y="197" width="0.1138%" height="15" fill="rgb(242,1,31)"/><text x="91.9451%" y="207.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (1 samples, 0.11%)</title><rect x="91.6951%" y="181" width="0.1138%" height="15" fill="rgb(241,83,25)"/><text x="91.9451%" y="191.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.11%)</title><rect x="91.8089%" y="197" width="0.1138%" height="15" fill="rgb(205,169,50)"/><text x="92.0589%" y="207.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.11%)</title><rect x="91.9226%" y="197" width="0.1138%" height="15" fill="rgb(239,186,37)"/><text x="92.1726%" y="207.50"></text></g><g><title>&lt;core::slice::sort::CopyOnDrop&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.11%)</title><rect x="91.9226%" y="181" width="0.1138%" height="15" fill="rgb(205,221,10)"/><text x="92.1726%" y="191.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.11%)</title><rect x="91.9226%" y="165" width="0.1138%" height="15" fill="rgb(218,196,15)"/><text x="92.1726%" y="175.50"></text></g><g><title>&lt;broccoli::tree::analyze::DefaultSorter as broccoli::tree::analyze::Sorter&gt;::sort (6 samples, 0.68%)</title><rect x="91.4676%" y="325" width="0.6826%" height="15" fill="rgb(218,196,35)"/><text x="91.7176%" y="335.50"></text></g><g><title>broccoli::tree::analyze::oned::sweeper_update (6 samples, 0.68%)</title><rect x="91.4676%" y="309" width="0.6826%" height="15" fill="rgb(233,63,24)"/><text x="91.7176%" y="319.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by (6 samples, 0.68%)</title><rect x="91.4676%" y="293" width="0.6826%" height="15" fill="rgb(225,8,4)"/><text x="91.7176%" y="303.50"></text></g><g><title>core::slice::sort::quicksort (6 samples, 0.68%)</title><rect x="91.4676%" y="277" width="0.6826%" height="15" fill="rgb(234,105,35)"/><text x="91.7176%" y="287.50"></text></g><g><title>core::slice::sort::recurse (6 samples, 0.68%)</title><rect x="91.4676%" y="261" width="0.6826%" height="15" fill="rgb(236,21,32)"/><text x="91.7176%" y="271.50"></text></g><g><title>core::slice::sort::recurse (4 samples, 0.46%)</title><rect x="91.6951%" y="245" width="0.4551%" height="15" fill="rgb(228,109,6)"/><text x="91.9451%" y="255.50"></text></g><g><title>core::slice::sort::insertion_sort (4 samples, 0.46%)</title><rect x="91.6951%" y="229" width="0.4551%" height="15" fill="rgb(229,215,31)"/><text x="91.9451%" y="239.50"></text></g><g><title>core::slice::sort::shift_tail (3 samples, 0.34%)</title><rect x="91.8089%" y="213" width="0.3413%" height="15" fill="rgb(221,52,54)"/><text x="92.0589%" y="223.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by::{{closure}} (1 samples, 0.11%)</title><rect x="92.0364%" y="197" width="0.1138%" height="15" fill="rgb(252,129,43)"/><text x="92.2864%" y="207.50"></text></g><g><title>broccoli::tree::analyze::oned::sweeper_update::{{closure}} (1 samples, 0.11%)</title><rect x="92.0364%" y="181" width="0.1138%" height="15" fill="rgb(248,183,27)"/><text x="92.2864%" y="191.50"></text></g><g><title>broccoli::tree::analyze::oned::compare_bots (1 samples, 0.11%)</title><rect x="92.0364%" y="165" width="0.1138%" height="15" fill="rgb(250,0,22)"/><text x="92.2864%" y="175.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.11%)</title><rect x="92.0364%" y="149" width="0.1138%" height="15" fill="rgb(213,166,10)"/><text x="92.2864%" y="159.50"></text></g><g><title>broccoli::tree::analyze::builder::NonLeafFinisher&lt;A,T&gt;::finish (7 samples, 0.80%)</title><rect x="91.4676%" y="341" width="0.7964%" height="15" fill="rgb(207,163,36)"/><text x="91.7176%" y="351.50"></text></g><g><title>broccoli::tree::analyze::builder::create_cont (1 samples, 0.11%)</title><rect x="92.1502%" y="325" width="0.1138%" height="15" fill="rgb(208,122,22)"/><text x="92.4002%" y="335.50"></text></g><g><title>axgeom::range::Range&lt;T&gt;::contains_ext (1 samples, 0.11%)</title><rect x="92.2639%" y="293" width="0.1138%" height="15" fill="rgb(207,104,49)"/><text x="92.5139%" y="303.50"></text></g><g><title>broccoli::tree::analyze::oned::bin_middle_left_right (5 samples, 0.57%)</title><rect x="92.2639%" y="309" width="0.5688%" height="15" fill="rgb(248,211,50)"/><text x="92.5139%" y="319.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (4 samples, 0.46%)</title><rect x="92.3777%" y="293" width="0.4551%" height="15" fill="rgb(217,13,45)"/><text x="92.6277%" y="303.50"></text></g><g><title>core::ptr::swap (4 samples, 0.46%)</title><rect x="92.3777%" y="277" width="0.4551%" height="15" fill="rgb(211,216,49)"/><text x="92.6277%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.46%)</title><rect x="92.3777%" y="261" width="0.4551%" height="15" fill="rgb(221,58,53)"/><text x="92.6277%" y="271.50"></text></g><g><title>pdqselect::choose_pivot (1 samples, 0.11%)</title><rect x="92.9465%" y="261" width="0.1138%" height="15" fill="rgb(220,112,41)"/><text x="93.1965%" y="271.50"></text></g><g><title>pdqselect::choose_pivot::{{closure}} (1 samples, 0.11%)</title><rect x="92.9465%" y="245" width="0.1138%" height="15" fill="rgb(236,38,28)"/><text x="93.1965%" y="255.50"></text></g><g><title>pdqselect::insertion_sort (2 samples, 0.23%)</title><rect x="93.0603%" y="261" width="0.2275%" height="15" fill="rgb(227,195,22)"/><text x="93.3103%" y="271.50"></text></g><g><title>pdqselect::shift_tail (2 samples, 0.23%)</title><rect x="93.0603%" y="245" width="0.2275%" height="15" fill="rgb(214,55,33)"/><text x="93.3103%" y="255.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.11%)</title><rect x="93.1741%" y="229" width="0.1138%" height="15" fill="rgb(248,80,13)"/><text x="93.4241%" y="239.50"></text></g><g><title>&lt;pdqselect::CopyOnDrop&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.11%)</title><rect x="93.1741%" y="213" width="0.1138%" height="15" fill="rgb(238,52,6)"/><text x="93.4241%" y="223.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.11%)</title><rect x="93.1741%" y="197" width="0.1138%" height="15" fill="rgb(224,198,47)"/><text x="93.4241%" y="207.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.11%)</title><rect x="93.2878%" y="245" width="0.1138%" height="15" fill="rgb(233,171,20)"/><text x="93.5378%" y="255.50"></text></g><g><title>core::ptr::swap (1 samples, 0.11%)</title><rect x="93.2878%" y="229" width="0.1138%" height="15" fill="rgb(241,30,25)"/><text x="93.5378%" y="239.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.11%)</title><rect x="93.2878%" y="213" width="0.1138%" height="15" fill="rgb(207,171,38)"/><text x="93.5378%" y="223.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.11%)</title><rect x="93.4016%" y="229" width="0.1138%" height="15" fill="rgb(234,70,1)"/><text x="93.6516%" y="239.50"></text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::create_non_leaf (13 samples, 1.48%)</title><rect x="92.2639%" y="341" width="1.4790%" height="15" fill="rgb(232,178,18)"/><text x="92.5139%" y="351.50"></text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf (13 samples, 1.48%)</title><rect x="92.2639%" y="325" width="1.4790%" height="15" fill="rgb(241,78,40)"/><text x="92.5139%" y="335.50"></text></g><g><title>pdqselect::select_by (8 samples, 0.91%)</title><rect x="92.8328%" y="309" width="0.9101%" height="15" fill="rgb(222,35,25)"/><text x="93.0828%" y="319.50"></text></g><g><title>pdqselect::quickselect (8 samples, 0.91%)</title><rect x="92.8328%" y="293" width="0.9101%" height="15" fill="rgb(207,92,16)"/><text x="93.0828%" y="303.50"></text></g><g><title>pdqselect::recurse (8 samples, 0.91%)</title><rect x="92.8328%" y="277" width="0.9101%" height="15" fill="rgb(216,59,51)"/><text x="93.0828%" y="287.50"></text></g><g><title>pdqselect::partition (4 samples, 0.46%)</title><rect x="93.2878%" y="261" width="0.4551%" height="15" fill="rgb(213,80,28)"/><text x="93.5378%" y="271.50"></text></g><g><title>pdqselect::partition_in_blocks (3 samples, 0.34%)</title><rect x="93.4016%" y="245" width="0.3413%" height="15" fill="rgb(220,93,7)"/><text x="93.6516%" y="255.50"></text></g><g><title>pdqselect::select_by::{{closure}} (2 samples, 0.23%)</title><rect x="93.5154%" y="229" width="0.2275%" height="15" fill="rgb(225,24,44)"/><text x="93.7654%" y="239.50"></text></g><g><title>broccoli::tree::analyze::builder::construct_non_leaf::{{closure}} (2 samples, 0.23%)</title><rect x="93.5154%" y="213" width="0.2275%" height="15" fill="rgb(243,74,40)"/><text x="93.7654%" y="223.50"></text></g><g><title>broccoli::tree::analyze::oned::compare_bots (2 samples, 0.23%)</title><rect x="93.5154%" y="197" width="0.2275%" height="15" fill="rgb(228,39,7)"/><text x="93.7654%" y="207.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (2 samples, 0.23%)</title><rect x="93.5154%" y="181" width="0.2275%" height="15" fill="rgb(227,79,8)"/><text x="93.7654%" y="191.50"></text></g><g><title>core::slice::sort::choose_pivot (2 samples, 0.23%)</title><rect x="93.7429%" y="229" width="0.2275%" height="15" fill="rgb(236,58,11)"/><text x="93.9929%" y="239.50"></text></g><g><title>core::slice::sort::choose_pivot::{{closure}} (2 samples, 0.23%)</title><rect x="93.7429%" y="213" width="0.2275%" height="15" fill="rgb(249,63,35)"/><text x="93.9929%" y="223.50"></text></g><g><title>core::slice::sort::choose_pivot::{{closure}} (2 samples, 0.23%)</title><rect x="93.7429%" y="197" width="0.2275%" height="15" fill="rgb(252,114,16)"/><text x="93.9929%" y="207.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.11%)</title><rect x="94.0842%" y="197" width="0.1138%" height="15" fill="rgb(254,151,24)"/><text x="94.3342%" y="207.50"></text></g><g><title>core::slice::sort::insertion_sort (4 samples, 0.46%)</title><rect x="93.9704%" y="229" width="0.4551%" height="15" fill="rgb(253,54,39)"/><text x="94.2204%" y="239.50"></text></g><g><title>core::slice::sort::shift_tail (3 samples, 0.34%)</title><rect x="94.0842%" y="213" width="0.3413%" height="15" fill="rgb(243,25,45)"/><text x="94.3342%" y="223.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.23%)</title><rect x="94.1980%" y="197" width="0.2275%" height="15" fill="rgb(234,134,9)"/><text x="94.4480%" y="207.50"></text></g><g><title>&lt;core::slice::sort::CopyOnDrop&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.23%)</title><rect x="94.1980%" y="181" width="0.2275%" height="15" fill="rgb(227,166,31)"/><text x="94.4480%" y="191.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.23%)</title><rect x="94.1980%" y="165" width="0.2275%" height="15" fill="rgb(245,143,41)"/><text x="94.4480%" y="175.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.11%)</title><rect x="94.6530%" y="213" width="0.1138%" height="15" fill="rgb(238,181,32)"/><text x="94.9030%" y="223.50"></text></g><g><title>core::ptr::swap (1 samples, 0.11%)</title><rect x="94.6530%" y="197" width="0.1138%" height="15" fill="rgb(224,113,18)"/><text x="94.9030%" y="207.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.11%)</title><rect x="94.6530%" y="181" width="0.1138%" height="15" fill="rgb(240,229,28)"/><text x="94.9030%" y="191.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.11%)</title><rect x="94.9943%" y="197" width="0.1138%" height="15" fill="rgb(250,185,3)"/><text x="95.2443%" y="207.50"></text></g><g><title>core::ptr::swap (1 samples, 0.11%)</title><rect x="95.1081%" y="197" width="0.1138%" height="15" fill="rgb(212,59,25)"/><text x="95.3581%" y="207.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.11%)</title><rect x="95.1081%" y="181" width="0.1138%" height="15" fill="rgb(221,87,20)"/><text x="95.3581%" y="191.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by::{{closure}} (3 samples, 0.34%)</title><rect x="95.2218%" y="197" width="0.3413%" height="15" fill="rgb(213,74,28)"/><text x="95.4718%" y="207.50"></text></g><g><title>broccoli::tree::analyze::oned::sweeper_update::{{closure}} (3 samples, 0.34%)</title><rect x="95.2218%" y="181" width="0.3413%" height="15" fill="rgb(224,132,34)"/><text x="95.4718%" y="191.50"></text></g><g><title>broccoli::tree::analyze::oned::compare_bots (3 samples, 0.34%)</title><rect x="95.2218%" y="165" width="0.3413%" height="15" fill="rgb(222,101,24)"/><text x="95.4718%" y="175.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (3 samples, 0.34%)</title><rect x="95.2218%" y="149" width="0.3413%" height="15" fill="rgb(254,142,4)"/><text x="95.4718%" y="159.50"></text></g><g><title>core::slice::sort::partition (11 samples, 1.25%)</title><rect x="94.4255%" y="229" width="1.2514%" height="15" fill="rgb(230,229,49)"/><text x="94.6755%" y="239.50"></text></g><g><title>core::slice::sort::partition_in_blocks (8 samples, 0.91%)</title><rect x="94.7668%" y="213" width="0.9101%" height="15" fill="rgb(238,70,47)"/><text x="95.0168%" y="223.50"></text></g><g><title>core::slice::sort::partition_in_blocks::width (1 samples, 0.11%)</title><rect x="95.5631%" y="197" width="0.1138%" height="15" fill="rgb(231,160,17)"/><text x="95.8131%" y="207.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.23%)</title><rect x="95.7907%" y="181" width="0.2275%" height="15" fill="rgb(218,68,53)"/><text x="96.0407%" y="191.50"></text></g><g><title>core::ptr::drop_in_place (6 samples, 0.68%)</title><rect x="96.0182%" y="181" width="0.6826%" height="15" fill="rgb(236,111,10)"/><text x="96.2682%" y="191.50"></text></g><g><title>&lt;core::slice::sort::CopyOnDrop&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.68%)</title><rect x="96.0182%" y="165" width="0.6826%" height="15" fill="rgb(224,34,41)"/><text x="96.2682%" y="175.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6 samples, 0.68%)</title><rect x="96.0182%" y="149" width="0.6826%" height="15" fill="rgb(241,118,19)"/><text x="96.2682%" y="159.50"></text></g><g><title>core::slice::sort::insertion_sort (11 samples, 1.25%)</title><rect x="95.6769%" y="213" width="1.2514%" height="15" fill="rgb(238,129,25)"/><text x="95.9269%" y="223.50"></text></g><g><title>core::slice::sort::shift_tail (11 samples, 1.25%)</title><rect x="95.6769%" y="197" width="1.2514%" height="15" fill="rgb(238,22,31)"/><text x="95.9269%" y="207.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by::{{closure}} (2 samples, 0.23%)</title><rect x="96.7008%" y="181" width="0.2275%" height="15" fill="rgb(222,174,48)"/><text x="96.9508%" y="191.50"></text></g><g><title>broccoli::tree::analyze::oned::sweeper_update::{{closure}} (2 samples, 0.23%)</title><rect x="96.7008%" y="165" width="0.2275%" height="15" fill="rgb(206,152,40)"/><text x="96.9508%" y="175.50"></text></g><g><title>broccoli::tree::analyze::oned::compare_bots (2 samples, 0.23%)</title><rect x="96.7008%" y="149" width="0.2275%" height="15" fill="rgb(218,99,54)"/><text x="96.9508%" y="159.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (2 samples, 0.23%)</title><rect x="96.7008%" y="133" width="0.2275%" height="15" fill="rgb(220,174,26)"/><text x="96.9508%" y="143.50"></text></g><g><title>&lt;broccoli::tree::analyze::DefaultSorter as broccoli::tree::analyze::Sorter&gt;::sort (32 samples, 3.64%)</title><rect x="93.7429%" y="309" width="3.6405%" height="15" fill="rgb(245,116,9)"/><text x="93.9929%" y="319.50">&lt;bro..</text></g><g><title>broccoli::tree::analyze::oned::sweeper_update (32 samples, 3.64%)</title><rect x="93.7429%" y="293" width="3.6405%" height="15" fill="rgb(209,72,35)"/><text x="93.9929%" y="303.50">broc..</text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by (32 samples, 3.64%)</title><rect x="93.7429%" y="277" width="3.6405%" height="15" fill="rgb(226,126,21)"/><text x="93.9929%" y="287.50">core..</text></g><g><title>core::slice::sort::quicksort (32 samples, 3.64%)</title><rect x="93.7429%" y="261" width="3.6405%" height="15" fill="rgb(227,192,1)"/><text x="93.9929%" y="271.50">core..</text></g><g><title>core::slice::sort::recurse (32 samples, 3.64%)</title><rect x="93.7429%" y="245" width="3.6405%" height="15" fill="rgb(237,180,29)"/><text x="93.9929%" y="255.50">core..</text></g><g><title>core::slice::sort::recurse (15 samples, 1.71%)</title><rect x="95.6769%" y="229" width="1.7065%" height="15" fill="rgb(230,197,35)"/><text x="95.9269%" y="239.50"></text></g><g><title>core::slice::sort::recurse (4 samples, 0.46%)</title><rect x="96.9283%" y="213" width="0.4551%" height="15" fill="rgb(246,193,31)"/><text x="97.1783%" y="223.50"></text></g><g><title>core::slice::sort::insertion_sort (4 samples, 0.46%)</title><rect x="96.9283%" y="197" width="0.4551%" height="15" fill="rgb(241,36,4)"/><text x="97.1783%" y="207.50"></text></g><g><title>core::slice::sort::shift_tail (4 samples, 0.46%)</title><rect x="96.9283%" y="181" width="0.4551%" height="15" fill="rgb(241,130,17)"/><text x="97.1783%" y="191.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.34%)</title><rect x="97.0421%" y="165" width="0.3413%" height="15" fill="rgb(206,137,32)"/><text x="97.2921%" y="175.50"></text></g><g><title>data_gen::support::bench_closure (827 samples, 94.08%)</title><rect x="3.5267%" y="581" width="94.0842%" height="15" fill="rgb(237,228,51)"/><text x="3.7767%" y="591.50">data_gen::support::bench_closure</text></g><g><title>data_gen::support::bench_closure_ret (827 samples, 94.08%)</title><rect x="3.5267%" y="565" width="94.0842%" height="15" fill="rgb(243,6,42)"/><text x="3.7767%" y="575.50">data_gen::support::bench_closure_ret</text></g><g><title>data_gen::main::{{closure}} (827 samples, 94.08%)</title><rect x="3.5267%" y="549" width="94.0842%" height="15" fill="rgb(251,74,28)"/><text x="3.7767%" y="559.50">data_gen::main::{{closure}}</text></g><g><title>broccoli::tree::new (173 samples, 19.68%)</title><rect x="77.9295%" y="533" width="19.6815%" height="15" fill="rgb(218,20,49)"/><text x="78.1795%" y="543.50">broccoli::tree::new</text></g><g><title>broccoli::tree::analyze::builder::TreeBuilder&lt;A,T&gt;::build_seq (173 samples, 19.68%)</title><rect x="77.9295%" y="517" width="19.6815%" height="15" fill="rgb(238,28,14)"/><text x="78.1795%" y="527.50">broccoli::tree::analyze::builde..</text></g><g><title>broccoli::tree::analyze::builder::create_tree_seq (173 samples, 19.68%)</title><rect x="77.9295%" y="501" width="19.6815%" height="15" fill="rgb(229,40,46)"/><text x="78.1795%" y="511.50">broccoli::tree::analyze::builde..</text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::recurse_preorder_seq (173 samples, 19.68%)</title><rect x="77.9295%" y="485" width="19.6815%" height="15" fill="rgb(244,195,20)"/><text x="78.1795%" y="495.50">broccoli::tree::analyze::builde..</text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::recurse_preorder_seq (159 samples, 18.09%)</title><rect x="79.5222%" y="469" width="18.0887%" height="15" fill="rgb(253,56,35)"/><text x="79.7722%" y="479.50">broccoli::tree::analyze::bui..</text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::recurse_preorder_seq (148 samples, 16.84%)</title><rect x="80.7736%" y="453" width="16.8373%" height="15" fill="rgb(210,149,44)"/><text x="81.0236%" y="463.50">broccoli::tree::analyze::b..</text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::recurse_preorder_seq (133 samples, 15.13%)</title><rect x="82.4801%" y="437" width="15.1308%" height="15" fill="rgb(240,135,12)"/><text x="82.7301%" y="447.50">broccoli::tree::analyze..</text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::recurse_preorder_seq (112 samples, 12.74%)</title><rect x="84.8692%" y="421" width="12.7418%" height="15" fill="rgb(251,24,50)"/><text x="85.1192%" y="431.50">broccoli::tree::ana..</text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::recurse_preorder_seq (100 samples, 11.38%)</title><rect x="86.2344%" y="405" width="11.3766%" height="15" fill="rgb(243,200,47)"/><text x="86.4844%" y="415.50">broccoli::tree::a..</text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::recurse_preorder_seq (89 samples, 10.13%)</title><rect x="87.4858%" y="389" width="10.1251%" height="15" fill="rgb(224,166,26)"/><text x="87.7358%" y="399.50">broccoli::tree:..</text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::recurse_preorder_seq (66 samples, 7.51%)</title><rect x="90.1024%" y="373" width="7.5085%" height="15" fill="rgb(233,0,47)"/><text x="90.3524%" y="383.50">broccoli::..</text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::recurse_preorder_seq (54 samples, 6.14%)</title><rect x="91.4676%" y="357" width="6.1433%" height="15" fill="rgb(253,80,5)"/><text x="91.7176%" y="367.50">broccoli..</text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::recurse_preorder_seq (34 samples, 3.87%)</title><rect x="93.7429%" y="341" width="3.8680%" height="15" fill="rgb(214,133,25)"/><text x="93.9929%" y="351.50">broc..</text></g><g><title>broccoli::tree::analyze::builder::Recurser&lt;T,K,S&gt;::create_leaf (34 samples, 3.87%)</title><rect x="93.7429%" y="325" width="3.8680%" height="15" fill="rgb(209,27,14)"/><text x="93.9929%" y="335.50">broc..</text></g><g><title>broccoli::tree::analyze::builder::create_cont (2 samples, 0.23%)</title><rect x="97.3834%" y="309" width="0.2275%" height="15" fill="rgb(219,102,51)"/><text x="97.6334%" y="319.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::cos (2 samples, 0.23%)</title><rect x="97.6109%" y="357" width="0.2275%" height="15" fill="rgb(237,18,16)"/><text x="97.8609%" y="367.50"></text></g><g><title>__sincos (2 samples, 0.23%)</title><rect x="97.6109%" y="341" width="0.2275%" height="15" fill="rgb(241,85,17)"/><text x="97.8609%" y="351.50"></text></g><g><title>do_cos (1 samples, 0.11%)</title><rect x="97.7247%" y="325" width="0.1138%" height="15" fill="rgb(236,90,42)"/><text x="97.9747%" y="335.50"></text></g><g><title>data_gen::support::distribute (3 samples, 0.34%)</title><rect x="97.6109%" y="581" width="0.3413%" height="15" fill="rgb(249,57,21)"/><text x="97.8609%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 0.34%)</title><rect x="97.6109%" y="565" width="0.3413%" height="15" fill="rgb(243,12,36)"/><text x="97.8609%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3 samples, 0.34%)</title><rect x="97.6109%" y="549" width="0.3413%" height="15" fill="rgb(253,128,47)"/><text x="97.8609%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.34%)</title><rect x="97.6109%" y="533" width="0.3413%" height="15" fill="rgb(207,33,20)"/><text x="97.8609%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (3 samples, 0.34%)</title><rect x="97.6109%" y="517" width="0.3413%" height="15" fill="rgb(233,215,35)"/><text x="97.8609%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.34%)</title><rect x="97.6109%" y="501" width="0.3413%" height="15" fill="rgb(249,188,52)"/><text x="97.8609%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.34%)</title><rect x="97.6109%" y="485" width="0.3413%" height="15" fill="rgb(225,12,32)"/><text x="97.8609%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.34%)</title><rect x="97.6109%" y="469" width="0.3413%" height="15" fill="rgb(247,98,14)"/><text x="97.8609%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.34%)</title><rect x="97.6109%" y="453" width="0.3413%" height="15" fill="rgb(247,219,48)"/><text x="97.8609%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.34%)</title><rect x="97.6109%" y="437" width="0.3413%" height="15" fill="rgb(253,60,48)"/><text x="97.8609%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (3 samples, 0.34%)</title><rect x="97.6109%" y="421" width="0.3413%" height="15" fill="rgb(245,15,52)"/><text x="97.8609%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.34%)</title><rect x="97.6109%" y="405" width="0.3413%" height="15" fill="rgb(220,133,28)"/><text x="97.8609%" y="415.50"></text></g><g><title>&lt;core::iter::sources::RepeatWith&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.34%)</title><rect x="97.6109%" y="389" width="0.3413%" height="15" fill="rgb(217,180,4)"/><text x="97.8609%" y="399.50"></text></g><g><title>dists::spiral_iter::{{closure}} (3 samples, 0.34%)</title><rect x="97.6109%" y="373" width="0.3413%" height="15" fill="rgb(251,24,1)"/><text x="97.8609%" y="383.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::sin (1 samples, 0.11%)</title><rect x="97.8385%" y="357" width="0.1138%" height="15" fill="rgb(212,185,49)"/><text x="98.0885%" y="367.50"></text></g><g><title>__sincos (1 samples, 0.11%)</title><rect x="97.8385%" y="341" width="0.1138%" height="15" fill="rgb(215,175,22)"/><text x="98.0885%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="97.8385%" y="325" width="0.1138%" height="15" fill="rgb(250,205,14)"/><text x="98.0885%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="97.8385%" y="309" width="0.1138%" height="15" fill="rgb(225,211,22)"/><text x="98.0885%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="97.8385%" y="293" width="0.1138%" height="15" fill="rgb(251,179,42)"/><text x="98.0885%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="97.8385%" y="277" width="0.1138%" height="15" fill="rgb(208,216,51)"/><text x="98.0885%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="97.8385%" y="261" width="0.1138%" height="15" fill="rgb(235,36,11)"/><text x="98.0885%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="97.8385%" y="245" width="0.1138%" height="15" fill="rgb(213,189,28)"/><text x="98.0885%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="97.8385%" y="229" width="0.1138%" height="15" fill="rgb(227,203,42)"/><text x="98.0885%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="97.8385%" y="213" width="0.1138%" height="15" fill="rgb(244,72,36)"/><text x="98.0885%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="97.8385%" y="197" width="0.1138%" height="15" fill="rgb(213,53,17)"/><text x="98.0885%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="97.8385%" y="181" width="0.1138%" height="15" fill="rgb(207,167,3)"/><text x="98.0885%" y="191.50"></text></g><g><title>rayon_core::ThreadPoolBuilder&lt;S&gt;::build_global (12 samples, 1.37%)</title><rect x="97.9522%" y="581" width="1.3652%" height="15" fill="rgb(216,98,30)"/><text x="98.2022%" y="591.50"></text></g><g><title>rayon_core::registry::Registry::wait_until_primed (12 samples, 1.37%)</title><rect x="97.9522%" y="565" width="1.3652%" height="15" fill="rgb(236,123,15)"/><text x="98.2022%" y="575.50"></text></g><g><title>rayon_core::latch::LockLatch::wait (12 samples, 1.37%)</title><rect x="97.9522%" y="549" width="1.3652%" height="15" fill="rgb(248,81,50)"/><text x="98.2022%" y="559.50"></text></g><g><title>std::sync::condvar::Condvar::wait (12 samples, 1.37%)</title><rect x="97.9522%" y="533" width="1.3652%" height="15" fill="rgb(214,120,4)"/><text x="98.2022%" y="543.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait (12 samples, 1.37%)</title><rect x="97.9522%" y="517" width="1.3652%" height="15" fill="rgb(208,179,34)"/><text x="98.2022%" y="527.50"></text></g><g><title>std::sys::unix::condvar::Condvar::wait (12 samples, 1.37%)</title><rect x="97.9522%" y="501" width="1.3652%" height="15" fill="rgb(227,140,7)"/><text x="98.2022%" y="511.50"></text></g><g><title>__pthread_cond_wait (12 samples, 1.37%)</title><rect x="97.9522%" y="485" width="1.3652%" height="15" fill="rgb(214,22,6)"/><text x="98.2022%" y="495.50"></text></g><g><title>__pthread_cond_wait_common (12 samples, 1.37%)</title><rect x="97.9522%" y="469" width="1.3652%" height="15" fill="rgb(207,137,27)"/><text x="98.2022%" y="479.50"></text></g><g><title>futex_wait_cancelable (12 samples, 1.37%)</title><rect x="97.9522%" y="453" width="1.3652%" height="15" fill="rgb(210,8,46)"/><text x="98.2022%" y="463.50"></text></g><g><title>[unknown] (12 samples, 1.37%)</title><rect x="97.9522%" y="437" width="1.3652%" height="15" fill="rgb(240,16,54)"/><text x="98.2022%" y="447.50"></text></g><g><title>[unknown] (12 samples, 1.37%)</title><rect x="97.9522%" y="421" width="1.3652%" height="15" fill="rgb(211,209,29)"/><text x="98.2022%" y="431.50"></text></g><g><title>[unknown] (12 samples, 1.37%)</title><rect x="97.9522%" y="405" width="1.3652%" height="15" fill="rgb(226,228,24)"/><text x="98.2022%" y="415.50"></text></g><g><title>[unknown] (12 samples, 1.37%)</title><rect x="97.9522%" y="389" width="1.3652%" height="15" fill="rgb(222,84,9)"/><text x="98.2022%" y="399.50"></text></g><g><title>[unknown] (12 samples, 1.37%)</title><rect x="97.9522%" y="373" width="1.3652%" height="15" fill="rgb(234,203,30)"/><text x="98.2022%" y="383.50"></text></g><g><title>[unknown] (12 samples, 1.37%)</title><rect x="97.9522%" y="357" width="1.3652%" height="15" fill="rgb(238,109,14)"/><text x="98.2022%" y="367.50"></text></g><g><title>[unknown] (12 samples, 1.37%)</title><rect x="97.9522%" y="341" width="1.3652%" height="15" fill="rgb(233,206,34)"/><text x="98.2022%" y="351.50"></text></g><g><title>[unknown] (12 samples, 1.37%)</title><rect x="97.9522%" y="325" width="1.3652%" height="15" fill="rgb(220,167,47)"/><text x="98.2022%" y="335.50"></text></g><g><title>[unknown] (12 samples, 1.37%)</title><rect x="97.9522%" y="309" width="1.3652%" height="15" fill="rgb(238,105,10)"/><text x="98.2022%" y="319.50"></text></g><g><title>[unknown] (12 samples, 1.37%)</title><rect x="97.9522%" y="293" width="1.3652%" height="15" fill="rgb(213,227,17)"/><text x="98.2022%" y="303.50"></text></g><g><title>[unknown] (12 samples, 1.37%)</title><rect x="97.9522%" y="277" width="1.3652%" height="15" fill="rgb(217,132,38)"/><text x="98.2022%" y="287.50"></text></g><g><title>[unknown] (12 samples, 1.37%)</title><rect x="97.9522%" y="261" width="1.3652%" height="15" fill="rgb(242,146,4)"/><text x="98.2022%" y="271.50"></text></g><g><title>[unknown] (12 samples, 1.37%)</title><rect x="97.9522%" y="245" width="1.3652%" height="15" fill="rgb(212,61,9)"/><text x="98.2022%" y="255.50"></text></g><g><title>[unknown] (12 samples, 1.37%)</title><rect x="97.9522%" y="229" width="1.3652%" height="15" fill="rgb(247,126,22)"/><text x="98.2022%" y="239.50"></text></g><g><title>data_gen (874 samples, 99.43%)</title><rect x="0.0000%" y="789" width="99.4312%" height="15" fill="rgb(220,196,2)"/><text x="0.2500%" y="799.50">data_gen</text></g><g><title>_start (843 samples, 95.90%)</title><rect x="3.5267%" y="773" width="95.9044%" height="15" fill="rgb(208,46,4)"/><text x="3.7767%" y="783.50">_start</text></g><g><title>__libc_start_main (843 samples, 95.90%)</title><rect x="3.5267%" y="757" width="95.9044%" height="15" fill="rgb(252,104,46)"/><text x="3.7767%" y="767.50">__libc_start_main</text></g><g><title>main (843 samples, 95.90%)</title><rect x="3.5267%" y="741" width="95.9044%" height="15" fill="rgb(237,152,48)"/><text x="3.7767%" y="751.50">main</text></g><g><title>std::rt::lang_start_internal (843 samples, 95.90%)</title><rect x="3.5267%" y="725" width="95.9044%" height="15" fill="rgb(221,59,37)"/><text x="3.7767%" y="735.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (843 samples, 95.90%)</title><rect x="3.5267%" y="709" width="95.9044%" height="15" fill="rgb(209,202,51)"/><text x="3.7767%" y="719.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (843 samples, 95.90%)</title><rect x="3.5267%" y="693" width="95.9044%" height="15" fill="rgb(228,81,30)"/><text x="3.7767%" y="703.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (843 samples, 95.90%)</title><rect x="3.5267%" y="677" width="95.9044%" height="15" fill="rgb(227,42,39)"/><text x="3.7767%" y="687.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (843 samples, 95.90%)</title><rect x="3.5267%" y="661" width="95.9044%" height="15" fill="rgb(221,26,2)"/><text x="3.7767%" y="671.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (843 samples, 95.90%)</title><rect x="3.5267%" y="645" width="95.9044%" height="15" fill="rgb(254,61,31)"/><text x="3.7767%" y="655.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (843 samples, 95.90%)</title><rect x="3.5267%" y="629" width="95.9044%" height="15" fill="rgb(222,173,38)"/><text x="3.7767%" y="639.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (843 samples, 95.90%)</title><rect x="3.5267%" y="613" width="95.9044%" height="15" fill="rgb(218,50,12)"/><text x="3.7767%" y="623.50">core::ops::function::FnOnce::call_once</text></g><g><title>data_gen::main (843 samples, 95.90%)</title><rect x="3.5267%" y="597" width="95.9044%" height="15" fill="rgb(223,88,40)"/><text x="3.7767%" y="607.50">data_gen::main</text></g><g><title>std::io::stdio::_eprint (1 samples, 0.11%)</title><rect x="99.3174%" y="581" width="0.1138%" height="15" fill="rgb(237,54,19)"/><text x="99.5674%" y="591.50"></text></g><g><title>std::io::stdio::print_to (1 samples, 0.11%)</title><rect x="99.3174%" y="565" width="0.1138%" height="15" fill="rgb(251,129,25)"/><text x="99.5674%" y="575.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (1 samples, 0.11%)</title><rect x="99.3174%" y="549" width="0.1138%" height="15" fill="rgb(238,97,19)"/><text x="99.5674%" y="559.50"></text></g><g><title>std::io::stdio::print_to::{{closure}} (1 samples, 0.11%)</title><rect x="99.3174%" y="533" width="0.1138%" height="15" fill="rgb(240,169,18)"/><text x="99.5674%" y="543.50"></text></g><g><title>&lt;std::io::stdio::Stderr as std::io::Write&gt;::write_fmt (1 samples, 0.11%)</title><rect x="99.3174%" y="517" width="0.1138%" height="15" fill="rgb(230,187,49)"/><text x="99.5674%" y="527.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stderr as std::io::Write&gt;::write_fmt (1 samples, 0.11%)</title><rect x="99.3174%" y="501" width="0.1138%" height="15" fill="rgb(209,44,26)"/><text x="99.5674%" y="511.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.11%)</title><rect x="99.3174%" y="485" width="0.1138%" height="15" fill="rgb(244,0,6)"/><text x="99.5674%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.11%)</title><rect x="99.3174%" y="469" width="0.1138%" height="15" fill="rgb(248,18,21)"/><text x="99.5674%" y="479.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adaptor&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.11%)</title><rect x="99.3174%" y="453" width="0.1138%" height="15" fill="rgb(245,180,19)"/><text x="99.5674%" y="463.50"></text></g><g><title>&lt;std::io::stdio::StderrLock as std::io::Write&gt;::write_all (1 samples, 0.11%)</title><rect x="99.3174%" y="437" width="0.1138%" height="15" fill="rgb(252,118,36)"/><text x="99.5674%" y="447.50"></text></g><g><title>&lt;std::io::stdio::StderrRaw as std::io::Write&gt;::write_all (1 samples, 0.11%)</title><rect x="99.3174%" y="421" width="0.1138%" height="15" fill="rgb(210,224,19)"/><text x="99.5674%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.11%)</title><rect x="99.3174%" y="405" width="0.1138%" height="15" fill="rgb(218,30,24)"/><text x="99.5674%" y="415.50"></text></g><g><title>&lt;std::sys::unix::stdio::Stderr as std::io::Write&gt;::write (1 samples, 0.11%)</title><rect x="99.3174%" y="389" width="0.1138%" height="15" fill="rgb(219,75,50)"/><text x="99.5674%" y="399.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (1 samples, 0.11%)</title><rect x="99.3174%" y="373" width="0.1138%" height="15" fill="rgb(234,72,50)"/><text x="99.5674%" y="383.50"></text></g><g><title>__GI___libc_write (1 samples, 0.11%)</title><rect x="99.3174%" y="357" width="0.1138%" height="15" fill="rgb(219,100,48)"/><text x="99.5674%" y="367.50"></text></g><g><title>__GI___libc_write (1 samples, 0.11%)</title><rect x="99.3174%" y="341" width="0.1138%" height="15" fill="rgb(253,5,41)"/><text x="99.5674%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="99.3174%" y="325" width="0.1138%" height="15" fill="rgb(247,181,11)"/><text x="99.5674%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="99.3174%" y="309" width="0.1138%" height="15" fill="rgb(222,223,25)"/><text x="99.5674%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="99.3174%" y="293" width="0.1138%" height="15" fill="rgb(214,198,28)"/><text x="99.5674%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="99.3174%" y="277" width="0.1138%" height="15" fill="rgb(230,46,43)"/><text x="99.5674%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="99.3174%" y="261" width="0.1138%" height="15" fill="rgb(233,65,53)"/><text x="99.5674%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="99.3174%" y="245" width="0.1138%" height="15" fill="rgb(221,121,27)"/><text x="99.5674%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="99.3174%" y="229" width="0.1138%" height="15" fill="rgb(247,70,47)"/><text x="99.5674%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="99.3174%" y="213" width="0.1138%" height="15" fill="rgb(228,85,35)"/><text x="99.5674%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="99.3174%" y="197" width="0.1138%" height="15" fill="rgb(209,50,18)"/><text x="99.5674%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="99.3174%" y="181" width="0.1138%" height="15" fill="rgb(250,19,35)"/><text x="99.5674%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="99.3174%" y="165" width="0.1138%" height="15" fill="rgb(253,107,29)"/><text x="99.5674%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="99.3174%" y="149" width="0.1138%" height="15" fill="rgb(252,179,29)"/><text x="99.5674%" y="159.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="99.3174%" y="133" width="0.1138%" height="15" fill="rgb(238,194,6)"/><text x="99.5674%" y="143.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="99.3174%" y="117" width="0.1138%" height="15" fill="rgb(238,164,29)"/><text x="99.5674%" y="127.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="99.3174%" y="101" width="0.1138%" height="15" fill="rgb(224,25,9)"/><text x="99.5674%" y="111.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="99.3174%" y="85" width="0.1138%" height="15" fill="rgb(244,153,23)"/><text x="99.5674%" y="95.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="99.3174%" y="69" width="0.1138%" height="15" fill="rgb(212,203,14)"/><text x="99.5674%" y="79.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="99.3174%" y="53" width="0.1138%" height="15" fill="rgb(220,164,20)"/><text x="99.5674%" y="63.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="99.3174%" y="37" width="0.1138%" height="15" fill="rgb(222,203,48)"/><text x="99.5674%" y="47.50"></text></g><g><title>all (879 samples, 100%)</title><rect x="0.0000%" y="805" width="100.0000%" height="15" fill="rgb(215,159,22)"/><text x="0.2500%" y="815.50"></text></g><g><title>perf (5 samples, 0.57%)</title><rect x="99.4312%" y="789" width="0.5688%" height="15" fill="rgb(216,183,47)"/><text x="99.6812%" y="799.50"></text></g><g><title>[unknown] (5 samples, 0.57%)</title><rect x="99.4312%" y="773" width="0.5688%" height="15" fill="rgb(229,195,25)"/><text x="99.6812%" y="783.50"></text></g><g><title>[unknown] (5 samples, 0.57%)</title><rect x="99.4312%" y="757" width="0.5688%" height="15" fill="rgb(224,132,51)"/><text x="99.6812%" y="767.50"></text></g><g><title>[unknown] (5 samples, 0.57%)</title><rect x="99.4312%" y="741" width="0.5688%" height="15" fill="rgb(240,63,7)"/><text x="99.6812%" y="751.50"></text></g><g><title>[unknown] (5 samples, 0.57%)</title><rect x="99.4312%" y="725" width="0.5688%" height="15" fill="rgb(249,182,41)"/><text x="99.6812%" y="735.50"></text></g><g><title>[unknown] (5 samples, 0.57%)</title><rect x="99.4312%" y="709" width="0.5688%" height="15" fill="rgb(243,47,26)"/><text x="99.6812%" y="719.50"></text></g><g><title>[unknown] (5 samples, 0.57%)</title><rect x="99.4312%" y="693" width="0.5688%" height="15" fill="rgb(233,48,2)"/><text x="99.6812%" y="703.50"></text></g><g><title>[unknown] (5 samples, 0.57%)</title><rect x="99.4312%" y="677" width="0.5688%" height="15" fill="rgb(244,165,34)"/><text x="99.6812%" y="687.50"></text></g><g><title>[unknown] (5 samples, 0.57%)</title><rect x="99.4312%" y="661" width="0.5688%" height="15" fill="rgb(207,89,7)"/><text x="99.6812%" y="671.50"></text></g><g><title>[unknown] (5 samples, 0.57%)</title><rect x="99.4312%" y="645" width="0.5688%" height="15" fill="rgb(244,117,36)"/><text x="99.6812%" y="655.50"></text></g><g><title>[unknown] (5 samples, 0.57%)</title><rect x="99.4312%" y="629" width="0.5688%" height="15" fill="rgb(226,144,34)"/><text x="99.6812%" y="639.50"></text></g><g><title>[unknown] (5 samples, 0.57%)</title><rect x="99.4312%" y="613" width="0.5688%" height="15" fill="rgb(213,23,19)"/><text x="99.6812%" y="623.50"></text></g><g><title>[unknown] (5 samples, 0.57%)</title><rect x="99.4312%" y="597" width="0.5688%" height="15" fill="rgb(217,75,12)"/><text x="99.6812%" y="607.50"></text></g><g><title>[unknown] (5 samples, 0.57%)</title><rect x="99.4312%" y="581" width="0.5688%" height="15" fill="rgb(224,159,17)"/><text x="99.6812%" y="591.50"></text></g></svg></svg>