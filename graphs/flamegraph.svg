<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="902" onload="init(evt)" viewBox="0 0 1200 902" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="902" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="885.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="885.00"> </text><svg id="frames" x="10" width="1180"><g><title>[[heap]] (1 samples, 0.16%)</title><rect x="0.0000%" y="821" width="0.1577%" height="15" fill="rgb(227,0,7)"/><text x="0.2500%" y="831.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,KK,B&gt;::recurse (1 samples, 0.16%)</title><rect x="0.0000%" y="805" width="0.1577%" height="15" fill="rgb(217,0,24)"/><text x="0.2500%" y="815.50"></text></g><g><title>[[stack]] (1 samples, 0.16%)</title><rect x="0.1577%" y="821" width="0.1577%" height="15" fill="rgb(221,193,54)"/><text x="0.4077%" y="831.50"></text></g><g><title>broccoli::tree::build::builder::Recurser&lt;T,K,S&gt;::recurse_preorder_seq (1 samples, 0.16%)</title><rect x="0.1577%" y="805" width="0.1577%" height="15" fill="rgb(248,212,6)"/><text x="0.4077%" y="815.50"></text></g><g><title>broccoli::tree::build::builder::Recurser&lt;T,K,S&gt;::create_non_leaf (1 samples, 0.16%)</title><rect x="0.1577%" y="789" width="0.1577%" height="15" fill="rgb(208,68,35)"/><text x="0.4077%" y="799.50"></text></g><g><title>broccoli::tree::build::builder::construct_non_leaf (1 samples, 0.16%)</title><rect x="0.1577%" y="773" width="0.1577%" height="15" fill="rgb(232,128,0)"/><text x="0.4077%" y="783.50"></text></g><g><title>[anon] (2 samples, 0.32%)</title><rect x="0.3155%" y="821" width="0.3155%" height="15" fill="rgb(207,160,47)"/><text x="0.5655%" y="831.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,KK,B&gt;::recurse (2 samples, 0.32%)</title><rect x="0.3155%" y="805" width="0.3155%" height="15" fill="rgb(228,23,34)"/><text x="0.5655%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.16%)</title><rect x="0.9464%" y="805" width="0.1577%" height="15" fill="rgb(218,30,26)"/><text x="1.1964%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="1.1041%" y="805" width="0.1577%" height="15" fill="rgb(220,122,19)"/><text x="1.3541%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="1.1041%" y="789" width="0.1577%" height="15" fill="rgb(250,228,42)"/><text x="1.3541%" y="799.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="1.1041%" y="773" width="0.1577%" height="15" fill="rgb(240,193,28)"/><text x="1.3541%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="1.1041%" y="757" width="0.1577%" height="15" fill="rgb(216,20,37)"/><text x="1.3541%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="1.1041%" y="741" width="0.1577%" height="15" fill="rgb(206,188,39)"/><text x="1.3541%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="1.1041%" y="725" width="0.1577%" height="15" fill="rgb(217,207,13)"/><text x="1.3541%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="1.1041%" y="709" width="0.1577%" height="15" fill="rgb(231,73,38)"/><text x="1.3541%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="1.1041%" y="693" width="0.1577%" height="15" fill="rgb(225,20,46)"/><text x="1.3541%" y="703.50"></text></g><g><title>core::slice::sort::recurse (1 samples, 0.16%)</title><rect x="1.2618%" y="805" width="0.1577%" height="15" fill="rgb(210,31,41)"/><text x="1.5118%" y="815.50"></text></g><g><title>[unknown] (6 samples, 0.95%)</title><rect x="0.6309%" y="821" width="0.9464%" height="15" fill="rgb(221,200,47)"/><text x="0.8809%" y="831.50"></text></g><g><title>pdqselect::select_by (1 samples, 0.16%)</title><rect x="1.4196%" y="805" width="0.1577%" height="15" fill="rgb(226,26,5)"/><text x="1.6696%" y="815.50"></text></g><g><title>[unknown] (18 samples, 2.84%)</title><rect x="1.5773%" y="805" width="2.8391%" height="15" fill="rgb(249,33,26)"/><text x="1.8273%" y="815.50">[u..</text></g><g><title>[unknown] (18 samples, 2.84%)</title><rect x="1.5773%" y="789" width="2.8391%" height="15" fill="rgb(235,183,28)"/><text x="1.8273%" y="799.50">[u..</text></g><g><title>[unknown] (18 samples, 2.84%)</title><rect x="1.5773%" y="773" width="2.8391%" height="15" fill="rgb(221,5,38)"/><text x="1.8273%" y="783.50">[u..</text></g><g><title>[unknown] (18 samples, 2.84%)</title><rect x="1.5773%" y="757" width="2.8391%" height="15" fill="rgb(247,18,42)"/><text x="1.8273%" y="767.50">[u..</text></g><g><title>[unknown] (16 samples, 2.52%)</title><rect x="1.8927%" y="741" width="2.5237%" height="15" fill="rgb(241,131,45)"/><text x="2.1427%" y="751.50">[u..</text></g><g><title>[unknown] (16 samples, 2.52%)</title><rect x="1.8927%" y="725" width="2.5237%" height="15" fill="rgb(249,31,29)"/><text x="2.1427%" y="735.50">[u..</text></g><g><title>[unknown] (16 samples, 2.52%)</title><rect x="1.8927%" y="709" width="2.5237%" height="15" fill="rgb(225,111,53)"/><text x="2.1427%" y="719.50">[u..</text></g><g><title>[unknown] (16 samples, 2.52%)</title><rect x="1.8927%" y="693" width="2.5237%" height="15" fill="rgb(238,160,17)"/><text x="2.1427%" y="703.50">[u..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (1 samples, 0.16%)</title><rect x="4.4164%" y="773" width="0.1577%" height="15" fill="rgb(214,148,48)"/><text x="4.6664%" y="783.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (1 samples, 0.16%)</title><rect x="4.4164%" y="757" width="0.1577%" height="15" fill="rgb(232,36,49)"/><text x="4.6664%" y="767.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (1 samples, 0.16%)</title><rect x="4.4164%" y="741" width="0.1577%" height="15" fill="rgb(209,103,24)"/><text x="4.6664%" y="751.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (1 samples, 0.16%)</title><rect x="4.4164%" y="725" width="0.1577%" height="15" fill="rgb(229,88,8)"/><text x="4.6664%" y="735.50"></text></g><g><title>std::sys::unix::thread::guard::current (1 samples, 0.16%)</title><rect x="4.4164%" y="709" width="0.1577%" height="15" fill="rgb(213,181,19)"/><text x="4.6664%" y="719.50"></text></g><g><title>pthread_getattr_np (1 samples, 0.16%)</title><rect x="4.4164%" y="693" width="0.1577%" height="15" fill="rgb(254,191,54)"/><text x="4.6664%" y="703.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.16%)</title><rect x="4.4164%" y="677" width="0.1577%" height="15" fill="rgb(241,83,37)"/><text x="4.6664%" y="687.50"></text></g><g><title>tcache_init (1 samples, 0.16%)</title><rect x="4.4164%" y="661" width="0.1577%" height="15" fill="rgb(233,36,39)"/><text x="4.6664%" y="671.50"></text></g><g><title>tcache_init (1 samples, 0.16%)</title><rect x="4.4164%" y="645" width="0.1577%" height="15" fill="rgb(226,3,54)"/><text x="4.6664%" y="655.50"></text></g><g><title>arena_get2 (1 samples, 0.16%)</title><rect x="4.4164%" y="629" width="0.1577%" height="15" fill="rgb(245,192,40)"/><text x="4.6664%" y="639.50"></text></g><g><title>arena_get2 (1 samples, 0.16%)</title><rect x="4.4164%" y="613" width="0.1577%" height="15" fill="rgb(238,167,29)"/><text x="4.6664%" y="623.50"></text></g><g><title>_int_new_arena (1 samples, 0.16%)</title><rect x="4.4164%" y="597" width="0.1577%" height="15" fill="rgb(232,182,51)"/><text x="4.6664%" y="607.50"></text></g><g><title>new_heap (1 samples, 0.16%)</title><rect x="4.4164%" y="581" width="0.1577%" height="15" fill="rgb(231,60,39)"/><text x="4.6664%" y="591.50"></text></g><g><title>__GI___mmap64 (1 samples, 0.16%)</title><rect x="4.4164%" y="565" width="0.1577%" height="15" fill="rgb(208,69,12)"/><text x="4.6664%" y="575.50"></text></g><g><title>__GI___mmap64 (1 samples, 0.16%)</title><rect x="4.4164%" y="549" width="0.1577%" height="15" fill="rgb(235,93,37)"/><text x="4.6664%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="4.4164%" y="533" width="0.1577%" height="15" fill="rgb(213,116,39)"/><text x="4.6664%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="4.4164%" y="517" width="0.1577%" height="15" fill="rgb(222,207,29)"/><text x="4.6664%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="4.4164%" y="501" width="0.1577%" height="15" fill="rgb(206,96,30)"/><text x="4.6664%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="4.4164%" y="485" width="0.1577%" height="15" fill="rgb(218,138,4)"/><text x="4.6664%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="4.4164%" y="469" width="0.1577%" height="15" fill="rgb(250,191,14)"/><text x="4.6664%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="4.4164%" y="453" width="0.1577%" height="15" fill="rgb(239,60,40)"/><text x="4.6664%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="4.4164%" y="437" width="0.1577%" height="15" fill="rgb(206,27,48)"/><text x="4.6664%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="4.4164%" y="421" width="0.1577%" height="15" fill="rgb(225,35,8)"/><text x="4.6664%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="4.4164%" y="405" width="0.1577%" height="15" fill="rgb(250,213,24)"/><text x="4.6664%" y="415.50"></text></g><g><title>__GI___clone (21 samples, 3.31%)</title><rect x="1.5773%" y="821" width="3.3123%" height="15" fill="rgb(247,123,22)"/><text x="1.8273%" y="831.50">__G..</text></g><g><title>start_thread (3 samples, 0.47%)</title><rect x="4.4164%" y="805" width="0.4732%" height="15" fill="rgb(231,138,38)"/><text x="4.6664%" y="815.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (3 samples, 0.47%)</title><rect x="4.4164%" y="789" width="0.4732%" height="15" fill="rgb(231,145,46)"/><text x="4.6664%" y="799.50"></text></g><g><title>std::sys::unix::stack_overflow::Handler::new (2 samples, 0.32%)</title><rect x="4.5741%" y="773" width="0.3155%" height="15" fill="rgb(251,118,11)"/><text x="4.8241%" y="783.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (2 samples, 0.32%)</title><rect x="4.5741%" y="757" width="0.3155%" height="15" fill="rgb(217,147,25)"/><text x="4.8241%" y="767.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (2 samples, 0.32%)</title><rect x="4.5741%" y="741" width="0.3155%" height="15" fill="rgb(247,81,37)"/><text x="4.8241%" y="751.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (2 samples, 0.32%)</title><rect x="4.5741%" y="725" width="0.3155%" height="15" fill="rgb(209,12,38)"/><text x="4.8241%" y="735.50"></text></g><g><title>__GI___mmap64 (2 samples, 0.32%)</title><rect x="4.5741%" y="709" width="0.3155%" height="15" fill="rgb(227,1,9)"/><text x="4.8241%" y="719.50"></text></g><g><title>__GI___mmap64 (2 samples, 0.32%)</title><rect x="4.5741%" y="693" width="0.3155%" height="15" fill="rgb(248,47,43)"/><text x="4.8241%" y="703.50"></text></g><g><title>[unknown] (2 samples, 0.32%)</title><rect x="4.5741%" y="677" width="0.3155%" height="15" fill="rgb(221,10,30)"/><text x="4.8241%" y="687.50"></text></g><g><title>[unknown] (2 samples, 0.32%)</title><rect x="4.5741%" y="661" width="0.3155%" height="15" fill="rgb(210,229,1)"/><text x="4.8241%" y="671.50"></text></g><g><title>[unknown] (2 samples, 0.32%)</title><rect x="4.5741%" y="645" width="0.3155%" height="15" fill="rgb(222,148,37)"/><text x="4.8241%" y="655.50"></text></g><g><title>[unknown] (2 samples, 0.32%)</title><rect x="4.5741%" y="629" width="0.3155%" height="15" fill="rgb(234,67,33)"/><text x="4.8241%" y="639.50"></text></g><g><title>[unknown] (2 samples, 0.32%)</title><rect x="4.5741%" y="613" width="0.3155%" height="15" fill="rgb(247,98,35)"/><text x="4.8241%" y="623.50"></text></g><g><title>[unknown] (2 samples, 0.32%)</title><rect x="4.5741%" y="597" width="0.3155%" height="15" fill="rgb(247,138,52)"/><text x="4.8241%" y="607.50"></text></g><g><title>[unknown] (2 samples, 0.32%)</title><rect x="4.5741%" y="581" width="0.3155%" height="15" fill="rgb(213,79,30)"/><text x="4.8241%" y="591.50"></text></g><g><title>[unknown] (2 samples, 0.32%)</title><rect x="4.5741%" y="565" width="0.3155%" height="15" fill="rgb(246,177,23)"/><text x="4.8241%" y="575.50"></text></g><g><title>[unknown] (2 samples, 0.32%)</title><rect x="4.5741%" y="549" width="0.3155%" height="15" fill="rgb(230,62,27)"/><text x="4.8241%" y="559.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.16%)</title><rect x="4.8896%" y="629" width="0.1577%" height="15" fill="rgb(216,154,8)"/><text x="5.1396%" y="639.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.16%)</title><rect x="4.8896%" y="613" width="0.1577%" height="15" fill="rgb(244,35,45)"/><text x="5.1396%" y="623.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.16%)</title><rect x="4.8896%" y="597" width="0.1577%" height="15" fill="rgb(251,115,12)"/><text x="5.1396%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::dealloc (1 samples, 0.16%)</title><rect x="4.8896%" y="581" width="0.1577%" height="15" fill="rgb(240,54,50)"/><text x="5.1396%" y="591.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.16%)</title><rect x="4.8896%" y="565" width="0.1577%" height="15" fill="rgb(233,84,52)"/><text x="5.1396%" y="575.50"></text></g><g><title>__GI_munmap (1 samples, 0.16%)</title><rect x="4.8896%" y="549" width="0.1577%" height="15" fill="rgb(207,117,47)"/><text x="5.1396%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="4.8896%" y="533" width="0.1577%" height="15" fill="rgb(249,43,39)"/><text x="5.1396%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="4.8896%" y="517" width="0.1577%" height="15" fill="rgb(209,38,44)"/><text x="5.1396%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="4.8896%" y="501" width="0.1577%" height="15" fill="rgb(236,212,23)"/><text x="5.1396%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="4.8896%" y="485" width="0.1577%" height="15" fill="rgb(242,79,21)"/><text x="5.1396%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="4.8896%" y="469" width="0.1577%" height="15" fill="rgb(211,96,35)"/><text x="5.1396%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="4.8896%" y="453" width="0.1577%" height="15" fill="rgb(253,215,40)"/><text x="5.1396%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="4.8896%" y="437" width="0.1577%" height="15" fill="rgb(211,81,21)"/><text x="5.1396%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="4.8896%" y="421" width="0.1577%" height="15" fill="rgb(208,190,38)"/><text x="5.1396%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="4.8896%" y="405" width="0.1577%" height="15" fill="rgb(235,213,38)"/><text x="5.1396%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="4.8896%" y="389" width="0.1577%" height="15" fill="rgb(237,122,38)"/><text x="5.1396%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="4.8896%" y="373" width="0.1577%" height="15" fill="rgb(244,218,35)"/><text x="5.1396%" y="383.50"></text></g><g><title>&lt;broccoli::query::colfind::builder::QueryFn&lt;T,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (1 samples, 0.16%)</title><rect x="5.3628%" y="421" width="0.1577%" height="15" fill="rgb(240,68,47)"/><text x="5.6128%" y="431.50"></text></g><g><title>broccoli::query::colfind::ColfindQuery::find_colliding_pairs_mut_par::{{closure}} (1 samples, 0.16%)</title><rect x="5.3628%" y="405" width="0.1577%" height="15" fill="rgb(210,16,53)"/><text x="5.6128%" y="415.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.16%)</title><rect x="5.3628%" y="389" width="0.1577%" height="15" fill="rgb(235,124,12)"/><text x="5.6128%" y="399.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_node (5 samples, 0.79%)</title><rect x="5.0473%" y="517" width="0.7886%" height="15" fill="rgb(224,169,11)"/><text x="5.2973%" y="527.50"></text></g><g><title>broccoli::query::colfind::oned::find_2d (5 samples, 0.79%)</title><rect x="5.0473%" y="501" width="0.7886%" height="15" fill="rgb(250,166,2)"/><text x="5.2973%" y="511.50"></text></g><g><title>broccoli::query::colfind::oned::find (5 samples, 0.79%)</title><rect x="5.0473%" y="485" width="0.7886%" height="15" fill="rgb(242,216,29)"/><text x="5.2973%" y="495.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (5 samples, 0.79%)</title><rect x="5.0473%" y="469" width="0.7886%" height="15" fill="rgb(230,116,27)"/><text x="5.2973%" y="479.50"></text></g><g><title>broccoli::query::colfind::oned::find::{{closure}} (3 samples, 0.47%)</title><rect x="5.3628%" y="453" width="0.4732%" height="15" fill="rgb(228,99,48)"/><text x="5.6128%" y="463.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (3 samples, 0.47%)</title><rect x="5.3628%" y="437" width="0.4732%" height="15" fill="rgb(253,11,6)"/><text x="5.6128%" y="447.50"></text></g><g><title>&lt;broccoli::query::colfind::builder::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (2 samples, 0.32%)</title><rect x="5.5205%" y="421" width="0.3155%" height="15" fill="rgb(247,143,39)"/><text x="5.7705%" y="431.50"></text></g><g><title>broccoli::query::colfind::ColfindQuery::find_colliding_pairs_mut::{{closure}} (2 samples, 0.32%)</title><rect x="5.5205%" y="405" width="0.3155%" height="15" fill="rgb(236,97,10)"/><text x="5.7705%" y="415.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (2 samples, 0.32%)</title><rect x="5.5205%" y="389" width="0.3155%" height="15" fill="rgb(233,208,19)"/><text x="5.7705%" y="399.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (1 samples, 0.16%)</title><rect x="5.9937%" y="453" width="0.1577%" height="15" fill="rgb(216,164,2)"/><text x="6.2437%" y="463.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (1 samples, 0.16%)</title><rect x="5.9937%" y="437" width="0.1577%" height="15" fill="rgb(220,129,5)"/><text x="6.2437%" y="447.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek::{{closure}} (1 samples, 0.16%)</title><rect x="5.9937%" y="421" width="0.1577%" height="15" fill="rgb(242,17,10)"/><text x="6.2437%" y="431.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.16%)</title><rect x="5.9937%" y="405" width="0.1577%" height="15" fill="rgb(242,107,0)"/><text x="6.2437%" y="415.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.16%)</title><rect x="5.9937%" y="389" width="0.1577%" height="15" fill="rgb(251,28,31)"/><text x="6.2437%" y="399.50"></text></g><g><title>twounordered::FirstVec&lt;T&gt;::push (1 samples, 0.16%)</title><rect x="6.1514%" y="453" width="0.1577%" height="15" fill="rgb(233,223,10)"/><text x="6.4014%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.16%)</title><rect x="6.1514%" y="437" width="0.1577%" height="15" fill="rgb(215,21,27)"/><text x="6.4014%" y="447.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (4 samples, 0.63%)</title><rect x="5.8360%" y="485" width="0.6309%" height="15" fill="rgb(232,23,21)"/><text x="6.0860%" y="495.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (4 samples, 0.63%)</title><rect x="5.8360%" y="469" width="0.6309%" height="15" fill="rgb(244,5,23)"/><text x="6.0860%" y="479.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (1 samples, 0.16%)</title><rect x="6.3091%" y="453" width="0.1577%" height="15" fill="rgb(226,81,46)"/><text x="6.5591%" y="463.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (1 samples, 0.16%)</title><rect x="6.3091%" y="437" width="0.1577%" height="15" fill="rgb(247,70,30)"/><text x="6.5591%" y="447.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (5 samples, 0.79%)</title><rect x="5.8360%" y="501" width="0.7886%" height="15" fill="rgb(212,68,19)"/><text x="6.0860%" y="511.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (1 samples, 0.16%)</title><rect x="6.4669%" y="485" width="0.1577%" height="15" fill="rgb(240,187,13)"/><text x="6.7169%" y="495.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.16%)</title><rect x="6.4669%" y="469" width="0.1577%" height="15" fill="rgb(223,113,26)"/><text x="6.7169%" y="479.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.16%)</title><rect x="6.4669%" y="453" width="0.1577%" height="15" fill="rgb(206,192,2)"/><text x="6.7169%" y="463.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (1 samples, 0.16%)</title><rect x="6.4669%" y="437" width="0.1577%" height="15" fill="rgb(241,108,4)"/><text x="6.7169%" y="447.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.16%)</title><rect x="6.4669%" y="421" width="0.1577%" height="15" fill="rgb(247,173,49)"/><text x="6.7169%" y="431.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (1 samples, 0.16%)</title><rect x="6.6246%" y="405" width="0.1577%" height="15" fill="rgb(224,114,35)"/><text x="6.8746%" y="415.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (2 samples, 0.32%)</title><rect x="6.7823%" y="405" width="0.3155%" height="15" fill="rgb(245,159,27)"/><text x="7.0323%" y="415.50"></text></g><g><title>&lt;broccoli::query::colfind::builder::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (2 samples, 0.32%)</title><rect x="6.7823%" y="389" width="0.3155%" height="15" fill="rgb(245,172,44)"/><text x="7.0323%" y="399.50"></text></g><g><title>broccoli::query::colfind::ColfindQuery::find_colliding_pairs_mut::{{closure}} (2 samples, 0.32%)</title><rect x="6.7823%" y="373" width="0.3155%" height="15" fill="rgb(236,23,11)"/><text x="7.0323%" y="383.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (2 samples, 0.32%)</title><rect x="6.7823%" y="357" width="0.3155%" height="15" fill="rgb(205,117,38)"/><text x="7.0323%" y="367.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (4 samples, 0.63%)</title><rect x="6.6246%" y="469" width="0.6309%" height="15" fill="rgb(237,72,25)"/><text x="6.8746%" y="479.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (4 samples, 0.63%)</title><rect x="6.6246%" y="453" width="0.6309%" height="15" fill="rgb(244,70,9)"/><text x="6.8746%" y="463.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (4 samples, 0.63%)</title><rect x="6.6246%" y="437" width="0.6309%" height="15" fill="rgb(217,125,39)"/><text x="6.8746%" y="447.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (4 samples, 0.63%)</title><rect x="6.6246%" y="421" width="0.6309%" height="15" fill="rgb(235,36,10)"/><text x="6.8746%" y="431.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.16%)</title><rect x="7.0978%" y="405" width="0.1577%" height="15" fill="rgb(251,123,47)"/><text x="7.3478%" y="415.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (2 samples, 0.32%)</title><rect x="7.2555%" y="469" width="0.3155%" height="15" fill="rgb(221,13,13)"/><text x="7.5055%" y="479.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.16%)</title><rect x="7.4132%" y="453" width="0.1577%" height="15" fill="rgb(238,131,9)"/><text x="7.6632%" y="463.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.16%)</title><rect x="7.4132%" y="437" width="0.1577%" height="15" fill="rgb(211,50,8)"/><text x="7.6632%" y="447.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (7 samples, 1.10%)</title><rect x="6.6246%" y="485" width="1.1041%" height="15" fill="rgb(245,182,24)"/><text x="6.8746%" y="495.50"></text></g><g><title>broccoli::query::tools::get_section_mut (1 samples, 0.16%)</title><rect x="7.5710%" y="469" width="0.1577%" height="15" fill="rgb(242,14,37)"/><text x="7.8210%" y="479.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.16%)</title><rect x="7.7287%" y="373" width="0.1577%" height="15" fill="rgb(246,228,12)"/><text x="7.9787%" y="383.50"></text></g><g><title>twounordered::FirstVec&lt;T&gt;::push (2 samples, 0.32%)</title><rect x="7.7287%" y="421" width="0.3155%" height="15" fill="rgb(213,55,15)"/><text x="7.9787%" y="431.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (2 samples, 0.32%)</title><rect x="7.7287%" y="405" width="0.3155%" height="15" fill="rgb(209,9,3)"/><text x="7.9787%" y="415.50"></text></g><g><title>core::ptr::swap (2 samples, 0.32%)</title><rect x="7.7287%" y="389" width="0.3155%" height="15" fill="rgb(230,59,30)"/><text x="7.9787%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.16%)</title><rect x="7.8864%" y="373" width="0.1577%" height="15" fill="rgb(209,121,21)"/><text x="8.1364%" y="383.50"></text></g><g><title>&lt;twounordered::FirstVec&lt;T&gt; as twounordered::RetainMutUnordered&lt;T&gt;&gt;::truncate (1 samples, 0.16%)</title><rect x="8.0442%" y="405" width="0.1577%" height="15" fill="rgb(220,109,13)"/><text x="8.2942%" y="415.50"></text></g><g><title>twounordered::FirstVec&lt;T&gt;::truncate (1 samples, 0.16%)</title><rect x="8.0442%" y="389" width="0.1577%" height="15" fill="rgb(232,18,1)"/><text x="8.2942%" y="399.50"></text></g><g><title>&lt;broccoli::query::colfind::builder::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (1 samples, 0.16%)</title><rect x="8.3596%" y="373" width="0.1577%" height="15" fill="rgb(215,41,42)"/><text x="8.6096%" y="383.50"></text></g><g><title>broccoli::query::colfind::ColfindQuery::find_colliding_pairs_mut::{{closure}} (1 samples, 0.16%)</title><rect x="8.3596%" y="357" width="0.1577%" height="15" fill="rgb(224,123,36)"/><text x="8.6096%" y="367.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.16%)</title><rect x="8.3596%" y="341" width="0.1577%" height="15" fill="rgb(240,125,3)"/><text x="8.6096%" y="351.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (3 samples, 0.47%)</title><rect x="8.2019%" y="405" width="0.4732%" height="15" fill="rgb(205,98,50)"/><text x="8.4519%" y="415.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (2 samples, 0.32%)</title><rect x="8.3596%" y="389" width="0.3155%" height="15" fill="rgb(205,185,37)"/><text x="8.6096%" y="399.50"></text></g><g><title>axgeom::range::Range&lt;T&gt;::intersects (1 samples, 0.16%)</title><rect x="8.5174%" y="373" width="0.1577%" height="15" fill="rgb(238,207,15)"/><text x="8.7674%" y="383.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::le (1 samples, 0.16%)</title><rect x="8.5174%" y="357" width="0.1577%" height="15" fill="rgb(213,199,42)"/><text x="8.7674%" y="367.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (5 samples, 0.79%)</title><rect x="8.0442%" y="421" width="0.7886%" height="15" fill="rgb(235,201,11)"/><text x="8.2942%" y="431.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.16%)</title><rect x="8.6751%" y="405" width="0.1577%" height="15" fill="rgb(207,46,11)"/><text x="8.9251%" y="415.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (8 samples, 1.26%)</title><rect x="7.7287%" y="453" width="1.2618%" height="15" fill="rgb(241,35,35)"/><text x="7.9787%" y="463.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (8 samples, 1.26%)</title><rect x="7.7287%" y="437" width="1.2618%" height="15" fill="rgb(243,32,47)"/><text x="7.9787%" y="447.50"></text></g><g><title>twounordered::SecondVec&lt;T&gt;::push (1 samples, 0.16%)</title><rect x="8.8328%" y="421" width="0.1577%" height="15" fill="rgb(247,202,23)"/><text x="9.0828%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.16%)</title><rect x="8.8328%" y="405" width="0.1577%" height="15" fill="rgb(219,102,11)"/><text x="9.0828%" y="415.50"></text></g><g><title>core::ptr::write (1 samples, 0.16%)</title><rect x="8.8328%" y="389" width="0.1577%" height="15" fill="rgb(243,110,44)"/><text x="9.0828%" y="399.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (11 samples, 1.74%)</title><rect x="7.7287%" y="469" width="1.7350%" height="15" fill="rgb(222,74,54)"/><text x="7.9787%" y="479.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (3 samples, 0.47%)</title><rect x="8.9905%" y="453" width="0.4732%" height="15" fill="rgb(216,99,12)"/><text x="9.2405%" y="463.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.16%)</title><rect x="9.3060%" y="437" width="0.1577%" height="15" fill="rgb(226,22,26)"/><text x="9.5560%" y="447.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.16%)</title><rect x="9.3060%" y="421" width="0.1577%" height="15" fill="rgb(217,163,10)"/><text x="9.5560%" y="431.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (1 samples, 0.16%)</title><rect x="9.4637%" y="405" width="0.1577%" height="15" fill="rgb(213,25,53)"/><text x="9.7137%" y="415.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (1 samples, 0.16%)</title><rect x="9.4637%" y="389" width="0.1577%" height="15" fill="rgb(252,105,26)"/><text x="9.7137%" y="399.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek::{{closure}} (1 samples, 0.16%)</title><rect x="9.4637%" y="373" width="0.1577%" height="15" fill="rgb(220,39,43)"/><text x="9.7137%" y="383.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.16%)</title><rect x="9.4637%" y="357" width="0.1577%" height="15" fill="rgb(229,68,48)"/><text x="9.7137%" y="367.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.16%)</title><rect x="9.4637%" y="341" width="0.1577%" height="15" fill="rgb(252,8,32)"/><text x="9.7137%" y="351.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (2 samples, 0.32%)</title><rect x="9.4637%" y="437" width="0.3155%" height="15" fill="rgb(223,20,43)"/><text x="9.7137%" y="447.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (2 samples, 0.32%)</title><rect x="9.4637%" y="421" width="0.3155%" height="15" fill="rgb(229,81,49)"/><text x="9.7137%" y="431.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (1 samples, 0.16%)</title><rect x="9.6215%" y="405" width="0.1577%" height="15" fill="rgb(236,28,36)"/><text x="9.8715%" y="415.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (1 samples, 0.16%)</title><rect x="9.6215%" y="389" width="0.1577%" height="15" fill="rgb(249,185,26)"/><text x="9.8715%" y="399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.16%)</title><rect x="9.6215%" y="373" width="0.1577%" height="15" fill="rgb(249,174,33)"/><text x="9.8715%" y="383.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.16%)</title><rect x="9.7792%" y="421" width="0.1577%" height="15" fill="rgb(233,201,37)"/><text x="10.0292%" y="431.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.16%)</title><rect x="9.7792%" y="405" width="0.1577%" height="15" fill="rgb(221,78,26)"/><text x="10.0292%" y="415.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (4 samples, 0.63%)</title><rect x="9.4637%" y="453" width="0.6309%" height="15" fill="rgb(250,127,30)"/><text x="9.7137%" y="463.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (2 samples, 0.32%)</title><rect x="9.7792%" y="437" width="0.3155%" height="15" fill="rgb(230,49,44)"/><text x="10.0292%" y="447.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (1 samples, 0.16%)</title><rect x="9.9369%" y="421" width="0.1577%" height="15" fill="rgb(229,67,23)"/><text x="10.1869%" y="431.50"></text></g><g><title>&lt;broccoli::query::colfind::builder::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (1 samples, 0.16%)</title><rect x="9.9369%" y="405" width="0.1577%" height="15" fill="rgb(249,83,47)"/><text x="10.1869%" y="415.50"></text></g><g><title>broccoli::query::colfind::ColfindQuery::find_colliding_pairs_mut::{{closure}} (1 samples, 0.16%)</title><rect x="9.9369%" y="389" width="0.1577%" height="15" fill="rgb(215,43,3)"/><text x="10.1869%" y="399.50"></text></g><g><title>data_gen::main::{{closure}}::{{closure}} (1 samples, 0.16%)</title><rect x="9.9369%" y="373" width="0.1577%" height="15" fill="rgb(238,154,13)"/><text x="10.1869%" y="383.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (1 samples, 0.16%)</title><rect x="10.2524%" y="389" width="0.1577%" height="15" fill="rgb(219,56,2)"/><text x="10.5024%" y="399.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (1 samples, 0.16%)</title><rect x="10.2524%" y="373" width="0.1577%" height="15" fill="rgb(233,0,4)"/><text x="10.5024%" y="383.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek::{{closure}} (1 samples, 0.16%)</title><rect x="10.2524%" y="357" width="0.1577%" height="15" fill="rgb(235,30,7)"/><text x="10.5024%" y="367.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.16%)</title><rect x="10.2524%" y="341" width="0.1577%" height="15" fill="rgb(250,79,13)"/><text x="10.5024%" y="351.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.16%)</title><rect x="10.2524%" y="325" width="0.1577%" height="15" fill="rgb(211,146,34)"/><text x="10.5024%" y="335.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (2 samples, 0.32%)</title><rect x="10.2524%" y="421" width="0.3155%" height="15" fill="rgb(228,22,38)"/><text x="10.5024%" y="431.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (2 samples, 0.32%)</title><rect x="10.2524%" y="405" width="0.3155%" height="15" fill="rgb(235,168,5)"/><text x="10.5024%" y="415.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (1 samples, 0.16%)</title><rect x="10.4101%" y="389" width="0.1577%" height="15" fill="rgb(221,155,16)"/><text x="10.6601%" y="399.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (1 samples, 0.16%)</title><rect x="10.4101%" y="373" width="0.1577%" height="15" fill="rgb(215,215,53)"/><text x="10.6601%" y="383.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (3 samples, 0.47%)</title><rect x="10.2524%" y="437" width="0.4732%" height="15" fill="rgb(223,4,10)"/><text x="10.5024%" y="447.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (1 samples, 0.16%)</title><rect x="10.5678%" y="421" width="0.1577%" height="15" fill="rgb(234,103,6)"/><text x="10.8178%" y="431.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.16%)</title><rect x="10.5678%" y="405" width="0.1577%" height="15" fill="rgb(227,97,0)"/><text x="10.8178%" y="415.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.16%)</title><rect x="10.5678%" y="389" width="0.1577%" height="15" fill="rgb(234,150,53)"/><text x="10.8178%" y="399.50"></text></g><g><title>broccoli::query::colfind::inner::ColfindRecurser&lt;T,NO&gt;::recurse_common (37 samples, 5.84%)</title><rect x="5.0473%" y="533" width="5.8360%" height="15" fill="rgb(228,201,54)"/><text x="5.2973%" y="543.50">broccol..</text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,KK,B&gt;::recurse (32 samples, 5.05%)</title><rect x="5.8360%" y="517" width="5.0473%" height="15" fill="rgb(222,22,37)"/><text x="6.0860%" y="527.50">brocco..</text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,KK,B&gt;::recurse (27 samples, 4.26%)</title><rect x="6.6246%" y="501" width="4.2587%" height="15" fill="rgb(237,53,32)"/><text x="6.8746%" y="511.50">brocc..</text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,KK,B&gt;::recurse (20 samples, 3.15%)</title><rect x="7.7287%" y="485" width="3.1546%" height="15" fill="rgb(233,25,53)"/><text x="7.9787%" y="495.50">bro..</text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,KK,B&gt;::recurse (9 samples, 1.42%)</title><rect x="9.4637%" y="469" width="1.4196%" height="15" fill="rgb(210,40,34)"/><text x="9.7137%" y="479.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,KK,B&gt;::recurse (5 samples, 0.79%)</title><rect x="10.0946%" y="453" width="0.7886%" height="15" fill="rgb(241,220,44)"/><text x="10.3446%" y="463.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,KK,B&gt;::recurse (1 samples, 0.16%)</title><rect x="10.7256%" y="437" width="0.1577%" height="15" fill="rgb(235,28,35)"/><text x="10.9756%" y="447.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (1 samples, 0.16%)</title><rect x="10.7256%" y="421" width="0.1577%" height="15" fill="rgb(210,56,17)"/><text x="10.9756%" y="431.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (1 samples, 0.16%)</title><rect x="10.7256%" y="405" width="0.1577%" height="15" fill="rgb(224,130,29)"/><text x="10.9756%" y="415.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (1 samples, 0.16%)</title><rect x="10.7256%" y="389" width="0.1577%" height="15" fill="rgb(235,212,8)"/><text x="10.9756%" y="399.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.16%)</title><rect x="10.7256%" y="373" width="0.1577%" height="15" fill="rgb(223,33,50)"/><text x="10.9756%" y="383.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_node (1 samples, 0.16%)</title><rect x="10.8833%" y="501" width="0.1577%" height="15" fill="rgb(219,149,13)"/><text x="11.1333%" y="511.50"></text></g><g><title>broccoli::query::colfind::oned::find_2d (1 samples, 0.16%)</title><rect x="10.8833%" y="485" width="0.1577%" height="15" fill="rgb(250,156,29)"/><text x="11.1333%" y="495.50"></text></g><g><title>broccoli::query::colfind::oned::find (1 samples, 0.16%)</title><rect x="10.8833%" y="469" width="0.1577%" height="15" fill="rgb(216,193,19)"/><text x="11.1333%" y="479.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (1 samples, 0.16%)</title><rect x="10.8833%" y="453" width="0.1577%" height="15" fill="rgb(216,135,14)"/><text x="11.1333%" y="463.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.16%)</title><rect x="10.8833%" y="437" width="0.1577%" height="15" fill="rgb(241,47,5)"/><text x="11.1333%" y="447.50"></text></g><g><title>core::ptr::swap (1 samples, 0.16%)</title><rect x="10.8833%" y="421" width="0.1577%" height="15" fill="rgb(233,42,35)"/><text x="11.1333%" y="431.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.16%)</title><rect x="10.8833%" y="405" width="0.1577%" height="15" fill="rgb(231,13,6)"/><text x="11.1333%" y="415.50"></text></g><g><title>broccoli::pmut::PMut&lt;broccoli::node::Node&lt;T&gt;&gt;::into_range (1 samples, 0.16%)</title><rect x="11.0410%" y="501" width="0.1577%" height="15" fill="rgb(207,181,40)"/><text x="11.2910%" y="511.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (1 samples, 0.16%)</title><rect x="11.1987%" y="469" width="0.1577%" height="15" fill="rgb(254,173,49)"/><text x="11.4487%" y="479.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (1 samples, 0.16%)</title><rect x="11.1987%" y="453" width="0.1577%" height="15" fill="rgb(221,1,38)"/><text x="11.4487%" y="463.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (1 samples, 0.16%)</title><rect x="11.1987%" y="437" width="0.1577%" height="15" fill="rgb(206,124,46)"/><text x="11.4487%" y="447.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.79%)</title><rect x="11.3565%" y="453" width="0.7886%" height="15" fill="rgb(249,21,11)"/><text x="11.6065%" y="463.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.79%)</title><rect x="11.3565%" y="437" width="0.7886%" height="15" fill="rgb(222,201,40)"/><text x="11.6065%" y="447.50"></text></g><g><title>&lt;broccoli::query::colfind::builder::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (1 samples, 0.16%)</title><rect x="12.1451%" y="437" width="0.1577%" height="15" fill="rgb(235,61,29)"/><text x="12.3951%" y="447.50"></text></g><g><title>broccoli::query::colfind::ColfindQuery::find_colliding_pairs_mut::{{closure}} (1 samples, 0.16%)</title><rect x="12.1451%" y="421" width="0.1577%" height="15" fill="rgb(219,207,3)"/><text x="12.3951%" y="431.50"></text></g><g><title>data_gen::main::{{closure}}::{{closure}} (1 samples, 0.16%)</title><rect x="12.1451%" y="405" width="0.1577%" height="15" fill="rgb(222,56,46)"/><text x="12.3951%" y="415.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (8 samples, 1.26%)</title><rect x="11.1987%" y="485" width="1.2618%" height="15" fill="rgb(239,76,54)"/><text x="11.4487%" y="495.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (7 samples, 1.10%)</title><rect x="11.3565%" y="469" width="1.1041%" height="15" fill="rgb(231,124,27)"/><text x="11.6065%" y="479.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (2 samples, 0.32%)</title><rect x="12.1451%" y="453" width="0.3155%" height="15" fill="rgb(249,195,6)"/><text x="12.3951%" y="463.50"></text></g><g><title>axgeom::range::Range&lt;T&gt;::intersects (1 samples, 0.16%)</title><rect x="12.3028%" y="437" width="0.1577%" height="15" fill="rgb(237,174,47)"/><text x="12.5528%" y="447.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::le (1 samples, 0.16%)</title><rect x="12.3028%" y="421" width="0.1577%" height="15" fill="rgb(206,201,31)"/><text x="12.5528%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.16%)</title><rect x="12.4606%" y="405" width="0.1577%" height="15" fill="rgb(231,57,52)"/><text x="12.7106%" y="415.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.16%)</title><rect x="12.6183%" y="373" width="0.1577%" height="15" fill="rgb(248,177,22)"/><text x="12.8683%" y="383.50"></text></g><g><title>twounordered::FirstVec&lt;T&gt;::push (3 samples, 0.47%)</title><rect x="12.4606%" y="421" width="0.4732%" height="15" fill="rgb(215,211,37)"/><text x="12.7106%" y="431.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (2 samples, 0.32%)</title><rect x="12.6183%" y="405" width="0.3155%" height="15" fill="rgb(241,128,51)"/><text x="12.8683%" y="415.50"></text></g><g><title>core::ptr::swap (2 samples, 0.32%)</title><rect x="12.6183%" y="389" width="0.3155%" height="15" fill="rgb(227,165,31)"/><text x="12.8683%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.16%)</title><rect x="12.7760%" y="373" width="0.1577%" height="15" fill="rgb(228,167,24)"/><text x="13.0260%" y="383.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (7 samples, 1.10%)</title><rect x="12.4606%" y="453" width="1.1041%" height="15" fill="rgb(228,143,12)"/><text x="12.7106%" y="463.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (7 samples, 1.10%)</title><rect x="12.4606%" y="437" width="1.1041%" height="15" fill="rgb(249,149,8)"/><text x="12.7106%" y="447.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (4 samples, 0.63%)</title><rect x="12.9338%" y="421" width="0.6309%" height="15" fill="rgb(243,35,44)"/><text x="13.1838%" y="431.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (4 samples, 0.63%)</title><rect x="12.9338%" y="405" width="0.6309%" height="15" fill="rgb(246,89,9)"/><text x="13.1838%" y="415.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (3 samples, 0.47%)</title><rect x="13.0915%" y="389" width="0.4732%" height="15" fill="rgb(233,213,13)"/><text x="13.3415%" y="399.50"></text></g><g><title>&lt;broccoli::query::colfind::builder::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (2 samples, 0.32%)</title><rect x="13.2492%" y="373" width="0.3155%" height="15" fill="rgb(233,141,41)"/><text x="13.4992%" y="383.50"></text></g><g><title>broccoli::query::colfind::ColfindQuery::find_colliding_pairs_mut::{{closure}} (2 samples, 0.32%)</title><rect x="13.2492%" y="357" width="0.3155%" height="15" fill="rgb(239,167,4)"/><text x="13.4992%" y="367.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (2 samples, 0.32%)</title><rect x="13.2492%" y="341" width="0.3155%" height="15" fill="rgb(209,217,16)"/><text x="13.4992%" y="351.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.63%)</title><rect x="13.7224%" y="437" width="0.6309%" height="15" fill="rgb(219,88,35)"/><text x="13.9724%" y="447.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.63%)</title><rect x="13.7224%" y="421" width="0.6309%" height="15" fill="rgb(220,193,23)"/><text x="13.9724%" y="431.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (1 samples, 0.16%)</title><rect x="14.1956%" y="405" width="0.1577%" height="15" fill="rgb(230,90,52)"/><text x="14.4456%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.16%)</title><rect x="14.1956%" y="389" width="0.1577%" height="15" fill="rgb(252,106,19)"/><text x="14.4456%" y="399.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (13 samples, 2.05%)</title><rect x="12.4606%" y="469" width="2.0505%" height="15" fill="rgb(206,74,20)"/><text x="12.7106%" y="479.50">&lt;..</text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (6 samples, 0.95%)</title><rect x="13.5647%" y="453" width="0.9464%" height="15" fill="rgb(230,138,44)"/><text x="13.8147%" y="463.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (1 samples, 0.16%)</title><rect x="14.3533%" y="437" width="0.1577%" height="15" fill="rgb(235,182,43)"/><text x="14.6033%" y="447.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (1 samples, 0.16%)</title><rect x="14.6688%" y="405" width="0.1577%" height="15" fill="rgb(242,16,51)"/><text x="14.9188%" y="415.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (1 samples, 0.16%)</title><rect x="14.6688%" y="389" width="0.1577%" height="15" fill="rgb(248,9,4)"/><text x="14.9188%" y="399.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek::{{closure}} (1 samples, 0.16%)</title><rect x="14.6688%" y="373" width="0.1577%" height="15" fill="rgb(210,31,22)"/><text x="14.9188%" y="383.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.16%)</title><rect x="14.6688%" y="357" width="0.1577%" height="15" fill="rgb(239,54,39)"/><text x="14.9188%" y="367.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.16%)</title><rect x="14.6688%" y="341" width="0.1577%" height="15" fill="rgb(230,99,41)"/><text x="14.9188%" y="351.50"></text></g><g><title>&lt;twounordered::SecondVec&lt;T&gt; as twounordered::RetainMutUnordered&lt;T&gt;&gt;::as_slice_mut (1 samples, 0.16%)</title><rect x="15.1420%" y="389" width="0.1577%" height="15" fill="rgb(253,106,12)"/><text x="15.3920%" y="399.50"></text></g><g><title>twounordered::SecondVec&lt;T&gt;::as_slice_mut (1 samples, 0.16%)</title><rect x="15.1420%" y="373" width="0.1577%" height="15" fill="rgb(213,46,41)"/><text x="15.3920%" y="383.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (8 samples, 1.26%)</title><rect x="14.5110%" y="437" width="1.2618%" height="15" fill="rgb(215,133,35)"/><text x="14.7610%" y="447.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (8 samples, 1.26%)</title><rect x="14.5110%" y="421" width="1.2618%" height="15" fill="rgb(213,28,5)"/><text x="14.7610%" y="431.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (6 samples, 0.95%)</title><rect x="14.8265%" y="405" width="0.9464%" height="15" fill="rgb(215,77,49)"/><text x="15.0765%" y="415.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (3 samples, 0.47%)</title><rect x="15.2997%" y="389" width="0.4732%" height="15" fill="rgb(248,100,22)"/><text x="15.5497%" y="399.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (3 samples, 0.47%)</title><rect x="15.2997%" y="373" width="0.4732%" height="15" fill="rgb(208,67,9)"/><text x="15.5497%" y="383.50"></text></g><g><title>&lt;broccoli::query::colfind::builder::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (2 samples, 0.32%)</title><rect x="15.4574%" y="357" width="0.3155%" height="15" fill="rgb(219,133,21)"/><text x="15.7074%" y="367.50"></text></g><g><title>broccoli::query::colfind::ColfindQuery::find_colliding_pairs_mut::{{closure}} (2 samples, 0.32%)</title><rect x="15.4574%" y="341" width="0.3155%" height="15" fill="rgb(246,46,29)"/><text x="15.7074%" y="351.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (2 samples, 0.32%)</title><rect x="15.4574%" y="325" width="0.3155%" height="15" fill="rgb(246,185,52)"/><text x="15.7074%" y="335.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (11 samples, 1.74%)</title><rect x="14.5110%" y="453" width="1.7350%" height="15" fill="rgb(252,136,11)"/><text x="14.7610%" y="463.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (3 samples, 0.47%)</title><rect x="15.7729%" y="437" width="0.4732%" height="15" fill="rgb(219,138,53)"/><text x="16.0229%" y="447.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (2 samples, 0.32%)</title><rect x="15.9306%" y="421" width="0.3155%" height="15" fill="rgb(211,51,23)"/><text x="16.1806%" y="431.50"></text></g><g><title>&lt;broccoli::query::colfind::builder::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (1 samples, 0.16%)</title><rect x="16.0883%" y="405" width="0.1577%" height="15" fill="rgb(247,221,28)"/><text x="16.3383%" y="415.50"></text></g><g><title>broccoli::query::colfind::ColfindQuery::find_colliding_pairs_mut::{{closure}} (1 samples, 0.16%)</title><rect x="16.0883%" y="389" width="0.1577%" height="15" fill="rgb(251,222,45)"/><text x="16.3383%" y="399.50"></text></g><g><title>data_gen::main::{{closure}}::{{closure}} (1 samples, 0.16%)</title><rect x="16.0883%" y="373" width="0.1577%" height="15" fill="rgb(217,162,53)"/><text x="16.3383%" y="383.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (1 samples, 0.16%)</title><rect x="16.2461%" y="421" width="0.1577%" height="15" fill="rgb(229,93,14)"/><text x="16.4961%" y="431.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (1 samples, 0.16%)</title><rect x="16.2461%" y="405" width="0.1577%" height="15" fill="rgb(209,67,49)"/><text x="16.4961%" y="415.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (1 samples, 0.16%)</title><rect x="16.2461%" y="389" width="0.1577%" height="15" fill="rgb(213,87,29)"/><text x="16.4961%" y="399.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (1 samples, 0.16%)</title><rect x="16.2461%" y="373" width="0.1577%" height="15" fill="rgb(205,151,52)"/><text x="16.4961%" y="383.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (1 samples, 0.16%)</title><rect x="16.2461%" y="357" width="0.1577%" height="15" fill="rgb(253,215,39)"/><text x="16.4961%" y="367.50"></text></g><g><title>broccoli::query::colfind::inner::ColfindRecurser&lt;T,NO&gt;::recurse_common (36 samples, 5.68%)</title><rect x="10.8833%" y="517" width="5.6782%" height="15" fill="rgb(221,220,41)"/><text x="11.1333%" y="527.50">broccol..</text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,KK,B&gt;::recurse (34 samples, 5.36%)</title><rect x="11.1987%" y="501" width="5.3628%" height="15" fill="rgb(218,133,21)"/><text x="11.4487%" y="511.50">broccol..</text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,KK,B&gt;::recurse (26 samples, 4.10%)</title><rect x="12.4606%" y="485" width="4.1009%" height="15" fill="rgb(221,193,43)"/><text x="12.7106%" y="495.50">broc..</text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,KK,B&gt;::recurse (13 samples, 2.05%)</title><rect x="14.5110%" y="469" width="2.0505%" height="15" fill="rgb(240,128,52)"/><text x="14.7610%" y="479.50">b..</text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,KK,B&gt;::recurse (2 samples, 0.32%)</title><rect x="16.2461%" y="453" width="0.3155%" height="15" fill="rgb(253,114,12)"/><text x="16.4961%" y="463.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (2 samples, 0.32%)</title><rect x="16.2461%" y="437" width="0.3155%" height="15" fill="rgb(215,223,47)"/><text x="16.4961%" y="447.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (1 samples, 0.16%)</title><rect x="16.4038%" y="421" width="0.1577%" height="15" fill="rgb(248,225,23)"/><text x="16.6538%" y="431.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (1 samples, 0.16%)</title><rect x="16.4038%" y="405" width="0.1577%" height="15" fill="rgb(250,108,0)"/><text x="16.6538%" y="415.50"></text></g><g><title>&lt;broccoli::query::colfind::builder::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (1 samples, 0.16%)</title><rect x="16.4038%" y="389" width="0.1577%" height="15" fill="rgb(228,208,7)"/><text x="16.6538%" y="399.50"></text></g><g><title>broccoli::query::colfind::ColfindQuery::find_colliding_pairs_mut::{{closure}} (1 samples, 0.16%)</title><rect x="16.4038%" y="373" width="0.1577%" height="15" fill="rgb(244,45,10)"/><text x="16.6538%" y="383.50"></text></g><g><title>data_gen::main::{{closure}}::{{closure}} (1 samples, 0.16%)</title><rect x="16.4038%" y="357" width="0.1577%" height="15" fill="rgb(207,125,25)"/><text x="16.6538%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as twounordered::RetainMutUnordered&lt;T&gt;&gt;::truncate (1 samples, 0.16%)</title><rect x="16.8770%" y="421" width="0.1577%" height="15" fill="rgb(210,195,18)"/><text x="17.1270%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::truncate (1 samples, 0.16%)</title><rect x="16.8770%" y="405" width="0.1577%" height="15" fill="rgb(249,80,12)"/><text x="17.1270%" y="415.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_node (6 samples, 0.95%)</title><rect x="16.5615%" y="485" width="0.9464%" height="15" fill="rgb(221,65,9)"/><text x="16.8115%" y="495.50"></text></g><g><title>broccoli::query::colfind::oned::find_2d (6 samples, 0.95%)</title><rect x="16.5615%" y="469" width="0.9464%" height="15" fill="rgb(235,49,36)"/><text x="16.8115%" y="479.50"></text></g><g><title>broccoli::query::colfind::oned::find (6 samples, 0.95%)</title><rect x="16.5615%" y="453" width="0.9464%" height="15" fill="rgb(225,32,20)"/><text x="16.8115%" y="463.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (6 samples, 0.95%)</title><rect x="16.5615%" y="437" width="0.9464%" height="15" fill="rgb(215,141,46)"/><text x="16.8115%" y="447.50"></text></g><g><title>broccoli::query::colfind::oned::find::{{closure}} (3 samples, 0.47%)</title><rect x="17.0347%" y="421" width="0.4732%" height="15" fill="rgb(250,160,47)"/><text x="17.2847%" y="431.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (3 samples, 0.47%)</title><rect x="17.0347%" y="405" width="0.4732%" height="15" fill="rgb(216,222,40)"/><text x="17.2847%" y="415.50"></text></g><g><title>&lt;broccoli::query::colfind::builder::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (2 samples, 0.32%)</title><rect x="17.1924%" y="389" width="0.3155%" height="15" fill="rgb(234,217,39)"/><text x="17.4424%" y="399.50"></text></g><g><title>broccoli::query::colfind::ColfindQuery::find_colliding_pairs_mut::{{closure}} (2 samples, 0.32%)</title><rect x="17.1924%" y="373" width="0.3155%" height="15" fill="rgb(207,178,40)"/><text x="17.4424%" y="383.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (2 samples, 0.32%)</title><rect x="17.1924%" y="357" width="0.3155%" height="15" fill="rgb(221,136,13)"/><text x="17.4424%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::lt (1 samples, 0.16%)</title><rect x="17.8233%" y="421" width="0.1577%" height="15" fill="rgb(249,199,10)"/><text x="18.0733%" y="431.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (1 samples, 0.16%)</title><rect x="17.9811%" y="421" width="0.1577%" height="15" fill="rgb(249,222,13)"/><text x="18.2311%" y="431.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (1 samples, 0.16%)</title><rect x="17.9811%" y="405" width="0.1577%" height="15" fill="rgb(244,185,38)"/><text x="18.2311%" y="415.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek::{{closure}} (1 samples, 0.16%)</title><rect x="17.9811%" y="389" width="0.1577%" height="15" fill="rgb(236,202,9)"/><text x="18.2311%" y="399.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.16%)</title><rect x="17.9811%" y="373" width="0.1577%" height="15" fill="rgb(250,229,37)"/><text x="18.2311%" y="383.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.16%)</title><rect x="17.9811%" y="357" width="0.1577%" height="15" fill="rgb(206,174,23)"/><text x="18.2311%" y="367.50"></text></g><g><title>twounordered::FirstVec&lt;T&gt;::push (1 samples, 0.16%)</title><rect x="18.1388%" y="421" width="0.1577%" height="15" fill="rgb(211,33,43)"/><text x="18.3888%" y="431.50"></text></g><g><title>&lt;twounordered::FirstVec&lt;T&gt; as twounordered::RetainMutUnordered&lt;T&gt;&gt;::truncate (1 samples, 0.16%)</title><rect x="18.6120%" y="405" width="0.1577%" height="15" fill="rgb(245,58,50)"/><text x="18.8620%" y="415.50"></text></g><g><title>twounordered::FirstVec&lt;T&gt;::truncate (1 samples, 0.16%)</title><rect x="18.6120%" y="389" width="0.1577%" height="15" fill="rgb(244,68,36)"/><text x="18.8620%" y="399.50"></text></g><g><title>&lt;twounordered::SecondVec&lt;T&gt; as twounordered::RetainMutUnordered&lt;T&gt;&gt;::as_slice_mut (1 samples, 0.16%)</title><rect x="18.7697%" y="405" width="0.1577%" height="15" fill="rgb(232,229,15)"/><text x="19.0197%" y="415.50"></text></g><g><title>twounordered::SecondVec&lt;T&gt;::as_slice_mut (1 samples, 0.16%)</title><rect x="18.7697%" y="389" width="0.1577%" height="15" fill="rgb(254,30,23)"/><text x="19.0197%" y="399.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (1 samples, 0.16%)</title><rect x="18.9274%" y="389" width="0.1577%" height="15" fill="rgb(235,160,14)"/><text x="19.1774%" y="399.50"></text></g><g><title>&lt;broccoli::query::colfind::builder::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (1 samples, 0.16%)</title><rect x="18.9274%" y="373" width="0.1577%" height="15" fill="rgb(212,155,44)"/><text x="19.1774%" y="383.50"></text></g><g><title>broccoli::query::colfind::ColfindQuery::find_colliding_pairs_mut::{{closure}} (1 samples, 0.16%)</title><rect x="18.9274%" y="357" width="0.1577%" height="15" fill="rgb(226,2,50)"/><text x="19.1774%" y="367.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.16%)</title><rect x="18.9274%" y="341" width="0.1577%" height="15" fill="rgb(234,177,6)"/><text x="19.1774%" y="351.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (2 samples, 0.32%)</title><rect x="18.9274%" y="405" width="0.3155%" height="15" fill="rgb(217,24,9)"/><text x="19.1774%" y="415.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.16%)</title><rect x="19.0852%" y="389" width="0.1577%" height="15" fill="rgb(220,13,46)"/><text x="19.3352%" y="399.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (7 samples, 1.10%)</title><rect x="18.2965%" y="421" width="1.1041%" height="15" fill="rgb(239,221,27)"/><text x="18.5465%" y="431.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.16%)</title><rect x="19.2429%" y="405" width="0.1577%" height="15" fill="rgb(222,198,25)"/><text x="19.4929%" y="415.50"></text></g><g><title>core::ptr::swap (1 samples, 0.16%)</title><rect x="19.2429%" y="389" width="0.1577%" height="15" fill="rgb(211,99,13)"/><text x="19.4929%" y="399.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.16%)</title><rect x="19.2429%" y="373" width="0.1577%" height="15" fill="rgb(232,111,31)"/><text x="19.4929%" y="383.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (13 samples, 2.05%)</title><rect x="17.5079%" y="453" width="2.0505%" height="15" fill="rgb(245,82,37)"/><text x="17.7579%" y="463.50">b..</text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (13 samples, 2.05%)</title><rect x="17.5079%" y="437" width="2.0505%" height="15" fill="rgb(227,149,46)"/><text x="17.7579%" y="447.50">b..</text></g><g><title>twounordered::SecondVec&lt;T&gt;::push (1 samples, 0.16%)</title><rect x="19.4006%" y="421" width="0.1577%" height="15" fill="rgb(218,36,50)"/><text x="19.6506%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.16%)</title><rect x="19.4006%" y="405" width="0.1577%" height="15" fill="rgb(226,80,48)"/><text x="19.6506%" y="415.50"></text></g><g><title>core::ptr::write (1 samples, 0.16%)</title><rect x="19.4006%" y="389" width="0.1577%" height="15" fill="rgb(238,224,15)"/><text x="19.6506%" y="399.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.47%)</title><rect x="19.8738%" y="437" width="0.4732%" height="15" fill="rgb(241,136,10)"/><text x="20.1238%" y="447.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.47%)</title><rect x="19.8738%" y="421" width="0.4732%" height="15" fill="rgb(208,32,45)"/><text x="20.1238%" y="431.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (1 samples, 0.16%)</title><rect x="20.3470%" y="437" width="0.1577%" height="15" fill="rgb(207,135,9)"/><text x="20.5970%" y="447.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (7 samples, 1.10%)</title><rect x="19.5584%" y="453" width="1.1041%" height="15" fill="rgb(206,86,44)"/><text x="19.8084%" y="463.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::lt (1 samples, 0.16%)</title><rect x="20.5047%" y="437" width="0.1577%" height="15" fill="rgb(245,177,15)"/><text x="20.7547%" y="447.50"></text></g><g><title>broccoli::pmut::PMut&lt;[T]&gt;::truncate (1 samples, 0.16%)</title><rect x="20.8202%" y="437" width="0.1577%" height="15" fill="rgb(206,64,50)"/><text x="21.0702%" y="447.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1 samples, 0.16%)</title><rect x="20.8202%" y="421" width="0.1577%" height="15" fill="rgb(234,36,40)"/><text x="21.0702%" y="431.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.16%)</title><rect x="20.8202%" y="405" width="0.1577%" height="15" fill="rgb(213,64,8)"/><text x="21.0702%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="20.8202%" y="389" width="0.1577%" height="15" fill="rgb(210,75,36)"/><text x="21.0702%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="20.8202%" y="373" width="0.1577%" height="15" fill="rgb(229,88,21)"/><text x="21.0702%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="20.8202%" y="357" width="0.1577%" height="15" fill="rgb(252,204,47)"/><text x="21.0702%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="20.8202%" y="341" width="0.1577%" height="15" fill="rgb(208,77,27)"/><text x="21.0702%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="20.8202%" y="325" width="0.1577%" height="15" fill="rgb(221,76,26)"/><text x="21.0702%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="20.8202%" y="309" width="0.1577%" height="15" fill="rgb(225,139,18)"/><text x="21.0702%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="20.8202%" y="293" width="0.1577%" height="15" fill="rgb(230,137,11)"/><text x="21.0702%" y="303.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (23 samples, 3.63%)</title><rect x="17.5079%" y="469" width="3.6278%" height="15" fill="rgb(212,28,1)"/><text x="17.7579%" y="479.50">&lt;bro..</text></g><g><title>broccoli::query::tools::get_section_mut (3 samples, 0.47%)</title><rect x="20.6625%" y="453" width="0.4732%" height="15" fill="rgb(248,164,17)"/><text x="20.9125%" y="463.50"></text></g><g><title>broccoli::pmut::PMut&lt;[T]&gt;::truncate_from (1 samples, 0.16%)</title><rect x="20.9779%" y="437" width="0.1577%" height="15" fill="rgb(222,171,42)"/><text x="21.2279%" y="447.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1 samples, 0.16%)</title><rect x="20.9779%" y="421" width="0.1577%" height="15" fill="rgb(243,84,45)"/><text x="21.2279%" y="431.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.16%)</title><rect x="20.9779%" y="405" width="0.1577%" height="15" fill="rgb(252,49,23)"/><text x="21.2279%" y="415.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::lt (2 samples, 0.32%)</title><rect x="21.1356%" y="405" width="0.3155%" height="15" fill="rgb(215,19,7)"/><text x="21.3856%" y="415.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (11 samples, 1.74%)</title><rect x="21.1356%" y="437" width="1.7350%" height="15" fill="rgb(238,81,41)"/><text x="21.3856%" y="447.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (11 samples, 1.74%)</title><rect x="21.1356%" y="421" width="1.7350%" height="15" fill="rgb(210,199,37)"/><text x="21.3856%" y="431.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (9 samples, 1.42%)</title><rect x="21.4511%" y="405" width="1.4196%" height="15" fill="rgb(244,192,49)"/><text x="21.7011%" y="415.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (2 samples, 0.32%)</title><rect x="22.5552%" y="389" width="0.3155%" height="15" fill="rgb(226,211,11)"/><text x="22.8052%" y="399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.16%)</title><rect x="22.7129%" y="373" width="0.1577%" height="15" fill="rgb(236,162,54)"/><text x="22.9629%" y="383.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.32%)</title><rect x="23.0284%" y="421" width="0.3155%" height="15" fill="rgb(220,229,9)"/><text x="23.2784%" y="431.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.32%)</title><rect x="23.0284%" y="405" width="0.3155%" height="15" fill="rgb(250,87,22)"/><text x="23.2784%" y="415.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (5 samples, 0.79%)</title><rect x="22.8707%" y="437" width="0.7886%" height="15" fill="rgb(239,43,17)"/><text x="23.1207%" y="447.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (2 samples, 0.32%)</title><rect x="23.3438%" y="421" width="0.3155%" height="15" fill="rgb(231,177,25)"/><text x="23.5938%" y="431.50"></text></g><g><title>&lt;broccoli::query::colfind::builder::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (2 samples, 0.32%)</title><rect x="23.3438%" y="405" width="0.3155%" height="15" fill="rgb(219,179,1)"/><text x="23.5938%" y="415.50"></text></g><g><title>broccoli::query::colfind::ColfindQuery::find_colliding_pairs_mut::{{closure}} (2 samples, 0.32%)</title><rect x="23.3438%" y="389" width="0.3155%" height="15" fill="rgb(238,219,53)"/><text x="23.5938%" y="399.50"></text></g><g><title>data_gen::main::{{closure}}::{{closure}} (2 samples, 0.32%)</title><rect x="23.3438%" y="373" width="0.3155%" height="15" fill="rgb(232,167,36)"/><text x="23.5938%" y="383.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (18 samples, 2.84%)</title><rect x="21.1356%" y="453" width="2.8391%" height="15" fill="rgb(244,19,51)"/><text x="21.3856%" y="463.50">&lt;b..</text></g><g><title>broccoli::query::tools::get_section_mut (2 samples, 0.32%)</title><rect x="23.6593%" y="437" width="0.3155%" height="15" fill="rgb(224,6,22)"/><text x="23.9093%" y="447.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.16%)</title><rect x="23.8170%" y="421" width="0.1577%" height="15" fill="rgb(224,145,5)"/><text x="24.0670%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.16%)</title><rect x="23.8170%" y="405" width="0.1577%" height="15" fill="rgb(234,130,49)"/><text x="24.0670%" y="415.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.16%)</title><rect x="23.8170%" y="389" width="0.1577%" height="15" fill="rgb(254,6,2)"/><text x="24.0670%" y="399.50"></text></g><g><title>twounordered::FirstVec&lt;T&gt;::push (1 samples, 0.16%)</title><rect x="24.1325%" y="389" width="0.1577%" height="15" fill="rgb(208,96,46)"/><text x="24.3825%" y="399.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (1 samples, 0.16%)</title><rect x="24.4479%" y="357" width="0.1577%" height="15" fill="rgb(239,3,39)"/><text x="24.6979%" y="367.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (5 samples, 0.79%)</title><rect x="24.2902%" y="389" width="0.7886%" height="15" fill="rgb(233,210,1)"/><text x="24.5402%" y="399.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (5 samples, 0.79%)</title><rect x="24.2902%" y="373" width="0.7886%" height="15" fill="rgb(244,137,37)"/><text x="24.5402%" y="383.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (3 samples, 0.47%)</title><rect x="24.6057%" y="357" width="0.4732%" height="15" fill="rgb(240,136,2)"/><text x="24.8557%" y="367.50"></text></g><g><title>&lt;broccoli::query::colfind::builder::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (1 samples, 0.16%)</title><rect x="24.9211%" y="341" width="0.1577%" height="15" fill="rgb(239,18,37)"/><text x="25.1711%" y="351.50"></text></g><g><title>broccoli::query::colfind::ColfindQuery::find_colliding_pairs_mut::{{closure}} (1 samples, 0.16%)</title><rect x="24.9211%" y="325" width="0.1577%" height="15" fill="rgb(218,185,22)"/><text x="25.1711%" y="335.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.16%)</title><rect x="24.9211%" y="309" width="0.1577%" height="15" fill="rgb(225,218,4)"/><text x="25.1711%" y="319.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (8 samples, 1.26%)</title><rect x="23.9748%" y="421" width="1.2618%" height="15" fill="rgb(230,182,32)"/><text x="24.2248%" y="431.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (8 samples, 1.26%)</title><rect x="23.9748%" y="405" width="1.2618%" height="15" fill="rgb(242,56,43)"/><text x="24.2248%" y="415.50"></text></g><g><title>twounordered::SecondVec&lt;T&gt;::push (1 samples, 0.16%)</title><rect x="25.0789%" y="389" width="0.1577%" height="15" fill="rgb(233,99,24)"/><text x="25.3289%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.16%)</title><rect x="25.0789%" y="373" width="0.1577%" height="15" fill="rgb(234,209,42)"/><text x="25.3289%" y="383.50"></text></g><g><title>core::ptr::write (1 samples, 0.16%)</title><rect x="25.0789%" y="357" width="0.1577%" height="15" fill="rgb(227,7,12)"/><text x="25.3289%" y="367.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.16%)</title><rect x="25.2366%" y="405" width="0.1577%" height="15" fill="rgb(245,203,43)"/><text x="25.4866%" y="415.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.16%)</title><rect x="25.2366%" y="389" width="0.1577%" height="15" fill="rgb(238,205,33)"/><text x="25.4866%" y="399.50"></text></g><g><title>broccoli::query::colfind::inner::ColfindRecurser&lt;T,NO&gt;::recurse_common (57 samples, 8.99%)</title><rect x="16.5615%" y="501" width="8.9905%" height="15" fill="rgb(231,56,7)"/><text x="16.8115%" y="511.50">broccoli::que..</text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,KK,B&gt;::recurse (51 samples, 8.04%)</title><rect x="17.5079%" y="485" width="8.0442%" height="15" fill="rgb(244,186,29)"/><text x="17.7579%" y="495.50">broccoli::q..</text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,KK,B&gt;::recurse (28 samples, 4.42%)</title><rect x="21.1356%" y="469" width="4.4164%" height="15" fill="rgb(234,111,31)"/><text x="21.3856%" y="479.50">brocc..</text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,KK,B&gt;::recurse (10 samples, 1.58%)</title><rect x="23.9748%" y="453" width="1.5773%" height="15" fill="rgb(241,149,10)"/><text x="24.2248%" y="463.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (10 samples, 1.58%)</title><rect x="23.9748%" y="437" width="1.5773%" height="15" fill="rgb(249,206,44)"/><text x="24.2248%" y="447.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (2 samples, 0.32%)</title><rect x="25.2366%" y="421" width="0.3155%" height="15" fill="rgb(251,153,30)"/><text x="25.4866%" y="431.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (1 samples, 0.16%)</title><rect x="25.3943%" y="405" width="0.1577%" height="15" fill="rgb(239,152,38)"/><text x="25.6443%" y="415.50"></text></g><g><title>&lt;broccoli::query::colfind::builder::QueryFn&lt;T,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (1 samples, 0.16%)</title><rect x="25.8675%" y="373" width="0.1577%" height="15" fill="rgb(249,139,47)"/><text x="26.1175%" y="383.50"></text></g><g><title>broccoli::query::colfind::ColfindQuery::find_colliding_pairs_mut_par::{{closure}} (1 samples, 0.16%)</title><rect x="25.8675%" y="357" width="0.1577%" height="15" fill="rgb(244,64,35)"/><text x="26.1175%" y="367.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.16%)</title><rect x="25.8675%" y="341" width="0.1577%" height="15" fill="rgb(216,46,15)"/><text x="26.1175%" y="351.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (7 samples, 1.10%)</title><rect x="25.5521%" y="389" width="1.1041%" height="15" fill="rgb(250,74,19)"/><text x="25.8021%" y="399.50"></text></g><g><title>&lt;broccoli::query::colfind::builder::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (4 samples, 0.63%)</title><rect x="26.0252%" y="373" width="0.6309%" height="15" fill="rgb(249,42,33)"/><text x="26.2752%" y="383.50"></text></g><g><title>broccoli::query::colfind::ColfindQuery::find_colliding_pairs_mut::{{closure}} (4 samples, 0.63%)</title><rect x="26.0252%" y="357" width="0.6309%" height="15" fill="rgb(242,149,17)"/><text x="26.2752%" y="367.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (4 samples, 0.63%)</title><rect x="26.0252%" y="341" width="0.6309%" height="15" fill="rgb(244,29,21)"/><text x="26.2752%" y="351.50"></text></g><g><title>broccoli::query::colfind::oned::find::{{closure}} (8 samples, 1.26%)</title><rect x="25.5521%" y="405" width="1.2618%" height="15" fill="rgb(220,130,37)"/><text x="25.8021%" y="415.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.16%)</title><rect x="26.6562%" y="389" width="0.1577%" height="15" fill="rgb(211,67,2)"/><text x="26.9062%" y="399.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_node (9 samples, 1.42%)</title><rect x="25.5521%" y="469" width="1.4196%" height="15" fill="rgb(235,68,52)"/><text x="25.8021%" y="479.50"></text></g><g><title>broccoli::query::colfind::oned::find_2d (9 samples, 1.42%)</title><rect x="25.5521%" y="453" width="1.4196%" height="15" fill="rgb(246,142,3)"/><text x="25.8021%" y="463.50"></text></g><g><title>broccoli::query::colfind::oned::find (9 samples, 1.42%)</title><rect x="25.5521%" y="437" width="1.4196%" height="15" fill="rgb(241,25,7)"/><text x="25.8021%" y="447.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (9 samples, 1.42%)</title><rect x="25.5521%" y="421" width="1.4196%" height="15" fill="rgb(242,119,39)"/><text x="25.8021%" y="431.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.16%)</title><rect x="26.8139%" y="405" width="0.1577%" height="15" fill="rgb(241,98,45)"/><text x="27.0639%" y="415.50"></text></g><g><title>core::ptr::swap (1 samples, 0.16%)</title><rect x="26.8139%" y="389" width="0.1577%" height="15" fill="rgb(254,28,30)"/><text x="27.0639%" y="399.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.16%)</title><rect x="26.8139%" y="373" width="0.1577%" height="15" fill="rgb(241,142,54)"/><text x="27.0639%" y="383.50"></text></g><g><title>twounordered::FirstVec&lt;T&gt;::push (1 samples, 0.16%)</title><rect x="26.9716%" y="405" width="0.1577%" height="15" fill="rgb(222,85,15)"/><text x="27.2216%" y="415.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.16%)</title><rect x="26.9716%" y="389" width="0.1577%" height="15" fill="rgb(210,85,47)"/><text x="27.2216%" y="399.50"></text></g><g><title>core::ptr::swap (1 samples, 0.16%)</title><rect x="26.9716%" y="373" width="0.1577%" height="15" fill="rgb(224,206,25)"/><text x="27.2216%" y="383.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.16%)</title><rect x="26.9716%" y="357" width="0.1577%" height="15" fill="rgb(243,201,19)"/><text x="27.2216%" y="367.50"></text></g><g><title>&lt;twounordered::SecondVec&lt;T&gt; as twounordered::RetainMutUnordered&lt;T&gt;&gt;::truncate (1 samples, 0.16%)</title><rect x="27.2871%" y="389" width="0.1577%" height="15" fill="rgb(236,59,4)"/><text x="27.5371%" y="399.50"></text></g><g><title>twounordered::SecondVec&lt;T&gt;::truncate (1 samples, 0.16%)</title><rect x="27.2871%" y="373" width="0.1577%" height="15" fill="rgb(254,179,45)"/><text x="27.5371%" y="383.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (6 samples, 0.95%)</title><rect x="28.0757%" y="373" width="0.9464%" height="15" fill="rgb(226,14,10)"/><text x="28.3257%" y="383.50"></text></g><g><title>&lt;broccoli::query::colfind::builder::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (3 samples, 0.47%)</title><rect x="28.5489%" y="357" width="0.4732%" height="15" fill="rgb(244,27,41)"/><text x="28.7989%" y="367.50"></text></g><g><title>broccoli::query::colfind::ColfindQuery::find_colliding_pairs_mut::{{closure}} (3 samples, 0.47%)</title><rect x="28.5489%" y="341" width="0.4732%" height="15" fill="rgb(235,35,32)"/><text x="28.7989%" y="351.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (3 samples, 0.47%)</title><rect x="28.5489%" y="325" width="0.4732%" height="15" fill="rgb(218,68,31)"/><text x="28.7989%" y="335.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (15 samples, 2.37%)</title><rect x="26.9716%" y="437" width="2.3659%" height="15" fill="rgb(207,120,37)"/><text x="27.2216%" y="447.50">br..</text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (15 samples, 2.37%)</title><rect x="26.9716%" y="421" width="2.3659%" height="15" fill="rgb(227,98,0)"/><text x="27.2216%" y="431.50">br..</text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (14 samples, 2.21%)</title><rect x="27.1293%" y="405" width="2.2082%" height="15" fill="rgb(207,7,3)"/><text x="27.3793%" y="415.50">t..</text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (12 samples, 1.89%)</title><rect x="27.4448%" y="389" width="1.8927%" height="15" fill="rgb(206,98,19)"/><text x="27.6948%" y="399.50">b..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (2 samples, 0.32%)</title><rect x="29.0221%" y="373" width="0.3155%" height="15" fill="rgb(217,5,26)"/><text x="29.2721%" y="383.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 1.26%)</title><rect x="29.6530%" y="421" width="1.2618%" height="15" fill="rgb(235,190,38)"/><text x="29.9030%" y="431.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 1.26%)</title><rect x="29.6530%" y="405" width="1.2618%" height="15" fill="rgb(247,86,24)"/><text x="29.9030%" y="415.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (6 samples, 0.95%)</title><rect x="30.9148%" y="421" width="0.9464%" height="15" fill="rgb(205,101,16)"/><text x="31.1648%" y="431.50"></text></g><g><title>&lt;broccoli::query::colfind::builder::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (2 samples, 0.32%)</title><rect x="31.5457%" y="405" width="0.3155%" height="15" fill="rgb(246,168,33)"/><text x="31.7957%" y="415.50"></text></g><g><title>broccoli::query::colfind::ColfindQuery::find_colliding_pairs_mut::{{closure}} (2 samples, 0.32%)</title><rect x="31.5457%" y="389" width="0.3155%" height="15" fill="rgb(231,114,1)"/><text x="31.7957%" y="399.50"></text></g><g><title>data_gen::main::{{closure}}::{{closure}} (2 samples, 0.32%)</title><rect x="31.5457%" y="373" width="0.3155%" height="15" fill="rgb(207,184,53)"/><text x="31.7957%" y="383.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::le (1 samples, 0.16%)</title><rect x="31.8612%" y="421" width="0.1577%" height="15" fill="rgb(224,95,51)"/><text x="32.1112%" y="431.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (19 samples, 3.00%)</title><rect x="29.3375%" y="437" width="2.9968%" height="15" fill="rgb(212,188,45)"/><text x="29.5875%" y="447.50">bro..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::lt (2 samples, 0.32%)</title><rect x="32.0189%" y="421" width="0.3155%" height="15" fill="rgb(223,154,38)"/><text x="32.2689%" y="431.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (38 samples, 5.99%)</title><rect x="26.9716%" y="453" width="5.9937%" height="15" fill="rgb(251,22,52)"/><text x="27.2216%" y="463.50">&lt;broccol..</text></g><g><title>broccoli::query::tools::get_section_mut (4 samples, 0.63%)</title><rect x="32.3344%" y="437" width="0.6309%" height="15" fill="rgb(229,209,22)"/><text x="32.5844%" y="447.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.32%)</title><rect x="32.6498%" y="421" width="0.3155%" height="15" fill="rgb(234,138,34)"/><text x="32.8998%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.32%)</title><rect x="32.6498%" y="405" width="0.3155%" height="15" fill="rgb(212,95,11)"/><text x="32.8998%" y="415.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.32%)</title><rect x="32.6498%" y="389" width="0.3155%" height="15" fill="rgb(240,179,47)"/><text x="32.8998%" y="399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::lt (1 samples, 0.16%)</title><rect x="32.9653%" y="389" width="0.1577%" height="15" fill="rgb(240,163,11)"/><text x="33.2153%" y="399.50"></text></g><g><title>twounordered::FirstVec&lt;T&gt;::push (2 samples, 0.32%)</title><rect x="33.1230%" y="389" width="0.3155%" height="15" fill="rgb(236,37,12)"/><text x="33.3730%" y="399.50"></text></g><g><title>&lt;twounordered::FirstVec&lt;T&gt; as twounordered::RetainMutUnordered&lt;T&gt;&gt;::truncate (2 samples, 0.32%)</title><rect x="34.5426%" y="373" width="0.3155%" height="15" fill="rgb(232,164,16)"/><text x="34.7926%" y="383.50"></text></g><g><title>twounordered::FirstVec&lt;T&gt;::truncate (2 samples, 0.32%)</title><rect x="34.5426%" y="357" width="0.3155%" height="15" fill="rgb(244,205,15)"/><text x="34.7926%" y="367.50"></text></g><g><title>core::intrinsics::copy (2 samples, 0.32%)</title><rect x="34.5426%" y="341" width="0.3155%" height="15" fill="rgb(223,117,47)"/><text x="34.7926%" y="351.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.32%)</title><rect x="34.5426%" y="325" width="0.3155%" height="15" fill="rgb(244,107,35)"/><text x="34.7926%" y="335.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (3 samples, 0.47%)</title><rect x="35.1735%" y="357" width="0.4732%" height="15" fill="rgb(205,140,8)"/><text x="35.4235%" y="367.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (12 samples, 1.89%)</title><rect x="35.6467%" y="357" width="1.8927%" height="15" fill="rgb(228,84,46)"/><text x="35.8967%" y="367.50">&lt;..</text></g><g><title>&lt;broccoli::query::colfind::builder::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (6 samples, 0.95%)</title><rect x="36.5931%" y="341" width="0.9464%" height="15" fill="rgb(254,188,9)"/><text x="36.8431%" y="351.50"></text></g><g><title>broccoli::query::colfind::ColfindQuery::find_colliding_pairs_mut::{{closure}} (6 samples, 0.95%)</title><rect x="36.5931%" y="325" width="0.9464%" height="15" fill="rgb(206,112,54)"/><text x="36.8431%" y="335.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (6 samples, 0.95%)</title><rect x="36.5931%" y="309" width="0.9464%" height="15" fill="rgb(216,84,49)"/><text x="36.8431%" y="319.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (30 samples, 4.73%)</title><rect x="32.9653%" y="421" width="4.7319%" height="15" fill="rgb(214,194,35)"/><text x="33.2153%" y="431.50">brocco..</text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (30 samples, 4.73%)</title><rect x="32.9653%" y="405" width="4.7319%" height="15" fill="rgb(249,28,3)"/><text x="33.2153%" y="415.50">brocco..</text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (27 samples, 4.26%)</title><rect x="33.4385%" y="389" width="4.2587%" height="15" fill="rgb(222,56,52)"/><text x="33.6885%" y="399.50">twoun..</text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (18 samples, 2.84%)</title><rect x="34.8580%" y="373" width="2.8391%" height="15" fill="rgb(245,217,50)"/><text x="35.1080%" y="383.50">br..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.16%)</title><rect x="37.5394%" y="357" width="0.1577%" height="15" fill="rgb(213,201,24)"/><text x="37.7894%" y="367.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.32%)</title><rect x="37.6972%" y="405" width="0.3155%" height="15" fill="rgb(248,116,28)"/><text x="37.9472%" y="415.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.32%)</title><rect x="37.6972%" y="389" width="0.3155%" height="15" fill="rgb(219,72,43)"/><text x="37.9472%" y="399.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (2 samples, 0.32%)</title><rect x="38.0126%" y="405" width="0.3155%" height="15" fill="rgb(209,138,14)"/><text x="38.2626%" y="415.50"></text></g><g><title>&lt;broccoli::query::colfind::builder::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (1 samples, 0.16%)</title><rect x="38.1703%" y="389" width="0.1577%" height="15" fill="rgb(222,18,33)"/><text x="38.4203%" y="399.50"></text></g><g><title>broccoli::query::colfind::ColfindQuery::find_colliding_pairs_mut::{{closure}} (1 samples, 0.16%)</title><rect x="38.1703%" y="373" width="0.1577%" height="15" fill="rgb(213,199,7)"/><text x="38.4203%" y="383.50"></text></g><g><title>data_gen::main::{{closure}}::{{closure}} (1 samples, 0.16%)</title><rect x="38.1703%" y="357" width="0.1577%" height="15" fill="rgb(250,110,10)"/><text x="38.4203%" y="367.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (35 samples, 5.52%)</title><rect x="32.9653%" y="437" width="5.5205%" height="15" fill="rgb(248,123,6)"/><text x="33.2153%" y="447.50">&lt;brocco..</text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (5 samples, 0.79%)</title><rect x="37.6972%" y="421" width="0.7886%" height="15" fill="rgb(206,91,31)"/><text x="37.9472%" y="431.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::le (1 samples, 0.16%)</title><rect x="38.3281%" y="405" width="0.1577%" height="15" fill="rgb(211,154,13)"/><text x="38.5781%" y="415.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (1 samples, 0.16%)</title><rect x="38.4858%" y="405" width="0.1577%" height="15" fill="rgb(225,148,7)"/><text x="38.7358%" y="415.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (1 samples, 0.16%)</title><rect x="38.4858%" y="389" width="0.1577%" height="15" fill="rgb(220,160,43)"/><text x="38.7358%" y="399.50"></text></g><g><title>twounordered::FirstVec&lt;T&gt;::push (1 samples, 0.16%)</title><rect x="38.4858%" y="373" width="0.1577%" height="15" fill="rgb(213,52,39)"/><text x="38.7358%" y="383.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.16%)</title><rect x="38.4858%" y="357" width="0.1577%" height="15" fill="rgb(243,137,7)"/><text x="38.7358%" y="367.50"></text></g><g><title>core::ptr::swap (1 samples, 0.16%)</title><rect x="38.4858%" y="341" width="0.1577%" height="15" fill="rgb(230,79,13)"/><text x="38.7358%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.16%)</title><rect x="38.4858%" y="325" width="0.1577%" height="15" fill="rgb(247,105,23)"/><text x="38.7358%" y="335.50"></text></g><g><title>broccoli::query::colfind::inner::ColfindRecurser&lt;T,NO&gt;::recurse_common (84 samples, 13.25%)</title><rect x="25.5521%" y="485" width="13.2492%" height="15" fill="rgb(223,179,41)"/><text x="25.8021%" y="495.50">broccoli::query::col..</text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,KK,B&gt;::recurse (75 samples, 11.83%)</title><rect x="26.9716%" y="469" width="11.8297%" height="15" fill="rgb(218,9,34)"/><text x="27.2216%" y="479.50">broccoli::query::c..</text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,KK,B&gt;::recurse (37 samples, 5.84%)</title><rect x="32.9653%" y="453" width="5.8360%" height="15" fill="rgb(222,106,8)"/><text x="33.2153%" y="463.50">broccol..</text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,KK,B&gt;::recurse (2 samples, 0.32%)</title><rect x="38.4858%" y="437" width="0.3155%" height="15" fill="rgb(211,220,0)"/><text x="38.7358%" y="447.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (2 samples, 0.32%)</title><rect x="38.4858%" y="421" width="0.3155%" height="15" fill="rgb(229,52,16)"/><text x="38.7358%" y="431.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (1 samples, 0.16%)</title><rect x="38.6435%" y="405" width="0.1577%" height="15" fill="rgb(212,155,18)"/><text x="38.8935%" y="415.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.16%)</title><rect x="38.6435%" y="389" width="0.1577%" height="15" fill="rgb(242,21,14)"/><text x="38.8935%" y="399.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.16%)</title><rect x="38.6435%" y="373" width="0.1577%" height="15" fill="rgb(222,19,48)"/><text x="38.8935%" y="383.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (3 samples, 0.47%)</title><rect x="39.1167%" y="373" width="0.4732%" height="15" fill="rgb(232,45,27)"/><text x="39.3667%" y="383.50"></text></g><g><title>&lt;broccoli::query::colfind::builder::QueryFn&lt;T,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (1 samples, 0.16%)</title><rect x="39.4322%" y="357" width="0.1577%" height="15" fill="rgb(249,103,42)"/><text x="39.6822%" y="367.50"></text></g><g><title>broccoli::query::colfind::ColfindQuery::find_colliding_pairs_mut_par::{{closure}} (1 samples, 0.16%)</title><rect x="39.4322%" y="341" width="0.1577%" height="15" fill="rgb(246,81,33)"/><text x="39.6822%" y="351.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.16%)</title><rect x="39.4322%" y="325" width="0.1577%" height="15" fill="rgb(252,33,42)"/><text x="39.6822%" y="335.50"></text></g><g><title>broccoli::query::colfind::oned::find::{{closure}} (5 samples, 0.79%)</title><rect x="39.1167%" y="389" width="0.7886%" height="15" fill="rgb(209,212,41)"/><text x="39.3667%" y="399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (2 samples, 0.32%)</title><rect x="39.5899%" y="373" width="0.3155%" height="15" fill="rgb(207,154,6)"/><text x="39.8399%" y="383.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_node (8 samples, 1.26%)</title><rect x="38.8013%" y="453" width="1.2618%" height="15" fill="rgb(223,64,47)"/><text x="39.0513%" y="463.50"></text></g><g><title>broccoli::query::colfind::oned::find_2d (8 samples, 1.26%)</title><rect x="38.8013%" y="437" width="1.2618%" height="15" fill="rgb(211,161,38)"/><text x="39.0513%" y="447.50"></text></g><g><title>broccoli::query::colfind::oned::find (8 samples, 1.26%)</title><rect x="38.8013%" y="421" width="1.2618%" height="15" fill="rgb(219,138,40)"/><text x="39.0513%" y="431.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (8 samples, 1.26%)</title><rect x="38.8013%" y="405" width="1.2618%" height="15" fill="rgb(241,228,46)"/><text x="39.0513%" y="415.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.16%)</title><rect x="39.9054%" y="389" width="0.1577%" height="15" fill="rgb(223,209,38)"/><text x="40.1554%" y="399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.16%)</title><rect x="39.9054%" y="373" width="0.1577%" height="15" fill="rgb(236,164,45)"/><text x="40.1554%" y="383.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::lt (1 samples, 0.16%)</title><rect x="40.5363%" y="389" width="0.1577%" height="15" fill="rgb(231,15,5)"/><text x="40.7863%" y="399.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.16%)</title><rect x="40.6940%" y="373" width="0.1577%" height="15" fill="rgb(252,35,15)"/><text x="40.9440%" y="383.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (2 samples, 0.32%)</title><rect x="40.6940%" y="389" width="0.3155%" height="15" fill="rgb(248,181,18)"/><text x="40.9440%" y="399.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (1 samples, 0.16%)</title><rect x="40.8517%" y="373" width="0.1577%" height="15" fill="rgb(233,39,42)"/><text x="41.1017%" y="383.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek::{{closure}} (1 samples, 0.16%)</title><rect x="40.8517%" y="357" width="0.1577%" height="15" fill="rgb(238,110,33)"/><text x="41.1017%" y="367.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.16%)</title><rect x="40.8517%" y="341" width="0.1577%" height="15" fill="rgb(233,195,10)"/><text x="41.1017%" y="351.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.16%)</title><rect x="40.8517%" y="325" width="0.1577%" height="15" fill="rgb(254,105,3)"/><text x="41.1017%" y="335.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (2 samples, 0.32%)</title><rect x="41.0095%" y="389" width="0.3155%" height="15" fill="rgb(221,225,9)"/><text x="41.2595%" y="399.50"></text></g><g><title>twounordered::FirstVec&lt;T&gt;::push (1 samples, 0.16%)</title><rect x="41.3249%" y="389" width="0.1577%" height="15" fill="rgb(224,227,45)"/><text x="41.5749%" y="399.50"></text></g><g><title>&lt;twounordered::FirstVec&lt;T&gt; as twounordered::RetainMutUnordered&lt;T&gt;&gt;::truncate (1 samples, 0.16%)</title><rect x="41.9558%" y="373" width="0.1577%" height="15" fill="rgb(229,198,43)"/><text x="42.2058%" y="383.50"></text></g><g><title>twounordered::FirstVec&lt;T&gt;::truncate (1 samples, 0.16%)</title><rect x="41.9558%" y="357" width="0.1577%" height="15" fill="rgb(206,209,35)"/><text x="42.2058%" y="367.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (7 samples, 1.10%)</title><rect x="42.5868%" y="357" width="1.1041%" height="15" fill="rgb(245,195,53)"/><text x="42.8368%" y="367.50"></text></g><g><title>&lt;broccoli::query::colfind::builder::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (1 samples, 0.16%)</title><rect x="43.5331%" y="341" width="0.1577%" height="15" fill="rgb(240,92,26)"/><text x="43.7831%" y="351.50"></text></g><g><title>broccoli::query::colfind::ColfindQuery::find_colliding_pairs_mut::{{closure}} (1 samples, 0.16%)</title><rect x="43.5331%" y="325" width="0.1577%" height="15" fill="rgb(207,40,23)"/><text x="43.7831%" y="335.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.16%)</title><rect x="43.5331%" y="309" width="0.1577%" height="15" fill="rgb(223,111,35)"/><text x="43.7831%" y="319.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (15 samples, 2.37%)</title><rect x="41.4826%" y="389" width="2.3659%" height="15" fill="rgb(229,147,28)"/><text x="41.7326%" y="399.50">tw..</text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (11 samples, 1.74%)</title><rect x="42.1136%" y="373" width="1.7350%" height="15" fill="rgb(211,29,28)"/><text x="42.3636%" y="383.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.16%)</title><rect x="43.6909%" y="357" width="0.1577%" height="15" fill="rgb(228,72,33)"/><text x="43.9409%" y="367.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (25 samples, 3.94%)</title><rect x="40.0631%" y="421" width="3.9432%" height="15" fill="rgb(205,214,31)"/><text x="40.3131%" y="431.50">broc..</text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (25 samples, 3.94%)</title><rect x="40.0631%" y="405" width="3.9432%" height="15" fill="rgb(224,111,15)"/><text x="40.3131%" y="415.50">broc..</text></g><g><title>twounordered::SecondVec&lt;T&gt;::push (1 samples, 0.16%)</title><rect x="43.8486%" y="389" width="0.1577%" height="15" fill="rgb(253,21,26)"/><text x="44.0986%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.16%)</title><rect x="43.8486%" y="373" width="0.1577%" height="15" fill="rgb(245,139,43)"/><text x="44.0986%" y="383.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 1.10%)</title><rect x="44.4795%" y="405" width="1.1041%" height="15" fill="rgb(252,170,7)"/><text x="44.7295%" y="415.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 1.10%)</title><rect x="44.4795%" y="389" width="1.1041%" height="15" fill="rgb(231,118,14)"/><text x="44.7295%" y="399.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (1 samples, 0.16%)</title><rect x="45.4259%" y="373" width="0.1577%" height="15" fill="rgb(238,83,0)"/><text x="45.6759%" y="383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.16%)</title><rect x="45.4259%" y="357" width="0.1577%" height="15" fill="rgb(221,39,39)"/><text x="45.6759%" y="367.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (5 samples, 0.79%)</title><rect x="45.5836%" y="405" width="0.7886%" height="15" fill="rgb(222,119,46)"/><text x="45.8336%" y="415.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (16 samples, 2.52%)</title><rect x="44.0063%" y="421" width="2.5237%" height="15" fill="rgb(222,165,49)"/><text x="44.2563%" y="431.50">br..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::le (1 samples, 0.16%)</title><rect x="46.3722%" y="405" width="0.1577%" height="15" fill="rgb(219,113,52)"/><text x="46.6222%" y="415.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (42 samples, 6.62%)</title><rect x="40.0631%" y="437" width="6.6246%" height="15" fill="rgb(214,7,15)"/><text x="40.3131%" y="447.50">&lt;broccoli..</text></g><g><title>broccoli::query::tools::get_section_mut (1 samples, 0.16%)</title><rect x="46.5300%" y="421" width="0.1577%" height="15" fill="rgb(235,32,4)"/><text x="46.7800%" y="431.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.16%)</title><rect x="46.5300%" y="405" width="0.1577%" height="15" fill="rgb(238,90,54)"/><text x="46.7800%" y="415.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (1 samples, 0.16%)</title><rect x="46.6877%" y="373" width="0.1577%" height="15" fill="rgb(213,208,19)"/><text x="46.9377%" y="383.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (1 samples, 0.16%)</title><rect x="46.6877%" y="357" width="0.1577%" height="15" fill="rgb(233,156,4)"/><text x="46.9377%" y="367.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek::{{closure}} (1 samples, 0.16%)</title><rect x="46.6877%" y="341" width="0.1577%" height="15" fill="rgb(207,194,5)"/><text x="46.9377%" y="351.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.16%)</title><rect x="46.6877%" y="325" width="0.1577%" height="15" fill="rgb(206,111,30)"/><text x="46.9377%" y="335.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.16%)</title><rect x="46.6877%" y="309" width="0.1577%" height="15" fill="rgb(243,70,54)"/><text x="46.9377%" y="319.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.16%)</title><rect x="46.8454%" y="373" width="0.1577%" height="15" fill="rgb(242,28,8)"/><text x="47.0954%" y="383.50"></text></g><g><title>&lt;twounordered::FirstVec&lt;T&gt; as twounordered::RetainMutUnordered&lt;T&gt;&gt;::as_slice_mut (1 samples, 0.16%)</title><rect x="47.6341%" y="357" width="0.1577%" height="15" fill="rgb(219,106,18)"/><text x="47.8841%" y="367.50"></text></g><g><title>twounordered::FirstVec&lt;T&gt;::as_slice_mut (1 samples, 0.16%)</title><rect x="47.6341%" y="341" width="0.1577%" height="15" fill="rgb(244,222,10)"/><text x="47.8841%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1 samples, 0.16%)</title><rect x="47.6341%" y="325" width="0.1577%" height="15" fill="rgb(236,179,52)"/><text x="47.8841%" y="335.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1 samples, 0.16%)</title><rect x="47.6341%" y="309" width="0.1577%" height="15" fill="rgb(213,23,39)"/><text x="47.8841%" y="319.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.16%)</title><rect x="47.6341%" y="293" width="0.1577%" height="15" fill="rgb(238,48,10)"/><text x="47.8841%" y="303.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.16%)</title><rect x="47.6341%" y="277" width="0.1577%" height="15" fill="rgb(251,196,23)"/><text x="47.8841%" y="287.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (2 samples, 0.32%)</title><rect x="47.9495%" y="341" width="0.3155%" height="15" fill="rgb(250,152,24)"/><text x="48.1995%" y="351.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (2 samples, 0.32%)</title><rect x="48.2650%" y="341" width="0.3155%" height="15" fill="rgb(209,150,17)"/><text x="48.5150%" y="351.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (7 samples, 1.10%)</title><rect x="47.7918%" y="357" width="1.1041%" height="15" fill="rgb(234,202,34)"/><text x="48.0418%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (2 samples, 0.32%)</title><rect x="48.5804%" y="341" width="0.3155%" height="15" fill="rgb(253,148,53)"/><text x="48.8304%" y="351.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (13 samples, 2.05%)</title><rect x="47.0032%" y="373" width="2.0505%" height="15" fill="rgb(218,129,16)"/><text x="47.2532%" y="383.50">t..</text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.16%)</title><rect x="48.8959%" y="357" width="0.1577%" height="15" fill="rgb(216,85,19)"/><text x="49.1459%" y="367.50"></text></g><g><title>core::ptr::swap (1 samples, 0.16%)</title><rect x="48.8959%" y="341" width="0.1577%" height="15" fill="rgb(235,228,7)"/><text x="49.1459%" y="351.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.16%)</title><rect x="48.8959%" y="325" width="0.1577%" height="15" fill="rgb(245,175,0)"/><text x="49.1459%" y="335.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (16 samples, 2.52%)</title><rect x="46.6877%" y="405" width="2.5237%" height="15" fill="rgb(208,168,36)"/><text x="46.9377%" y="415.50">br..</text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (16 samples, 2.52%)</title><rect x="46.6877%" y="389" width="2.5237%" height="15" fill="rgb(246,171,24)"/><text x="46.9377%" y="399.50">br..</text></g><g><title>twounordered::SecondVec&lt;T&gt;::push (1 samples, 0.16%)</title><rect x="49.0536%" y="373" width="0.1577%" height="15" fill="rgb(215,142,24)"/><text x="49.3036%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.16%)</title><rect x="49.0536%" y="357" width="0.1577%" height="15" fill="rgb(250,187,7)"/><text x="49.3036%" y="367.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.16%)</title><rect x="49.2114%" y="389" width="0.1577%" height="15" fill="rgb(228,66,33)"/><text x="49.4614%" y="399.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.16%)</title><rect x="49.2114%" y="373" width="0.1577%" height="15" fill="rgb(234,215,21)"/><text x="49.4614%" y="383.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (1 samples, 0.16%)</title><rect x="49.3691%" y="389" width="0.1577%" height="15" fill="rgb(222,191,20)"/><text x="49.6191%" y="399.50"></text></g><g><title>&lt;broccoli::query::colfind::builder::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (1 samples, 0.16%)</title><rect x="49.3691%" y="373" width="0.1577%" height="15" fill="rgb(245,79,54)"/><text x="49.6191%" y="383.50"></text></g><g><title>broccoli::query::colfind::ColfindQuery::find_colliding_pairs_mut::{{closure}} (1 samples, 0.16%)</title><rect x="49.3691%" y="357" width="0.1577%" height="15" fill="rgb(240,10,37)"/><text x="49.6191%" y="367.50"></text></g><g><title>data_gen::main::{{closure}}::{{closure}} (1 samples, 0.16%)</title><rect x="49.3691%" y="341" width="0.1577%" height="15" fill="rgb(214,192,32)"/><text x="49.6191%" y="351.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (19 samples, 3.00%)</title><rect x="46.6877%" y="421" width="2.9968%" height="15" fill="rgb(209,36,54)"/><text x="46.9377%" y="431.50">&lt;br..</text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (3 samples, 0.47%)</title><rect x="49.2114%" y="405" width="0.4732%" height="15" fill="rgb(220,10,11)"/><text x="49.4614%" y="415.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::le (1 samples, 0.16%)</title><rect x="49.5268%" y="389" width="0.1577%" height="15" fill="rgb(221,106,17)"/><text x="49.7768%" y="399.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (1 samples, 0.16%)</title><rect x="49.6845%" y="357" width="0.1577%" height="15" fill="rgb(251,142,44)"/><text x="49.9345%" y="367.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (1 samples, 0.16%)</title><rect x="49.6845%" y="341" width="0.1577%" height="15" fill="rgb(238,13,15)"/><text x="49.9345%" y="351.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek::{{closure}} (1 samples, 0.16%)</title><rect x="49.6845%" y="325" width="0.1577%" height="15" fill="rgb(208,107,27)"/><text x="49.9345%" y="335.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.16%)</title><rect x="49.6845%" y="309" width="0.1577%" height="15" fill="rgb(205,136,37)"/><text x="49.9345%" y="319.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.16%)</title><rect x="49.6845%" y="293" width="0.1577%" height="15" fill="rgb(250,205,27)"/><text x="49.9345%" y="303.50"></text></g><g><title>broccoli::query::colfind::inner::ColfindRecurser&lt;T,NO&gt;::recurse_common (71 samples, 11.20%)</title><rect x="38.8013%" y="469" width="11.1987%" height="15" fill="rgb(210,80,43)"/><text x="39.0513%" y="479.50">broccoli::query:..</text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,KK,B&gt;::recurse (63 samples, 9.94%)</title><rect x="40.0631%" y="453" width="9.9369%" height="15" fill="rgb(247,160,36)"/><text x="40.3131%" y="463.50">broccoli::quer..</text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,KK,B&gt;::recurse (21 samples, 3.31%)</title><rect x="46.6877%" y="437" width="3.3123%" height="15" fill="rgb(234,13,49)"/><text x="46.9377%" y="447.50">bro..</text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,KK,B&gt;::recurse (2 samples, 0.32%)</title><rect x="49.6845%" y="421" width="0.3155%" height="15" fill="rgb(234,122,0)"/><text x="49.9345%" y="431.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (2 samples, 0.32%)</title><rect x="49.6845%" y="405" width="0.3155%" height="15" fill="rgb(207,146,38)"/><text x="49.9345%" y="415.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (2 samples, 0.32%)</title><rect x="49.6845%" y="389" width="0.3155%" height="15" fill="rgb(207,177,25)"/><text x="49.9345%" y="399.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (2 samples, 0.32%)</title><rect x="49.6845%" y="373" width="0.3155%" height="15" fill="rgb(211,178,42)"/><text x="49.9345%" y="383.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (1 samples, 0.16%)</title><rect x="49.8423%" y="357" width="0.1577%" height="15" fill="rgb(230,69,54)"/><text x="50.0923%" y="367.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (1 samples, 0.16%)</title><rect x="49.8423%" y="341" width="0.1577%" height="15" fill="rgb(214,135,41)"/><text x="50.0923%" y="351.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (1 samples, 0.16%)</title><rect x="49.8423%" y="325" width="0.1577%" height="15" fill="rgb(237,67,25)"/><text x="50.0923%" y="335.50"></text></g><g><title>broccoli::query::colfind::oned::find::{{closure}} (2 samples, 0.32%)</title><rect x="50.1577%" y="373" width="0.3155%" height="15" fill="rgb(222,189,50)"/><text x="50.4077%" y="383.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (1 samples, 0.16%)</title><rect x="50.3155%" y="357" width="0.1577%" height="15" fill="rgb(245,148,34)"/><text x="50.5655%" y="367.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_node (4 samples, 0.63%)</title><rect x="50.0000%" y="437" width="0.6309%" height="15" fill="rgb(222,29,6)"/><text x="50.2500%" y="447.50"></text></g><g><title>broccoli::query::colfind::oned::find_2d (4 samples, 0.63%)</title><rect x="50.0000%" y="421" width="0.6309%" height="15" fill="rgb(221,189,43)"/><text x="50.2500%" y="431.50"></text></g><g><title>broccoli::query::colfind::oned::find (4 samples, 0.63%)</title><rect x="50.0000%" y="405" width="0.6309%" height="15" fill="rgb(207,36,27)"/><text x="50.2500%" y="415.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (4 samples, 0.63%)</title><rect x="50.0000%" y="389" width="0.6309%" height="15" fill="rgb(217,90,24)"/><text x="50.2500%" y="399.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.16%)</title><rect x="50.4732%" y="373" width="0.1577%" height="15" fill="rgb(224,66,35)"/><text x="50.7232%" y="383.50"></text></g><g><title>core::ptr::swap (1 samples, 0.16%)</title><rect x="50.4732%" y="357" width="0.1577%" height="15" fill="rgb(221,13,50)"/><text x="50.7232%" y="367.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.16%)</title><rect x="50.4732%" y="341" width="0.1577%" height="15" fill="rgb(236,68,49)"/><text x="50.7232%" y="351.50"></text></g><g><title>broccoli::pmut::PMut&lt;broccoli::node::Node&lt;T&gt;&gt;::into_range (1 samples, 0.16%)</title><rect x="50.6309%" y="405" width="0.1577%" height="15" fill="rgb(229,146,28)"/><text x="50.8809%" y="415.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (1 samples, 0.16%)</title><rect x="50.7886%" y="373" width="0.1577%" height="15" fill="rgb(225,31,38)"/><text x="51.0386%" y="383.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (1 samples, 0.16%)</title><rect x="50.7886%" y="357" width="0.1577%" height="15" fill="rgb(250,208,3)"/><text x="51.0386%" y="367.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek::{{closure}} (1 samples, 0.16%)</title><rect x="50.7886%" y="341" width="0.1577%" height="15" fill="rgb(246,54,23)"/><text x="51.0386%" y="351.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.16%)</title><rect x="50.7886%" y="325" width="0.1577%" height="15" fill="rgb(243,76,11)"/><text x="51.0386%" y="335.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.16%)</title><rect x="50.7886%" y="309" width="0.1577%" height="15" fill="rgb(245,21,50)"/><text x="51.0386%" y="319.50"></text></g><g><title>&lt;twounordered::FirstVec&lt;T&gt; as twounordered::RetainMutUnordered&lt;T&gt;&gt;::truncate (1 samples, 0.16%)</title><rect x="51.7350%" y="357" width="0.1577%" height="15" fill="rgb(228,9,43)"/><text x="51.9850%" y="367.50"></text></g><g><title>twounordered::FirstVec&lt;T&gt;::truncate (1 samples, 0.16%)</title><rect x="51.7350%" y="341" width="0.1577%" height="15" fill="rgb(208,100,47)"/><text x="51.9850%" y="351.50"></text></g><g><title>&lt;twounordered::SecondVec&lt;T&gt; as twounordered::RetainMutUnordered&lt;T&gt;&gt;::as_slice_mut (1 samples, 0.16%)</title><rect x="51.8927%" y="357" width="0.1577%" height="15" fill="rgb(232,26,8)"/><text x="52.1427%" y="367.50"></text></g><g><title>twounordered::SecondVec&lt;T&gt;::as_slice_mut (1 samples, 0.16%)</title><rect x="51.8927%" y="341" width="0.1577%" height="15" fill="rgb(216,166,38)"/><text x="52.1427%" y="351.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (3 samples, 0.47%)</title><rect x="52.2082%" y="341" width="0.4732%" height="15" fill="rgb(251,202,51)"/><text x="52.4582%" y="351.50"></text></g><g><title>&lt;broccoli::query::colfind::builder::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (1 samples, 0.16%)</title><rect x="52.5237%" y="325" width="0.1577%" height="15" fill="rgb(254,216,34)"/><text x="52.7737%" y="335.50"></text></g><g><title>broccoli::query::colfind::ColfindQuery::find_colliding_pairs_mut::{{closure}} (1 samples, 0.16%)</title><rect x="52.5237%" y="309" width="0.1577%" height="15" fill="rgb(251,32,27)"/><text x="52.7737%" y="319.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.16%)</title><rect x="52.5237%" y="293" width="0.1577%" height="15" fill="rgb(208,127,28)"/><text x="52.7737%" y="303.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (12 samples, 1.89%)</title><rect x="50.9464%" y="373" width="1.8927%" height="15" fill="rgb(224,137,22)"/><text x="51.1964%" y="383.50">t..</text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (5 samples, 0.79%)</title><rect x="52.0505%" y="357" width="0.7886%" height="15" fill="rgb(254,70,32)"/><text x="52.3005%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.16%)</title><rect x="52.6814%" y="341" width="0.1577%" height="15" fill="rgb(229,75,37)"/><text x="52.9314%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::as_mut_ptr (1 samples, 0.16%)</title><rect x="52.8391%" y="341" width="0.1577%" height="15" fill="rgb(252,64,23)"/><text x="53.0891%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.16%)</title><rect x="52.8391%" y="325" width="0.1577%" height="15" fill="rgb(232,162,48)"/><text x="53.0891%" y="335.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (15 samples, 2.37%)</title><rect x="50.7886%" y="405" width="2.3659%" height="15" fill="rgb(246,160,12)"/><text x="51.0386%" y="415.50">br..</text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (15 samples, 2.37%)</title><rect x="50.7886%" y="389" width="2.3659%" height="15" fill="rgb(247,166,0)"/><text x="51.0386%" y="399.50">br..</text></g><g><title>twounordered::SecondVec&lt;T&gt;::push (2 samples, 0.32%)</title><rect x="52.8391%" y="373" width="0.3155%" height="15" fill="rgb(249,219,21)"/><text x="53.0891%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (2 samples, 0.32%)</title><rect x="52.8391%" y="357" width="0.3155%" height="15" fill="rgb(205,209,3)"/><text x="53.0891%" y="367.50"></text></g><g><title>core::ptr::write (1 samples, 0.16%)</title><rect x="52.9968%" y="341" width="0.1577%" height="15" fill="rgb(243,44,1)"/><text x="53.2468%" y="351.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.95%)</title><rect x="53.6278%" y="389" width="0.9464%" height="15" fill="rgb(206,159,16)"/><text x="53.8778%" y="399.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.95%)</title><rect x="53.6278%" y="373" width="0.9464%" height="15" fill="rgb(244,77,30)"/><text x="53.8778%" y="383.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (1 samples, 0.16%)</title><rect x="54.4164%" y="357" width="0.1577%" height="15" fill="rgb(218,69,12)"/><text x="54.6664%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.16%)</title><rect x="54.4164%" y="341" width="0.1577%" height="15" fill="rgb(212,87,7)"/><text x="54.6664%" y="351.50"></text></g><g><title>&lt;broccoli::query::colfind::builder::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (1 samples, 0.16%)</title><rect x="54.8896%" y="373" width="0.1577%" height="15" fill="rgb(245,114,25)"/><text x="55.1396%" y="383.50"></text></g><g><title>broccoli::query::colfind::ColfindQuery::find_colliding_pairs_mut::{{closure}} (1 samples, 0.16%)</title><rect x="54.8896%" y="357" width="0.1577%" height="15" fill="rgb(210,61,42)"/><text x="55.1396%" y="367.50"></text></g><g><title>data_gen::main::{{closure}}::{{closure}} (1 samples, 0.16%)</title><rect x="54.8896%" y="341" width="0.1577%" height="15" fill="rgb(211,52,33)"/><text x="55.1396%" y="351.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (4 samples, 0.63%)</title><rect x="54.5741%" y="389" width="0.6309%" height="15" fill="rgb(234,58,33)"/><text x="54.8241%" y="399.50"></text></g><g><title>axgeom::range::Range&lt;T&gt;::intersects (1 samples, 0.16%)</title><rect x="55.0473%" y="373" width="0.1577%" height="15" fill="rgb(220,115,36)"/><text x="55.2973%" y="383.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::le (1 samples, 0.16%)</title><rect x="55.0473%" y="357" width="0.1577%" height="15" fill="rgb(243,153,54)"/><text x="55.2973%" y="367.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (31 samples, 4.89%)</title><rect x="50.6309%" y="421" width="4.8896%" height="15" fill="rgb(251,47,18)"/><text x="50.8809%" y="431.50">&lt;brocc..</text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (15 samples, 2.37%)</title><rect x="53.1546%" y="405" width="2.3659%" height="15" fill="rgb(242,102,42)"/><text x="53.4046%" y="415.50">br..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::le (2 samples, 0.32%)</title><rect x="55.2050%" y="389" width="0.3155%" height="15" fill="rgb(234,31,38)"/><text x="55.4550%" y="399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::lt (1 samples, 0.16%)</title><rect x="55.5205%" y="357" width="0.1577%" height="15" fill="rgb(221,117,51)"/><text x="55.7705%" y="367.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.16%)</title><rect x="55.6782%" y="357" width="0.1577%" height="15" fill="rgb(212,20,18)"/><text x="55.9282%" y="367.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (2 samples, 0.32%)</title><rect x="56.3091%" y="325" width="0.3155%" height="15" fill="rgb(245,133,36)"/><text x="56.5591%" y="335.50"></text></g><g><title>&lt;broccoli::query::colfind::builder::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (2 samples, 0.32%)</title><rect x="56.7823%" y="309" width="0.3155%" height="15" fill="rgb(212,6,19)"/><text x="57.0323%" y="319.50"></text></g><g><title>broccoli::query::colfind::ColfindQuery::find_colliding_pairs_mut::{{closure}} (2 samples, 0.32%)</title><rect x="56.7823%" y="293" width="0.3155%" height="15" fill="rgb(218,1,36)"/><text x="57.0323%" y="303.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (2 samples, 0.32%)</title><rect x="56.7823%" y="277" width="0.3155%" height="15" fill="rgb(246,84,54)"/><text x="57.0323%" y="287.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (11 samples, 1.74%)</title><rect x="55.5205%" y="389" width="1.7350%" height="15" fill="rgb(242,110,6)"/><text x="55.7705%" y="399.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (11 samples, 1.74%)</title><rect x="55.5205%" y="373" width="1.7350%" height="15" fill="rgb(214,47,5)"/><text x="55.7705%" y="383.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (9 samples, 1.42%)</title><rect x="55.8360%" y="357" width="1.4196%" height="15" fill="rgb(218,159,25)"/><text x="56.0860%" y="367.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (7 samples, 1.10%)</title><rect x="56.1514%" y="341" width="1.1041%" height="15" fill="rgb(215,211,28)"/><text x="56.4014%" y="351.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (4 samples, 0.63%)</title><rect x="56.6246%" y="325" width="0.6309%" height="15" fill="rgb(238,59,32)"/><text x="56.8746%" y="335.50"></text></g><g><title>axgeom::range::Range&lt;T&gt;::intersects (1 samples, 0.16%)</title><rect x="57.0978%" y="309" width="0.1577%" height="15" fill="rgb(226,82,3)"/><text x="57.3478%" y="319.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::le (1 samples, 0.16%)</title><rect x="57.0978%" y="293" width="0.1577%" height="15" fill="rgb(240,164,32)"/><text x="57.3478%" y="303.50"></text></g><g><title>broccoli::query::colfind::inner::ColfindRecurser&lt;T,NO&gt;::recurse_common (47 samples, 7.41%)</title><rect x="50.0000%" y="453" width="7.4132%" height="15" fill="rgb(232,46,7)"/><text x="50.2500%" y="463.50">broccoli::..</text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,KK,B&gt;::recurse (43 samples, 6.78%)</title><rect x="50.6309%" y="437" width="6.7823%" height="15" fill="rgb(229,129,53)"/><text x="50.8809%" y="447.50">broccoli:..</text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,KK,B&gt;::recurse (12 samples, 1.89%)</title><rect x="55.5205%" y="421" width="1.8927%" height="15" fill="rgb(234,188,29)"/><text x="55.7705%" y="431.50">b..</text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (12 samples, 1.89%)</title><rect x="55.5205%" y="405" width="1.8927%" height="15" fill="rgb(246,141,4)"/><text x="55.7705%" y="415.50">&lt;..</text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (1 samples, 0.16%)</title><rect x="57.2555%" y="389" width="0.1577%" height="15" fill="rgb(229,23,39)"/><text x="57.5055%" y="399.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (1 samples, 0.16%)</title><rect x="57.2555%" y="373" width="0.1577%" height="15" fill="rgb(206,12,3)"/><text x="57.5055%" y="383.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_node (2 samples, 0.32%)</title><rect x="57.4132%" y="421" width="0.3155%" height="15" fill="rgb(252,226,20)"/><text x="57.6632%" y="431.50"></text></g><g><title>broccoli::query::colfind::oned::find_2d (2 samples, 0.32%)</title><rect x="57.4132%" y="405" width="0.3155%" height="15" fill="rgb(216,123,35)"/><text x="57.6632%" y="415.50"></text></g><g><title>broccoli::query::colfind::oned::find (2 samples, 0.32%)</title><rect x="57.4132%" y="389" width="0.3155%" height="15" fill="rgb(212,68,40)"/><text x="57.6632%" y="399.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (2 samples, 0.32%)</title><rect x="57.4132%" y="373" width="0.3155%" height="15" fill="rgb(254,125,32)"/><text x="57.6632%" y="383.50"></text></g><g><title>broccoli::query::colfind::oned::find::{{closure}} (2 samples, 0.32%)</title><rect x="57.4132%" y="357" width="0.3155%" height="15" fill="rgb(253,97,22)"/><text x="57.6632%" y="367.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (2 samples, 0.32%)</title><rect x="57.4132%" y="341" width="0.3155%" height="15" fill="rgb(241,101,14)"/><text x="57.6632%" y="351.50"></text></g><g><title>axgeom::range::Range&lt;T&gt;::intersects (1 samples, 0.16%)</title><rect x="57.5710%" y="325" width="0.1577%" height="15" fill="rgb(238,103,29)"/><text x="57.8210%" y="335.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::le (1 samples, 0.16%)</title><rect x="57.5710%" y="309" width="0.1577%" height="15" fill="rgb(233,195,47)"/><text x="57.8210%" y="319.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.16%)</title><rect x="57.7287%" y="357" width="0.1577%" height="15" fill="rgb(246,218,30)"/><text x="57.9787%" y="367.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (5 samples, 0.79%)</title><rect x="57.7287%" y="389" width="0.7886%" height="15" fill="rgb(219,145,47)"/><text x="57.9787%" y="399.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (5 samples, 0.79%)</title><rect x="57.7287%" y="373" width="0.7886%" height="15" fill="rgb(243,12,26)"/><text x="57.9787%" y="383.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (4 samples, 0.63%)</title><rect x="57.8864%" y="357" width="0.6309%" height="15" fill="rgb(214,87,16)"/><text x="58.1364%" y="367.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (1 samples, 0.16%)</title><rect x="58.3596%" y="341" width="0.1577%" height="15" fill="rgb(208,99,42)"/><text x="58.6096%" y="351.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (1 samples, 0.16%)</title><rect x="58.3596%" y="325" width="0.1577%" height="15" fill="rgb(253,99,2)"/><text x="58.6096%" y="335.50"></text></g><g><title>&lt;broccoli::query::colfind::builder::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (1 samples, 0.16%)</title><rect x="58.3596%" y="309" width="0.1577%" height="15" fill="rgb(220,168,23)"/><text x="58.6096%" y="319.50"></text></g><g><title>broccoli::query::colfind::ColfindQuery::find_colliding_pairs_mut::{{closure}} (1 samples, 0.16%)</title><rect x="58.3596%" y="293" width="0.1577%" height="15" fill="rgb(242,38,24)"/><text x="58.6096%" y="303.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.16%)</title><rect x="58.3596%" y="277" width="0.1577%" height="15" fill="rgb(225,182,9)"/><text x="58.6096%" y="287.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.16%)</title><rect x="58.5174%" y="373" width="0.1577%" height="15" fill="rgb(243,178,37)"/><text x="58.7674%" y="383.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.16%)</title><rect x="58.5174%" y="357" width="0.1577%" height="15" fill="rgb(232,139,19)"/><text x="58.7674%" y="367.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (9 samples, 1.42%)</title><rect x="57.7287%" y="405" width="1.4196%" height="15" fill="rgb(225,201,24)"/><text x="57.9787%" y="415.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (4 samples, 0.63%)</title><rect x="58.5174%" y="389" width="0.6309%" height="15" fill="rgb(221,47,46)"/><text x="58.7674%" y="399.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (3 samples, 0.47%)</title><rect x="58.6751%" y="373" width="0.4732%" height="15" fill="rgb(249,23,13)"/><text x="58.9251%" y="383.50"></text></g><g><title>&lt;broccoli::query::colfind::builder::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (1 samples, 0.16%)</title><rect x="58.9905%" y="357" width="0.1577%" height="15" fill="rgb(219,9,5)"/><text x="59.2405%" y="367.50"></text></g><g><title>broccoli::query::colfind::ColfindQuery::find_colliding_pairs_mut::{{closure}} (1 samples, 0.16%)</title><rect x="58.9905%" y="341" width="0.1577%" height="15" fill="rgb(254,171,16)"/><text x="59.2405%" y="351.50"></text></g><g><title>data_gen::main::{{closure}}::{{closure}} (1 samples, 0.16%)</title><rect x="58.9905%" y="325" width="0.1577%" height="15" fill="rgb(230,171,20)"/><text x="59.2405%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="58.9905%" y="309" width="0.1577%" height="15" fill="rgb(210,71,41)"/><text x="59.2405%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="58.9905%" y="293" width="0.1577%" height="15" fill="rgb(206,173,20)"/><text x="59.2405%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="58.9905%" y="277" width="0.1577%" height="15" fill="rgb(233,88,34)"/><text x="59.2405%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="58.9905%" y="261" width="0.1577%" height="15" fill="rgb(223,209,46)"/><text x="59.2405%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="58.9905%" y="245" width="0.1577%" height="15" fill="rgb(250,43,18)"/><text x="59.2405%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="58.9905%" y="229" width="0.1577%" height="15" fill="rgb(208,13,10)"/><text x="59.2405%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="58.9905%" y="213" width="0.1577%" height="15" fill="rgb(212,200,36)"/><text x="59.2405%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="58.9905%" y="197" width="0.1577%" height="15" fill="rgb(225,90,30)"/><text x="59.2405%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="58.9905%" y="181" width="0.1577%" height="15" fill="rgb(236,182,39)"/><text x="59.2405%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="58.9905%" y="165" width="0.1577%" height="15" fill="rgb(212,144,35)"/><text x="59.2405%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="58.9905%" y="149" width="0.1577%" height="15" fill="rgb(228,63,44)"/><text x="59.2405%" y="159.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="58.9905%" y="133" width="0.1577%" height="15" fill="rgb(228,109,6)"/><text x="59.2405%" y="143.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="58.9905%" y="117" width="0.1577%" height="15" fill="rgb(238,117,24)"/><text x="59.2405%" y="127.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="58.9905%" y="101" width="0.1577%" height="15" fill="rgb(242,26,26)"/><text x="59.2405%" y="111.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::lt (1 samples, 0.16%)</title><rect x="59.3060%" y="341" width="0.1577%" height="15" fill="rgb(221,92,48)"/><text x="59.5560%" y="351.50"></text></g><g><title>twounordered::FirstVec&lt;T&gt;::push (1 samples, 0.16%)</title><rect x="59.4637%" y="341" width="0.1577%" height="15" fill="rgb(209,209,32)"/><text x="59.7137%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.16%)</title><rect x="59.4637%" y="325" width="0.1577%" height="15" fill="rgb(221,70,22)"/><text x="59.7137%" y="335.50"></text></g><g><title>core::ptr::write (1 samples, 0.16%)</title><rect x="59.4637%" y="309" width="0.1577%" height="15" fill="rgb(248,145,5)"/><text x="59.7137%" y="319.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (5 samples, 0.79%)</title><rect x="59.1483%" y="373" width="0.7886%" height="15" fill="rgb(226,116,26)"/><text x="59.3983%" y="383.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (5 samples, 0.79%)</title><rect x="59.1483%" y="357" width="0.7886%" height="15" fill="rgb(244,5,17)"/><text x="59.3983%" y="367.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (2 samples, 0.32%)</title><rect x="59.6215%" y="341" width="0.3155%" height="15" fill="rgb(252,159,33)"/><text x="59.8715%" y="351.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3::{{closure}} (2 samples, 0.32%)</title><rect x="59.6215%" y="325" width="0.3155%" height="15" fill="rgb(206,71,0)"/><text x="59.8715%" y="335.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (2 samples, 0.32%)</title><rect x="59.6215%" y="309" width="0.3155%" height="15" fill="rgb(233,118,54)"/><text x="59.8715%" y="319.50"></text></g><g><title>&lt;broccoli::query::colfind::builder::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (1 samples, 0.16%)</title><rect x="59.7792%" y="293" width="0.1577%" height="15" fill="rgb(234,83,48)"/><text x="60.0292%" y="303.50"></text></g><g><title>broccoli::query::colfind::ColfindQuery::find_colliding_pairs_mut::{{closure}} (1 samples, 0.16%)</title><rect x="59.7792%" y="277" width="0.1577%" height="15" fill="rgb(228,3,54)"/><text x="60.0292%" y="287.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.16%)</title><rect x="59.7792%" y="261" width="0.1577%" height="15" fill="rgb(226,155,13)"/><text x="60.0292%" y="271.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (1 samples, 0.16%)</title><rect x="59.9369%" y="373" width="0.1577%" height="15" fill="rgb(241,28,37)"/><text x="60.1869%" y="383.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (1 samples, 0.16%)</title><rect x="59.9369%" y="357" width="0.1577%" height="15" fill="rgb(233,93,10)"/><text x="60.1869%" y="367.50"></text></g><g><title>&lt;broccoli::query::colfind::builder::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (1 samples, 0.16%)</title><rect x="59.9369%" y="341" width="0.1577%" height="15" fill="rgb(225,113,19)"/><text x="60.1869%" y="351.50"></text></g><g><title>broccoli::query::colfind::ColfindQuery::find_colliding_pairs_mut::{{closure}} (1 samples, 0.16%)</title><rect x="59.9369%" y="325" width="0.1577%" height="15" fill="rgb(241,2,18)"/><text x="60.1869%" y="335.50"></text></g><g><title>data_gen::main::{{closure}}::{{closure}} (1 samples, 0.16%)</title><rect x="59.9369%" y="309" width="0.1577%" height="15" fill="rgb(228,207,21)"/><text x="60.1869%" y="319.50"></text></g><g><title>broccoli::query::colfind::inner::ColfindRecurser&lt;T,NO&gt;::recurse_common (18 samples, 2.84%)</title><rect x="57.4132%" y="437" width="2.8391%" height="15" fill="rgb(213,211,35)"/><text x="57.6632%" y="447.50">br..</text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,KK,B&gt;::recurse (16 samples, 2.52%)</title><rect x="57.7287%" y="421" width="2.5237%" height="15" fill="rgb(209,83,10)"/><text x="57.9787%" y="431.50">br..</text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,KK,B&gt;::recurse (7 samples, 1.10%)</title><rect x="59.1483%" y="405" width="1.1041%" height="15" fill="rgb(209,164,1)"/><text x="59.3983%" y="415.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (7 samples, 1.10%)</title><rect x="59.1483%" y="389" width="1.1041%" height="15" fill="rgb(213,184,43)"/><text x="59.3983%" y="399.50"></text></g><g><title>broccoli::query::tools::get_section_mut (1 samples, 0.16%)</title><rect x="60.0946%" y="373" width="0.1577%" height="15" fill="rgb(231,61,34)"/><text x="60.3446%" y="383.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (1 samples, 0.16%)</title><rect x="60.2524%" y="389" width="0.1577%" height="15" fill="rgb(235,75,3)"/><text x="60.5024%" y="399.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (1 samples, 0.16%)</title><rect x="60.2524%" y="373" width="0.1577%" height="15" fill="rgb(220,106,47)"/><text x="60.5024%" y="383.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (1 samples, 0.16%)</title><rect x="60.2524%" y="357" width="0.1577%" height="15" fill="rgb(210,196,33)"/><text x="60.5024%" y="367.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (1 samples, 0.16%)</title><rect x="60.2524%" y="341" width="0.1577%" height="15" fill="rgb(229,154,42)"/><text x="60.5024%" y="351.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (1 samples, 0.16%)</title><rect x="60.2524%" y="325" width="0.1577%" height="15" fill="rgb(228,114,26)"/><text x="60.5024%" y="335.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek::{{closure}} (1 samples, 0.16%)</title><rect x="60.2524%" y="309" width="0.1577%" height="15" fill="rgb(208,144,1)"/><text x="60.5024%" y="319.50"></text></g><g><title>&lt;broccoli::pmut::PMutIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.16%)</title><rect x="60.2524%" y="293" width="0.1577%" height="15" fill="rgb(239,112,37)"/><text x="60.5024%" y="303.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.16%)</title><rect x="60.2524%" y="277" width="0.1577%" height="15" fill="rgb(210,96,50)"/><text x="60.5024%" y="287.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (1 samples, 0.16%)</title><rect x="60.4101%" y="325" width="0.1577%" height="15" fill="rgb(222,178,2)"/><text x="60.6601%" y="335.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.16%)</title><rect x="60.4101%" y="309" width="0.1577%" height="15" fill="rgb(226,74,18)"/><text x="60.6601%" y="319.50"></text></g><g><title>broccoli::query::colfind::inner::ColfindRecurser&lt;T,NO&gt;::recurse_common (3 samples, 0.47%)</title><rect x="60.2524%" y="421" width="0.4732%" height="15" fill="rgb(225,67,54)"/><text x="60.5024%" y="431.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,KK,B&gt;::recurse (3 samples, 0.47%)</title><rect x="60.2524%" y="405" width="0.4732%" height="15" fill="rgb(251,92,32)"/><text x="60.5024%" y="415.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,KK,B&gt;::recurse (2 samples, 0.32%)</title><rect x="60.4101%" y="389" width="0.3155%" height="15" fill="rgb(228,149,22)"/><text x="60.6601%" y="399.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (2 samples, 0.32%)</title><rect x="60.4101%" y="373" width="0.3155%" height="15" fill="rgb(243,54,13)"/><text x="60.6601%" y="383.50"></text></g><g><title>broccoli::query::colfind::oned::find_parallel_2d (2 samples, 0.32%)</title><rect x="60.4101%" y="357" width="0.3155%" height="15" fill="rgb(243,180,28)"/><text x="60.6601%" y="367.50"></text></g><g><title>broccoli::query::colfind::oned::find_other_parallel3 (2 samples, 0.32%)</title><rect x="60.4101%" y="341" width="0.3155%" height="15" fill="rgb(208,167,24)"/><text x="60.6601%" y="351.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (1 samples, 0.16%)</title><rect x="60.5678%" y="325" width="0.1577%" height="15" fill="rgb(245,73,45)"/><text x="60.8178%" y="335.50"></text></g><g><title>broccoli::query::colfind::inner::ColfindRecurser&lt;T,NO&gt;::recurse_seq (1 samples, 0.16%)</title><rect x="60.7256%" y="421" width="0.1577%" height="15" fill="rgb(237,203,48)"/><text x="60.9756%" y="431.50"></text></g><g><title>broccoli::query::colfind::inner::ColfindRecurser&lt;T,NO&gt;::recurse_common (1 samples, 0.16%)</title><rect x="60.7256%" y="405" width="0.1577%" height="15" fill="rgb(211,197,16)"/><text x="60.9756%" y="415.50"></text></g><g><title>broccoli::query::colfind::inner::InnerRecurser&lt;T,NN,KK,B&gt;::recurse (1 samples, 0.16%)</title><rect x="60.7256%" y="389" width="0.1577%" height="15" fill="rgb(243,99,51)"/><text x="60.9756%" y="399.50"></text></g><g><title>&lt;broccoli::query::colfind::node_handle::HandleSorted as broccoli::query::colfind::node_handle::NodeHandler&gt;::handle_children (1 samples, 0.16%)</title><rect x="60.7256%" y="373" width="0.1577%" height="15" fill="rgb(215,123,29)"/><text x="60.9756%" y="383.50"></text></g><g><title>broccoli::query::colfind::oned::find_perp_2d1 (1 samples, 0.16%)</title><rect x="60.7256%" y="357" width="0.1577%" height="15" fill="rgb(239,186,37)"/><text x="60.9756%" y="367.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (1 samples, 0.16%)</title><rect x="60.7256%" y="341" width="0.1577%" height="15" fill="rgb(252,136,39)"/><text x="60.9756%" y="351.50"></text></g><g><title>&lt;broccoli::query::colfind::builder::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (1 samples, 0.16%)</title><rect x="60.7256%" y="325" width="0.1577%" height="15" fill="rgb(223,213,32)"/><text x="60.9756%" y="335.50"></text></g><g><title>broccoli::query::colfind::ColfindQuery::find_colliding_pairs_mut::{{closure}} (1 samples, 0.16%)</title><rect x="60.7256%" y="309" width="0.1577%" height="15" fill="rgb(233,115,5)"/><text x="60.9756%" y="319.50"></text></g><g><title>data_gen::main::{{closure}}::{{closure}} (1 samples, 0.16%)</title><rect x="60.7256%" y="293" width="0.1577%" height="15" fill="rgb(207,226,44)"/><text x="60.9756%" y="303.50"></text></g><g><title>broccoli::query::colfind::inner::ColfindRecurser&lt;T,NO&gt;::recurse_seq (23 samples, 3.63%)</title><rect x="57.4132%" y="453" width="3.6278%" height="15" fill="rgb(208,126,0)"/><text x="57.6632%" y="463.50">broc..</text></g><g><title>broccoli::query::colfind::inner::ColfindRecurser&lt;T,NO&gt;::recurse_seq (5 samples, 0.79%)</title><rect x="60.2524%" y="437" width="0.7886%" height="15" fill="rgb(244,66,21)"/><text x="60.5024%" y="447.50"></text></g><g><title>broccoli::query::colfind::oned::find_2d (1 samples, 0.16%)</title><rect x="60.8833%" y="421" width="0.1577%" height="15" fill="rgb(222,97,12)"/><text x="61.1333%" y="431.50"></text></g><g><title>broccoli::query::colfind::oned::find (1 samples, 0.16%)</title><rect x="60.8833%" y="405" width="0.1577%" height="15" fill="rgb(219,213,19)"/><text x="61.1333%" y="415.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (1 samples, 0.16%)</title><rect x="60.8833%" y="389" width="0.1577%" height="15" fill="rgb(252,169,30)"/><text x="61.1333%" y="399.50"></text></g><g><title>broccoli::query::colfind::oned::find::{{closure}} (1 samples, 0.16%)</title><rect x="60.8833%" y="373" width="0.1577%" height="15" fill="rgb(206,32,51)"/><text x="61.1333%" y="383.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (1 samples, 0.16%)</title><rect x="60.8833%" y="357" width="0.1577%" height="15" fill="rgb(250,172,42)"/><text x="61.1333%" y="367.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (3 samples, 0.47%)</title><rect x="61.1987%" y="389" width="0.4732%" height="15" fill="rgb(209,34,43)"/><text x="61.4487%" y="399.50"></text></g><g><title>&lt;broccoli::query::colfind::builder::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (2 samples, 0.32%)</title><rect x="61.3565%" y="373" width="0.3155%" height="15" fill="rgb(223,11,35)"/><text x="61.6065%" y="383.50"></text></g><g><title>broccoli::query::colfind::ColfindQuery::find_colliding_pairs_mut::{{closure}} (2 samples, 0.32%)</title><rect x="61.3565%" y="357" width="0.3155%" height="15" fill="rgb(251,219,26)"/><text x="61.6065%" y="367.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (2 samples, 0.32%)</title><rect x="61.3565%" y="341" width="0.3155%" height="15" fill="rgb(231,119,3)"/><text x="61.6065%" y="351.50"></text></g><g><title>broccoli::query::colfind::inner::ColfindRecurser&lt;T,NO&gt;::recurse_seq (75 samples, 11.83%)</title><rect x="50.0000%" y="469" width="11.8297%" height="15" fill="rgb(216,97,11)"/><text x="50.2500%" y="479.50">broccoli::query::c..</text></g><g><title>broccoli::query::colfind::oned::find_2d (5 samples, 0.79%)</title><rect x="61.0410%" y="453" width="0.7886%" height="15" fill="rgb(223,59,9)"/><text x="61.2910%" y="463.50"></text></g><g><title>broccoli::query::colfind::oned::find (5 samples, 0.79%)</title><rect x="61.0410%" y="437" width="0.7886%" height="15" fill="rgb(233,93,31)"/><text x="61.2910%" y="447.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (5 samples, 0.79%)</title><rect x="61.0410%" y="421" width="0.7886%" height="15" fill="rgb(239,81,33)"/><text x="61.2910%" y="431.50"></text></g><g><title>broccoli::query::colfind::oned::find::{{closure}} (4 samples, 0.63%)</title><rect x="61.1987%" y="405" width="0.6309%" height="15" fill="rgb(213,120,34)"/><text x="61.4487%" y="415.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.16%)</title><rect x="61.6719%" y="389" width="0.1577%" height="15" fill="rgb(243,49,53)"/><text x="61.9219%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="61.8297%" y="437" width="0.1577%" height="15" fill="rgb(247,216,33)"/><text x="62.0797%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="61.8297%" y="421" width="0.1577%" height="15" fill="rgb(226,26,14)"/><text x="62.0797%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="61.8297%" y="405" width="0.1577%" height="15" fill="rgb(215,49,53)"/><text x="62.0797%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="61.8297%" y="389" width="0.1577%" height="15" fill="rgb(245,162,40)"/><text x="62.0797%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="61.8297%" y="373" width="0.1577%" height="15" fill="rgb(229,68,17)"/><text x="62.0797%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="61.8297%" y="357" width="0.1577%" height="15" fill="rgb(213,182,10)"/><text x="62.0797%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="61.8297%" y="341" width="0.1577%" height="15" fill="rgb(245,125,30)"/><text x="62.0797%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="61.8297%" y="325" width="0.1577%" height="15" fill="rgb(232,202,2)"/><text x="62.0797%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="61.8297%" y="309" width="0.1577%" height="15" fill="rgb(237,140,51)"/><text x="62.0797%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (3 samples, 0.47%)</title><rect x="61.9874%" y="437" width="0.4732%" height="15" fill="rgb(236,157,25)"/><text x="62.2374%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as twounordered::RetainMutUnordered&lt;T&gt;&gt;::truncate (1 samples, 0.16%)</title><rect x="63.4069%" y="421" width="0.1577%" height="15" fill="rgb(219,209,0)"/><text x="63.6569%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::truncate (1 samples, 0.16%)</title><rect x="63.4069%" y="405" width="0.1577%" height="15" fill="rgb(240,116,54)"/><text x="63.6569%" y="415.50"></text></g><g><title>broccoli::query::colfind::inner::ColfindRecurser&lt;T,NO&gt;::recurse_seq (165 samples, 26.03%)</title><rect x="38.8013%" y="485" width="26.0252%" height="15" fill="rgb(216,10,36)"/><text x="39.0513%" y="495.50">broccoli::query::colfind::inner::ColfindRe..</text></g><g><title>broccoli::query::colfind::oned::find_2d (19 samples, 3.00%)</title><rect x="61.8297%" y="469" width="2.9968%" height="15" fill="rgb(222,72,44)"/><text x="62.0797%" y="479.50">bro..</text></g><g><title>broccoli::query::colfind::oned::find (19 samples, 3.00%)</title><rect x="61.8297%" y="453" width="2.9968%" height="15" fill="rgb(232,159,9)"/><text x="62.0797%" y="463.50">bro..</text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (15 samples, 2.37%)</title><rect x="62.4606%" y="437" width="2.3659%" height="15" fill="rgb(210,39,32)"/><text x="62.7106%" y="447.50">tw..</text></g><g><title>broccoli::query::colfind::oned::find::{{closure}} (8 samples, 1.26%)</title><rect x="63.5647%" y="421" width="1.2618%" height="15" fill="rgb(216,194,45)"/><text x="63.8147%" y="431.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (5 samples, 0.79%)</title><rect x="64.0379%" y="405" width="0.7886%" height="15" fill="rgb(218,18,35)"/><text x="64.2879%" y="415.50"></text></g><g><title>&lt;broccoli::query::colfind::builder::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (2 samples, 0.32%)</title><rect x="64.5110%" y="389" width="0.3155%" height="15" fill="rgb(207,83,51)"/><text x="64.7610%" y="399.50"></text></g><g><title>broccoli::query::colfind::ColfindQuery::find_colliding_pairs_mut::{{closure}} (2 samples, 0.32%)</title><rect x="64.5110%" y="373" width="0.3155%" height="15" fill="rgb(225,63,43)"/><text x="64.7610%" y="383.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (2 samples, 0.32%)</title><rect x="64.5110%" y="357" width="0.3155%" height="15" fill="rgb(207,57,36)"/><text x="64.7610%" y="367.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (1 samples, 0.16%)</title><rect x="65.6151%" y="421" width="0.1577%" height="15" fill="rgb(216,99,33)"/><text x="65.8651%" y="431.50"></text></g><g><title>broccoli::query::colfind::inner::ColfindRecurser&lt;T,NO&gt;::recurse_seq (258 samples, 40.69%)</title><rect x="25.5521%" y="501" width="40.6940%" height="15" fill="rgb(225,42,16)"/><text x="25.8021%" y="511.50">broccoli::query::colfind::inner::ColfindRecurser&lt;T,NO&gt;::recurse_seq</text></g><g><title>broccoli::query::colfind::oned::find_2d (9 samples, 1.42%)</title><rect x="64.8265%" y="485" width="1.4196%" height="15" fill="rgb(220,201,45)"/><text x="65.0765%" y="495.50"></text></g><g><title>broccoli::query::colfind::oned::find (9 samples, 1.42%)</title><rect x="64.8265%" y="469" width="1.4196%" height="15" fill="rgb(225,33,4)"/><text x="65.0765%" y="479.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (9 samples, 1.42%)</title><rect x="64.8265%" y="453" width="1.4196%" height="15" fill="rgb(224,33,50)"/><text x="65.0765%" y="463.50"></text></g><g><title>broccoli::query::colfind::oned::find::{{closure}} (5 samples, 0.79%)</title><rect x="65.4574%" y="437" width="0.7886%" height="15" fill="rgb(246,198,51)"/><text x="65.7074%" y="447.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (3 samples, 0.47%)</title><rect x="65.7729%" y="421" width="0.4732%" height="15" fill="rgb(205,22,4)"/><text x="66.0229%" y="431.50"></text></g><g><title>&lt;broccoli::query::colfind::builder::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (1 samples, 0.16%)</title><rect x="66.0883%" y="405" width="0.1577%" height="15" fill="rgb(206,3,8)"/><text x="66.3383%" y="415.50"></text></g><g><title>broccoli::query::colfind::ColfindQuery::find_colliding_pairs_mut::{{closure}} (1 samples, 0.16%)</title><rect x="66.0883%" y="389" width="0.1577%" height="15" fill="rgb(251,23,15)"/><text x="66.3383%" y="399.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.16%)</title><rect x="66.0883%" y="373" width="0.1577%" height="15" fill="rgb(252,88,28)"/><text x="66.3383%" y="383.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (4 samples, 0.63%)</title><rect x="67.1924%" y="437" width="0.6309%" height="15" fill="rgb(212,127,14)"/><text x="67.4424%" y="447.50"></text></g><g><title>&lt;broccoli::query::colfind::builder::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (3 samples, 0.47%)</title><rect x="67.3502%" y="421" width="0.4732%" height="15" fill="rgb(247,145,37)"/><text x="67.6002%" y="431.50"></text></g><g><title>broccoli::query::colfind::ColfindQuery::find_colliding_pairs_mut::{{closure}} (3 samples, 0.47%)</title><rect x="67.3502%" y="405" width="0.4732%" height="15" fill="rgb(209,117,53)"/><text x="67.6002%" y="415.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (3 samples, 0.47%)</title><rect x="67.3502%" y="389" width="0.4732%" height="15" fill="rgb(212,90,42)"/><text x="67.6002%" y="399.50"></text></g><g><title>broccoli::query::colfind::inner::ColfindRecurser&lt;T,NO&gt;::recurse_seq (326 samples, 51.42%)</title><rect x="16.5615%" y="517" width="51.4196%" height="15" fill="rgb(218,164,37)"/><text x="16.8115%" y="527.50">broccoli::query::colfind::inner::ColfindRecurser&lt;T,NO&gt;::recurse_seq</text></g><g><title>broccoli::query::colfind::oned::find_2d (11 samples, 1.74%)</title><rect x="66.2461%" y="501" width="1.7350%" height="15" fill="rgb(246,65,34)"/><text x="66.4961%" y="511.50"></text></g><g><title>broccoli::query::colfind::oned::find (11 samples, 1.74%)</title><rect x="66.2461%" y="485" width="1.7350%" height="15" fill="rgb(231,100,33)"/><text x="66.4961%" y="495.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (11 samples, 1.74%)</title><rect x="66.2461%" y="469" width="1.7350%" height="15" fill="rgb(228,126,14)"/><text x="66.4961%" y="479.50"></text></g><g><title>broccoli::query::colfind::oned::find::{{closure}} (5 samples, 0.79%)</title><rect x="67.1924%" y="453" width="0.7886%" height="15" fill="rgb(215,173,21)"/><text x="67.4424%" y="463.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.16%)</title><rect x="67.8233%" y="437" width="0.1577%" height="15" fill="rgb(210,6,40)"/><text x="68.0733%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (2 samples, 0.32%)</title><rect x="67.9811%" y="485" width="0.3155%" height="15" fill="rgb(212,48,18)"/><text x="68.2311%" y="495.50"></text></g><g><title>core::ptr::write (1 samples, 0.16%)</title><rect x="68.1388%" y="469" width="0.1577%" height="15" fill="rgb(230,214,11)"/><text x="68.3888%" y="479.50"></text></g><g><title>&lt;broccoli::pmut::PMut&lt;T&gt; as broccoli::node::Aabb&gt;::get (1 samples, 0.16%)</title><rect x="69.2429%" y="453" width="0.1577%" height="15" fill="rgb(254,105,39)"/><text x="69.4929%" y="463.50"></text></g><g><title>broccoli::query::colfind::ColfindQuery::find_colliding_pairs_mut (409 samples, 64.51%)</title><rect x="5.0473%" y="581" width="64.5110%" height="15" fill="rgb(245,158,5)"/><text x="5.2973%" y="591.50">broccoli::query::colfind::ColfindQuery::find_colliding_pairs_mut</text></g><g><title>broccoli::query::colfind::builder::QueryBuilder&lt;T&gt;::query_seq (409 samples, 64.51%)</title><rect x="5.0473%" y="565" width="64.5110%" height="15" fill="rgb(249,208,11)"/><text x="5.2973%" y="575.50">broccoli::query::colfind::builder::QueryBuilder&lt;T&gt;::query_seq</text></g><g><title>broccoli::query::colfind::inner::ColfindRecurser&lt;T,NO&gt;::recurse_seq (409 samples, 64.51%)</title><rect x="5.0473%" y="549" width="64.5110%" height="15" fill="rgb(210,39,28)"/><text x="5.2973%" y="559.50">broccoli::query::colfind::inner::ColfindRecurser&lt;T,NO&gt;::recurse_seq</text></g><g><title>broccoli::query::colfind::inner::ColfindRecurser&lt;T,NO&gt;::recurse_seq (372 samples, 58.68%)</title><rect x="10.8833%" y="533" width="58.6751%" height="15" fill="rgb(211,56,53)"/><text x="11.1333%" y="543.50">broccoli::query::colfind::inner::ColfindRecurser&lt;T,NO&gt;::recurse_seq</text></g><g><title>broccoli::query::colfind::oned::find_2d (10 samples, 1.58%)</title><rect x="67.9811%" y="517" width="1.5773%" height="15" fill="rgb(226,201,30)"/><text x="68.2311%" y="527.50"></text></g><g><title>broccoli::query::colfind::oned::find (10 samples, 1.58%)</title><rect x="67.9811%" y="501" width="1.5773%" height="15" fill="rgb(239,101,34)"/><text x="68.2311%" y="511.50"></text></g><g><title>twounordered::RetainMutUnordered::retain_mut_unordered (8 samples, 1.26%)</title><rect x="68.2965%" y="485" width="1.2618%" height="15" fill="rgb(226,209,5)"/><text x="68.5465%" y="495.50"></text></g><g><title>broccoli::query::colfind::oned::find::{{closure}} (4 samples, 0.63%)</title><rect x="68.9274%" y="469" width="0.6309%" height="15" fill="rgb(250,105,47)"/><text x="69.1774%" y="479.50"></text></g><g><title>&lt;broccoli::query::colfind::oned::OtherAxisCollider&lt;A,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (1 samples, 0.16%)</title><rect x="69.4006%" y="453" width="0.1577%" height="15" fill="rgb(230,72,3)"/><text x="69.6506%" y="463.50"></text></g><g><title>&lt;broccoli::query::colfind::builder::QueryFnMut&lt;T,F&gt; as broccoli::query::colfind::builder::CollisionHandler&gt;::collide (1 samples, 0.16%)</title><rect x="69.4006%" y="437" width="0.1577%" height="15" fill="rgb(232,218,39)"/><text x="69.6506%" y="447.50"></text></g><g><title>broccoli::query::colfind::ColfindQuery::find_colliding_pairs_mut::{{closure}} (1 samples, 0.16%)</title><rect x="69.4006%" y="421" width="0.1577%" height="15" fill="rgb(248,166,6)"/><text x="69.6506%" y="431.50"></text></g><g><title>data_gen::colfind::optimal_query::handle_broccoli::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.16%)</title><rect x="69.4006%" y="405" width="0.1577%" height="15" fill="rgb(247,89,20)"/><text x="69.6506%" y="415.50"></text></g><g><title>broccoli::tree::build::builder::NonLeafFinisher&lt;A,T&gt;::finish (1 samples, 0.16%)</title><rect x="69.5584%" y="501" width="0.1577%" height="15" fill="rgb(248,130,54)"/><text x="69.8084%" y="511.50"></text></g><g><title>&lt;broccoli::tree::build::DefaultSorter as broccoli::tree::build::Sorter&gt;::sort (1 samples, 0.16%)</title><rect x="69.5584%" y="485" width="0.1577%" height="15" fill="rgb(234,196,4)"/><text x="69.8084%" y="495.50"></text></g><g><title>broccoli::util::sweeper_update (1 samples, 0.16%)</title><rect x="69.5584%" y="469" width="0.1577%" height="15" fill="rgb(250,143,31)"/><text x="69.8084%" y="479.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by (1 samples, 0.16%)</title><rect x="69.5584%" y="453" width="0.1577%" height="15" fill="rgb(211,110,34)"/><text x="69.8084%" y="463.50"></text></g><g><title>core::slice::sort::quicksort (1 samples, 0.16%)</title><rect x="69.5584%" y="437" width="0.1577%" height="15" fill="rgb(215,124,48)"/><text x="69.8084%" y="447.50"></text></g><g><title>core::slice::sort::recurse (1 samples, 0.16%)</title><rect x="69.5584%" y="421" width="0.1577%" height="15" fill="rgb(216,46,13)"/><text x="69.8084%" y="431.50"></text></g><g><title>core::slice::sort::recurse (1 samples, 0.16%)</title><rect x="69.5584%" y="405" width="0.1577%" height="15" fill="rgb(205,184,25)"/><text x="69.8084%" y="415.50"></text></g><g><title>core::slice::sort::recurse (1 samples, 0.16%)</title><rect x="69.5584%" y="389" width="0.1577%" height="15" fill="rgb(228,1,10)"/><text x="69.8084%" y="399.50"></text></g><g><title>axgeom::range::Range&lt;T&gt;::contains_ext (1 samples, 0.16%)</title><rect x="70.1893%" y="453" width="0.1577%" height="15" fill="rgb(213,116,27)"/><text x="70.4393%" y="463.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.16%)</title><rect x="70.3470%" y="453" width="0.1577%" height="15" fill="rgb(241,95,50)"/><text x="70.5970%" y="463.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.16%)</title><rect x="70.3470%" y="437" width="0.1577%" height="15" fill="rgb(238,48,32)"/><text x="70.5970%" y="447.50"></text></g><g><title>broccoli::tree::build::oned::bin_middle_left_right (6 samples, 0.95%)</title><rect x="69.7161%" y="469" width="0.9464%" height="15" fill="rgb(235,113,49)"/><text x="69.9661%" y="479.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.16%)</title><rect x="70.5047%" y="453" width="0.1577%" height="15" fill="rgb(205,127,43)"/><text x="70.7547%" y="463.50"></text></g><g><title>core::ptr::swap (1 samples, 0.16%)</title><rect x="70.5047%" y="437" width="0.1577%" height="15" fill="rgb(250,162,2)"/><text x="70.7547%" y="447.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.16%)</title><rect x="70.5047%" y="421" width="0.1577%" height="15" fill="rgb(220,13,41)"/><text x="70.7547%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.16%)</title><rect x="70.8202%" y="389" width="0.1577%" height="15" fill="rgb(249,221,25)"/><text x="71.0702%" y="399.50"></text></g><g><title>pdqselect::partition_in_blocks (6 samples, 0.95%)</title><rect x="70.6625%" y="405" width="0.9464%" height="15" fill="rgb(215,208,19)"/><text x="70.9125%" y="415.50"></text></g><g><title>pdqselect::select_by::{{closure}} (4 samples, 0.63%)</title><rect x="70.9779%" y="389" width="0.6309%" height="15" fill="rgb(236,175,2)"/><text x="71.2279%" y="399.50"></text></g><g><title>broccoli::tree::build::builder::construct_non_leaf::{{closure}} (4 samples, 0.63%)</title><rect x="70.9779%" y="373" width="0.6309%" height="15" fill="rgb(241,52,2)"/><text x="71.2279%" y="383.50"></text></g><g><title>broccoli::util::compare_bots (4 samples, 0.63%)</title><rect x="70.9779%" y="357" width="0.6309%" height="15" fill="rgb(248,140,14)"/><text x="71.2279%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (2 samples, 0.32%)</title><rect x="71.2934%" y="341" width="0.3155%" height="15" fill="rgb(253,22,42)"/><text x="71.5434%" y="351.50"></text></g><g><title>broccoli::tree::build::builder::Recurser&lt;T,K,S&gt;::create_non_leaf (14 samples, 2.21%)</title><rect x="69.7161%" y="501" width="2.2082%" height="15" fill="rgb(234,61,47)"/><text x="69.9661%" y="511.50">b..</text></g><g><title>broccoli::tree::build::builder::construct_non_leaf (14 samples, 2.21%)</title><rect x="69.7161%" y="485" width="2.2082%" height="15" fill="rgb(208,226,15)"/><text x="69.9661%" y="495.50">b..</text></g><g><title>pdqselect::select_by (8 samples, 1.26%)</title><rect x="70.6625%" y="469" width="1.2618%" height="15" fill="rgb(217,221,4)"/><text x="70.9125%" y="479.50"></text></g><g><title>pdqselect::quickselect (8 samples, 1.26%)</title><rect x="70.6625%" y="453" width="1.2618%" height="15" fill="rgb(212,174,34)"/><text x="70.9125%" y="463.50"></text></g><g><title>pdqselect::recurse (8 samples, 1.26%)</title><rect x="70.6625%" y="437" width="1.2618%" height="15" fill="rgb(253,83,4)"/><text x="70.9125%" y="447.50"></text></g><g><title>pdqselect::partition (8 samples, 1.26%)</title><rect x="70.6625%" y="421" width="1.2618%" height="15" fill="rgb(250,195,49)"/><text x="70.9125%" y="431.50"></text></g><g><title>pdqselect::select_by::{{closure}} (2 samples, 0.32%)</title><rect x="71.6088%" y="405" width="0.3155%" height="15" fill="rgb(241,192,25)"/><text x="71.8588%" y="415.50"></text></g><g><title>broccoli::tree::build::builder::construct_non_leaf::{{closure}} (2 samples, 0.32%)</title><rect x="71.6088%" y="389" width="0.3155%" height="15" fill="rgb(208,124,10)"/><text x="71.8588%" y="399.50"></text></g><g><title>broccoli::util::compare_bots (2 samples, 0.32%)</title><rect x="71.6088%" y="373" width="0.3155%" height="15" fill="rgb(222,33,0)"/><text x="71.8588%" y="383.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.16%)</title><rect x="71.7666%" y="357" width="0.1577%" height="15" fill="rgb(234,209,28)"/><text x="72.0166%" y="367.50"></text></g><g><title>axgeom::range::Range&lt;T&gt;::contains_ext (1 samples, 0.16%)</title><rect x="71.9243%" y="437" width="0.1577%" height="15" fill="rgb(224,11,23)"/><text x="72.1743%" y="447.50"></text></g><g><title>broccoli::tree::build::oned::bin_middle_left_right (3 samples, 0.47%)</title><rect x="71.9243%" y="453" width="0.4732%" height="15" fill="rgb(232,99,1)"/><text x="72.1743%" y="463.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (2 samples, 0.32%)</title><rect x="72.0820%" y="437" width="0.3155%" height="15" fill="rgb(237,95,45)"/><text x="72.3320%" y="447.50"></text></g><g><title>core::ptr::swap (2 samples, 0.32%)</title><rect x="72.0820%" y="421" width="0.3155%" height="15" fill="rgb(208,109,11)"/><text x="72.3320%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.32%)</title><rect x="72.0820%" y="405" width="0.3155%" height="15" fill="rgb(216,190,48)"/><text x="72.3320%" y="415.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.16%)</title><rect x="72.3975%" y="389" width="0.1577%" height="15" fill="rgb(251,171,36)"/><text x="72.6475%" y="399.50"></text></g><g><title>core::ptr::swap (1 samples, 0.16%)</title><rect x="72.3975%" y="373" width="0.1577%" height="15" fill="rgb(230,62,22)"/><text x="72.6475%" y="383.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.16%)</title><rect x="72.3975%" y="357" width="0.1577%" height="15" fill="rgb(225,114,35)"/><text x="72.6475%" y="367.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.16%)</title><rect x="73.1861%" y="373" width="0.1577%" height="15" fill="rgb(215,118,42)"/><text x="73.4361%" y="383.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (1 samples, 0.16%)</title><rect x="73.1861%" y="357" width="0.1577%" height="15" fill="rgb(243,119,21)"/><text x="73.4361%" y="367.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (1 samples, 0.16%)</title><rect x="73.1861%" y="341" width="0.1577%" height="15" fill="rgb(252,177,53)"/><text x="73.4361%" y="351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.16%)</title><rect x="73.3438%" y="373" width="0.1577%" height="15" fill="rgb(237,209,29)"/><text x="73.5938%" y="383.50"></text></g><g><title>broccoli::tree::build::builder::Recurser&lt;T,K,S&gt;::create_non_leaf (12 samples, 1.89%)</title><rect x="71.9243%" y="485" width="1.8927%" height="15" fill="rgb(212,65,23)"/><text x="72.1743%" y="495.50">b..</text></g><g><title>broccoli::tree::build::builder::construct_non_leaf (12 samples, 1.89%)</title><rect x="71.9243%" y="469" width="1.8927%" height="15" fill="rgb(230,222,46)"/><text x="72.1743%" y="479.50">b..</text></g><g><title>pdqselect::select_by (9 samples, 1.42%)</title><rect x="72.3975%" y="453" width="1.4196%" height="15" fill="rgb(215,135,32)"/><text x="72.6475%" y="463.50"></text></g><g><title>pdqselect::quickselect (9 samples, 1.42%)</title><rect x="72.3975%" y="437" width="1.4196%" height="15" fill="rgb(246,101,22)"/><text x="72.6475%" y="447.50"></text></g><g><title>pdqselect::recurse (9 samples, 1.42%)</title><rect x="72.3975%" y="421" width="1.4196%" height="15" fill="rgb(206,107,13)"/><text x="72.6475%" y="431.50"></text></g><g><title>pdqselect::partition (9 samples, 1.42%)</title><rect x="72.3975%" y="405" width="1.4196%" height="15" fill="rgb(250,100,44)"/><text x="72.6475%" y="415.50"></text></g><g><title>pdqselect::partition_in_blocks (8 samples, 1.26%)</title><rect x="72.5552%" y="389" width="1.2618%" height="15" fill="rgb(231,147,38)"/><text x="72.8052%" y="399.50"></text></g><g><title>pdqselect::select_by::{{closure}} (2 samples, 0.32%)</title><rect x="73.5016%" y="373" width="0.3155%" height="15" fill="rgb(229,8,40)"/><text x="73.7516%" y="383.50"></text></g><g><title>broccoli::tree::build::builder::construct_non_leaf::{{closure}} (2 samples, 0.32%)</title><rect x="73.5016%" y="357" width="0.3155%" height="15" fill="rgb(221,135,30)"/><text x="73.7516%" y="367.50"></text></g><g><title>broccoli::util::compare_bots (2 samples, 0.32%)</title><rect x="73.5016%" y="341" width="0.3155%" height="15" fill="rgb(249,193,18)"/><text x="73.7516%" y="351.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (2 samples, 0.32%)</title><rect x="73.5016%" y="325" width="0.3155%" height="15" fill="rgb(209,133,39)"/><text x="73.7516%" y="335.50"></text></g><g><title>axgeom::range::Range&lt;T&gt;::contains_ext (1 samples, 0.16%)</title><rect x="73.9748%" y="421" width="0.1577%" height="15" fill="rgb(232,100,14)"/><text x="74.2248%" y="431.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::lt (1 samples, 0.16%)</title><rect x="73.9748%" y="405" width="0.1577%" height="15" fill="rgb(224,185,1)"/><text x="74.2248%" y="415.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.16%)</title><rect x="74.1325%" y="389" width="0.1577%" height="15" fill="rgb(223,139,8)"/><text x="74.3825%" y="399.50"></text></g><g><title>broccoli::tree::build::oned::bin_middle_left_right (6 samples, 0.95%)</title><rect x="73.8170%" y="437" width="0.9464%" height="15" fill="rgb(232,213,38)"/><text x="74.0670%" y="447.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (4 samples, 0.63%)</title><rect x="74.1325%" y="421" width="0.6309%" height="15" fill="rgb(207,94,22)"/><text x="74.3825%" y="431.50"></text></g><g><title>core::ptr::swap (4 samples, 0.63%)</title><rect x="74.1325%" y="405" width="0.6309%" height="15" fill="rgb(219,183,54)"/><text x="74.3825%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.47%)</title><rect x="74.2902%" y="389" width="0.4732%" height="15" fill="rgb(216,185,54)"/><text x="74.5402%" y="399.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.32%)</title><rect x="75.0789%" y="357" width="0.3155%" height="15" fill="rgb(254,217,39)"/><text x="75.3289%" y="367.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (2 samples, 0.32%)</title><rect x="75.0789%" y="341" width="0.3155%" height="15" fill="rgb(240,178,23)"/><text x="75.3289%" y="351.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (2 samples, 0.32%)</title><rect x="75.0789%" y="325" width="0.3155%" height="15" fill="rgb(218,11,47)"/><text x="75.3289%" y="335.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (2 samples, 0.32%)</title><rect x="75.3943%" y="357" width="0.3155%" height="15" fill="rgb(218,51,51)"/><text x="75.6443%" y="367.50"></text></g><g><title>pdqselect::partition_in_blocks (9 samples, 1.42%)</title><rect x="74.7634%" y="373" width="1.4196%" height="15" fill="rgb(238,126,27)"/><text x="75.0134%" y="383.50"></text></g><g><title>pdqselect::select_by::{{closure}} (3 samples, 0.47%)</title><rect x="75.7098%" y="357" width="0.4732%" height="15" fill="rgb(249,202,22)"/><text x="75.9598%" y="367.50"></text></g><g><title>broccoli::tree::build::builder::construct_non_leaf::{{closure}} (3 samples, 0.47%)</title><rect x="75.7098%" y="341" width="0.4732%" height="15" fill="rgb(254,195,49)"/><text x="75.9598%" y="351.50"></text></g><g><title>broccoli::util::compare_bots (3 samples, 0.47%)</title><rect x="75.7098%" y="325" width="0.4732%" height="15" fill="rgb(208,123,14)"/><text x="75.9598%" y="335.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (2 samples, 0.32%)</title><rect x="75.8675%" y="309" width="0.3155%" height="15" fill="rgb(224,200,8)"/><text x="76.1175%" y="319.50"></text></g><g><title>broccoli::tree::build::builder::Recurser&lt;T,K,S&gt;::create_non_leaf (16 samples, 2.52%)</title><rect x="73.8170%" y="469" width="2.5237%" height="15" fill="rgb(217,61,36)"/><text x="74.0670%" y="479.50">br..</text></g><g><title>broccoli::tree::build::builder::construct_non_leaf (16 samples, 2.52%)</title><rect x="73.8170%" y="453" width="2.5237%" height="15" fill="rgb(206,35,45)"/><text x="74.0670%" y="463.50">br..</text></g><g><title>pdqselect::select_by (10 samples, 1.58%)</title><rect x="74.7634%" y="437" width="1.5773%" height="15" fill="rgb(217,65,33)"/><text x="75.0134%" y="447.50"></text></g><g><title>pdqselect::quickselect (10 samples, 1.58%)</title><rect x="74.7634%" y="421" width="1.5773%" height="15" fill="rgb(222,158,48)"/><text x="75.0134%" y="431.50"></text></g><g><title>pdqselect::recurse (10 samples, 1.58%)</title><rect x="74.7634%" y="405" width="1.5773%" height="15" fill="rgb(254,2,54)"/><text x="75.0134%" y="415.50"></text></g><g><title>pdqselect::partition (10 samples, 1.58%)</title><rect x="74.7634%" y="389" width="1.5773%" height="15" fill="rgb(250,143,38)"/><text x="75.0134%" y="399.50"></text></g><g><title>pdqselect::select_by::{{closure}} (1 samples, 0.16%)</title><rect x="76.1830%" y="373" width="0.1577%" height="15" fill="rgb(248,25,0)"/><text x="76.4330%" y="383.50"></text></g><g><title>broccoli::tree::build::builder::construct_non_leaf::{{closure}} (1 samples, 0.16%)</title><rect x="76.1830%" y="357" width="0.1577%" height="15" fill="rgb(206,152,27)"/><text x="76.4330%" y="367.50"></text></g><g><title>broccoli::util::compare_bots (1 samples, 0.16%)</title><rect x="76.1830%" y="341" width="0.1577%" height="15" fill="rgb(240,77,30)"/><text x="76.4330%" y="351.50"></text></g><g><title>broccoli::tree::build::builder::NonLeafFinisher&lt;A,T&gt;::finish (1 samples, 0.16%)</title><rect x="76.3407%" y="453" width="0.1577%" height="15" fill="rgb(231,5,3)"/><text x="76.5907%" y="463.50"></text></g><g><title>&lt;broccoli::tree::build::DefaultSorter as broccoli::tree::build::Sorter&gt;::sort (1 samples, 0.16%)</title><rect x="76.3407%" y="437" width="0.1577%" height="15" fill="rgb(207,226,32)"/><text x="76.5907%" y="447.50"></text></g><g><title>broccoli::util::sweeper_update (1 samples, 0.16%)</title><rect x="76.3407%" y="421" width="0.1577%" height="15" fill="rgb(222,207,47)"/><text x="76.5907%" y="431.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by (1 samples, 0.16%)</title><rect x="76.3407%" y="405" width="0.1577%" height="15" fill="rgb(229,115,45)"/><text x="76.5907%" y="415.50"></text></g><g><title>core::slice::sort::quicksort (1 samples, 0.16%)</title><rect x="76.3407%" y="389" width="0.1577%" height="15" fill="rgb(224,191,6)"/><text x="76.5907%" y="399.50"></text></g><g><title>core::slice::sort::recurse (1 samples, 0.16%)</title><rect x="76.3407%" y="373" width="0.1577%" height="15" fill="rgb(230,227,24)"/><text x="76.5907%" y="383.50"></text></g><g><title>core::slice::sort::recurse (1 samples, 0.16%)</title><rect x="76.3407%" y="357" width="0.1577%" height="15" fill="rgb(228,80,19)"/><text x="76.5907%" y="367.50"></text></g><g><title>core::slice::sort::partition (1 samples, 0.16%)</title><rect x="76.3407%" y="341" width="0.1577%" height="15" fill="rgb(247,229,0)"/><text x="76.5907%" y="351.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by::{{closure}} (1 samples, 0.16%)</title><rect x="76.3407%" y="325" width="0.1577%" height="15" fill="rgb(237,194,15)"/><text x="76.5907%" y="335.50"></text></g><g><title>broccoli::util::sweeper_update::{{closure}} (1 samples, 0.16%)</title><rect x="76.3407%" y="309" width="0.1577%" height="15" fill="rgb(219,203,20)"/><text x="76.5907%" y="319.50"></text></g><g><title>broccoli::util::compare_bots (1 samples, 0.16%)</title><rect x="76.3407%" y="293" width="0.1577%" height="15" fill="rgb(234,128,8)"/><text x="76.5907%" y="303.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.16%)</title><rect x="76.6562%" y="373" width="0.1577%" height="15" fill="rgb(248,202,8)"/><text x="76.9062%" y="383.50"></text></g><g><title>broccoli::tree::build::oned::bin_middle_left_right (3 samples, 0.47%)</title><rect x="76.4984%" y="421" width="0.4732%" height="15" fill="rgb(206,104,37)"/><text x="76.7484%" y="431.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (2 samples, 0.32%)</title><rect x="76.6562%" y="405" width="0.3155%" height="15" fill="rgb(223,8,27)"/><text x="76.9062%" y="415.50"></text></g><g><title>core::ptr::swap (2 samples, 0.32%)</title><rect x="76.6562%" y="389" width="0.3155%" height="15" fill="rgb(216,217,28)"/><text x="76.9062%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.16%)</title><rect x="76.8139%" y="373" width="0.1577%" height="15" fill="rgb(249,199,1)"/><text x="77.0639%" y="383.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.16%)</title><rect x="77.4448%" y="341" width="0.1577%" height="15" fill="rgb(240,85,17)"/><text x="77.6948%" y="351.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (1 samples, 0.16%)</title><rect x="77.4448%" y="325" width="0.1577%" height="15" fill="rgb(206,108,45)"/><text x="77.6948%" y="335.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (1 samples, 0.16%)</title><rect x="77.4448%" y="309" width="0.1577%" height="15" fill="rgb(245,210,41)"/><text x="77.6948%" y="319.50"></text></g><g><title>pdqselect::partition_in_blocks (5 samples, 0.79%)</title><rect x="76.9716%" y="357" width="0.7886%" height="15" fill="rgb(206,13,37)"/><text x="77.2216%" y="367.50"></text></g><g><title>pdqselect::select_by::{{closure}} (1 samples, 0.16%)</title><rect x="77.6025%" y="341" width="0.1577%" height="15" fill="rgb(250,61,18)"/><text x="77.8525%" y="351.50"></text></g><g><title>broccoli::tree::build::builder::construct_non_leaf::{{closure}} (1 samples, 0.16%)</title><rect x="77.6025%" y="325" width="0.1577%" height="15" fill="rgb(235,172,48)"/><text x="77.8525%" y="335.50"></text></g><g><title>broccoli::util::compare_bots (1 samples, 0.16%)</title><rect x="77.6025%" y="309" width="0.1577%" height="15" fill="rgb(249,201,17)"/><text x="77.8525%" y="319.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.16%)</title><rect x="77.6025%" y="293" width="0.1577%" height="15" fill="rgb(219,208,6)"/><text x="77.8525%" y="303.50"></text></g><g><title>broccoli::tree::build::builder::Recurser&lt;T,K,S&gt;::create_non_leaf (9 samples, 1.42%)</title><rect x="76.4984%" y="453" width="1.4196%" height="15" fill="rgb(248,31,23)"/><text x="76.7484%" y="463.50"></text></g><g><title>broccoli::tree::build::builder::construct_non_leaf (9 samples, 1.42%)</title><rect x="76.4984%" y="437" width="1.4196%" height="15" fill="rgb(245,15,42)"/><text x="76.7484%" y="447.50"></text></g><g><title>pdqselect::select_by (6 samples, 0.95%)</title><rect x="76.9716%" y="421" width="0.9464%" height="15" fill="rgb(222,217,39)"/><text x="77.2216%" y="431.50"></text></g><g><title>pdqselect::quickselect (6 samples, 0.95%)</title><rect x="76.9716%" y="405" width="0.9464%" height="15" fill="rgb(210,219,27)"/><text x="77.2216%" y="415.50"></text></g><g><title>pdqselect::recurse (6 samples, 0.95%)</title><rect x="76.9716%" y="389" width="0.9464%" height="15" fill="rgb(252,166,36)"/><text x="77.2216%" y="399.50"></text></g><g><title>pdqselect::partition (6 samples, 0.95%)</title><rect x="76.9716%" y="373" width="0.9464%" height="15" fill="rgb(245,132,34)"/><text x="77.2216%" y="383.50"></text></g><g><title>pdqselect::select_by::{{closure}} (1 samples, 0.16%)</title><rect x="77.7603%" y="357" width="0.1577%" height="15" fill="rgb(236,54,3)"/><text x="78.0103%" y="367.50"></text></g><g><title>broccoli::tree::build::builder::construct_non_leaf::{{closure}} (1 samples, 0.16%)</title><rect x="77.7603%" y="341" width="0.1577%" height="15" fill="rgb(241,173,43)"/><text x="78.0103%" y="351.50"></text></g><g><title>broccoli::util::compare_bots (1 samples, 0.16%)</title><rect x="77.7603%" y="325" width="0.1577%" height="15" fill="rgb(215,190,9)"/><text x="78.0103%" y="335.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.16%)</title><rect x="77.7603%" y="309" width="0.1577%" height="15" fill="rgb(242,101,16)"/><text x="78.0103%" y="319.50"></text></g><g><title>core::slice::sort::choose_pivot (1 samples, 0.16%)</title><rect x="78.0757%" y="341" width="0.1577%" height="15" fill="rgb(223,190,21)"/><text x="78.3257%" y="351.50"></text></g><g><title>core::slice::sort::choose_pivot::{{closure}} (1 samples, 0.16%)</title><rect x="78.0757%" y="325" width="0.1577%" height="15" fill="rgb(215,228,25)"/><text x="78.3257%" y="335.50"></text></g><g><title>core::slice::sort::choose_pivot::{{closure}} (1 samples, 0.16%)</title><rect x="78.0757%" y="309" width="0.1577%" height="15" fill="rgb(225,36,22)"/><text x="78.3257%" y="319.50"></text></g><g><title>core::slice::sort::partition (1 samples, 0.16%)</title><rect x="78.2334%" y="341" width="0.1577%" height="15" fill="rgb(251,106,46)"/><text x="78.4834%" y="351.50"></text></g><g><title>core::slice::sort::partition_in_blocks (1 samples, 0.16%)</title><rect x="78.2334%" y="325" width="0.1577%" height="15" fill="rgb(208,90,1)"/><text x="78.4834%" y="335.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by::{{closure}} (1 samples, 0.16%)</title><rect x="78.2334%" y="309" width="0.1577%" height="15" fill="rgb(243,10,4)"/><text x="78.4834%" y="319.50"></text></g><g><title>broccoli::util::sweeper_update::{{closure}} (1 samples, 0.16%)</title><rect x="78.2334%" y="293" width="0.1577%" height="15" fill="rgb(212,137,27)"/><text x="78.4834%" y="303.50"></text></g><g><title>broccoli::util::compare_bots (1 samples, 0.16%)</title><rect x="78.2334%" y="277" width="0.1577%" height="15" fill="rgb(231,220,49)"/><text x="78.4834%" y="287.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.16%)</title><rect x="78.2334%" y="261" width="0.1577%" height="15" fill="rgb(237,96,20)"/><text x="78.4834%" y="271.50"></text></g><g><title>core::slice::sort::insertion_sort (1 samples, 0.16%)</title><rect x="78.3912%" y="325" width="0.1577%" height="15" fill="rgb(239,229,30)"/><text x="78.6412%" y="335.50"></text></g><g><title>core::slice::sort::shift_tail (1 samples, 0.16%)</title><rect x="78.3912%" y="309" width="0.1577%" height="15" fill="rgb(219,65,33)"/><text x="78.6412%" y="319.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.16%)</title><rect x="78.3912%" y="293" width="0.1577%" height="15" fill="rgb(243,134,7)"/><text x="78.6412%" y="303.50"></text></g><g><title>&lt;core::slice::sort::CopyOnDrop&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.16%)</title><rect x="78.3912%" y="277" width="0.1577%" height="15" fill="rgb(216,177,54)"/><text x="78.6412%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.16%)</title><rect x="78.3912%" y="261" width="0.1577%" height="15" fill="rgb(211,160,20)"/><text x="78.6412%" y="271.50"></text></g><g><title>broccoli::tree::build::builder::NonLeafFinisher&lt;A,T&gt;::finish (5 samples, 0.79%)</title><rect x="77.9180%" y="437" width="0.7886%" height="15" fill="rgb(239,85,39)"/><text x="78.1680%" y="447.50"></text></g><g><title>&lt;broccoli::tree::build::DefaultSorter as broccoli::tree::build::Sorter&gt;::sort (5 samples, 0.79%)</title><rect x="77.9180%" y="421" width="0.7886%" height="15" fill="rgb(232,125,22)"/><text x="78.1680%" y="431.50"></text></g><g><title>broccoli::util::sweeper_update (5 samples, 0.79%)</title><rect x="77.9180%" y="405" width="0.7886%" height="15" fill="rgb(244,57,34)"/><text x="78.1680%" y="415.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by (5 samples, 0.79%)</title><rect x="77.9180%" y="389" width="0.7886%" height="15" fill="rgb(214,203,32)"/><text x="78.1680%" y="399.50"></text></g><g><title>core::slice::sort::quicksort (5 samples, 0.79%)</title><rect x="77.9180%" y="373" width="0.7886%" height="15" fill="rgb(207,58,43)"/><text x="78.1680%" y="383.50"></text></g><g><title>core::slice::sort::recurse (5 samples, 0.79%)</title><rect x="77.9180%" y="357" width="0.7886%" height="15" fill="rgb(215,193,15)"/><text x="78.1680%" y="367.50"></text></g><g><title>core::slice::sort::recurse (2 samples, 0.32%)</title><rect x="78.3912%" y="341" width="0.3155%" height="15" fill="rgb(232,15,44)"/><text x="78.6412%" y="351.50"></text></g><g><title>core::slice::sort::partition (1 samples, 0.16%)</title><rect x="78.5489%" y="325" width="0.1577%" height="15" fill="rgb(212,3,48)"/><text x="78.7989%" y="335.50"></text></g><g><title>core::slice::sort::partition_in_blocks (1 samples, 0.16%)</title><rect x="78.5489%" y="309" width="0.1577%" height="15" fill="rgb(218,128,7)"/><text x="78.7989%" y="319.50"></text></g><g><title>broccoli::tree::build::oned::bin_middle_left_right (2 samples, 0.32%)</title><rect x="78.7066%" y="405" width="0.3155%" height="15" fill="rgb(226,216,39)"/><text x="78.9566%" y="415.50"></text></g><g><title>pdqselect::insertion_sort (1 samples, 0.16%)</title><rect x="79.0221%" y="357" width="0.1577%" height="15" fill="rgb(243,47,51)"/><text x="79.2721%" y="367.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.16%)</title><rect x="79.0221%" y="341" width="0.1577%" height="15" fill="rgb(241,183,40)"/><text x="79.2721%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.32%)</title><rect x="79.4953%" y="325" width="0.3155%" height="15" fill="rgb(231,217,32)"/><text x="79.7453%" y="335.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.16%)</title><rect x="79.8107%" y="325" width="0.1577%" height="15" fill="rgb(229,61,38)"/><text x="80.0607%" y="335.50"></text></g><g><title>broccoli::tree::build::builder::Recurser&lt;T,K,S&gt;::create_non_leaf (10 samples, 1.58%)</title><rect x="78.7066%" y="437" width="1.5773%" height="15" fill="rgb(225,210,5)"/><text x="78.9566%" y="447.50"></text></g><g><title>broccoli::tree::build::builder::construct_non_leaf (10 samples, 1.58%)</title><rect x="78.7066%" y="421" width="1.5773%" height="15" fill="rgb(231,79,45)"/><text x="78.9566%" y="431.50"></text></g><g><title>pdqselect::select_by (8 samples, 1.26%)</title><rect x="79.0221%" y="405" width="1.2618%" height="15" fill="rgb(224,100,7)"/><text x="79.2721%" y="415.50"></text></g><g><title>pdqselect::quickselect (8 samples, 1.26%)</title><rect x="79.0221%" y="389" width="1.2618%" height="15" fill="rgb(241,198,18)"/><text x="79.2721%" y="399.50"></text></g><g><title>pdqselect::recurse (8 samples, 1.26%)</title><rect x="79.0221%" y="373" width="1.2618%" height="15" fill="rgb(252,97,53)"/><text x="79.2721%" y="383.50"></text></g><g><title>pdqselect::partition (7 samples, 1.10%)</title><rect x="79.1798%" y="357" width="1.1041%" height="15" fill="rgb(220,88,7)"/><text x="79.4298%" y="367.50"></text></g><g><title>pdqselect::partition_in_blocks (7 samples, 1.10%)</title><rect x="79.1798%" y="341" width="1.1041%" height="15" fill="rgb(213,176,14)"/><text x="79.4298%" y="351.50"></text></g><g><title>pdqselect::select_by::{{closure}} (2 samples, 0.32%)</title><rect x="79.9685%" y="325" width="0.3155%" height="15" fill="rgb(246,73,7)"/><text x="80.2185%" y="335.50"></text></g><g><title>broccoli::tree::build::builder::construct_non_leaf::{{closure}} (2 samples, 0.32%)</title><rect x="79.9685%" y="309" width="0.3155%" height="15" fill="rgb(245,64,36)"/><text x="80.2185%" y="319.50"></text></g><g><title>broccoli::util::compare_bots (2 samples, 0.32%)</title><rect x="79.9685%" y="293" width="0.3155%" height="15" fill="rgb(245,80,10)"/><text x="80.2185%" y="303.50"></text></g><g><title>core::slice::sort::partial_insertion_sort (1 samples, 0.16%)</title><rect x="80.2839%" y="309" width="0.1577%" height="15" fill="rgb(232,107,50)"/><text x="80.5339%" y="319.50"></text></g><g><title>broccoli::tree::build::builder::NonLeafFinisher&lt;A,T&gt;::finish (2 samples, 0.32%)</title><rect x="80.2839%" y="421" width="0.3155%" height="15" fill="rgb(253,3,0)"/><text x="80.5339%" y="431.50"></text></g><g><title>&lt;broccoli::tree::build::DefaultSorter as broccoli::tree::build::Sorter&gt;::sort (2 samples, 0.32%)</title><rect x="80.2839%" y="405" width="0.3155%" height="15" fill="rgb(212,99,53)"/><text x="80.5339%" y="415.50"></text></g><g><title>broccoli::util::sweeper_update (2 samples, 0.32%)</title><rect x="80.2839%" y="389" width="0.3155%" height="15" fill="rgb(249,111,54)"/><text x="80.5339%" y="399.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by (2 samples, 0.32%)</title><rect x="80.2839%" y="373" width="0.3155%" height="15" fill="rgb(249,55,30)"/><text x="80.5339%" y="383.50"></text></g><g><title>core::slice::sort::quicksort (2 samples, 0.32%)</title><rect x="80.2839%" y="357" width="0.3155%" height="15" fill="rgb(237,47,42)"/><text x="80.5339%" y="367.50"></text></g><g><title>core::slice::sort::recurse (2 samples, 0.32%)</title><rect x="80.2839%" y="341" width="0.3155%" height="15" fill="rgb(211,20,18)"/><text x="80.5339%" y="351.50"></text></g><g><title>core::slice::sort::recurse (2 samples, 0.32%)</title><rect x="80.2839%" y="325" width="0.3155%" height="15" fill="rgb(231,203,46)"/><text x="80.5339%" y="335.50"></text></g><g><title>core::slice::sort::partition (1 samples, 0.16%)</title><rect x="80.4416%" y="309" width="0.1577%" height="15" fill="rgb(237,142,3)"/><text x="80.6916%" y="319.50"></text></g><g><title>core::slice::sort::partition_in_blocks (1 samples, 0.16%)</title><rect x="80.4416%" y="293" width="0.1577%" height="15" fill="rgb(241,107,1)"/><text x="80.6916%" y="303.50"></text></g><g><title>axgeom::range::Range&lt;T&gt;::contains_ext (1 samples, 0.16%)</title><rect x="80.7571%" y="373" width="0.1577%" height="15" fill="rgb(229,83,13)"/><text x="81.0071%" y="383.50"></text></g><g><title>broccoli::tree::build::oned::bin_middle_left_right (6 samples, 0.95%)</title><rect x="80.5994%" y="389" width="0.9464%" height="15" fill="rgb(241,91,40)"/><text x="80.8494%" y="399.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (4 samples, 0.63%)</title><rect x="80.9148%" y="373" width="0.6309%" height="15" fill="rgb(225,3,45)"/><text x="81.1648%" y="383.50"></text></g><g><title>core::ptr::swap (3 samples, 0.47%)</title><rect x="81.0726%" y="357" width="0.4732%" height="15" fill="rgb(244,223,14)"/><text x="81.3226%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.47%)</title><rect x="81.0726%" y="341" width="0.4732%" height="15" fill="rgb(224,124,37)"/><text x="81.3226%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.16%)</title><rect x="81.5457%" y="309" width="0.1577%" height="15" fill="rgb(251,171,30)"/><text x="81.7957%" y="319.50"></text></g><g><title>pdqselect::insertion_sort (2 samples, 0.32%)</title><rect x="81.5457%" y="341" width="0.3155%" height="15" fill="rgb(236,46,54)"/><text x="81.7957%" y="351.50"></text></g><g><title>pdqselect::shift_tail (2 samples, 0.32%)</title><rect x="81.5457%" y="325" width="0.3155%" height="15" fill="rgb(245,213,5)"/><text x="81.7957%" y="335.50"></text></g><g><title>pdqselect::select_by::{{closure}} (1 samples, 0.16%)</title><rect x="81.7035%" y="309" width="0.1577%" height="15" fill="rgb(230,144,27)"/><text x="81.9535%" y="319.50"></text></g><g><title>broccoli::tree::build::builder::construct_non_leaf::{{closure}} (1 samples, 0.16%)</title><rect x="81.7035%" y="293" width="0.1577%" height="15" fill="rgb(220,86,6)"/><text x="81.9535%" y="303.50"></text></g><g><title>broccoli::util::compare_bots (1 samples, 0.16%)</title><rect x="81.7035%" y="277" width="0.1577%" height="15" fill="rgb(240,20,13)"/><text x="81.9535%" y="287.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.16%)</title><rect x="81.7035%" y="261" width="0.1577%" height="15" fill="rgb(217,89,34)"/><text x="81.9535%" y="271.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.16%)</title><rect x="82.0189%" y="309" width="0.1577%" height="15" fill="rgb(229,13,5)"/><text x="82.2689%" y="319.50"></text></g><g><title>pdqselect::partition_in_blocks (5 samples, 0.79%)</title><rect x="81.8612%" y="325" width="0.7886%" height="15" fill="rgb(244,67,35)"/><text x="82.1112%" y="335.50"></text></g><g><title>pdqselect::select_by::{{closure}} (3 samples, 0.47%)</title><rect x="82.1767%" y="309" width="0.4732%" height="15" fill="rgb(221,40,2)"/><text x="82.4267%" y="319.50"></text></g><g><title>broccoli::tree::build::builder::construct_non_leaf::{{closure}} (3 samples, 0.47%)</title><rect x="82.1767%" y="293" width="0.4732%" height="15" fill="rgb(237,157,21)"/><text x="82.4267%" y="303.50"></text></g><g><title>broccoli::util::compare_bots (3 samples, 0.47%)</title><rect x="82.1767%" y="277" width="0.4732%" height="15" fill="rgb(222,94,11)"/><text x="82.4267%" y="287.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (3 samples, 0.47%)</title><rect x="82.1767%" y="261" width="0.4732%" height="15" fill="rgb(249,113,6)"/><text x="82.4267%" y="271.50"></text></g><g><title>broccoli::tree::build::builder::Recurser&lt;T,K,S&gt;::create_non_leaf (14 samples, 2.21%)</title><rect x="80.5994%" y="421" width="2.2082%" height="15" fill="rgb(238,137,36)"/><text x="80.8494%" y="431.50">b..</text></g><g><title>broccoli::tree::build::builder::construct_non_leaf (14 samples, 2.21%)</title><rect x="80.5994%" y="405" width="2.2082%" height="15" fill="rgb(210,102,26)"/><text x="80.8494%" y="415.50">b..</text></g><g><title>pdqselect::select_by (8 samples, 1.26%)</title><rect x="81.5457%" y="389" width="1.2618%" height="15" fill="rgb(218,30,30)"/><text x="81.7957%" y="399.50"></text></g><g><title>pdqselect::quickselect (8 samples, 1.26%)</title><rect x="81.5457%" y="373" width="1.2618%" height="15" fill="rgb(214,67,26)"/><text x="81.7957%" y="383.50"></text></g><g><title>pdqselect::recurse (8 samples, 1.26%)</title><rect x="81.5457%" y="357" width="1.2618%" height="15" fill="rgb(251,9,53)"/><text x="81.7957%" y="367.50"></text></g><g><title>pdqselect::partition (6 samples, 0.95%)</title><rect x="81.8612%" y="341" width="0.9464%" height="15" fill="rgb(228,204,25)"/><text x="82.1112%" y="351.50"></text></g><g><title>pdqselect::select_by::{{closure}} (1 samples, 0.16%)</title><rect x="82.6498%" y="325" width="0.1577%" height="15" fill="rgb(207,153,8)"/><text x="82.8998%" y="335.50"></text></g><g><title>broccoli::tree::build::builder::construct_non_leaf::{{closure}} (1 samples, 0.16%)</title><rect x="82.6498%" y="309" width="0.1577%" height="15" fill="rgb(242,9,16)"/><text x="82.8998%" y="319.50"></text></g><g><title>broccoli::util::compare_bots (1 samples, 0.16%)</title><rect x="82.6498%" y="293" width="0.1577%" height="15" fill="rgb(217,211,10)"/><text x="82.8998%" y="303.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.16%)</title><rect x="82.6498%" y="277" width="0.1577%" height="15" fill="rgb(219,228,52)"/><text x="82.8998%" y="287.50"></text></g><g><title>core::slice::sort::insertion_sort (1 samples, 0.16%)</title><rect x="82.8076%" y="309" width="0.1577%" height="15" fill="rgb(231,92,29)"/><text x="83.0576%" y="319.50"></text></g><g><title>core::slice::sort::shift_tail (1 samples, 0.16%)</title><rect x="82.8076%" y="293" width="0.1577%" height="15" fill="rgb(232,8,23)"/><text x="83.0576%" y="303.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by::{{closure}} (1 samples, 0.16%)</title><rect x="82.8076%" y="277" width="0.1577%" height="15" fill="rgb(216,211,34)"/><text x="83.0576%" y="287.50"></text></g><g><title>broccoli::util::sweeper_update::{{closure}} (1 samples, 0.16%)</title><rect x="82.8076%" y="261" width="0.1577%" height="15" fill="rgb(236,151,0)"/><text x="83.0576%" y="271.50"></text></g><g><title>broccoli::util::compare_bots (1 samples, 0.16%)</title><rect x="82.8076%" y="245" width="0.1577%" height="15" fill="rgb(209,168,3)"/><text x="83.0576%" y="255.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.16%)</title><rect x="82.8076%" y="229" width="0.1577%" height="15" fill="rgb(208,129,28)"/><text x="83.0576%" y="239.50"></text></g><g><title>broccoli::tree::build::builder::NonLeafFinisher&lt;A,T&gt;::finish (2 samples, 0.32%)</title><rect x="82.8076%" y="405" width="0.3155%" height="15" fill="rgb(229,78,22)"/><text x="83.0576%" y="415.50"></text></g><g><title>&lt;broccoli::tree::build::DefaultSorter as broccoli::tree::build::Sorter&gt;::sort (2 samples, 0.32%)</title><rect x="82.8076%" y="389" width="0.3155%" height="15" fill="rgb(228,187,13)"/><text x="83.0576%" y="399.50"></text></g><g><title>broccoli::util::sweeper_update (2 samples, 0.32%)</title><rect x="82.8076%" y="373" width="0.3155%" height="15" fill="rgb(240,119,24)"/><text x="83.0576%" y="383.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by (2 samples, 0.32%)</title><rect x="82.8076%" y="357" width="0.3155%" height="15" fill="rgb(209,194,42)"/><text x="83.0576%" y="367.50"></text></g><g><title>core::slice::sort::quicksort (2 samples, 0.32%)</title><rect x="82.8076%" y="341" width="0.3155%" height="15" fill="rgb(247,200,46)"/><text x="83.0576%" y="351.50"></text></g><g><title>core::slice::sort::recurse (2 samples, 0.32%)</title><rect x="82.8076%" y="325" width="0.3155%" height="15" fill="rgb(218,76,16)"/><text x="83.0576%" y="335.50"></text></g><g><title>core::slice::sort::recurse (1 samples, 0.16%)</title><rect x="82.9653%" y="309" width="0.1577%" height="15" fill="rgb(225,21,48)"/><text x="83.2153%" y="319.50"></text></g><g><title>core::slice::sort::recurse (1 samples, 0.16%)</title><rect x="82.9653%" y="293" width="0.1577%" height="15" fill="rgb(239,223,50)"/><text x="83.2153%" y="303.50"></text></g><g><title>core::slice::sort::insertion_sort (1 samples, 0.16%)</title><rect x="82.9653%" y="277" width="0.1577%" height="15" fill="rgb(244,45,21)"/><text x="83.2153%" y="287.50"></text></g><g><title>core::slice::sort::shift_tail (1 samples, 0.16%)</title><rect x="82.9653%" y="261" width="0.1577%" height="15" fill="rgb(232,33,43)"/><text x="83.2153%" y="271.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by::{{closure}} (1 samples, 0.16%)</title><rect x="82.9653%" y="245" width="0.1577%" height="15" fill="rgb(209,8,3)"/><text x="83.2153%" y="255.50"></text></g><g><title>broccoli::util::sweeper_update::{{closure}} (1 samples, 0.16%)</title><rect x="82.9653%" y="229" width="0.1577%" height="15" fill="rgb(214,25,53)"/><text x="83.2153%" y="239.50"></text></g><g><title>broccoli::util::compare_bots (1 samples, 0.16%)</title><rect x="82.9653%" y="213" width="0.1577%" height="15" fill="rgb(254,186,54)"/><text x="83.2153%" y="223.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.16%)</title><rect x="82.9653%" y="197" width="0.1577%" height="15" fill="rgb(208,174,49)"/><text x="83.2153%" y="207.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.16%)</title><rect x="83.4385%" y="357" width="0.1577%" height="15" fill="rgb(233,191,51)"/><text x="83.6885%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.16%)</title><rect x="83.4385%" y="341" width="0.1577%" height="15" fill="rgb(222,134,10)"/><text x="83.6885%" y="351.50"></text></g><g><title>broccoli::tree::build::oned::bin_middle_left_right (6 samples, 0.95%)</title><rect x="83.1230%" y="373" width="0.9464%" height="15" fill="rgb(230,226,20)"/><text x="83.3730%" y="383.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (3 samples, 0.47%)</title><rect x="83.5962%" y="357" width="0.4732%" height="15" fill="rgb(251,111,25)"/><text x="83.8462%" y="367.50"></text></g><g><title>core::ptr::swap (3 samples, 0.47%)</title><rect x="83.5962%" y="341" width="0.4732%" height="15" fill="rgb(224,40,46)"/><text x="83.8462%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.47%)</title><rect x="83.5962%" y="325" width="0.4732%" height="15" fill="rgb(236,108,47)"/><text x="83.8462%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.32%)</title><rect x="84.5426%" y="293" width="0.3155%" height="15" fill="rgb(234,93,0)"/><text x="84.7926%" y="303.50"></text></g><g><title>core::ptr::swap (1 samples, 0.16%)</title><rect x="84.8580%" y="293" width="0.1577%" height="15" fill="rgb(224,213,32)"/><text x="85.1080%" y="303.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.16%)</title><rect x="84.8580%" y="277" width="0.1577%" height="15" fill="rgb(251,11,48)"/><text x="85.1080%" y="287.50"></text></g><g><title>broccoli::tree::build::builder::Recurser&lt;T,K,S&gt;::create_non_leaf (16 samples, 2.52%)</title><rect x="83.1230%" y="405" width="2.5237%" height="15" fill="rgb(236,173,5)"/><text x="83.3730%" y="415.50">br..</text></g><g><title>broccoli::tree::build::builder::construct_non_leaf (16 samples, 2.52%)</title><rect x="83.1230%" y="389" width="2.5237%" height="15" fill="rgb(230,95,12)"/><text x="83.3730%" y="399.50">br..</text></g><g><title>pdqselect::select_by (10 samples, 1.58%)</title><rect x="84.0694%" y="373" width="1.5773%" height="15" fill="rgb(232,209,1)"/><text x="84.3194%" y="383.50"></text></g><g><title>pdqselect::quickselect (10 samples, 1.58%)</title><rect x="84.0694%" y="357" width="1.5773%" height="15" fill="rgb(232,6,1)"/><text x="84.3194%" y="367.50"></text></g><g><title>pdqselect::recurse (10 samples, 1.58%)</title><rect x="84.0694%" y="341" width="1.5773%" height="15" fill="rgb(210,224,50)"/><text x="84.3194%" y="351.50"></text></g><g><title>pdqselect::partition (9 samples, 1.42%)</title><rect x="84.2271%" y="325" width="1.4196%" height="15" fill="rgb(228,127,35)"/><text x="84.4771%" y="335.50"></text></g><g><title>pdqselect::partition_in_blocks (9 samples, 1.42%)</title><rect x="84.2271%" y="309" width="1.4196%" height="15" fill="rgb(245,102,45)"/><text x="84.4771%" y="319.50"></text></g><g><title>pdqselect::select_by::{{closure}} (4 samples, 0.63%)</title><rect x="85.0158%" y="293" width="0.6309%" height="15" fill="rgb(214,1,49)"/><text x="85.2658%" y="303.50"></text></g><g><title>broccoli::tree::build::builder::construct_non_leaf::{{closure}} (4 samples, 0.63%)</title><rect x="85.0158%" y="277" width="0.6309%" height="15" fill="rgb(226,163,40)"/><text x="85.2658%" y="287.50"></text></g><g><title>broccoli::util::compare_bots (4 samples, 0.63%)</title><rect x="85.0158%" y="261" width="0.6309%" height="15" fill="rgb(239,212,28)"/><text x="85.2658%" y="271.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (3 samples, 0.47%)</title><rect x="85.1735%" y="245" width="0.4732%" height="15" fill="rgb(220,20,13)"/><text x="85.4235%" y="255.50"></text></g><g><title>core::slice::sort::insertion_sort (1 samples, 0.16%)</title><rect x="85.6467%" y="293" width="0.1577%" height="15" fill="rgb(210,164,35)"/><text x="85.8967%" y="303.50"></text></g><g><title>core::slice::sort::shift_tail (1 samples, 0.16%)</title><rect x="85.6467%" y="277" width="0.1577%" height="15" fill="rgb(248,109,41)"/><text x="85.8967%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.16%)</title><rect x="85.6467%" y="261" width="0.1577%" height="15" fill="rgb(238,23,50)"/><text x="85.8967%" y="271.50"></text></g><g><title>&lt;broccoli::tree::build::DefaultSorter as broccoli::tree::build::Sorter&gt;::sort (2 samples, 0.32%)</title><rect x="85.6467%" y="373" width="0.3155%" height="15" fill="rgb(211,48,49)"/><text x="85.8967%" y="383.50"></text></g><g><title>broccoli::util::sweeper_update (2 samples, 0.32%)</title><rect x="85.6467%" y="357" width="0.3155%" height="15" fill="rgb(223,36,21)"/><text x="85.8967%" y="367.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by (2 samples, 0.32%)</title><rect x="85.6467%" y="341" width="0.3155%" height="15" fill="rgb(207,123,46)"/><text x="85.8967%" y="351.50"></text></g><g><title>core::slice::sort::quicksort (2 samples, 0.32%)</title><rect x="85.6467%" y="325" width="0.3155%" height="15" fill="rgb(240,218,32)"/><text x="85.8967%" y="335.50"></text></g><g><title>core::slice::sort::recurse (2 samples, 0.32%)</title><rect x="85.6467%" y="309" width="0.3155%" height="15" fill="rgb(252,5,43)"/><text x="85.8967%" y="319.50"></text></g><g><title>core::slice::sort::partition (1 samples, 0.16%)</title><rect x="85.8044%" y="293" width="0.1577%" height="15" fill="rgb(252,84,19)"/><text x="86.0544%" y="303.50"></text></g><g><title>core::slice::sort::partition_in_blocks (1 samples, 0.16%)</title><rect x="85.8044%" y="277" width="0.1577%" height="15" fill="rgb(243,152,39)"/><text x="86.0544%" y="287.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.16%)</title><rect x="85.8044%" y="261" width="0.1577%" height="15" fill="rgb(234,160,15)"/><text x="86.0544%" y="271.50"></text></g><g><title>broccoli::tree::build::builder::NonLeafFinisher&lt;A,T&gt;::finish (3 samples, 0.47%)</title><rect x="85.6467%" y="389" width="0.4732%" height="15" fill="rgb(237,34,20)"/><text x="85.8967%" y="399.50"></text></g><g><title>broccoli::tree::build::builder::create_cont (1 samples, 0.16%)</title><rect x="85.9621%" y="373" width="0.1577%" height="15" fill="rgb(229,97,13)"/><text x="86.2121%" y="383.50"></text></g><g><title>axgeom::range::Range&lt;T&gt;::contains_ext (1 samples, 0.16%)</title><rect x="86.2776%" y="341" width="0.1577%" height="15" fill="rgb(234,71,50)"/><text x="86.5276%" y="351.50"></text></g><g><title>broccoli::tree::build::oned::bin_middle_left_right (6 samples, 0.95%)</title><rect x="86.1199%" y="357" width="0.9464%" height="15" fill="rgb(253,155,4)"/><text x="86.3699%" y="367.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (4 samples, 0.63%)</title><rect x="86.4353%" y="341" width="0.6309%" height="15" fill="rgb(222,185,37)"/><text x="86.6853%" y="351.50"></text></g><g><title>core::ptr::swap (2 samples, 0.32%)</title><rect x="86.7508%" y="325" width="0.3155%" height="15" fill="rgb(251,177,13)"/><text x="87.0008%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.32%)</title><rect x="86.7508%" y="309" width="0.3155%" height="15" fill="rgb(250,179,40)"/><text x="87.0008%" y="319.50"></text></g><g><title>broccoli::tree::build::builder::Recurser&lt;T,K,S&gt;::create_non_leaf (10 samples, 1.58%)</title><rect x="86.1199%" y="389" width="1.5773%" height="15" fill="rgb(242,44,2)"/><text x="86.3699%" y="399.50"></text></g><g><title>broccoli::tree::build::builder::construct_non_leaf (10 samples, 1.58%)</title><rect x="86.1199%" y="373" width="1.5773%" height="15" fill="rgb(216,177,13)"/><text x="86.3699%" y="383.50"></text></g><g><title>pdqselect::select_by (4 samples, 0.63%)</title><rect x="87.0662%" y="357" width="0.6309%" height="15" fill="rgb(216,106,43)"/><text x="87.3162%" y="367.50"></text></g><g><title>pdqselect::quickselect (4 samples, 0.63%)</title><rect x="87.0662%" y="341" width="0.6309%" height="15" fill="rgb(216,183,2)"/><text x="87.3162%" y="351.50"></text></g><g><title>pdqselect::recurse (4 samples, 0.63%)</title><rect x="87.0662%" y="325" width="0.6309%" height="15" fill="rgb(249,75,3)"/><text x="87.3162%" y="335.50"></text></g><g><title>pdqselect::partition (3 samples, 0.47%)</title><rect x="87.2240%" y="309" width="0.4732%" height="15" fill="rgb(219,67,39)"/><text x="87.4740%" y="319.50"></text></g><g><title>pdqselect::partition_in_blocks (1 samples, 0.16%)</title><rect x="87.5394%" y="293" width="0.1577%" height="15" fill="rgb(253,228,2)"/><text x="87.7894%" y="303.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.16%)</title><rect x="87.6972%" y="245" width="0.1577%" height="15" fill="rgb(235,138,27)"/><text x="87.9472%" y="255.50"></text></g><g><title>core::slice::sort::insertion_sort (2 samples, 0.32%)</title><rect x="87.6972%" y="277" width="0.3155%" height="15" fill="rgb(236,97,51)"/><text x="87.9472%" y="287.50"></text></g><g><title>core::slice::sort::shift_tail (2 samples, 0.32%)</title><rect x="87.6972%" y="261" width="0.3155%" height="15" fill="rgb(240,80,30)"/><text x="87.9472%" y="271.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.16%)</title><rect x="87.8549%" y="245" width="0.1577%" height="15" fill="rgb(230,178,19)"/><text x="88.1049%" y="255.50"></text></g><g><title>&lt;core::slice::sort::CopyOnDrop&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.16%)</title><rect x="87.8549%" y="229" width="0.1577%" height="15" fill="rgb(210,190,27)"/><text x="88.1049%" y="239.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.16%)</title><rect x="87.8549%" y="213" width="0.1577%" height="15" fill="rgb(222,107,31)"/><text x="88.1049%" y="223.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.16%)</title><rect x="88.1703%" y="261" width="0.1577%" height="15" fill="rgb(216,127,34)"/><text x="88.4203%" y="271.50"></text></g><g><title>core::ptr::swap (1 samples, 0.16%)</title><rect x="88.1703%" y="245" width="0.1577%" height="15" fill="rgb(234,116,52)"/><text x="88.4203%" y="255.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.16%)</title><rect x="88.1703%" y="229" width="0.1577%" height="15" fill="rgb(222,124,15)"/><text x="88.4203%" y="239.50"></text></g><g><title>broccoli::tree::build::builder::NonLeafFinisher&lt;A,T&gt;::finish (6 samples, 0.95%)</title><rect x="87.6972%" y="373" width="0.9464%" height="15" fill="rgb(231,179,28)"/><text x="87.9472%" y="383.50"></text></g><g><title>&lt;broccoli::tree::build::DefaultSorter as broccoli::tree::build::Sorter&gt;::sort (6 samples, 0.95%)</title><rect x="87.6972%" y="357" width="0.9464%" height="15" fill="rgb(226,93,45)"/><text x="87.9472%" y="367.50"></text></g><g><title>broccoli::util::sweeper_update (6 samples, 0.95%)</title><rect x="87.6972%" y="341" width="0.9464%" height="15" fill="rgb(215,8,51)"/><text x="87.9472%" y="351.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by (6 samples, 0.95%)</title><rect x="87.6972%" y="325" width="0.9464%" height="15" fill="rgb(223,106,5)"/><text x="87.9472%" y="335.50"></text></g><g><title>core::slice::sort::quicksort (6 samples, 0.95%)</title><rect x="87.6972%" y="309" width="0.9464%" height="15" fill="rgb(250,191,5)"/><text x="87.9472%" y="319.50"></text></g><g><title>core::slice::sort::recurse (6 samples, 0.95%)</title><rect x="87.6972%" y="293" width="0.9464%" height="15" fill="rgb(242,132,44)"/><text x="87.9472%" y="303.50"></text></g><g><title>core::slice::sort::partition (4 samples, 0.63%)</title><rect x="88.0126%" y="277" width="0.6309%" height="15" fill="rgb(251,152,29)"/><text x="88.2626%" y="287.50"></text></g><g><title>core::slice::sort::partition_in_blocks (2 samples, 0.32%)</title><rect x="88.3281%" y="261" width="0.3155%" height="15" fill="rgb(218,179,5)"/><text x="88.5781%" y="271.50"></text></g><g><title>core::ptr::swap (1 samples, 0.16%)</title><rect x="88.4858%" y="245" width="0.1577%" height="15" fill="rgb(227,67,19)"/><text x="88.7358%" y="255.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.16%)</title><rect x="88.4858%" y="229" width="0.1577%" height="15" fill="rgb(233,119,31)"/><text x="88.7358%" y="239.50"></text></g><g><title>broccoli::tree::build::oned::bin_middle_left_right (4 samples, 0.63%)</title><rect x="88.6435%" y="341" width="0.6309%" height="15" fill="rgb(241,120,22)"/><text x="88.8935%" y="351.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (2 samples, 0.32%)</title><rect x="88.9590%" y="325" width="0.3155%" height="15" fill="rgb(224,102,30)"/><text x="89.2090%" y="335.50"></text></g><g><title>core::ptr::swap (2 samples, 0.32%)</title><rect x="88.9590%" y="309" width="0.3155%" height="15" fill="rgb(210,164,37)"/><text x="89.2090%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.32%)</title><rect x="88.9590%" y="293" width="0.3155%" height="15" fill="rgb(226,191,16)"/><text x="89.2090%" y="303.50"></text></g><g><title>pdqselect::choose_pivot (2 samples, 0.32%)</title><rect x="89.4322%" y="293" width="0.3155%" height="15" fill="rgb(214,40,45)"/><text x="89.6822%" y="303.50"></text></g><g><title>pdqselect::choose_pivot::{{closure}} (2 samples, 0.32%)</title><rect x="89.4322%" y="277" width="0.3155%" height="15" fill="rgb(244,29,26)"/><text x="89.6822%" y="287.50"></text></g><g><title>pdqselect::choose_pivot::{{closure}} (2 samples, 0.32%)</title><rect x="89.4322%" y="261" width="0.3155%" height="15" fill="rgb(216,16,5)"/><text x="89.6822%" y="271.50"></text></g><g><title>pdqselect::select_by::{{closure}} (2 samples, 0.32%)</title><rect x="89.4322%" y="245" width="0.3155%" height="15" fill="rgb(249,76,35)"/><text x="89.6822%" y="255.50"></text></g><g><title>broccoli::tree::build::builder::construct_non_leaf::{{closure}} (2 samples, 0.32%)</title><rect x="89.4322%" y="229" width="0.3155%" height="15" fill="rgb(207,11,44)"/><text x="89.6822%" y="239.50"></text></g><g><title>broccoli::util::compare_bots (2 samples, 0.32%)</title><rect x="89.4322%" y="213" width="0.3155%" height="15" fill="rgb(228,190,49)"/><text x="89.6822%" y="223.50"></text></g><g><title>pdqselect::insertion_sort (1 samples, 0.16%)</title><rect x="89.7476%" y="293" width="0.1577%" height="15" fill="rgb(214,173,12)"/><text x="89.9976%" y="303.50"></text></g><g><title>pdqselect::shift_tail (1 samples, 0.16%)</title><rect x="89.7476%" y="277" width="0.1577%" height="15" fill="rgb(218,26,35)"/><text x="89.9976%" y="287.50"></text></g><g><title>pdqselect::select_by::{{closure}} (1 samples, 0.16%)</title><rect x="89.7476%" y="261" width="0.1577%" height="15" fill="rgb(220,200,19)"/><text x="89.9976%" y="271.50"></text></g><g><title>broccoli::tree::build::builder::construct_non_leaf::{{closure}} (1 samples, 0.16%)</title><rect x="89.7476%" y="245" width="0.1577%" height="15" fill="rgb(239,95,49)"/><text x="89.9976%" y="255.50"></text></g><g><title>broccoli::util::compare_bots (1 samples, 0.16%)</title><rect x="89.7476%" y="229" width="0.1577%" height="15" fill="rgb(235,85,53)"/><text x="89.9976%" y="239.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.16%)</title><rect x="89.7476%" y="213" width="0.1577%" height="15" fill="rgb(233,133,31)"/><text x="89.9976%" y="223.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.16%)</title><rect x="90.0631%" y="277" width="0.1577%" height="15" fill="rgb(218,25,20)"/><text x="90.3131%" y="287.50"></text></g><g><title>core::ptr::swap (1 samples, 0.16%)</title><rect x="90.0631%" y="261" width="0.1577%" height="15" fill="rgb(252,210,38)"/><text x="90.3131%" y="271.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.16%)</title><rect x="90.0631%" y="245" width="0.1577%" height="15" fill="rgb(242,134,21)"/><text x="90.3131%" y="255.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.16%)</title><rect x="90.3785%" y="261" width="0.1577%" height="15" fill="rgb(213,28,48)"/><text x="90.6285%" y="271.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (4 samples, 0.63%)</title><rect x="90.5363%" y="261" width="0.6309%" height="15" fill="rgb(250,196,2)"/><text x="90.7863%" y="271.50"></text></g><g><title>broccoli::tree::build::builder::Recurser&lt;T,K,S&gt;::create_non_leaf (17 samples, 2.68%)</title><rect x="88.6435%" y="373" width="2.6814%" height="15" fill="rgb(227,5,17)"/><text x="88.8935%" y="383.50">br..</text></g><g><title>broccoli::tree::build::builder::construct_non_leaf (17 samples, 2.68%)</title><rect x="88.6435%" y="357" width="2.6814%" height="15" fill="rgb(221,226,24)"/><text x="88.8935%" y="367.50">br..</text></g><g><title>pdqselect::select_by (13 samples, 2.05%)</title><rect x="89.2744%" y="341" width="2.0505%" height="15" fill="rgb(211,5,48)"/><text x="89.5244%" y="351.50">p..</text></g><g><title>pdqselect::quickselect (13 samples, 2.05%)</title><rect x="89.2744%" y="325" width="2.0505%" height="15" fill="rgb(219,150,6)"/><text x="89.5244%" y="335.50">p..</text></g><g><title>pdqselect::recurse (13 samples, 2.05%)</title><rect x="89.2744%" y="309" width="2.0505%" height="15" fill="rgb(251,46,16)"/><text x="89.5244%" y="319.50">p..</text></g><g><title>pdqselect::partition (9 samples, 1.42%)</title><rect x="89.9054%" y="293" width="1.4196%" height="15" fill="rgb(220,204,40)"/><text x="90.1554%" y="303.50"></text></g><g><title>pdqselect::partition_in_blocks (7 samples, 1.10%)</title><rect x="90.2208%" y="277" width="1.1041%" height="15" fill="rgb(211,85,2)"/><text x="90.4708%" y="287.50"></text></g><g><title>core::ptr::swap (1 samples, 0.16%)</title><rect x="91.1672%" y="261" width="0.1577%" height="15" fill="rgb(229,17,7)"/><text x="91.4172%" y="271.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.16%)</title><rect x="91.1672%" y="245" width="0.1577%" height="15" fill="rgb(239,72,28)"/><text x="91.4172%" y="255.50"></text></g><g><title>broccoli::tree::build::builder::NonLeafFinisher&lt;A,T&gt;::finish (2 samples, 0.32%)</title><rect x="91.3249%" y="357" width="0.3155%" height="15" fill="rgb(230,47,54)"/><text x="91.5749%" y="367.50"></text></g><g><title>&lt;broccoli::tree::build::DefaultSorter as broccoli::tree::build::Sorter&gt;::sort (2 samples, 0.32%)</title><rect x="91.3249%" y="341" width="0.3155%" height="15" fill="rgb(214,50,8)"/><text x="91.5749%" y="351.50"></text></g><g><title>broccoli::util::sweeper_update (2 samples, 0.32%)</title><rect x="91.3249%" y="325" width="0.3155%" height="15" fill="rgb(216,198,43)"/><text x="91.5749%" y="335.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by (2 samples, 0.32%)</title><rect x="91.3249%" y="309" width="0.3155%" height="15" fill="rgb(234,20,35)"/><text x="91.5749%" y="319.50"></text></g><g><title>core::slice::sort::quicksort (2 samples, 0.32%)</title><rect x="91.3249%" y="293" width="0.3155%" height="15" fill="rgb(254,45,19)"/><text x="91.5749%" y="303.50"></text></g><g><title>core::slice::sort::recurse (2 samples, 0.32%)</title><rect x="91.3249%" y="277" width="0.3155%" height="15" fill="rgb(219,14,44)"/><text x="91.5749%" y="287.50"></text></g><g><title>core::slice::sort::insertion_sort (2 samples, 0.32%)</title><rect x="91.3249%" y="261" width="0.3155%" height="15" fill="rgb(217,220,26)"/><text x="91.5749%" y="271.50"></text></g><g><title>core::slice::sort::shift_tail (2 samples, 0.32%)</title><rect x="91.3249%" y="245" width="0.3155%" height="15" fill="rgb(213,158,28)"/><text x="91.5749%" y="255.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.32%)</title><rect x="91.3249%" y="229" width="0.3155%" height="15" fill="rgb(252,51,52)"/><text x="91.5749%" y="239.50"></text></g><g><title>&lt;core::slice::sort::CopyOnDrop&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.32%)</title><rect x="91.3249%" y="213" width="0.3155%" height="15" fill="rgb(246,89,16)"/><text x="91.5749%" y="223.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.32%)</title><rect x="91.3249%" y="197" width="0.3155%" height="15" fill="rgb(216,158,49)"/><text x="91.5749%" y="207.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.16%)</title><rect x="91.9558%" y="309" width="0.1577%" height="15" fill="rgb(236,107,19)"/><text x="92.2058%" y="319.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.16%)</title><rect x="91.9558%" y="293" width="0.1577%" height="15" fill="rgb(228,185,30)"/><text x="92.2058%" y="303.50"></text></g><g><title>broccoli::tree::build::oned::bin_middle_left_right (5 samples, 0.79%)</title><rect x="91.6404%" y="325" width="0.7886%" height="15" fill="rgb(246,134,8)"/><text x="91.8904%" y="335.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (2 samples, 0.32%)</title><rect x="92.1136%" y="309" width="0.3155%" height="15" fill="rgb(214,143,50)"/><text x="92.3636%" y="319.50"></text></g><g><title>core::ptr::swap (1 samples, 0.16%)</title><rect x="92.2713%" y="293" width="0.1577%" height="15" fill="rgb(228,75,8)"/><text x="92.5213%" y="303.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.16%)</title><rect x="92.2713%" y="277" width="0.1577%" height="15" fill="rgb(207,175,4)"/><text x="92.5213%" y="287.50"></text></g><g><title>pdqselect::choose_pivot (1 samples, 0.16%)</title><rect x="92.5868%" y="277" width="0.1577%" height="15" fill="rgb(205,108,24)"/><text x="92.8368%" y="287.50"></text></g><g><title>pdqselect::choose_pivot::{{closure}} (1 samples, 0.16%)</title><rect x="92.5868%" y="261" width="0.1577%" height="15" fill="rgb(244,120,49)"/><text x="92.8368%" y="271.50"></text></g><g><title>pdqselect::choose_pivot::{{closure}} (1 samples, 0.16%)</title><rect x="92.5868%" y="245" width="0.1577%" height="15" fill="rgb(223,47,38)"/><text x="92.8368%" y="255.50"></text></g><g><title>pdqselect::choose_pivot::{{closure}} (1 samples, 0.16%)</title><rect x="92.5868%" y="229" width="0.1577%" height="15" fill="rgb(229,179,11)"/><text x="92.8368%" y="239.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.16%)</title><rect x="92.7445%" y="261" width="0.1577%" height="15" fill="rgb(231,122,1)"/><text x="92.9945%" y="271.50"></text></g><g><title>pdqselect::insertion_sort (4 samples, 0.63%)</title><rect x="92.7445%" y="277" width="0.6309%" height="15" fill="rgb(245,119,9)"/><text x="92.9945%" y="287.50"></text></g><g><title>pdqselect::shift_tail (3 samples, 0.47%)</title><rect x="92.9022%" y="261" width="0.4732%" height="15" fill="rgb(241,163,25)"/><text x="93.1522%" y="271.50"></text></g><g><title>pdqselect::select_by::{{closure}} (2 samples, 0.32%)</title><rect x="93.0599%" y="245" width="0.3155%" height="15" fill="rgb(217,214,3)"/><text x="93.3099%" y="255.50"></text></g><g><title>broccoli::tree::build::builder::construct_non_leaf::{{closure}} (2 samples, 0.32%)</title><rect x="93.0599%" y="229" width="0.3155%" height="15" fill="rgb(240,86,28)"/><text x="93.3099%" y="239.50"></text></g><g><title>broccoli::util::compare_bots (2 samples, 0.32%)</title><rect x="93.0599%" y="213" width="0.3155%" height="15" fill="rgb(215,47,9)"/><text x="93.3099%" y="223.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (2 samples, 0.32%)</title><rect x="93.0599%" y="197" width="0.3155%" height="15" fill="rgb(252,25,45)"/><text x="93.3099%" y="207.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.16%)</title><rect x="93.8486%" y="261" width="0.1577%" height="15" fill="rgb(251,164,9)"/><text x="94.0986%" y="271.50"></text></g><g><title>core::ptr::swap (1 samples, 0.16%)</title><rect x="93.8486%" y="245" width="0.1577%" height="15" fill="rgb(233,194,0)"/><text x="94.0986%" y="255.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.16%)</title><rect x="93.8486%" y="229" width="0.1577%" height="15" fill="rgb(249,111,24)"/><text x="94.0986%" y="239.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.16%)</title><rect x="94.4795%" y="245" width="0.1577%" height="15" fill="rgb(250,223,3)"/><text x="94.7295%" y="255.50"></text></g><g><title>broccoli::tree::build::builder::Recurser&lt;T,K,S&gt;::create_non_leaf (20 samples, 3.15%)</title><rect x="91.6404%" y="357" width="3.1546%" height="15" fill="rgb(236,178,37)"/><text x="91.8904%" y="367.50">bro..</text></g><g><title>broccoli::tree::build::builder::construct_non_leaf (20 samples, 3.15%)</title><rect x="91.6404%" y="341" width="3.1546%" height="15" fill="rgb(241,158,50)"/><text x="91.8904%" y="351.50">bro..</text></g><g><title>pdqselect::select_by (15 samples, 2.37%)</title><rect x="92.4290%" y="325" width="2.3659%" height="15" fill="rgb(213,121,41)"/><text x="92.6790%" y="335.50">pd..</text></g><g><title>pdqselect::quickselect (15 samples, 2.37%)</title><rect x="92.4290%" y="309" width="2.3659%" height="15" fill="rgb(240,92,3)"/><text x="92.6790%" y="319.50">pd..</text></g><g><title>pdqselect::recurse (15 samples, 2.37%)</title><rect x="92.4290%" y="293" width="2.3659%" height="15" fill="rgb(205,123,3)"/><text x="92.6790%" y="303.50">pd..</text></g><g><title>pdqselect::partition (9 samples, 1.42%)</title><rect x="93.3754%" y="277" width="1.4196%" height="15" fill="rgb(205,97,47)"/><text x="93.6254%" y="287.50"></text></g><g><title>pdqselect::partition_in_blocks (5 samples, 0.79%)</title><rect x="94.0063%" y="261" width="0.7886%" height="15" fill="rgb(247,152,14)"/><text x="94.2563%" y="271.50"></text></g><g><title>pdqselect::select_by::{{closure}} (1 samples, 0.16%)</title><rect x="94.6372%" y="245" width="0.1577%" height="15" fill="rgb(248,195,53)"/><text x="94.8872%" y="255.50"></text></g><g><title>broccoli::tree::build::builder::construct_non_leaf::{{closure}} (1 samples, 0.16%)</title><rect x="94.6372%" y="229" width="0.1577%" height="15" fill="rgb(226,201,16)"/><text x="94.8872%" y="239.50"></text></g><g><title>broccoli::util::compare_bots (1 samples, 0.16%)</title><rect x="94.6372%" y="213" width="0.1577%" height="15" fill="rgb(205,98,0)"/><text x="94.8872%" y="223.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.16%)</title><rect x="94.6372%" y="197" width="0.1577%" height="15" fill="rgb(214,191,48)"/><text x="94.8872%" y="207.50"></text></g><g><title>core::slice::sort::choose_pivot (2 samples, 0.32%)</title><rect x="94.9527%" y="245" width="0.3155%" height="15" fill="rgb(237,112,39)"/><text x="95.2027%" y="255.50"></text></g><g><title>core::slice::sort::choose_pivot::{{closure}} (2 samples, 0.32%)</title><rect x="94.9527%" y="229" width="0.3155%" height="15" fill="rgb(247,203,27)"/><text x="95.2027%" y="239.50"></text></g><g><title>core::slice::sort::choose_pivot::{{closure}} (2 samples, 0.32%)</title><rect x="94.9527%" y="213" width="0.3155%" height="15" fill="rgb(235,124,28)"/><text x="95.2027%" y="223.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by::{{closure}} (1 samples, 0.16%)</title><rect x="95.1104%" y="197" width="0.1577%" height="15" fill="rgb(208,207,46)"/><text x="95.3604%" y="207.50"></text></g><g><title>broccoli::util::sweeper_update::{{closure}} (1 samples, 0.16%)</title><rect x="95.1104%" y="181" width="0.1577%" height="15" fill="rgb(234,176,4)"/><text x="95.3604%" y="191.50"></text></g><g><title>broccoli::util::compare_bots (1 samples, 0.16%)</title><rect x="95.1104%" y="165" width="0.1577%" height="15" fill="rgb(230,133,28)"/><text x="95.3604%" y="175.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.16%)</title><rect x="95.1104%" y="149" width="0.1577%" height="15" fill="rgb(211,137,40)"/><text x="95.3604%" y="159.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.16%)</title><rect x="95.2681%" y="229" width="0.1577%" height="15" fill="rgb(254,35,13)"/><text x="95.5181%" y="239.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.32%)</title><rect x="95.5836%" y="213" width="0.3155%" height="15" fill="rgb(225,49,51)"/><text x="95.8336%" y="223.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.32%)</title><rect x="95.8991%" y="213" width="0.3155%" height="15" fill="rgb(251,10,15)"/><text x="96.1491%" y="223.50"></text></g><g><title>&lt;core::slice::sort::CopyOnDrop&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.32%)</title><rect x="95.8991%" y="197" width="0.3155%" height="15" fill="rgb(228,207,15)"/><text x="96.1491%" y="207.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.32%)</title><rect x="95.8991%" y="181" width="0.3155%" height="15" fill="rgb(241,99,19)"/><text x="96.1491%" y="191.50"></text></g><g><title>core::slice::sort::insertion_sort (7 samples, 1.10%)</title><rect x="95.2681%" y="245" width="1.1041%" height="15" fill="rgb(207,104,49)"/><text x="95.5181%" y="255.50"></text></g><g><title>core::slice::sort::shift_tail (6 samples, 0.95%)</title><rect x="95.4259%" y="229" width="0.9464%" height="15" fill="rgb(234,99,18)"/><text x="95.6759%" y="239.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by::{{closure}} (1 samples, 0.16%)</title><rect x="96.2145%" y="213" width="0.1577%" height="15" fill="rgb(213,191,49)"/><text x="96.4645%" y="223.50"></text></g><g><title>broccoli::util::sweeper_update::{{closure}} (1 samples, 0.16%)</title><rect x="96.2145%" y="197" width="0.1577%" height="15" fill="rgb(210,226,19)"/><text x="96.4645%" y="207.50"></text></g><g><title>broccoli::util::compare_bots (1 samples, 0.16%)</title><rect x="96.2145%" y="181" width="0.1577%" height="15" fill="rgb(229,97,18)"/><text x="96.4645%" y="191.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1 samples, 0.16%)</title><rect x="96.2145%" y="165" width="0.1577%" height="15" fill="rgb(211,167,15)"/><text x="96.4645%" y="175.50"></text></g><g><title>core::slice::sort::partition (3 samples, 0.47%)</title><rect x="96.3722%" y="245" width="0.4732%" height="15" fill="rgb(210,169,34)"/><text x="96.6222%" y="255.50"></text></g><g><title>core::slice::sort::partition_in_blocks (1 samples, 0.16%)</title><rect x="96.6877%" y="229" width="0.1577%" height="15" fill="rgb(241,121,31)"/><text x="96.9377%" y="239.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.32%)</title><rect x="96.8454%" y="213" width="0.3155%" height="15" fill="rgb(232,40,11)"/><text x="97.0954%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="97.0032%" y="197" width="0.1577%" height="15" fill="rgb(205,86,26)"/><text x="97.2532%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="97.0032%" y="181" width="0.1577%" height="15" fill="rgb(231,126,28)"/><text x="97.2532%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="97.0032%" y="165" width="0.1577%" height="15" fill="rgb(219,221,18)"/><text x="97.2532%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="97.0032%" y="149" width="0.1577%" height="15" fill="rgb(211,40,0)"/><text x="97.2532%" y="159.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="97.0032%" y="133" width="0.1577%" height="15" fill="rgb(239,85,43)"/><text x="97.2532%" y="143.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="97.0032%" y="117" width="0.1577%" height="15" fill="rgb(231,55,21)"/><text x="97.2532%" y="127.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="97.0032%" y="101" width="0.1577%" height="15" fill="rgb(225,184,43)"/><text x="97.2532%" y="111.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="97.0032%" y="85" width="0.1577%" height="15" fill="rgb(251,158,41)"/><text x="97.2532%" y="95.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="97.0032%" y="69" width="0.1577%" height="15" fill="rgb(234,159,37)"/><text x="97.2532%" y="79.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="97.0032%" y="53" width="0.1577%" height="15" fill="rgb(216,204,22)"/><text x="97.2532%" y="63.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="97.0032%" y="37" width="0.1577%" height="15" fill="rgb(214,17,3)"/><text x="97.2532%" y="47.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.47%)</title><rect x="97.1609%" y="197" width="0.4732%" height="15" fill="rgb(212,111,17)"/><text x="97.4109%" y="207.50"></text></g><g><title>&lt;core::slice::sort::CopyOnDrop&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.47%)</title><rect x="97.1609%" y="181" width="0.4732%" height="15" fill="rgb(221,157,24)"/><text x="97.4109%" y="191.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.47%)</title><rect x="97.1609%" y="165" width="0.4732%" height="15" fill="rgb(252,16,13)"/><text x="97.4109%" y="175.50"></text></g><g><title>&lt;broccoli::tree::build::DefaultSorter as broccoli::tree::build::Sorter&gt;::sort (20 samples, 3.15%)</title><rect x="94.7950%" y="325" width="3.1546%" height="15" fill="rgb(221,62,2)"/><text x="95.0450%" y="335.50">&lt;br..</text></g><g><title>broccoli::util::sweeper_update (20 samples, 3.15%)</title><rect x="94.7950%" y="309" width="3.1546%" height="15" fill="rgb(247,87,22)"/><text x="95.0450%" y="319.50">bro..</text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by (20 samples, 3.15%)</title><rect x="94.7950%" y="293" width="3.1546%" height="15" fill="rgb(215,73,9)"/><text x="95.0450%" y="303.50">cor..</text></g><g><title>core::slice::sort::quicksort (20 samples, 3.15%)</title><rect x="94.7950%" y="277" width="3.1546%" height="15" fill="rgb(207,175,33)"/><text x="95.0450%" y="287.50">cor..</text></g><g><title>core::slice::sort::recurse (20 samples, 3.15%)</title><rect x="94.7950%" y="261" width="3.1546%" height="15" fill="rgb(243,129,54)"/><text x="95.0450%" y="271.50">cor..</text></g><g><title>core::slice::sort::recurse (7 samples, 1.10%)</title><rect x="96.8454%" y="245" width="1.1041%" height="15" fill="rgb(227,119,45)"/><text x="97.0954%" y="255.50"></text></g><g><title>core::slice::sort::insertion_sort (7 samples, 1.10%)</title><rect x="96.8454%" y="229" width="1.1041%" height="15" fill="rgb(205,109,36)"/><text x="97.0954%" y="239.50"></text></g><g><title>core::slice::sort::shift_tail (5 samples, 0.79%)</title><rect x="97.1609%" y="213" width="0.7886%" height="15" fill="rgb(205,6,39)"/><text x="97.4109%" y="223.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by::{{closure}} (2 samples, 0.32%)</title><rect x="97.6341%" y="197" width="0.3155%" height="15" fill="rgb(221,32,16)"/><text x="97.8841%" y="207.50"></text></g><g><title>broccoli::util::sweeper_update::{{closure}} (2 samples, 0.32%)</title><rect x="97.6341%" y="181" width="0.3155%" height="15" fill="rgb(228,144,50)"/><text x="97.8841%" y="191.50"></text></g><g><title>broccoli::util::compare_bots (2 samples, 0.32%)</title><rect x="97.6341%" y="165" width="0.3155%" height="15" fill="rgb(229,201,53)"/><text x="97.8841%" y="175.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (2 samples, 0.32%)</title><rect x="97.6341%" y="149" width="0.3155%" height="15" fill="rgb(249,153,27)"/><text x="97.8841%" y="159.50"></text></g><g><title>data_gen::support::bench_closure (590 samples, 93.06%)</title><rect x="5.0473%" y="629" width="93.0599%" height="15" fill="rgb(227,106,25)"/><text x="5.2973%" y="639.50">data_gen::support::bench_closure</text></g><g><title>data_gen::support::bench_closure_ret (590 samples, 93.06%)</title><rect x="5.0473%" y="613" width="93.0599%" height="15" fill="rgb(230,65,29)"/><text x="5.2973%" y="623.50">data_gen::support::bench_closure_ret</text></g><g><title>data_gen::main::{{closure}} (590 samples, 93.06%)</title><rect x="5.0473%" y="597" width="93.0599%" height="15" fill="rgb(221,57,46)"/><text x="5.2973%" y="607.50">data_gen::main::{{closure}}</text></g><g><title>broccoli::tree::new (181 samples, 28.55%)</title><rect x="69.5584%" y="581" width="28.5489%" height="15" fill="rgb(229,161,17)"/><text x="69.8084%" y="591.50">broccoli::tree::new</text></g><g><title>broccoli::tree::Tree&lt;T&gt;::new (181 samples, 28.55%)</title><rect x="69.5584%" y="565" width="28.5489%" height="15" fill="rgb(222,213,11)"/><text x="69.8084%" y="575.50">broccoli::tree::Tree&lt;T&gt;::new</text></g><g><title>broccoli::tree::build::builder::TreeBuilder&lt;T&gt;::build_seq (181 samples, 28.55%)</title><rect x="69.5584%" y="549" width="28.5489%" height="15" fill="rgb(235,35,13)"/><text x="69.8084%" y="559.50">broccoli::tree::build::builder::TreeBuilder&lt;T&gt;..</text></g><g><title>broccoli::tree::build::builder::create_tree_seq (181 samples, 28.55%)</title><rect x="69.5584%" y="533" width="28.5489%" height="15" fill="rgb(233,158,34)"/><text x="69.8084%" y="543.50">broccoli::tree::build::builder::create_tree_seq</text></g><g><title>broccoli::tree::build::builder::Recurser&lt;T,K,S&gt;::recurse_preorder_seq (181 samples, 28.55%)</title><rect x="69.5584%" y="517" width="28.5489%" height="15" fill="rgb(215,151,48)"/><text x="69.8084%" y="527.50">broccoli::tree::build::builder::Recurser&lt;T,K,S..</text></g><g><title>broccoli::tree::build::builder::Recurser&lt;T,K,S&gt;::recurse_preorder_seq (166 samples, 26.18%)</title><rect x="71.9243%" y="501" width="26.1830%" height="15" fill="rgb(229,84,14)"/><text x="72.1743%" y="511.50">broccoli::tree::build::builder::Recurser&lt;T..</text></g><g><title>broccoli::tree::build::builder::Recurser&lt;T,K,S&gt;::recurse_preorder_seq (154 samples, 24.29%)</title><rect x="73.8170%" y="485" width="24.2902%" height="15" fill="rgb(229,68,14)"/><text x="74.0670%" y="495.50">broccoli::tree::build::builder::Recurse..</text></g><g><title>broccoli::tree::build::builder::Recurser&lt;T,K,S&gt;::recurse_preorder_seq (138 samples, 21.77%)</title><rect x="76.3407%" y="469" width="21.7666%" height="15" fill="rgb(243,106,26)"/><text x="76.5907%" y="479.50">broccoli::tree::build::builder::Re..</text></g><g><title>broccoli::tree::build::builder::Recurser&lt;T,K,S&gt;::recurse_preorder_seq (128 samples, 20.19%)</title><rect x="77.9180%" y="453" width="20.1893%" height="15" fill="rgb(206,45,38)"/><text x="78.1680%" y="463.50">broccoli::tree::build::builder::..</text></g><g><title>broccoli::tree::build::builder::Recurser&lt;T,K,S&gt;::recurse_preorder_seq (113 samples, 17.82%)</title><rect x="80.2839%" y="437" width="17.8233%" height="15" fill="rgb(226,6,15)"/><text x="80.5339%" y="447.50">broccoli::tree::build::build..</text></g><g><title>broccoli::tree::build::builder::Recurser&lt;T,K,S&gt;::recurse_preorder_seq (97 samples, 15.30%)</title><rect x="82.8076%" y="421" width="15.2997%" height="15" fill="rgb(232,22,54)"/><text x="83.0576%" y="431.50">broccoli::tree::build::..</text></g><g><title>broccoli::tree::build::builder::Recurser&lt;T,K,S&gt;::recurse_preorder_seq (79 samples, 12.46%)</title><rect x="85.6467%" y="405" width="12.4606%" height="15" fill="rgb(229,222,32)"/><text x="85.8967%" y="415.50">broccoli::tree::bui..</text></g><g><title>broccoli::tree::build::builder::Recurser&lt;T,K,S&gt;::recurse_preorder_seq (66 samples, 10.41%)</title><rect x="87.6972%" y="389" width="10.4101%" height="15" fill="rgb(228,62,29)"/><text x="87.9472%" y="399.50">broccoli::tree:..</text></g><g><title>broccoli::tree::build::builder::Recurser&lt;T,K,S&gt;::recurse_preorder_seq (43 samples, 6.78%)</title><rect x="91.3249%" y="373" width="6.7823%" height="15" fill="rgb(251,103,34)"/><text x="91.5749%" y="383.50">broccoli:..</text></g><g><title>broccoli::tree::build::builder::Recurser&lt;T,K,S&gt;::recurse_preorder_seq (21 samples, 3.31%)</title><rect x="94.7950%" y="357" width="3.3123%" height="15" fill="rgb(233,12,30)"/><text x="95.0450%" y="367.50">bro..</text></g><g><title>broccoli::tree::build::builder::Recurser&lt;T,K,S&gt;::create_leaf (21 samples, 3.31%)</title><rect x="94.7950%" y="341" width="3.3123%" height="15" fill="rgb(238,52,0)"/><text x="95.0450%" y="351.50">bro..</text></g><g><title>broccoli::tree::build::builder::create_cont (1 samples, 0.16%)</title><rect x="97.9495%" y="325" width="0.1577%" height="15" fill="rgb(223,98,5)"/><text x="98.1995%" y="335.50"></text></g><g><title>do_sin (1 samples, 0.16%)</title><rect x="98.2650%" y="373" width="0.1577%" height="15" fill="rgb(228,75,37)"/><text x="98.5150%" y="383.50"></text></g><g><title>data_gen::support::distribute (3 samples, 0.47%)</title><rect x="98.1073%" y="629" width="0.4732%" height="15" fill="rgb(205,115,49)"/><text x="98.3573%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 0.47%)</title><rect x="98.1073%" y="613" width="0.4732%" height="15" fill="rgb(250,154,43)"/><text x="98.3573%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3 samples, 0.47%)</title><rect x="98.1073%" y="597" width="0.4732%" height="15" fill="rgb(226,43,29)"/><text x="98.3573%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.47%)</title><rect x="98.1073%" y="581" width="0.4732%" height="15" fill="rgb(249,228,39)"/><text x="98.3573%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (3 samples, 0.47%)</title><rect x="98.1073%" y="565" width="0.4732%" height="15" fill="rgb(216,79,43)"/><text x="98.3573%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.47%)</title><rect x="98.1073%" y="549" width="0.4732%" height="15" fill="rgb(228,95,12)"/><text x="98.3573%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.47%)</title><rect x="98.1073%" y="533" width="0.4732%" height="15" fill="rgb(249,221,15)"/><text x="98.3573%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.47%)</title><rect x="98.1073%" y="517" width="0.4732%" height="15" fill="rgb(233,34,13)"/><text x="98.3573%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.47%)</title><rect x="98.1073%" y="501" width="0.4732%" height="15" fill="rgb(214,103,39)"/><text x="98.3573%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.47%)</title><rect x="98.1073%" y="485" width="0.4732%" height="15" fill="rgb(251,126,39)"/><text x="98.3573%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (3 samples, 0.47%)</title><rect x="98.1073%" y="469" width="0.4732%" height="15" fill="rgb(214,216,36)"/><text x="98.3573%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.47%)</title><rect x="98.1073%" y="453" width="0.4732%" height="15" fill="rgb(220,221,8)"/><text x="98.3573%" y="463.50"></text></g><g><title>&lt;core::iter::sources::RepeatWith&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.47%)</title><rect x="98.1073%" y="437" width="0.4732%" height="15" fill="rgb(240,216,3)"/><text x="98.3573%" y="447.50"></text></g><g><title>dists::spiral_iter::{{closure}} (3 samples, 0.47%)</title><rect x="98.1073%" y="421" width="0.4732%" height="15" fill="rgb(232,218,17)"/><text x="98.3573%" y="431.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::cos (3 samples, 0.47%)</title><rect x="98.1073%" y="405" width="0.4732%" height="15" fill="rgb(229,163,45)"/><text x="98.3573%" y="415.50"></text></g><g><title>__sincos (3 samples, 0.47%)</title><rect x="98.1073%" y="389" width="0.4732%" height="15" fill="rgb(231,110,42)"/><text x="98.3573%" y="399.50"></text></g><g><title>reduce_sincos (1 samples, 0.16%)</title><rect x="98.4227%" y="373" width="0.1577%" height="15" fill="rgb(208,170,48)"/><text x="98.6727%" y="383.50"></text></g><g><title>__libc_start_main (595 samples, 93.85%)</title><rect x="4.8896%" y="805" width="93.8486%" height="15" fill="rgb(239,116,25)"/><text x="5.1396%" y="815.50">__libc_start_main</text></g><g><title>main (595 samples, 93.85%)</title><rect x="4.8896%" y="789" width="93.8486%" height="15" fill="rgb(219,200,50)"/><text x="5.1396%" y="799.50">main</text></g><g><title>std::rt::lang_start_internal (595 samples, 93.85%)</title><rect x="4.8896%" y="773" width="93.8486%" height="15" fill="rgb(245,200,0)"/><text x="5.1396%" y="783.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (595 samples, 93.85%)</title><rect x="4.8896%" y="757" width="93.8486%" height="15" fill="rgb(245,119,33)"/><text x="5.1396%" y="767.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (595 samples, 93.85%)</title><rect x="4.8896%" y="741" width="93.8486%" height="15" fill="rgb(231,125,12)"/><text x="5.1396%" y="751.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (595 samples, 93.85%)</title><rect x="4.8896%" y="725" width="93.8486%" height="15" fill="rgb(216,96,41)"/><text x="5.1396%" y="735.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (595 samples, 93.85%)</title><rect x="4.8896%" y="709" width="93.8486%" height="15" fill="rgb(248,43,45)"/><text x="5.1396%" y="719.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (595 samples, 93.85%)</title><rect x="4.8896%" y="693" width="93.8486%" height="15" fill="rgb(217,222,7)"/><text x="5.1396%" y="703.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (595 samples, 93.85%)</title><rect x="4.8896%" y="677" width="93.8486%" height="15" fill="rgb(233,28,6)"/><text x="5.1396%" y="687.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (595 samples, 93.85%)</title><rect x="4.8896%" y="661" width="93.8486%" height="15" fill="rgb(231,218,15)"/><text x="5.1396%" y="671.50">core::ops::function::FnOnce::call_once</text></g><g><title>data_gen::main (595 samples, 93.85%)</title><rect x="4.8896%" y="645" width="93.8486%" height="15" fill="rgb(226,171,48)"/><text x="5.1396%" y="655.50">data_gen::main</text></g><g><title>num_cpus::get_physical (1 samples, 0.16%)</title><rect x="98.5804%" y="629" width="0.1577%" height="15" fill="rgb(235,201,9)"/><text x="98.8304%" y="639.50"></text></g><g><title>num_cpus::linux::get_num_physical_cpus (1 samples, 0.16%)</title><rect x="98.5804%" y="613" width="0.1577%" height="15" fill="rgb(217,80,15)"/><text x="98.8304%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.16%)</title><rect x="98.5804%" y="597" width="0.1577%" height="15" fill="rgb(219,152,8)"/><text x="98.8304%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (1 samples, 0.16%)</title><rect x="98.5804%" y="581" width="0.1577%" height="15" fill="rgb(243,107,38)"/><text x="98.8304%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.16%)</title><rect x="98.5804%" y="565" width="0.1577%" height="15" fill="rgb(231,17,5)"/><text x="98.8304%" y="575.50"></text></g><g><title>&lt;std::io::Lines&lt;B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.16%)</title><rect x="98.5804%" y="549" width="0.1577%" height="15" fill="rgb(209,25,54)"/><text x="98.8304%" y="559.50"></text></g><g><title>std::io::BufRead::read_line (1 samples, 0.16%)</title><rect x="98.5804%" y="533" width="0.1577%" height="15" fill="rgb(219,0,2)"/><text x="98.8304%" y="543.50"></text></g><g><title>std::io::append_to_string (1 samples, 0.16%)</title><rect x="98.5804%" y="517" width="0.1577%" height="15" fill="rgb(246,9,5)"/><text x="98.8304%" y="527.50"></text></g><g><title>std::io::BufRead::read_line::{{closure}} (1 samples, 0.16%)</title><rect x="98.5804%" y="501" width="0.1577%" height="15" fill="rgb(226,159,4)"/><text x="98.8304%" y="511.50"></text></g><g><title>std::io::read_until (1 samples, 0.16%)</title><rect x="98.5804%" y="485" width="0.1577%" height="15" fill="rgb(219,175,34)"/><text x="98.8304%" y="495.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::BufRead&gt;::fill_buf (1 samples, 0.16%)</title><rect x="98.5804%" y="469" width="0.1577%" height="15" fill="rgb(236,10,46)"/><text x="98.8304%" y="479.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read (1 samples, 0.16%)</title><rect x="98.5804%" y="453" width="0.1577%" height="15" fill="rgb(240,211,16)"/><text x="98.8304%" y="463.50"></text></g><g><title>std::sys::unix::fs::File::read (1 samples, 0.16%)</title><rect x="98.5804%" y="437" width="0.1577%" height="15" fill="rgb(205,3,43)"/><text x="98.8304%" y="447.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read (1 samples, 0.16%)</title><rect x="98.5804%" y="421" width="0.1577%" height="15" fill="rgb(245,7,22)"/><text x="98.8304%" y="431.50"></text></g><g><title>__GI___libc_read (1 samples, 0.16%)</title><rect x="98.5804%" y="405" width="0.1577%" height="15" fill="rgb(239,132,32)"/><text x="98.8304%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="98.5804%" y="389" width="0.1577%" height="15" fill="rgb(228,202,34)"/><text x="98.8304%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="98.5804%" y="373" width="0.1577%" height="15" fill="rgb(254,200,22)"/><text x="98.8304%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="98.5804%" y="357" width="0.1577%" height="15" fill="rgb(219,10,39)"/><text x="98.8304%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="98.5804%" y="341" width="0.1577%" height="15" fill="rgb(226,210,39)"/><text x="98.8304%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="98.5804%" y="325" width="0.1577%" height="15" fill="rgb(208,219,16)"/><text x="98.8304%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="98.5804%" y="309" width="0.1577%" height="15" fill="rgb(216,158,51)"/><text x="98.8304%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="98.5804%" y="293" width="0.1577%" height="15" fill="rgb(233,14,44)"/><text x="98.8304%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="98.5804%" y="277" width="0.1577%" height="15" fill="rgb(237,97,39)"/><text x="98.8304%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="98.5804%" y="261" width="0.1577%" height="15" fill="rgb(218,198,43)"/><text x="98.8304%" y="271.50"></text></g><g><title>_start (596 samples, 94.01%)</title><rect x="4.8896%" y="821" width="94.0063%" height="15" fill="rgb(231,104,20)"/><text x="5.1396%" y="831.50">_start</text></g><g><title>_dl_start (1 samples, 0.16%)</title><rect x="98.7382%" y="805" width="0.1577%" height="15" fill="rgb(254,36,13)"/><text x="98.9882%" y="815.50"></text></g><g><title>_dl_start_final (1 samples, 0.16%)</title><rect x="98.7382%" y="789" width="0.1577%" height="15" fill="rgb(248,14,50)"/><text x="98.9882%" y="799.50"></text></g><g><title>_dl_sysdep_start (1 samples, 0.16%)</title><rect x="98.7382%" y="773" width="0.1577%" height="15" fill="rgb(217,107,29)"/><text x="98.9882%" y="783.50"></text></g><g><title>dl_main (1 samples, 0.16%)</title><rect x="98.7382%" y="757" width="0.1577%" height="15" fill="rgb(251,169,33)"/><text x="98.9882%" y="767.50"></text></g><g><title>_dl_map_object_deps (1 samples, 0.16%)</title><rect x="98.7382%" y="741" width="0.1577%" height="15" fill="rgb(217,108,32)"/><text x="98.9882%" y="751.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.16%)</title><rect x="98.7382%" y="725" width="0.1577%" height="15" fill="rgb(219,66,42)"/><text x="98.9882%" y="735.50"></text></g><g><title>openaux (1 samples, 0.16%)</title><rect x="98.7382%" y="709" width="0.1577%" height="15" fill="rgb(206,180,7)"/><text x="98.9882%" y="719.50"></text></g><g><title>_dl_map_object (1 samples, 0.16%)</title><rect x="98.7382%" y="693" width="0.1577%" height="15" fill="rgb(208,226,31)"/><text x="98.9882%" y="703.50"></text></g><g><title>open_verify (1 samples, 0.16%)</title><rect x="98.7382%" y="677" width="0.1577%" height="15" fill="rgb(218,26,49)"/><text x="98.9882%" y="687.50"></text></g><g><title>__GI___open64_nocancel (1 samples, 0.16%)</title><rect x="98.7382%" y="661" width="0.1577%" height="15" fill="rgb(233,197,48)"/><text x="98.9882%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="98.7382%" y="645" width="0.1577%" height="15" fill="rgb(252,181,51)"/><text x="98.9882%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="98.7382%" y="629" width="0.1577%" height="15" fill="rgb(253,90,19)"/><text x="98.9882%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="98.7382%" y="613" width="0.1577%" height="15" fill="rgb(215,171,30)"/><text x="98.9882%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="98.7382%" y="597" width="0.1577%" height="15" fill="rgb(214,222,9)"/><text x="98.9882%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="98.7382%" y="581" width="0.1577%" height="15" fill="rgb(223,3,22)"/><text x="98.9882%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="98.7382%" y="565" width="0.1577%" height="15" fill="rgb(225,196,46)"/><text x="98.9882%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="98.7382%" y="549" width="0.1577%" height="15" fill="rgb(209,110,37)"/><text x="98.9882%" y="559.50"></text></g><g><title>data_gen (628 samples, 99.05%)</title><rect x="0.0000%" y="837" width="99.0536%" height="15" fill="rgb(249,89,12)"/><text x="0.2500%" y="847.50">data_gen</text></g><g><title>core::slice::sort::recurse (1 samples, 0.16%)</title><rect x="98.8959%" y="821" width="0.1577%" height="15" fill="rgb(226,27,33)"/><text x="99.1459%" y="831.50"></text></g><g><title>all (634 samples, 100%)</title><rect x="0.0000%" y="853" width="100.0000%" height="15" fill="rgb(213,82,22)"/><text x="0.2500%" y="863.50"></text></g><g><title>perf (6 samples, 0.95%)</title><rect x="99.0536%" y="837" width="0.9464%" height="15" fill="rgb(248,140,0)"/><text x="99.3036%" y="847.50"></text></g><g><title>[unknown] (6 samples, 0.95%)</title><rect x="99.0536%" y="821" width="0.9464%" height="15" fill="rgb(228,106,3)"/><text x="99.3036%" y="831.50"></text></g><g><title>[unknown] (6 samples, 0.95%)</title><rect x="99.0536%" y="805" width="0.9464%" height="15" fill="rgb(209,23,37)"/><text x="99.3036%" y="815.50"></text></g><g><title>[unknown] (6 samples, 0.95%)</title><rect x="99.0536%" y="789" width="0.9464%" height="15" fill="rgb(241,93,50)"/><text x="99.3036%" y="799.50"></text></g><g><title>[unknown] (6 samples, 0.95%)</title><rect x="99.0536%" y="773" width="0.9464%" height="15" fill="rgb(253,46,43)"/><text x="99.3036%" y="783.50"></text></g><g><title>[unknown] (6 samples, 0.95%)</title><rect x="99.0536%" y="757" width="0.9464%" height="15" fill="rgb(226,206,43)"/><text x="99.3036%" y="767.50"></text></g><g><title>[unknown] (6 samples, 0.95%)</title><rect x="99.0536%" y="741" width="0.9464%" height="15" fill="rgb(217,54,7)"/><text x="99.3036%" y="751.50"></text></g><g><title>[unknown] (6 samples, 0.95%)</title><rect x="99.0536%" y="725" width="0.9464%" height="15" fill="rgb(223,5,52)"/><text x="99.3036%" y="735.50"></text></g><g><title>[unknown] (6 samples, 0.95%)</title><rect x="99.0536%" y="709" width="0.9464%" height="15" fill="rgb(206,52,46)"/><text x="99.3036%" y="719.50"></text></g><g><title>[unknown] (6 samples, 0.95%)</title><rect x="99.0536%" y="693" width="0.9464%" height="15" fill="rgb(253,136,11)"/><text x="99.3036%" y="703.50"></text></g><g><title>[unknown] (5 samples, 0.79%)</title><rect x="99.2114%" y="677" width="0.7886%" height="15" fill="rgb(208,106,33)"/><text x="99.4614%" y="687.50"></text></g><g><title>[unknown] (5 samples, 0.79%)</title><rect x="99.2114%" y="661" width="0.7886%" height="15" fill="rgb(206,54,4)"/><text x="99.4614%" y="671.50"></text></g><g><title>[unknown] (5 samples, 0.79%)</title><rect x="99.2114%" y="645" width="0.7886%" height="15" fill="rgb(213,3,15)"/><text x="99.4614%" y="655.50"></text></g><g><title>[unknown] (5 samples, 0.79%)</title><rect x="99.2114%" y="629" width="0.7886%" height="15" fill="rgb(252,211,39)"/><text x="99.4614%" y="639.50"></text></g></svg></svg>